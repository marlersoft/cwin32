// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (1274)
//--------------------------------------------------------------------------------
#define AVENC_H263V_LEVELCOUNT (UINT)8
#define AVENC_H264V_LEVELCOUNT (UINT)16
#define AVENC_H264V_MAX_MBBITS (UINT)3200
#define D3D12_VIDEO_DECODE_PROFILE_MPEG2 GUID { "ee27417f-5e28-4e65-beea-1d26b508adc9" }
#define D3D12_VIDEO_DECODE_PROFILE_MPEG1_AND_MPEG2 GUID { "86695f12-340e-4f04-9fd3-9253dd327460" }
#define D3D12_VIDEO_DECODE_PROFILE_H264 GUID { "1b81be68-a0c7-11d3-b984-00c04f2e73c5" }
#define D3D12_VIDEO_DECODE_PROFILE_H264_STEREO_PROGRESSIVE GUID { "d79be8da-0cf1-4c81-b82a-69a4e236f43d" }
#define D3D12_VIDEO_DECODE_PROFILE_H264_STEREO GUID { "f9aaccbb-c2b6-4cfc-8779-5707b1760552" }
#define D3D12_VIDEO_DECODE_PROFILE_H264_MULTIVIEW GUID { "705b9d82-76cf-49d6-b7e6-ac8872db013c" }
#define D3D12_VIDEO_DECODE_PROFILE_VC1 GUID { "1b81bea3-a0c7-11d3-b984-00c04f2e73c5" }
#define D3D12_VIDEO_DECODE_PROFILE_VC1_D2010 GUID { "1b81bea4-a0c7-11d3-b984-00c04f2e73c5" }
#define D3D12_VIDEO_DECODE_PROFILE_MPEG4PT2_SIMPLE GUID { "efd64d74-c9e8-41d7-a5e9-e9b0e39fa319" }
#define D3D12_VIDEO_DECODE_PROFILE_MPEG4PT2_ADVSIMPLE_NOGMC GUID { "ed418a9f-010d-4eda-9ae3-9a65358d8d2e" }
#define D3D12_VIDEO_DECODE_PROFILE_HEVC_MAIN GUID { "5b11d51b-2f4c-4452-bcc3-09f2a1160cc0" }
#define D3D12_VIDEO_DECODE_PROFILE_HEVC_MAIN10 GUID { "107af0e0-ef1a-4d19-aba8-67a163073d13" }
#define D3D12_VIDEO_DECODE_PROFILE_VP9 GUID { "463707f8-a1d0-4585-876d-83aa6d60b89e" }
#define D3D12_VIDEO_DECODE_PROFILE_VP9_10BIT_PROFILE2 GUID { "a4c749ef-6ecf-48aa-8448-50a7a1165ff7" }
#define D3D12_VIDEO_DECODE_PROFILE_VP8 GUID { "90b899ea-3a62-4705-88b3-8df04b2744e7" }
#define D3D12_VIDEO_DECODE_PROFILE_AV1_PROFILE0 GUID { "b8be4ccb-cf53-46ba-8d59-d6b8a6da5d2a" }
#define D3D12_VIDEO_DECODE_PROFILE_AV1_PROFILE1 GUID { "6936ff0f-45b1-4163-9cc1-646ef6946108" }
#define D3D12_VIDEO_DECODE_PROFILE_AV1_PROFILE2 GUID { "0c5f2aa1-e541-4089-bb7b-98110a19d7c8" }
#define D3D12_VIDEO_DECODE_PROFILE_AV1_12BIT_PROFILE2 GUID { "17127009-a00f-4ce1-994e-bf4081f6f3f0" }
#define D3D12_VIDEO_DECODE_PROFILE_AV1_12BIT_PROFILE2_420 GUID { "2d80bed6-9cac-4835-9e91-327bbc4f9ee8" }
#define DXVA2_ModeMPEG2_MoComp GUID { "e6a9f44b-61b0-4563-9ea4-63d2a3c6fe66" }
#define DXVA2_ModeMPEG2_IDCT GUID { "bf22ad00-03ea-4690-8077-473346209b7e" }
#define DXVA2_ModeMPEG2_VLD GUID { "ee27417f-5e28-4e65-beea-1d26b508adc9" }
#define DXVA2_ModeMPEG1_VLD GUID { "6f3ec719-3735-42cc-8063-65cc3cb36616" }
#define DXVA2_ModeMPEG2and1_VLD GUID { "86695f12-340e-4f04-9fd3-9253dd327460" }
#define DXVA2_ModeH264_A GUID { "1b81be64-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVA2_ModeH264_B GUID { "1b81be65-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVA2_ModeH264_C GUID { "1b81be66-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVA2_ModeH264_D GUID { "1b81be67-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVA2_ModeH264_E GUID { "1b81be68-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVA2_ModeH264_F GUID { "1b81be69-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVA2_ModeH264_VLD_WithFMOASO_NoFGT GUID { "d5f04ff9-3418-45d8-9561-32a76aae2ddd" }
#define DXVA2_ModeH264_VLD_Stereo_Progressive_NoFGT GUID { "d79be8da-0cf1-4c81-b82a-69a4e236f43d" }
#define DXVA2_ModeH264_VLD_Stereo_NoFGT GUID { "f9aaccbb-c2b6-4cfc-8779-5707b1760552" }
#define DXVA2_ModeH264_VLD_Multiview_NoFGT GUID { "705b9d82-76cf-49d6-b7e6-ac8872db013c" }
#define DXVA2_ModeWMV8_A GUID { "1b81be80-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVA2_ModeWMV8_B GUID { "1b81be81-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVA2_ModeWMV9_A GUID { "1b81be90-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVA2_ModeWMV9_B GUID { "1b81be91-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVA2_ModeWMV9_C GUID { "1b81be94-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVA2_ModeVC1_A GUID { "1b81bea0-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVA2_ModeVC1_B GUID { "1b81bea1-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVA2_ModeVC1_C GUID { "1b81bea2-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVA2_ModeVC1_D GUID { "1b81bea3-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVA2_ModeVC1_D2010 GUID { "1b81bea4-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVA2_NoEncrypt GUID { "1b81bed0-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVA2_VideoProcProgressiveDevice GUID { "5a54a0c9-c7ec-4bd9-8ede-f3c75dc4393b" }
#define DXVA2_VideoProcBobDevice GUID { "335aa36e-7884-43a4-9c91-7f87faf3e37e" }
#define DXVA2_VideoProcSoftwareDevice GUID { "4553d47f-ee7e-4e3f-9475-dbf1376c4810" }
#define DXVA2_ModeMPEG4pt2_VLD_Simple GUID { "efd64d74-c9e8-41d7-a5e9-e9b0e39fa319" }
#define DXVA2_ModeMPEG4pt2_VLD_AdvSimple_NoGMC GUID { "ed418a9f-010d-4eda-9ae3-9a65358d8d2e" }
#define DXVA2_ModeMPEG4pt2_VLD_AdvSimple_GMC GUID { "ab998b5b-4258-44a9-9feb-94e597a6baae" }
#define DXVA2_ModeHEVC_VLD_Main GUID { "5b11d51b-2f4c-4452-bcc3-09f2a1160cc0" }
#define DXVA2_ModeHEVC_VLD_Main10 GUID { "107af0e0-ef1a-4d19-aba8-67a163073d13" }
#define DXVA2_ModeVP9_VLD_Profile0 GUID { "463707f8-a1d0-4585-876d-83aa6d60b89e" }
#define DXVA2_ModeVP9_VLD_10bit_Profile2 GUID { "a4c749ef-6ecf-48aa-8448-50a7a1165ff7" }
#define DXVA2_ModeVP8_VLD GUID { "90b899ea-3a62-4705-88b3-8df04b2744e7" }
#define DXVA2_E_NOT_INITIALIZED (HRESULT)(INT)-2147217408
#define DXVA2_E_NEW_VIDEO_DEVICE (HRESULT)(INT)-2147217407
#define DXVA2_E_VIDEO_DEVICE_LOCKED (HRESULT)(INT)-2147217406
#define DXVA2_E_NOT_AVAILABLE (HRESULT)(INT)-2147217405
#define MAX_DEINTERLACE_SURFACES (UINT)32
#define MAX_SUBSTREAMS (UINT)15
#define DXVA2_DECODE_GET_DRIVER_HANDLE (UINT)1829
#define DXVA2_DECODE_SPECIFY_ENCRYPTED_BLOCKS (UINT)1828
#define DXVAp_ModeMPEG2_A GUID { "1b81be0a-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVAp_ModeMPEG2_C GUID { "1b81be0c-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVAp_NoEncrypt GUID { "1b81bed0-a0c7-11d3-b984-00c04f2e73c5" }
#define DXVA_QUERYORREPLYFUNCFLAG_DECODER_PROBE_QUERY (UINT)16777201
#define DXVA_QUERYORREPLYFUNCFLAG_DECODER_LOCK_QUERY (UINT)16777205
#define DXVA_QUERYORREPLYFUNCFLAG_ACCEL_PROBE_OK_COPY (UINT)16777208
#define DXVA_QUERYORREPLYFUNCFLAG_ACCEL_PROBE_OK_PLUS (UINT)16777209
#define DXVA_QUERYORREPLYFUNCFLAG_ACCEL_LOCK_OK_COPY (UINT)16777212
#define DXVA_QUERYORREPLYFUNCFLAG_ACCEL_PROBE_FALSE_PLUS (UINT)16777211
#define DXVA_QUERYORREPLYFUNCFLAG_ACCEL_LOCK_FALSE_PLUS (UINT)16777215
#define DXVA_PICTURE_DECODE_BUFFER (UINT)1
#define DXVA_MACROBLOCK_CONTROL_BUFFER (UINT)2
#define DXVA_RESIDUAL_DIFFERENCE_BUFFER (UINT)3
#define DXVA_DEBLOCKING_CONTROL_BUFFER (UINT)4
#define DXVA_INVERSE_QUANTIZATION_MATRIX_BUFFER (UINT)5
#define DXVA_SLICE_CONTROL_BUFFER (UINT)6
#define DXVA_BITSTREAM_DATA_BUFFER (UINT)7
#define DXVA_AYUV_BUFFER (UINT)8
#define DXVA_IA44_SURFACE_BUFFER (UINT)9
#define DXVA_DPXD_SURFACE_BUFFER (UINT)10
#define DXVA_HIGHLIGHT_BUFFER (UINT)11
#define DXVA_DCCMD_SURFACE_BUFFER (UINT)12
#define DXVA_ALPHA_BLEND_COMBINATION_BUFFER (UINT)13
#define DXVA_PICTURE_RESAMPLE_BUFFER (UINT)14
#define DXVA_READ_BACK_BUFFER (UINT)15
#define DXVA_ExtColorData_ShiftBase (UINT)8
#define DXVAp_DeinterlaceBobDevice GUID { "335aa36e-7884-43a4-9c91-7f87faf3e37e" }
#define DXVAp_DeinterlaceContainerDevice GUID { "0e85cb93-3046-4ff0-aecc-d58cb5f035fd" }
#define DXVA_DeinterlaceBltFnCode (UINT)1
#define DXVA_DeinterlaceBltExFnCode (UINT)2
#define MAX_DEINTERLACE_DEVICE_GUIDS (UINT)32
#define DXVA_DeinterlaceQueryAvailableModesFnCode (UINT)1
#define DXVA_DeinterlaceQueryModeCapsFnCode (UINT)2
#define DXVA_ProcAmpControlDevice GUID { "9f200913-2ffd-4056-9f1e-e1b508f22dcf" }
#define DXVA_ProcAmpControlQueryCapsFnCode (UINT)3
#define DXVA_ProcAmpControlQueryRangeFnCode (UINT)4
#define DXVA_ProcAmpControlBltFnCode (UINT)1
#define DXVA_COPPDevice GUID { "d2457add-8999-45ed-8a8a-d1aa047ba4d5" }
#define DXVA_COPPGetCertificateLengthFnCode (UINT)1
#define DXVA_COPPKeyExchangeFnCode (UINT)2
#define DXVA_COPPSequenceStartFnCode (UINT)3
#define DXVA_COPPCommandFnCode (UINT)4
#define DXVA_COPPSetProtectionLevel GUID { "9bb9327c-4eb5-4727-9f00-b42b0919c0da" }
#define COPP_NoProtectionLevelAvailable (INT)-1
#define COPP_DefaultProtectionLevel (UINT)0
#define DXVA_COPPSetSignaling GUID { "09a631a5-d684-4c60-8e4d-d3bb0f0be3ee" }
#define COPP_ImageAspectRatio_EN300294_Mask (UINT)7
#define DXVA_COPPQueryStatusFnCode (UINT)5
#define DXVA_COPPQueryConnectorType GUID { "81d0bfd5-6afe-48c2-99c0-95a08f97c5da" }
#define DXVA_COPPQueryProtectionType GUID { "38f2a801-9a6c-48bb-9107-b6696e6f1797" }
#define DXVA_COPPQueryLocalProtectionLevel GUID { "b2075857-3eda-4d5d-88db-748f8c1a0549" }
#define DXVA_COPPQueryGlobalProtectionLevel GUID { "1957210a-7766-452a-b99a-d27aed54f03a" }
#define DXVA_COPPQueryDisplayData GUID { "d7bf1ba3-ad13-4f8e-af98-0dcb3ca204cc" }
#define DXVA_COPPQueryHDCPKeyData GUID { "0db59d74-a992-492e-a0bd-c23fda564e00" }
#define DXVA_COPPQueryBusData GUID { "c6f4d673-6174-4184-8e35-f6db5200bcba" }
#define DXVA_COPPQuerySignaling GUID { "6629a591-3b79-4cf3-924a-11e8e7811671" }
#define DXVAHD_STREAM_STATE_PRIVATE_IVTC GUID { "9c601e3c-0f33-414c-a739-99540ee42da5" }
#define DXVAHDControlGuid GUID { "a0386e75-f70c-464c-a9ce-33c44e091623" }
#define DXVAHDETWGUID_CREATEVIDEOPROCESSOR GUID { "681e3d1e-5674-4fb3-a503-2f2055e91f60" }
#define DXVAHDETWGUID_VIDEOPROCESSBLTSTATE GUID { "76c94b5a-193f-4692-9484-a4d999da81a8" }
#define DXVAHDETWGUID_VIDEOPROCESSSTREAMSTATE GUID { "262c0b02-209d-47ed-94d8-82ae02b84aa7" }
#define DXVAHDETWGUID_VIDEOPROCESSBLTHD GUID { "bef3d435-78c7-4de3-9707-cd1b083b160a" }
#define DXVAHDETWGUID_VIDEOPROCESSBLTHD_STREAM GUID { "27ae473e-a5fc-4be5-b4e3-f24994d3c495" }
#define DXVAHDETWGUID_DESTROYVIDEOPROCESSOR GUID { "f943f0a0-3f16-43e0-8093-105a986aa5f1" }
#define MR_VIDEO_RENDER_SERVICE GUID { "1092a86c-ab1a-459a-a336-831fbc4d11ff" }
#define MR_VIDEO_MIXER_SERVICE GUID { "073cd2fc-6cf4-40b7-8859-e89552c841f8" }
#define MR_VIDEO_ACCELERATION_SERVICE GUID { "efef5175-5c7d-4ce2-bbbd-34ff8bca6554" }
#define MR_BUFFER_SERVICE GUID { "a562248c-9ac6-4ffc-9fba-3af8f8ad1a4d" }
#define VIDEO_ZOOM_RECT GUID { "7aaa1638-1b7f-4c93-bd89-5b9c9fb6fcf0" }
#define MFEVRDLL (UINT)0
#define MF_SDK_VERSION (UINT)2
#define MF_API_VERSION (UINT)112
#define MFSTARTUP_NOSOCKET (UINT)1
#define MFSTARTUP_FULL (UINT)0
#define MF_E_DXGI_DEVICE_NOT_INITIALIZED (HRESULT)(INT)-2147217408
#define MF_E_DXGI_NEW_VIDEO_DEVICE (HRESULT)(INT)-2147217407
#define MF_E_DXGI_VIDEO_DEVICE_LOCKED (HRESULT)(INT)-2147217406
#define MF_1_BYTE_ALIGNMENT (UINT)0
#define MF_2_BYTE_ALIGNMENT (UINT)1
#define MF_4_BYTE_ALIGNMENT (UINT)3
#define MF_8_BYTE_ALIGNMENT (UINT)7
#define MF_16_BYTE_ALIGNMENT (UINT)15
#define MF_32_BYTE_ALIGNMENT (UINT)31
#define MF_64_BYTE_ALIGNMENT (UINT)63
#define MF_128_BYTE_ALIGNMENT (UINT)127
#define MF_256_BYTE_ALIGNMENT (UINT)255
#define MF_512_BYTE_ALIGNMENT (UINT)511
#define MF_1024_BYTE_ALIGNMENT (UINT)1023
#define MF_2048_BYTE_ALIGNMENT (UINT)2047
#define MF_4096_BYTE_ALIGNMENT (UINT)4095
#define MF_8192_BYTE_ALIGNMENT (UINT)8191
#define MF_EVENT_SESSIONCAPS GUID { "7e5ebcd0-11b8-4abe-afad-10f6599a7f42" }
#define MF_EVENT_SESSIONCAPS_DELTA GUID { "7e5ebcd1-11b8-4abe-afad-10f6599a7f42" }
#define MFSESSIONCAP_START (UINT)1
#define MFSESSIONCAP_SEEK (UINT)2
#define MFSESSIONCAP_PAUSE (UINT)4
#define MFSESSIONCAP_RATE_FORWARD (UINT)16
#define MFSESSIONCAP_RATE_REVERSE (UINT)32
#define MFSESSIONCAP_DOES_NOT_USE_NETWORK (UINT)64
#define MF_EVENT_TOPOLOGY_STATUS GUID { "30c5018d-9a53-454b-ad9e-6d5f8fa7c43b" }
#define MF_EVENT_START_PRESENTATION_TIME GUID { "5ad914d0-9b45-4a8d-a2c0-81d1e50bfb07" }
#define MF_EVENT_PRESENTATION_TIME_OFFSET GUID { "5ad914d1-9b45-4a8d-a2c0-81d1e50bfb07" }
#define MF_EVENT_START_PRESENTATION_TIME_AT_OUTPUT GUID { "5ad914d2-9b45-4a8d-a2c0-81d1e50bfb07" }
#define MF_EVENT_SOURCE_FAKE_START GUID { "a8cc55a7-6b31-419f-845d-ffb351a2434b" }
#define MF_EVENT_SOURCE_PROJECTSTART GUID { "a8cc55a8-6b31-419f-845d-ffb351a2434b" }
#define MF_EVENT_SOURCE_ACTUAL_START GUID { "a8cc55a9-6b31-419f-845d-ffb351a2434b" }
#define MF_EVENT_SOURCE_TOPOLOGY_CANCELED GUID { "db62f650-9a5e-4704-acf3-563bc6a73364" }
#define MF_EVENT_SOURCE_CHARACTERISTICS GUID { "47db8490-8b22-4f52-afda-9ce1b2d3cfa8" }
#define MF_EVENT_SOURCE_CHARACTERISTICS_OLD GUID { "47db8491-8b22-4f52-afda-9ce1b2d3cfa8" }
#define MF_EVENT_DO_THINNING GUID { "321ea6fb-dad9-46e4-b31d-d2eae7090e30" }
#define MF_EVENT_SCRUBSAMPLE_TIME GUID { "9ac712b3-dcb8-44d5-8d0c-37455a2782e3" }
#define MF_EVENT_OUTPUT_NODE GUID { "830f1a8b-c060-46dd-a801-1c95dec9b107" }
#define MF_EVENT_MFT_INPUT_STREAM_ID GUID { "f29c2cca-7ae6-42d2-b284-bf837cc874e2" }
#define MF_EVENT_MFT_CONTEXT GUID { "b7cd31f1-899e-4b41-80c9-26a896d32977" }
#define MF_EVENT_STREAM_METADATA_KEYDATA GUID { "cd59a4a1-4a3b-4bbd-8665-72a40fbea776" }
#define MF_EVENT_STREAM_METADATA_CONTENT_KEYIDS GUID { "5063449d-cc29-4fc6-a75a-d247b35af85c" }
#define MF_EVENT_STREAM_METADATA_SYSTEMID GUID { "1ea2ef64-ba16-4a36-8719-fe7560ba32ad" }
#define MFSampleExtension_MaxDecodeFrameSize GUID { "d3cc654f-f9f3-4a13-889f-f04eb2b5b957" }
#define MFSampleExtension_AccumulatedNonRefPicPercent GUID { "79ea74df-a740-445b-bc98-c9ed1f260eee" }
#define MFSampleExtension_Encryption_ProtectionScheme GUID { "d054d096-28bb-45da-87ec-74f351871406" }
#define MFSampleExtension_Encryption_CryptByteBlock GUID { "9d84289b-0c7f-4713-ab95-108ab42ad801" }
#define MFSampleExtension_Encryption_SkipByteBlock GUID { "0d550548-8317-4ab1-845f-d06306e293e3" }
#define MFSampleExtension_Encryption_SubSample_Mapping GUID { "8444f27a-69a1-48da-bd08-11cef36830d2" }
#define MFSampleExtension_Encryption_ClearSliceHeaderData GUID { "5509a4f4-320d-4e6c-8d1a-94c66dd20cb0" }
#define MFSampleExtension_Encryption_HardwareProtection_KeyInfoID GUID { "8cbfcceb-94a5-4de1-8231-a85e47cf81e7" }
#define MFSampleExtension_Encryption_HardwareProtection_KeyInfo GUID { "b2372080-455b-4dd7-9989-1a955784b754" }
#define MFSampleExtension_Encryption_HardwareProtection_VideoDecryptorContext GUID { "693470c8-e837-47a0-88cb-535b905e3582" }
#define MFSampleExtension_Encryption_Opaque_Data GUID { "224d77e5-1391-4ffb-9f41-b432f68c611d" }
#define MFSampleExtension_NALULengthInfo GUID { "19124e7c-ad4b-465f-bb18-20186287b6af" }
#define MFSampleExtension_Encryption_ResumeVideoOutput GUID { "a435aba5-afde-4cf5-bc1c-f6acaf13949d" }
#define MFSampleExtension_Encryption_NALUTypes GUID { "b0f067c7-714c-416c-8d59-5f4ddf8913b6" }
#define MFSampleExtension_Encryption_SPSPPSData GUID { "aede0fa2-0e0c-453c-b7f3-de8693364d11" }
#define MFSampleExtension_Encryption_SEIData GUID { "3cf0e972-4542-4687-9999-585f565fba7d" }
#define MFSampleExtension_Encryption_HardwareProtection GUID { "9a2b2d2b-8270-43e3-8448-994f426e8886" }
#define MFSampleExtension_CleanPoint GUID { "9cdf01d8-a0f0-43ba-b077-eaa06cbd728a" }
#define MFSampleExtension_Discontinuity GUID { "9cdf01d9-a0f0-43ba-b077-eaa06cbd728a" }
#define MFSampleExtension_Token GUID { "8294da66-f328-4805-b551-00deb4c57a61" }
#define MFSampleExtension_ClosedCaption_CEA708 GUID { "26f09068-e744-47dc-aa03-dbf20403bde6" }
#define MFSampleExtension_ClosedCaption_CEA708_MAX_SIZE (UINT)256
#define MFSampleExtension_DecodeTimestamp GUID { "73a954d4-09e2-4861-befc-94bd97c08e6e" }
#define MFSampleExtension_VideoEncodeQP GUID { "b2efe478-f979-4c66-b95e-ee2b82c82f36" }
#define MFSampleExtension_VideoEncodePictureType GUID { "973704e6-cd14-483c-8f20-c9fc0928bad5" }
#define MFSampleExtension_FrameCorruption GUID { "b4dd4a8c-0beb-44c4-8b75-b02b913b04f0" }
#define MFSampleExtension_DirtyRects GUID { "9ba70225-b342-4e97-9126-0b566ab7ea7e" }
#define MFSampleExtension_MoveRegions GUID { "e2a6c693-3a8b-4b8d-95d0-f60281a12fb7" }
#define MFSampleExtension_HDCP_OptionalHeader GUID { "9a2e7390-121f-455f-8376-c97428e0b540" }
#define MFSampleExtension_HDCP_FrameCounter GUID { "9d389c60-f507-4aa6-a40a-71027a02f3de" }
#define MFSampleExtension_HDCP_StreamID GUID { "177e5d74-c370-4a7a-95a2-36833c01d0af" }
#define MFSampleExtension_Timestamp GUID { "1e436999-69be-4c7a-9369-70068c0260cb" }
#define MFSampleExtension_RepeatFrame GUID { "88be738f-0711-4f42-b458-344aed42ec2f" }
#define MFT_ENCODER_ERROR GUID { "c8d1eda4-98e4-41d5-9297-44f53852f90e" }
#define MFT_GFX_DRIVER_VERSION_ID_Attribute GUID { "f34b9093-05e0-4b16-993d-3e2a2cde6ad3" }
#define MFSampleExtension_DescrambleData GUID { "43483be6-4903-4314-b032-2951365936fc" }
#define MFSampleExtension_SampleKeyID GUID { "9ed713c8-9b87-4b26-8297-a93b0c5a8acc" }
#define MFSampleExtension_GenKeyFunc GUID { "441ca1ee-6b1f-4501-903a-de87df42f6ed" }
#define MFSampleExtension_GenKeyCtx GUID { "188120cb-d7da-4b59-9b3e-9252fd37301c" }
#define MFSampleExtension_PacketCrossOffsets GUID { "2789671d-389f-40bb-90d9-c282f77f9abd" }
#define MFSampleExtension_Encryption_SampleID GUID { "6698b84e-0afa-4330-aeb2-1c0a98d7a44d" }
#define MFSampleExtension_Encryption_KeyID GUID { "76376591-795f-4da1-86ed-9d46eca109a9" }
#define MFSampleExtension_Content_KeyID GUID { "c6c7f5b0-acca-415b-87d9-10441469efc6" }
#define MFSampleExtension_Encryption_SubSampleMappingSplit GUID { "fe0254b9-2aa5-4edc-99f7-17e89dbf9174" }
#define MFSampleExtension_Interlaced GUID { "b1d5830a-deb8-40e3-90fa-389943716461" }
#define MFSampleExtension_BottomFieldFirst GUID { "941ce0a3-6ae3-4dda-9a08-a64298340617" }
#define MFSampleExtension_RepeatFirstField GUID { "304d257c-7493-4fbd-b149-9228de8d9a99" }
#define MFSampleExtension_SingleField GUID { "9d85f816-658b-455a-bde0-9fa7e15ab8f9" }
#define MFSampleExtension_DerivedFromTopField GUID { "6852465a-ae1c-4553-8e9b-c3420fcb1637" }
#define MFSampleExtension_MeanAbsoluteDifference GUID { "1cdbde11-08b4-4311-a6dd-0f9f371907aa" }
#define MFSampleExtension_LongTermReferenceFrameInfo GUID { "9154733f-e1bd-41bf-81d3-fcd918f71332" }
#define MFSampleExtension_ROIRectangle GUID { "3414a438-4998-4d2c-be82-be3ca0b24d43" }
#define MFSampleExtension_LastSlice GUID { "2b5d5457-5547-4f07-b8c8-b4a3a9a1daac" }
#define MACROBLOCK_FLAG_SKIP (UINT)1
#define MACROBLOCK_FLAG_DIRTY (UINT)2
#define MACROBLOCK_FLAG_MOTION (UINT)4
#define MACROBLOCK_FLAG_VIDEO (UINT)8
#define MACROBLOCK_FLAG_HAS_MOTION_VECTOR (UINT)16
#define MACROBLOCK_FLAG_HAS_QP (UINT)32
#define MFSampleExtension_FeatureMap GUID { "a032d165-46fc-400a-b449-49de53e62a6e" }
#define MFSampleExtension_ChromaOnly GUID { "1eb9179c-a01f-4845-8c04-0e65a26eb04f" }
#define MFSampleExtension_PhotoThumbnail GUID { "74bbc85c-c8bb-42dc-b586-da17ffd35dcc" }
#define MFSampleExtension_PhotoThumbnailMediaType GUID { "61ad5420-ebf8-4143-89af-6bf25f672def" }
#define MFSampleExtension_CaptureMetadata GUID { "2ebe23a8-faf5-444a-a6a2-eb810880ab5d" }
#define MFSampleExtension_MDLCacheCookie GUID { "5f002af9-d8f9-41a3-b6c3-a2ad43f647ad" }
#define MF_CAPTURE_METADATA_PHOTO_FRAME_FLASH GUID { "0f9dd6c6-6003-45d8-bd59-f1f53e3d04e8" }
#define MF_CAPTURE_METADATA_FRAME_RAWSTREAM GUID { "9252077b-2680-49b9-ae02-b19075973b70" }
#define MF_CAPTURE_METADATA_FOCUSSTATE GUID { "a87ee154-997f-465d-b91f-29d53b982b88" }
#define MF_CAPTURE_METADATA_REQUESTED_FRAME_SETTING_ID GUID { "bb3716d9-8a61-47a4-8197-459c7ff174d5" }
#define MF_CAPTURE_METADATA_EXPOSURE_TIME GUID { "16b9ae99-cd84-4063-879d-a28c7633729e" }
#define MF_CAPTURE_METADATA_EXPOSURE_COMPENSATION GUID { "d198aa75-4b62-4345-abf3-3c31fa12c299" }
#define MF_CAPTURE_METADATA_ISO_SPEED GUID { "e528a68f-b2e3-44fe-8b65-07bf4b5a13ff" }
#define MF_CAPTURE_METADATA_LENS_POSITION GUID { "b5fc8e86-11d1-4e70-819b-723a89fa4520" }
#define MF_CAPTURE_METADATA_SCENE_MODE GUID { "9cc3b54d-5ed3-4bae-b388-7670aef59e13" }
#define MF_CAPTURE_METADATA_FLASH GUID { "4a51520b-fb36-446c-9df2-68171b9a0389" }
#define MF_CAPTURE_METADATA_FLASH_POWER GUID { "9c0e0d49-0205-491a-bc9d-2d6e1f4d5684" }
#define MF_CAPTURE_METADATA_WHITEBALANCE GUID { "c736fd77-0fb9-4e2e-97a2-fcd490739ee9" }
#define MF_CAPTURE_METADATA_ZOOMFACTOR GUID { "e50b0b81-e501-42c2-abf2-857ecb13fa5c" }
#define MF_CAPTURE_METADATA_FACEROIS GUID { "864f25a6-349f-46b1-a30e-54cc22928a47" }
#define MF_CAPTURE_METADATA_FACEROITIMESTAMPS GUID { "e94d50cc-3da0-44d4-bb34-83198a741868" }
#define MF_CAPTURE_METADATA_FACEROICHARACTERIZATIONS GUID { "b927a1a8-18ef-46d3-b3af-69372f94d9b2" }
#define MF_CAPTURE_METADATA_ISO_GAINS GUID { "05802ac9-0e1d-41c7-a8c8-7e7369f84e1e" }
#define MF_CAPTURE_METADATA_SENSORFRAMERATE GUID { "db51357e-9d3d-4962-b06d-07ce650d9a0a" }
#define MF_CAPTURE_METADATA_WHITEBALANCE_GAINS GUID { "e7570c8f-2dcb-4c7c-aace-22ece7cce647" }
#define MF_CAPTURE_METADATA_HISTOGRAM GUID { "85358432-2ef6-4ba9-a3fb-06d82974b895" }
#define MF_CAPTURE_METADATA_EXIF GUID { "2e9575b8-8c31-4a02-8575-42b197b71592" }
#define MF_CAPTURE_METADATA_FRAME_ILLUMINATION GUID { "6d688ffc-63d3-46fe-bada-5b947db0d080" }
#define MF_CAPTURE_METADATA_UVC_PAYLOADHEADER GUID { "f9f88a87-e1dd-441e-95cb-42e21a64f1d9" }
#define MFSampleExtension_Depth_MinReliableDepth GUID { "5f8582b2-e36b-47c8-9b87-fee1ca72c5b0" }
#define MFSampleExtension_Depth_MaxReliableDepth GUID { "e45545d1-1f0f-4a32-a8a7-6101a24ea8be" }
#define MF_CAPTURE_METADATA_FIRST_SCANLINE_START_TIME_QPC GUID { "6a2c49f1-e052-46b6-b2d9-73c1558709af" }
#define MF_CAPTURE_METADATA_LAST_SCANLINE_END_TIME_QPC GUID { "dccadecb-c4d4-400d-b418-10e88525e1f6" }
#define MF_CAPTURE_METADATA_SCANLINE_TIME_QPC_ACCURACY GUID { "4cd79c51-f765-4b09-b1e1-27d1f7ebea09" }
#define MF_CAPTURE_METADATA_SCANLINE_DIRECTION GUID { "6496a3ba-1907-49e6-b0c3-123795f380a9" }
#define MFCAPTURE_METADATA_SCAN_RIGHT_LEFT (UINT)1
#define MFCAPTURE_METADATA_SCAN_BOTTOM_TOP (UINT)2
#define MFCAPTURE_METADATA_SCANLINE_VERTICAL (UINT)4
#define MF_METADATAFACIALEXPRESSION_SMILE (UINT)1
#define MF_METADATATIMESTAMPS_DEVICE (UINT)1
#define MF_METADATATIMESTAMPS_PRESENTATION (UINT)2
#define MF_HISTOGRAM_CHANNEL_Y (UINT)1
#define MF_HISTOGRAM_CHANNEL_R (UINT)2
#define MF_HISTOGRAM_CHANNEL_G (UINT)4
#define MF_HISTOGRAM_CHANNEL_B (UINT)8
#define MF_HISTOGRAM_CHANNEL_Cb (UINT)16
#define MF_HISTOGRAM_CHANNEL_Cr (UINT)32
#define MFT_CATEGORY_VIDEO_DECODER GUID { "d6c02d4b-6833-45b4-971a-05a4b04bab91" }
#define MFT_CATEGORY_VIDEO_ENCODER GUID { "f79eac7d-e545-4387-bdee-d647d7bde42a" }
#define MFT_CATEGORY_VIDEO_EFFECT GUID { "12e17c21-532c-4a6e-8a1c-40825a736397" }
#define MFT_CATEGORY_MULTIPLEXER GUID { "059c561e-05ae-4b61-b69d-55b61ee54a7b" }
#define MFT_CATEGORY_DEMULTIPLEXER GUID { "a8700a7a-939b-44c5-99d7-76226b23b3f1" }
#define MFT_CATEGORY_AUDIO_DECODER GUID { "9ea73fb4-ef7a-4559-8d5d-719d8f0426c7" }
#define MFT_CATEGORY_AUDIO_ENCODER GUID { "91c64bd0-f91e-4d8c-9276-db248279d975" }
#define MFT_CATEGORY_AUDIO_EFFECT GUID { "11064c48-3648-4ed0-932e-05ce8ac811b7" }
#define MFT_CATEGORY_VIDEO_PROCESSOR GUID { "302ea3fc-aa5f-47f9-9f7a-c2188bb16302" }
#define MFT_CATEGORY_OTHER GUID { "90175d57-b7ea-4901-aeb3-933a8747756f" }
#define MFT_CATEGORY_ENCRYPTOR GUID { "b0c687be-01cd-44b5-b8b2-7c1d7e058b1f" }
#define MFT_CATEGORY_VIDEO_RENDERER_EFFECT GUID { "145cd8b4-92f4-4b23-8ae7-e0df06c2da95" }
#define MFT_ENUM_VIDEO_RENDERER_EXTENSION_PROFILE GUID { "62c56928-9a4e-443b-b9dc-cac830c24100" }
#define MFT_ENUM_ADAPTER_LUID GUID { "1d39518c-e220-4da8-a07f-ba172552d6b1" }
#define MFT_SUPPORT_DYNAMIC_FORMAT_CHANGE GUID { "53476a11-3f13-49fb-ac42-ee2733c96741" }
#define LOCAL_D3DFMT_DEFINES (UINT)1
#define MFVideoFormat_H264_ES GUID { "3f40f4f0-5622-4ff8-b6d8-a17a584bee5e" }
#define MFVideoFormat_MPEG2 GUID { "e06d8026-db46-11cf-b4d1-00805f6cbbea" }
#define MFAudioFormat_Dolby_AC3 GUID { "e06d802c-db46-11cf-b4d1-00805f6cbbea" }
#define MFAudioFormat_Dolby_DDPlus GUID { "a7fb87af-2d02-42fb-a4d4-05cd93843bdd" }
#define MFAudioFormat_Vorbis GUID { "8d2fd10b-5841-4a6b-8905-588fec1aded9" }
#define MFAudioFormat_DTS_RAW GUID { "e06d8033-db46-11cf-b4d1-00805f6cbbea" }
#define MFAudioFormat_DTS_HD GUID { "a2e58eb7-0fa9-48bb-a40c-fa0e156d0645" }
#define MFAudioFormat_DTS_XLL GUID { "45b37c1b-8c70-4e59-a7be-a1e42c81c80d" }
#define MFAudioFormat_DTS_LBR GUID { "c2fe6f0a-4e3c-4df1-9b60-50863091e4b9" }
#define MFAudioFormat_DTS_UHD GUID { "87020117-ace3-42de-b73e-c656706263f8" }
#define MFAudioFormat_DTS_UHDY GUID { "9b9cca00-91b9-4ccc-883a-8f787ac3cc86" }
#define MFAudioFormat_Float_SpatialObjects GUID { "fa39cd94-bc64-4ab1-9b71-dcd09d5a7e7a" }
#define MFAudioFormat_LPCM GUID { "e06d8032-db46-11cf-b4d1-00805f6cbbea" }
#define MFAudioFormat_PCM_HDCP GUID { "a5e7ff01-8411-4acc-a865-5f4941288d80" }
#define MFAudioFormat_Dolby_AC3_HDCP GUID { "97663a80-8ffb-4445-a6ba-792d908f497f" }
#define MFAudioFormat_AAC_HDCP GUID { "419bce76-8b72-400f-adeb-84b57d63484d" }
#define MFAudioFormat_ADTS_HDCP GUID { "da4963a3-14d8-4dcf-92b7-193eb84363db" }
#define MFAudioFormat_Base_HDCP GUID { "3884b5bc-e277-43fd-983d-038aa8d9b605" }
#define MFVideoFormat_H264_HDCP GUID { "5d0ce9dd-9817-49da-bdfd-f5f5b98f18a6" }
#define MFVideoFormat_HEVC_HDCP GUID { "3cfe0fe6-05c4-47dc-9d70-4bdb2959720f" }
#define MFVideoFormat_Base_HDCP GUID { "eac3b9d5-bd14-4237-8f1f-bab428e49312" }
#define MFMPEG4Format_Base GUID { "00000000-767a-494d-b478-f29d25dc9037" }
#define MFSubtitleFormat_XML GUID { "2006f94f-29ca-4195-b8db-00ded8ff0c97" }
#define MFSubtitleFormat_TTML GUID { "73e73992-9a10-4356-9557-7194e91e3e54" }
#define MFSubtitleFormat_ATSC GUID { "7fa7faa3-feae-4e16-aedf-36b9acfbb099" }
#define MFSubtitleFormat_WebVTT GUID { "c886d215-f485-40bb-8db6-fadbc619a45d" }
#define MFSubtitleFormat_SRT GUID { "5e467f2e-77ca-4ca5-8391-d142ed4b76c8" }
#define MFSubtitleFormat_SSA GUID { "57176a1b-1a9e-4eea-abef-c61760198ac4" }
#define MFSubtitleFormat_CustomUserData GUID { "1bb3d849-6614-4d80-8882-ed24aa82da92" }
#define MFSubtitleFormat_PGS GUID { "71f40e4a-1278-4442-b30d-39dd1d7722bc" }
#define MFSubtitleFormat_VobSub GUID { "6b8e40f4-8d2c-4ced-ad91-5960e45b4433" }
#define MF_MT_MAJOR_TYPE GUID { "48eba18e-f8c9-4687-bf11-0a74c9f96a8f" }
#define MF_MT_SUBTYPE GUID { "f7e34c9a-42e8-4714-b74b-cb29d72c35e5" }
#define MF_MT_ALL_SAMPLES_INDEPENDENT GUID { "c9173739-5e56-461c-b713-46fb995cb95f" }
#define MF_MT_FIXED_SIZE_SAMPLES GUID { "b8ebefaf-b718-4e04-b0a9-116775e3321b" }
#define MF_MT_COMPRESSED GUID { "3afd0cee-18f2-4ba5-a110-8bea502e1f92" }
#define MF_MT_SAMPLE_SIZE GUID { "dad3ab78-1990-408b-bce2-eba673dacc10" }
#define MF_MT_WRAPPED_TYPE GUID { "4d3f7b23-d02f-4e6c-9bee-e4bf2c6c695d" }
#define MF_MT_VIDEO_3D GUID { "cb5e88cf-7b5b-476b-85aa-1ca5ae187555" }
#define MF_MT_VIDEO_3D_FORMAT GUID { "5315d8a0-87c5-4697-b793-6606c67c049b" }
#define MF_MT_VIDEO_3D_NUM_VIEWS GUID { "bb077e8a-dcbf-42eb-af60-418df98aa495" }
#define MF_MT_VIDEO_3D_LEFT_IS_BASE GUID { "6d4b7bff-5629-4404-948c-c634f4ce26d4" }
#define MF_MT_VIDEO_3D_FIRST_IS_LEFT GUID { "ec298493-0ada-4ea1-a4fe-cbbd36ce9331" }
#define MFSampleExtension_3DVideo GUID { "f86f97a4-dd54-4e2e-9a5e-55fc2d74a005" }
#define MFSampleExtension_3DVideo_SampleFormat GUID { "08671772-e36f-4cff-97b3-d72e20987a48" }
#define MF_MT_VIDEO_ROTATION GUID { "c380465d-2271-428c-9b83-ecea3b4a85c1" }
#define MF_DEVICESTREAM_MULTIPLEXED_MANAGER GUID { "6ea542b0-281f-4231-a464-fe2f5022501c" }
#define MF_MEDIATYPE_MULTIPLEXED_MANAGER GUID { "13c78fb5-f275-4ea0-bb5f-0249832b0d6e" }
#define MFSampleExtension_MULTIPLEXED_MANAGER GUID { "8dcdee79-6b5a-4c45-8db9-20b395f02fcf" }
#define MF_MT_SECURE GUID { "c5acc4fd-0304-4ecf-809f-47bc97ff63bd" }
#define MF_DEVICESTREAM_ATTRIBUTE_FRAMESOURCE_TYPES GUID { "17145fd1-1b2b-423c-8001-2b6833ed3588" }
#define MF_MT_ALPHA_MODE GUID { "5d959b0d-4cbf-4d04-919f-3f5f7f284211" }
#define MF_MT_DEPTH_MEASUREMENT GUID { "fd5ac489-0917-4bb6-9d54-3122bf70144b" }
#define MF_MT_DEPTH_VALUE_UNIT GUID { "21a800f5-3189-4797-beba-f13cd9a31a5e" }
#define MF_MT_VIDEO_NO_FRAME_ORDERING GUID { "3f5b106f-6bc2-4ee3-b7ed-8902c18f5351" }
#define MF_MT_VIDEO_H264_NO_FMOASO GUID { "ed461cd6-ec9f-416a-a8a3-26d7d31018d7" }
#define MFSampleExtension_ForwardedDecodeUnits GUID { "424c754c-97c8-48d6-8777-fc41f7b60879" }
#define MFSampleExtension_TargetGlobalLuminance GUID { "3f60ef36-31ef-4daf-8360-940397e41ef3" }
#define MFSampleExtension_ForwardedDecodeUnitType GUID { "089e57c7-47d3-4a26-bf9c-4b64fafb5d1e" }
#define MF_MT_FORWARD_CUSTOM_NALU GUID { "ed336efd-244f-428d-9153-28f399458890" }
#define MF_MT_FORWARD_CUSTOM_SEI GUID { "e27362f1-b136-41d1-9594-3a7e4febf2d1" }
#define MF_MT_VIDEO_RENDERER_EXTENSION_PROFILE GUID { "8437d4b9-d448-4fcd-9b6b-839bf96c7798" }
#define MF_DECODER_FWD_CUSTOM_SEI_DECODE_ORDER GUID { "f13bbe3c-36d4-410a-b985-7a951a1e6294" }
#define MF_VIDEO_RENDERER_EFFECT_APP_SERVICE_NAME GUID { "c6052a80-6d9c-40a3-9db8-f027a25c9ab9" }
#define MF_MT_AUDIO_NUM_CHANNELS GUID { "37e48bf5-645e-4c5b-89de-ada9e29b696a" }
#define MF_MT_AUDIO_SAMPLES_PER_SECOND GUID { "5faeeae7-0290-4c31-9e8a-c534f68d9dba" }
#define MF_MT_AUDIO_FLOAT_SAMPLES_PER_SECOND GUID { "fb3b724a-cfb5-4319-aefe-6e42b2406132" }
#define MF_MT_AUDIO_AVG_BYTES_PER_SECOND GUID { "1aab75c8-cfef-451c-ab95-ac034b8e1731" }
#define MF_MT_AUDIO_BLOCK_ALIGNMENT GUID { "322de230-9eeb-43bd-ab7a-ff412251541d" }
#define MF_MT_AUDIO_BITS_PER_SAMPLE GUID { "f2deb57f-40fa-4764-aa33-ed4f2d1ff669" }
#define MF_MT_AUDIO_VALID_BITS_PER_SAMPLE GUID { "d9bf8d6a-9530-4b7c-9ddf-ff6fd58bbd06" }
#define MF_MT_AUDIO_SAMPLES_PER_BLOCK GUID { "aab15aac-e13a-4995-9222-501ea15c6877" }
#define MF_MT_AUDIO_CHANNEL_MASK GUID { "55fb5765-644a-4caf-8479-938983bb1588" }
#define MF_MT_AUDIO_FOLDDOWN_MATRIX GUID { "9d62927c-36be-4cf2-b5c4-a3926e3e8711" }
#define MF_MT_AUDIO_WMADRC_PEAKREF GUID { "9d62927d-36be-4cf2-b5c4-a3926e3e8711" }
#define MF_MT_AUDIO_WMADRC_PEAKTARGET GUID { "9d62927e-36be-4cf2-b5c4-a3926e3e8711" }
#define MF_MT_AUDIO_WMADRC_AVGREF GUID { "9d62927f-36be-4cf2-b5c4-a3926e3e8711" }
#define MF_MT_AUDIO_WMADRC_AVGTARGET GUID { "9d629280-36be-4cf2-b5c4-a3926e3e8711" }
#define MF_MT_AUDIO_PREFER_WAVEFORMATEX GUID { "a901aaba-e037-458a-bdf6-545be2074042" }
#define MF_MT_AAC_PAYLOAD_TYPE GUID { "bfbabe79-7434-4d1c-94f0-72a3b9e17188" }
#define MF_MT_AAC_AUDIO_PROFILE_LEVEL_INDICATION GUID { "7632f0e6-9538-4d61-acda-ea29c8c14456" }
#define MF_MT_AUDIO_FLAC_MAX_BLOCK_SIZE GUID { "8b81adae-4b5a-4d40-8022-f38d09ca3c5c" }
#define MF_MT_SPATIAL_AUDIO_MAX_DYNAMIC_OBJECTS GUID { "dcfba24a-2609-4240-a721-3faea76a4df9" }
#define MF_MT_SPATIAL_AUDIO_OBJECT_METADATA_FORMAT_ID GUID { "2ab71bc0-6223-4ba7-ad64-7b94b47ae792" }
#define MF_MT_SPATIAL_AUDIO_OBJECT_METADATA_LENGTH GUID { "094ba8be-d723-489f-92fa-766777b34726" }
#define MF_MT_SPATIAL_AUDIO_MAX_METADATA_ITEMS GUID { "11aa80b4-e0da-47c6-8060-96c1259ae50d" }
#define MF_MT_SPATIAL_AUDIO_MIN_METADATA_ITEM_OFFSET_SPACING GUID { "83e96ec9-1184-417e-8254-9f269158fc06" }
#define MF_MT_SPATIAL_AUDIO_DATA_PRESENT GUID { "6842f6e7-d43e-4ebb-9c9c-c96f41784863" }
#define MF_MT_FRAME_SIZE GUID { "1652c33d-d6b2-4012-b834-72030849a37d" }
#define MF_MT_FRAME_RATE GUID { "c459a2e8-3d2c-4e44-b132-fee5156c7bb0" }
#define MF_MT_PIXEL_ASPECT_RATIO GUID { "c6376a1e-8d0a-4027-be45-6d9a0ad39bb6" }
#define MF_MT_DRM_FLAGS GUID { "8772f323-355a-4cc7-bb78-6d61a048ae82" }
#define MF_MT_TIMESTAMP_CAN_BE_DTS GUID { "24974215-1b7b-41e4-8625-ac469f2dedaa" }
#define MF_MT_PAD_CONTROL_FLAGS GUID { "4d0e73e5-80ea-4354-a9d0-1176ceb028ea" }
#define MF_MT_SOURCE_CONTENT_HINT GUID { "68aca3cc-22d0-44e6-85f8-28167197fa38" }
#define MF_MT_VIDEO_CHROMA_SITING GUID { "65df2370-c773-4c33-aa64-843e068efb0c" }
#define MF_MT_INTERLACE_MODE GUID { "e2724bb8-e676-4806-b4b2-a8d6efb44ccd" }
#define MF_MT_TRANSFER_FUNCTION GUID { "5fb0fce9-be5c-4935-a811-ec838f8eed93" }
#define MF_MT_VIDEO_PRIMARIES GUID { "dbfbe4d7-0740-4ee0-8192-850ab0e21935" }
#define MF_MT_MAX_LUMINANCE_LEVEL GUID { "50253128-c110-4de4-98ae-46a324fae6da" }
#define MF_MT_MAX_FRAME_AVERAGE_LUMINANCE_LEVEL GUID { "58d4bf57-6f52-4733-a195-a9e29ecf9e27" }
#define MF_MT_MAX_MASTERING_LUMINANCE GUID { "d6c6b997-272f-4ca1-8d00-8042111a0ff6" }
#define MF_MT_MIN_MASTERING_LUMINANCE GUID { "839a4460-4e7e-4b4f-ae79-cc08905c7b27" }
#define MF_MT_DECODER_USE_MAX_RESOLUTION GUID { "4c547c24-af9a-4f38-96ad-978773cf53e7" }
#define MF_MT_DECODER_MAX_DPB_COUNT GUID { "67be144c-88b7-4ca9-9628-c808d5262217" }
#define MF_MT_CUSTOM_VIDEO_PRIMARIES GUID { "47537213-8cfb-4722-aa34-fbc9e24d77b8" }
#define MF_MT_YUV_MATRIX GUID { "3e23d450-2c75-4d25-a00e-b91670d12327" }
#define MF_MT_VIDEO_LIGHTING GUID { "53a0529c-890b-4216-8bf9-599367ad6d20" }
#define MF_MT_VIDEO_NOMINAL_RANGE GUID { "c21b8ee5-b956-4071-8daf-325edf5cab11" }
#define MF_MT_GEOMETRIC_APERTURE GUID { "66758743-7e5f-400d-980a-aa8596c85696" }
#define MF_MT_MINIMUM_DISPLAY_APERTURE GUID { "d7388766-18fe-48c6-a177-ee894867c8c4" }
#define MF_MT_PAN_SCAN_APERTURE GUID { "79614dde-9187-48fb-b8c7-4d52689de649" }
#define MF_MT_PAN_SCAN_ENABLED GUID { "4b7f6bc3-8b13-40b2-a993-abf630b8204e" }
#define MF_MT_AVG_BITRATE GUID { "20332624-fb0d-4d9e-bd0d-cbf6786c102e" }
#define MF_MT_AVG_BIT_ERROR_RATE GUID { "799cabd6-3508-4db4-a3c7-569cd533deb1" }
#define MF_MT_MAX_KEYFRAME_SPACING GUID { "c16eb52b-73a1-476f-8d62-839d6a020652" }
#define MF_MT_USER_DATA GUID { "b6bc765f-4c3b-40a4-bd51-2535b66fe09d" }
#define MF_MT_OUTPUT_BUFFER_NUM GUID { "a505d3ac-f930-436e-8ede-93a509ce23b2" }
#define MF_MT_REALTIME_CONTENT GUID { "bb12d222-2bdb-425e-91ec-2308e189a58f" }
#define MF_MT_DEFAULT_STRIDE GUID { "644b4e48-1e02-4516-b0eb-c01ca9d49ac6" }
#define MF_MT_PALETTE GUID { "6d283f42-9846-4410-afd9-654d503b1a54" }
#define MF_MT_AM_FORMAT_TYPE GUID { "73d1072d-1870-4174-a063-29ff4ff6c11e" }
#define MF_MT_VIDEO_PROFILE GUID { "ad76a80b-2d5c-4e0b-b375-64e520137036" }
#define MF_MT_VIDEO_LEVEL GUID { "96f66574-11c5-4015-8666-bff516436da7" }
#define MF_MT_MPEG_START_TIME_CODE GUID { "91f67885-4333-4280-97cd-bd5a6c03a06e" }
#define MF_MT_MPEG2_PROFILE GUID { "ad76a80b-2d5c-4e0b-b375-64e520137036" }
#define MF_MT_MPEG2_LEVEL GUID { "96f66574-11c5-4015-8666-bff516436da7" }
#define MF_MT_MPEG2_FLAGS GUID { "31e3991d-f701-4b2f-b426-8ae3bda9e04b" }
#define MF_MT_MPEG_SEQUENCE_HEADER GUID { "3c036de7-3ad0-4c9e-9216-ee6d6ac21cb3" }
#define MF_MT_MPEG2_STANDARD GUID { "a20af9e8-928a-4b26-aaa9-f05c74cac47c" }
#define MF_MT_MPEG2_TIMECODE GUID { "5229ba10-e29d-4f80-a59c-df4f180207d2" }
#define MF_MT_MPEG2_CONTENT_PACKET GUID { "825d55e4-4f12-4197-9eb3-59b6e4710f06" }
#define MF_MT_MPEG2_ONE_FRAME_PER_PACKET GUID { "91a49eb5-1d20-4b42-ace8-804269bf95ed" }
#define MF_MT_MPEG2_HDCP GUID { "168f1b4a-3e91-450f-aea7-e4baeadae5ba" }
#define MF_MT_H264_MAX_CODEC_CONFIG_DELAY GUID { "f5929986-4c45-4fbb-bb49-6cc534d05b9b" }
#define MF_MT_H264_SUPPORTED_SLICE_MODES GUID { "c8be1937-4d64-4549-8343-a8086c0bfda5" }
#define MF_MT_H264_SUPPORTED_SYNC_FRAME_TYPES GUID { "89a52c01-f282-48d2-b522-22e6ae633199" }
#define MF_MT_H264_RESOLUTION_SCALING GUID { "e3854272-f715-4757-ba90-1b696c773457" }
#define MF_MT_H264_SIMULCAST_SUPPORT GUID { "9ea2d63d-53f0-4a34-b94e-9de49a078cb3" }
#define MF_MT_H264_SUPPORTED_RATE_CONTROL_MODES GUID { "6a8ac47e-519c-4f18-9bb3-7eeaaea5594d" }
#define MF_MT_H264_MAX_MB_PER_SEC GUID { "45256d30-7215-4576-9336-b0f1bcd59bb2" }
#define MF_MT_H264_SUPPORTED_USAGES GUID { "60b1a998-dc01-40ce-9736-aba845a2dbdc" }
#define MF_MT_H264_CAPABILITIES GUID { "bb3bd508-490a-11e0-99e4-1316dfd72085" }
#define MF_MT_H264_SVC_CAPABILITIES GUID { "f8993abe-d937-4a8f-bbca-6966fe9e1152" }
#define MF_MT_H264_USAGE GUID { "359ce3a5-af00-49ca-a2f4-2ac94ca82b61" }
#define MF_MT_H264_RATE_CONTROL_MODES GUID { "705177d8-45cb-11e0-ac7d-b91ce0d72085" }
#define MF_MT_H264_LAYOUT_PER_STREAM GUID { "85e299b2-90e3-4fe8-b2f5-c067e0bfe57a" }
#define MF_MT_IN_BAND_PARAMETER_SET GUID { "75da5090-910b-4a03-896c-7b898feea5af" }
#define MF_MT_MPEG4_TRACK_TYPE GUID { "54f486dd-9327-4f6d-80ab-6f709ebb4cce" }
#define MF_MT_CONTAINER_RATE_SCALING GUID { "83877f5e-0444-4e28-8479-6db0989b8c09" }
#define MF_MT_DV_AAUX_SRC_PACK_0 GUID { "84bd5d88-0fb8-4ac8-be4b-a8848bef98f3" }
#define MF_MT_DV_AAUX_CTRL_PACK_0 GUID { "f731004e-1dd1-4515-aabe-f0c06aa536ac" }
#define MF_MT_DV_AAUX_SRC_PACK_1 GUID { "720e6544-0225-4003-a651-0196563a958e" }
#define MF_MT_DV_AAUX_CTRL_PACK_1 GUID { "cd1f470d-1f04-4fe0-bfb9-d07ae0386ad8" }
#define MF_MT_DV_VAUX_SRC_PACK GUID { "41402d9d-7b57-43c6-b129-2cb997f15009" }
#define MF_MT_DV_VAUX_CTRL_PACK GUID { "2f84e1c4-0da1-4788-938e-0dfbfbb34b48" }
#define MF_MT_ARBITRARY_HEADER GUID { "9e6bd6f5-0109-4f95-84ac-9309153a19fc" }
#define MF_MT_ARBITRARY_FORMAT GUID { "5a75b249-0d7d-49a1-a1c3-e0d87f0cade5" }
#define MF_MT_IMAGE_LOSS_TOLERANT GUID { "ed062cf4-e34e-4922-be99-934032133d7c" }
#define MF_MT_MPEG4_SAMPLE_DESCRIPTION GUID { "261e9d83-9529-4b8f-a111-8b9c950a81a9" }
#define MF_MT_MPEG4_CURRENT_SAMPLE_ENTRY GUID { "9aa7e155-b64a-4c1d-a500-455d600b6560" }
#define MF_SD_AMBISONICS_SAMPLE3D_DESCRIPTION GUID { "f715cf3e-a964-4c3f-94ae-9d6ba7264641" }
#define MF_MT_ORIGINAL_4CC GUID { "d7be3fe0-2bc7-492d-b843-61a1919b70c3" }
#define MF_MT_ORIGINAL_WAVE_FORMAT_TAG GUID { "8cbbc843-9fd9-49c2-882f-a72586c408ad" }
#define MF_MT_FRAME_RATE_RANGE_MIN GUID { "d2e7558c-dc1f-403f-9a72-d28bb1eb3b5e" }
#define MF_MT_FRAME_RATE_RANGE_MAX GUID { "e3371d41-b4cf-4a05-bd4e-20b88bb2c4d6" }
#define MF_LOW_LATENCY GUID { "9c27891a-ed7a-40e1-88e8-b22727a024ee" }
#define MF_VIDEO_MAX_MB_PER_SEC GUID { "e3f2e203-d445-4b8c-9211-ae390d3ba017" }
#define MF_DISABLE_FRAME_CORRUPTION_INFO GUID { "7086e16c-49c5-4201-882a-8538f38cf13a" }
#define MFStreamExtension_CameraExtrinsics GUID { "686196d0-13e2-41d9-9638-ef032c272a52" }
#define MFSampleExtension_CameraExtrinsics GUID { "6b761658-b7ec-4c3b-8225-8623cabec31d" }
#define MFStreamExtension_PinholeCameraIntrinsics GUID { "dbac0455-0ec8-4aef-9c32-7a3ee3456f53" }
#define MFSampleExtension_PinholeCameraIntrinsics GUID { "4ee3b6c5-6a15-4e72-9761-70c1db8b9fe3" }
#define MFMediaType_Default GUID { "81a412e6-8103-4b06-857f-1862781024ac" }
#define MFMediaType_Audio GUID { "73647561-0000-0010-8000-00aa00389b71" }
#define MFMediaType_Video GUID { "73646976-0000-0010-8000-00aa00389b71" }
#define MFMediaType_Protected GUID { "7b4b6fe6-9d04-4494-be14-7e0bd076c8e4" }
#define MFMediaType_SAMI GUID { "e69669a0-3dcd-40cb-9e2e-3708387c0616" }
#define MFMediaType_Script GUID { "72178c22-e45b-11d5-bc2a-00b0d0f3f4ab" }
#define MFMediaType_Image GUID { "72178c23-e45b-11d5-bc2a-00b0d0f3f4ab" }
#define MFMediaType_HTML GUID { "72178c24-e45b-11d5-bc2a-00b0d0f3f4ab" }
#define MFMediaType_Binary GUID { "72178c25-e45b-11d5-bc2a-00b0d0f3f4ab" }
#define MFMediaType_FileTransfer GUID { "72178c26-e45b-11d5-bc2a-00b0d0f3f4ab" }
#define MFMediaType_Stream GUID { "e436eb83-524f-11ce-9f53-0020af0ba770" }
#define MFMediaType_MultiplexedFrames GUID { "6ea542b0-281f-4231-a464-fe2f5022501c" }
#define MFMediaType_Subtitle GUID { "a6d13581-ed50-4e65-ae08-26065576aacc" }
#define MFMediaType_Perception GUID { "597ff6f9-6ea2-4670-85b4-ea84073fe940" }
#define MFImageFormat_JPEG GUID { "19e4a5aa-5662-4fc5-a0c0-1758028e1057" }
#define MFImageFormat_RGB32 GUID { "00000016-0000-0010-8000-00aa00389b71" }
#define MFStreamFormat_MPEG2Transport GUID { "e06d8023-db46-11cf-b4d1-00805f6cbbea" }
#define MFStreamFormat_MPEG2Program GUID { "263067d1-d330-45dc-b669-34d986e4e3e1" }
#define AM_MEDIA_TYPE_REPRESENTATION GUID { "e2e42ad2-132c-491e-a268-3c7c2dca181f" }
#define FORMAT_MFVideoFormat GUID { "aed4ab2d-7326-43cb-9464-c879cab9c43d" }
#define CLSID_MFSourceResolver GUID { "90eab60f-e43a-4188-bcc4-e47fdf04868c" }
#define MF_DEVICESTREAM_ATTRIBUTE_FACEAUTH_CAPABILITY GUID { "cb6fd12a-2248-4e41-ad46-e78bb90ab9fc" }
#define MF_DEVICESTREAM_ATTRIBUTE_SECURE_CAPABILITY GUID { "940fd626-ea6e-4684-9840-36bd6ec9fbef" }
#define MEDIASINK_FIXED_STREAMS (UINT)1
#define MEDIASINK_CANNOT_MATCH_CLOCK (UINT)2
#define MEDIASINK_RATELESS (UINT)4
#define MEDIASINK_CLOCK_REQUIRED (UINT)8
#define MEDIASINK_CAN_PREROLL (UINT)16
#define MEDIASINK_REQUIRE_REFERENCE_MEDIATYPE (UINT)32
#define MFCLOCK_FREQUENCY_HNS (UINT)10000000
#define MFCLOCK_TOLERANCE_UNKNOWN (UINT)50000
#define MFCLOCK_JITTER_ISR (UINT)1000
#define MFCLOCK_JITTER_DPC (UINT)4000
#define MFCLOCK_JITTER_PASSIVE (UINT)10000
#define PRESENTATION_CURRENT_POSITION (UINT64)9223372036854775807
#define MF_PD_ADAPTIVE_STREAMING GUID { "ea0d5d97-29f9-488b-ae6b-7d6b4136112b" }
#define MF_AUDIO_RENDERER_ATTRIBUTE_FLAGS_CROSSPROCESS (UINT)1
#define MF_AUDIO_RENDERER_ATTRIBUTE_FLAGS_NOPERSIST (UINT)2
#define MF_AUDIO_RENDERER_ATTRIBUTE_FLAGS_DONT_ALLOW_FORMAT_CHANGES (UINT)4
#define MFRR_INFO_VERSION (UINT)0
#define MF_USER_MODE_COMPONENT_LOAD (UINT)1
#define MF_KERNEL_MODE_COMPONENT_LOAD (UINT)2
#define MF_GRL_LOAD_FAILED (UINT)16
#define MF_INVALID_GRL_SIGNATURE (UINT)32
#define MF_GRL_ABSENT (UINT)4096
#define MF_COMPONENT_REVOKED (UINT)8192
#define MF_COMPONENT_INVALID_EKU (UINT)16384
#define MF_COMPONENT_CERT_REVOKED (UINT)32768
#define MF_COMPONENT_INVALID_ROOT (UINT)65536
#define MF_COMPONENT_HS_CERT_REVOKED (UINT)131072
#define MF_COMPONENT_LS_CERT_REVOKED (UINT)262144
#define MF_BOOT_DRIVER_VERIFICATION_FAILED (UINT)1048576
#define MF_TEST_SIGNED_COMPONENT_LOADING (UINT)16777216
#define MF_MINCRYPT_FAILURE (UINT)268435456
#define SHA_HASH_LEN (UINT)20
#define MFSEQUENCER_INVALID_ELEMENT_ID (UINT)4294967295
#define MF_WRAPPED_BUFFER_SERVICE GUID { "ab544072-c269-4ebc-a552-1c3b32bed5ca" }
#define CLSID_MPEG2ByteStreamPlugin GUID { "40871c59-ab40-471f-8dc3-1f259d862479" }
#define MFCONTENTPROTECTIONDEVICE_FUNCTIONID_START (UINT)67108864
#define MF_UNKNOWN_DURATION (UINT)0
#define MFStreamExtension_ExtendedCameraIntrinsics GUID { "aa74b3df-9a2c-48d6-8393-5bd1c1a81e6e" }
#define MFSampleExtension_ExtendedCameraIntrinsics GUID { "560bc4a5-4de0-4113-9cdc-832db9740f3d" }
#define MF_INVALID_PRESENTATION_TIME (UINT64)9223372036854775808
#define MF_MEDIATYPE_EQUAL_MAJOR_TYPES (UINT)1
#define MF_MEDIATYPE_EQUAL_FORMAT_TYPES (UINT)2
#define MF_MEDIATYPE_EQUAL_FORMAT_DATA (UINT)4
#define MF_MEDIATYPE_EQUAL_FORMAT_USER_DATA (UINT)8
#define MFASYNC_FAST_IO_PROCESSING_CALLBACK (UINT)1
#define MFASYNC_SIGNAL_CALLBACK (UINT)2
#define MFASYNC_BLOCKING_CALLBACK (UINT)4
#define MFASYNC_REPLY_CALLBACK (UINT)8
#define MFASYNC_LOCALIZE_REMOTE_CALLBACK (UINT)16
#define MFASYNC_CALLBACK_QUEUE_UNDEFINED (UINT)0
#define MFASYNC_CALLBACK_QUEUE_STANDARD (UINT)1
#define MFASYNC_CALLBACK_QUEUE_RT (UINT)2
#define MFASYNC_CALLBACK_QUEUE_IO (UINT)3
#define MFASYNC_CALLBACK_QUEUE_TIMER (UINT)4
#define MFASYNC_CALLBACK_QUEUE_MULTITHREADED (UINT)5
#define MFASYNC_CALLBACK_QUEUE_LONG_FUNCTION (UINT)7
#define MFASYNC_CALLBACK_QUEUE_PRIVATE_MASK (UINT)4294901760
#define MFASYNC_CALLBACK_QUEUE_ALL (UINT)4294967295
#define MFBYTESTREAM_IS_READABLE (UINT)1
#define MFBYTESTREAM_IS_WRITABLE (UINT)2
#define MFBYTESTREAM_IS_SEEKABLE (UINT)4
#define MFBYTESTREAM_IS_REMOTE (UINT)8
#define MFBYTESTREAM_IS_DIRECTORY (UINT)128
#define MFBYTESTREAM_HAS_SLOW_SEEK (UINT)256
#define MFBYTESTREAM_IS_PARTIALLY_DOWNLOADED (UINT)512
#define MFBYTESTREAM_SHARE_WRITE (UINT)1024
#define MFBYTESTREAM_DOES_NOT_USE_NETWORK (UINT)2048
#define MFBYTESTREAM_SEEK_FLAG_CANCEL_PENDING_IO (UINT)1
#define MF_MEDIA_SHARING_ENGINE_INITIAL_SEEK_TIME GUID { "6f3497f5-d528-4a4f-8dd7-db36657ec4c9" }
#define MF_SHUTDOWN_RENDERER_ON_ENGINE_SHUTDOWN GUID { "c112d94d-6b9c-48f8-b6f9-7950ff9ab71e" }
#define MF_PREFERRED_SOURCE_URI GUID { "5fc85488-436a-4db8-90af-4db402ae5c57" }
#define MF_SHARING_ENGINE_SHAREDRENDERER GUID { "efa446a0-73e7-404e-8ae2-fef60af5a32b" }
#define MF_SHARING_ENGINE_CALLBACK GUID { "57dc1e95-d252-43fa-9bbc-180070eefe6d" }
#define MFT_STREAMS_UNLIMITED (UINT)4294967295
#define OPM_GET_CURRENT_HDCP_SRM_VERSION GUID { "99c5ceff-5f1d-4879-81c1-c52443c9482b" }
#define OPM_GET_CONNECTED_HDCP_DEVICE_INFORMATION GUID { "0db59d74-a992-492e-a0bd-c23fda564e00" }
#define OPM_GET_ACP_AND_CGMSA_SIGNALING GUID { "6629a591-3b79-4cf3-924a-11e8e7811671" }
#define OPM_GET_CONNECTOR_TYPE GUID { "81d0bfd5-6afe-48c2-99c0-95a08f97c5da" }
#define OPM_GET_SUPPORTED_PROTECTION_TYPES GUID { "38f2a801-9a6c-48bb-9107-b6696e6f1797" }
#define OPM_GET_VIRTUAL_PROTECTION_LEVEL GUID { "b2075857-3eda-4d5d-88db-748f8c1a0549" }
#define OPM_GET_ACTUAL_PROTECTION_LEVEL GUID { "1957210a-7766-452a-b99a-d27aed54f03a" }
#define OPM_GET_ACTUAL_OUTPUT_FORMAT GUID { "d7bf1ba3-ad13-4f8e-af98-0dcb3ca204cc" }
#define OPM_GET_ADAPTER_BUS_TYPE GUID { "c6f4d673-6174-4184-8e35-f6db5200bcba" }
#define OPM_GET_OUTPUT_ID GUID { "72cb6df3-244f-40ce-b09e-20506af6302f" }
#define OPM_GET_DVI_CHARACTERISTICS GUID { "a470b3bb-5dd7-4172-839c-3d3776e0ebf5" }
#define OPM_GET_CODEC_INFO GUID { "4f374491-8f5f-4445-9dba-95588f6b58b4" }
#define OPM_GET_OUTPUT_HARDWARE_PROTECTION_SUPPORT GUID { "3b129589-2af8-4ef0-96a2-704a845a218e" }
#define OPM_SET_PROTECTION_LEVEL GUID { "9bb9327c-4eb5-4727-9f00-b42b0919c0da" }
#define OPM_SET_ACP_AND_CGMSA_SIGNALING GUID { "09a631a5-d684-4c60-8e4d-d3bb0f0be3ee" }
#define OPM_SET_HDCP_SRM GUID { "8b5ef5d1-c30d-44ff-84a5-ea71dce78f13" }
#define OPM_SET_PROTECTION_LEVEL_ACCORDING_TO_CSS_DVD GUID { "39ce333e-4cc0-44ae-bfcc-da50b5f82e72" }
#define WM_CODEC_ONEPASS_CBR (UINT)1
#define WM_CODEC_ONEPASS_VBR (UINT)2
#define WM_CODEC_TWOPASS_CBR (UINT)4
#define WM_CODEC_TWOPASS_VBR_UNCONSTRAINED (UINT)8
#define WM_CODEC_TWOPASS_VBR_PEAKCONSTRAINED (UINT)16
#define SYSFXUI_DONOTSHOW_LOUDNESSEQUALIZATION (UINT)1
#define SYSFXUI_DONOTSHOW_ROOMCORRECTION (UINT)2
#define SYSFXUI_DONOTSHOW_BASSMANAGEMENT (UINT)4
#define SYSFXUI_DONOTSHOW_BASSBOOST (UINT)8
#define SYSFXUI_DONOTSHOW_HEADPHONEVIRTUALIZATION (UINT)16
#define SYSFXUI_DONOTSHOW_VIRTUALSURROUND (UINT)32
#define SYSFXUI_DONOTSHOW_SPEAKERFILLING (UINT)64
#define SYSFXUI_DONOTSHOW_CHANNELPHANTOMING (UINT)128
#define AEC_MAX_SYSTEM_MODES (UINT)6
#define WMAAECMA_E_NO_ACTIVE_RENDER_STREAM (UINT)2278293514
#define MEDIASUBTYPE_Y41T GUID { "54313459-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_Y42T GUID { "54323459-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_NV11 GUID { "3131564e-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_V216 GUID { "36313256-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_V410 GUID { "30313456-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_v210 GUID { "30313276-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_I420 GUID { "30323449-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_WVC1 GUID { "31435657-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_wvc1 GUID { "31637677-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_WMVA GUID { "41564d57-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_wmva GUID { "61766d77-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_WMVB GUID { "42564d57-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_wmvb GUID { "62766d77-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_WMVR GUID { "52564d57-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_wmvr GUID { "72766d77-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_WMVP GUID { "50564d57-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_wmvp GUID { "70766d77-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_WVP2 GUID { "32505657-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_wvp2 GUID { "32707677-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_WMV3 GUID { "33564d57-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_wmv3 GUID { "33766d77-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_WMV2 GUID { "32564d57-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_wmv2 GUID { "32766d77-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_WMV1 GUID { "31564d57-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_wmv1 GUID { "31766d77-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_MPG4 GUID { "3447504d-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_mpg4 GUID { "3467706d-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_MP42 GUID { "3234504d-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_mp42 GUID { "3234706d-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_MP43 GUID { "3334504d-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_mp43 GUID { "3334706d-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_MP4S GUID { "5334504d-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_mp4s GUID { "7334706d-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_M4S2 GUID { "3253344d-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_m4s2 GUID { "3273346d-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_MSS1 GUID { "3153534d-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_MSS2 GUID { "3253534d-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_MSAUDIO1 GUID { "00000160-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_WMAUDIO2 GUID { "00000161-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_WMAUDIO3 GUID { "00000162-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_WMAUDIO_LOSSLESS GUID { "00000163-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_WMASPDIF GUID { "00000164-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_WMAUDIO4 GUID { "00000168-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_MPEG_ADTS_AAC GUID { "00001600-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_MPEG_RAW_AAC GUID { "00001601-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_MPEG_LOAS GUID { "00001602-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_NOKIA_MPEG_ADTS_AAC GUID { "00001608-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_NOKIA_MPEG_RAW_AAC GUID { "00001609-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_VODAFONE_MPEG_ADTS_AAC GUID { "0000160a-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_VODAFONE_MPEG_RAW_AAC GUID { "0000160b-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_MPEG_HEAAC GUID { "00001610-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_RAW_AAC1 GUID { "000000ff-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_DVM GUID { "00002000-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_DTS2 GUID { "00002001-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_DOLBY_DDPLUS GUID { "a7fb87af-2d02-42fb-a4d4-05cd93843bdd" }
#define MEDIASUBTYPE_DOLBY_TRUEHD GUID { "eb27cec4-163e-4ca3-8b74-8e25f91b517e" }
#define MEDIASUBTYPE_DTS_HD GUID { "a2e58eb7-0fa9-48bb-a40c-fa0e156d0645" }
#define MEDIASUBTYPE_DTS_HD_HRA GUID { "a61ac364-ad0e-4744-89ff-213ce0df8804" }
#define MEDIASUBTYPE_h264 GUID { "34363268-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_AVC1 GUID { "31435641-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_X264 GUID { "34363258-0000-0010-8000-00aa00389b71" }
#define MEDIASUBTYPE_x264 GUID { "34363278-0000-0010-8000-00aa00389b71" }
#define MF_VIDEODSP_MODE GUID { "16d720f0-768c-11de-8a39-0800200c9a66" }
#define MFSampleExtension_VideoDSPMode GUID { "c12d55cb-d7d9-476d-81f3-69117f163ea0" }
#define CLSID_CTocEntry GUID { "f22f5e05-585c-4def-8523-6555cfbc0cb3" }
#define CLSID_CTocEntryList GUID { "3a8cccbc-0efd-43a3-b838-f38a552ba237" }
#define CLSID_CToc GUID { "4fe24495-28ce-4920-a4c4-e556e1f0df2a" }
#define CLSID_CTocCollection GUID { "5058292d-a244-4840-ab44-480975c4ffe4" }
#define CLSID_CTocParser GUID { "499eaeea-2737-4849-8bb6-47f107eaf358" }
#define CLSID_CAsfTocParser GUID { "9b77c0f2-8735-46c5-b90f-5f0b303ef6ab" }
#define CLSID_CAviTocParser GUID { "3adce5cc-13c8-4573-b328-ed438eb694f9" }
#define CLSID_CFileIo GUID { "11993195-1244-4840-ab44-480975c4ffe4" }
#define CLSID_CFileClient GUID { "bfccd195-1244-4840-ab44-480975c4ffe4" }
#define CLSID_CClusterDetectorEx GUID { "47354492-827e-4b8a-b318-c80eba1381f0" }
#define E_TOCPARSER_INVALIDASFFILE (HRESULT)(INT)-1728053247
#define E_TOCPARSER_INVALIDRIFFFILE (HRESULT)(INT)-1728053246
#define TOC_MAX_DESCRIPTION_SIZE (UINT)65535
#define TOC_ENTRY_MAX_TITLE_SIZE (UINT)65535
#define MFASFINDEXER_PER_ENTRY_BYTES_DYNAMIC (UINT)65535
#define MFASFINDEXER_NO_FIXED_INTERVAL (UINT)4294967295
#define MFASFINDEXER_READ_FOR_REVERSEPLAYBACK_OUTOFDATASEGMENT (UINT64)18446744073709551615
#define MFASFINDEXER_APPROX_SEEK_TIME_UNKNOWN (UINT64)18446744073709551615
#define MFASF_MAX_STREAM_NUMBER (UINT)127
#define MFASF_INVALID_STREAM_NUMBER (UINT)128
#define MFASF_PAYLOADEXTENSION_MAX_SIZE (UINT)255
#define MFASF_PAYLOADEXTENSION_VARIABLE_SIZE (UINT)65535
#define MFASF_DEFAULT_BUFFER_WINDOW_MS (UINT)3000
#define g_wszSpeechFormatCaps "SpeechFormatCap"
#define g_wszWMCPCodecName "_CODECNAME"
#define g_wszWMCPSupportedVBRModes "_SUPPORTEDVBRMODES"
#define g_wszWMCPAudioVBRSupported "_VBRENABLED"
#define g_wszWMCPAudioVBRQuality "_VBRQUALITY"
#define g_wszWMCPMaxPasses "_PASSESRECOMMENDED"
#define g_wszWMCPDefaultCrisp "_DEFAULTCRISP"
#define COPP_ProtectionType_Unknown (INT)-2147483648
#define COPP_ProtectionType_None (INT)0
#define COPP_ProtectionType_HDCP (INT)1
#define COPP_ProtectionType_ACP (INT)2
#define COPP_ProtectionType_CGMSA (INT)4
#define COPP_ProtectionType_Mask (INT)-2147483641
#define COPP_ProtectionType_Reserved (INT)2147483640
#define MF_BYTESTREAM_ORIGIN_NAME GUID { "fc358288-3cb6-460c-a424-b6681260375a" }
#define MF_BYTESTREAM_CONTENT_TYPE GUID { "fc358289-3cb6-460c-a424-b6681260375a" }
#define MF_BYTESTREAM_DURATION GUID { "fc35828a-3cb6-460c-a424-b6681260375a" }
#define MF_BYTESTREAM_LAST_MODIFIED_TIME GUID { "fc35828b-3cb6-460c-a424-b6681260375a" }
#define MF_BYTESTREAM_IFO_FILE_URI GUID { "fc35828c-3cb6-460c-a424-b6681260375a" }
#define MF_BYTESTREAM_DLNA_PROFILE_ID GUID { "fc35828d-3cb6-460c-a424-b6681260375a" }
#define MF_BYTESTREAM_EFFECTIVE_URL GUID { "9afa0209-89d1-42af-8456-1de6b562d691" }
#define MF_BYTESTREAM_TRANSCODED GUID { "b6c5c282-4dc9-4db9-ab48-cf3b6d8bc5e0" }
#define CLSID_MFByteStreamProxyClassFactory GUID { "770e8e77-4916-441c-a9a7-b342d0eebc71" }
#define MEDeviceStreamCreated GUID { "0252a1cf-3540-43b4-9164-d72eb405fa40" }
#define MF_SA_D3D_AWARE GUID { "eaa35c29-775e-488e-9b61-b3283e49583b" }
#define MF_SA_REQUIRED_SAMPLE_COUNT GUID { "18802c61-324b-4952-abd0-176ff5c696ff" }
#define MFT_END_STREAMING_AWARE GUID { "70fbc845-b07e-4089-b064-399dc6110f29" }
#define MF_SA_AUDIO_ENDPOINT_AWARE GUID { "c0381701-805c-42b2-ac8d-e2b4bf21f4f8" }
#define MFT_AUDIO_DECODER_AUDIO_ENDPOINT_ID GUID { "c7ccdd6e-5398-4695-8be7-51b3e95111bd" }
#define MFT_AUDIO_DECODER_SPATIAL_METADATA_CLIENT GUID { "05987df4-1270-4999-925f-8e939a7c0af7" }
#define MF_DMFT_FRAME_BUFFER_INFO GUID { "396ce1c9-67a9-454c-8797-95a45799d804" }
#define MF_SA_REQUIRED_SAMPLE_COUNT_PROGRESSIVE GUID { "b172d58e-fa77-4e48-8d2a-1df2d850eac2" }
#define MF_SA_MINIMUM_OUTPUT_SAMPLE_COUNT GUID { "851745d5-c3d6-476d-9527-498ef2d10d18" }
#define MF_SA_MINIMUM_OUTPUT_SAMPLE_COUNT_PROGRESSIVE GUID { "0f5523a5-1cb2-47c5-a550-2eeb84b4d14a" }
#define MFT_SUPPORT_3DVIDEO GUID { "093f81b1-4f2e-4631-8168-7934032a01d3" }
#define MF_ENABLE_3DVIDEO_OUTPUT GUID { "bdad7bca-0e5f-4b10-ab16-26de381b6293" }
#define MF_SA_D3D11_BINDFLAGS GUID { "eacf97ad-065c-4408-bee3-fdcbfd128be2" }
#define MF_SA_D3D11_USAGE GUID { "e85fe442-2ca3-486e-a9c7-109dda609880" }
#define MF_SA_D3D11_AWARE GUID { "206b4fc8-fcf9-4c51-afe3-9764369e33a0" }
#define MF_SA_D3D11_SHARED GUID { "7b8f32c3-6d96-4b89-9203-dd38b61414f3" }
#define MF_SA_D3D11_SHARED_WITHOUT_MUTEX GUID { "39dbd44d-2e44-4931-a4c8-352d3dc42115" }
#define MF_SA_D3D11_ALLOW_DYNAMIC_YUV_TEXTURE GUID { "ce06d49f-0613-4b9d-86a6-d8c4f9c10075" }
#define MF_SA_D3D11_HW_PROTECTED GUID { "3a8ba9d9-92ca-4307-a391-6999dbf3b6ce" }
#define MF_SA_BUFFERS_PER_SAMPLE GUID { "873c5171-1e3d-4e25-988d-b433ce041983" }
#define MFT_DECODER_EXPOSE_OUTPUT_TYPES_IN_NATIVE_ORDER GUID { "ef80833f-f8fa-44d9-80d8-41ed6232670c" }
#define MFT_DECODER_QUALITY_MANAGEMENT_CUSTOM_CONTROL GUID { "a24e30d7-de25-4558-bbfb-71070a2d332e" }
#define MFT_DECODER_QUALITY_MANAGEMENT_RECOVERY_WITHOUT_ARTIFACTS GUID { "d8980deb-0a48-425f-8623-611db41d3810" }
#define MFT_REMUX_MARK_I_PICTURE_AS_CLEAN_POINT GUID { "364e8f85-3f2e-436c-b2a2-4440a012a9e8" }
#define MFT_DECODER_FINAL_VIDEO_RESOLUTION_HINT GUID { "dc2f8496-15c4-407a-b6f0-1b66ab5fbf53" }
#define MFT_ENCODER_SUPPORTS_CONFIG_EVENT GUID { "86a355ae-3a77-4ec4-9f31-01149a4e92de" }
#define MFT_ENUM_HARDWARE_VENDOR_ID_Attribute GUID { "3aecb0cc-035b-4bcc-8185-2b8d551ef3af" }
#define MF_TRANSFORM_ASYNC GUID { "f81a699a-649a-497d-8c73-29f8fed6ad7a" }
#define MF_TRANSFORM_ASYNC_UNLOCK GUID { "e5666d6b-3422-4eb6-a421-da7db1f8e207" }
#define MF_TRANSFORM_FLAGS_Attribute GUID { "9359bb7e-6275-46c4-a025-1c01e45f1a86" }
#define MF_TRANSFORM_CATEGORY_Attribute GUID { "ceabba49-506d-4757-a6ff-66c184987e4e" }
#define MFT_TRANSFORM_CLSID_Attribute GUID { "6821c42b-65a4-4e82-99bc-9a88205ecd0c" }
#define MFT_INPUT_TYPES_Attributes GUID { "4276c9b1-759d-4bf3-9cd0-0d723d138f96" }
#define MFT_OUTPUT_TYPES_Attributes GUID { "8eae8cf3-a44f-4306-ba5c-bf5dda242818" }
#define MFT_ENUM_HARDWARE_URL_Attribute GUID { "2fb866ac-b078-4942-ab6c-003d05cda674" }
#define MFT_FRIENDLY_NAME_Attribute GUID { "314ffbae-5b41-4c95-9c19-4e7d586face3" }
#define MFT_CONNECTED_STREAM_ATTRIBUTE GUID { "71eeb820-a59f-4de2-bcec-38db1dd611a4" }
#define MFT_CONNECTED_TO_HW_STREAM GUID { "34e6e728-06d6-4491-a553-4795650db912" }
#define MFT_PREFERRED_OUTPUTTYPE_Attribute GUID { "7e700499-396a-49ee-b1b4-f628021e8c9d" }
#define MFT_PROCESS_LOCAL_Attribute GUID { "543186e4-4649-4e65-b588-4aa352aff379" }
#define MFT_PREFERRED_ENCODER_PROFILE GUID { "53004909-1ef5-46d7-a18e-5a75f8b5905f" }
#define MFT_HW_TIMESTAMP_WITH_QPC_Attribute GUID { "8d030fb8-cc43-4258-a22e-9210bef89be4" }
#define MFT_FIELDOFUSE_UNLOCK_Attribute GUID { "8ec2e9fd-9148-410d-831e-702439461a8e" }
#define MFT_CODEC_MERIT_Attribute GUID { "88a7cb15-7b07-4a34-9128-e64c6703c4d3" }
#define MFT_ENUM_TRANSCODE_ONLY_ATTRIBUTE GUID { "111ea8cd-b62a-4bdb-89f6-67ffcdc2458b" }
#define MFT_AUDIO_DECODER_DEGRADATION_INFO_ATTRIBUTE GUID { "6c3386ad-ec20-430d-b2a5-505c7178d9c4" }
#define MFT_POLICY_SET_AWARE GUID { "5a633b19-cc39-4fa8-8ca5-59981b7a0018" }
#define MFT_USING_HARDWARE_DRM GUID { "34faa77d-d79e-4957-b8ce-362b2684996c" }
#define MF_WVC1_PROG_SINGLE_SLICE_CONTENT GUID { "67ec2559-0f2f-4420-a4dd-2f8ee7a5738b" }
#define MF_PROGRESSIVE_CODING_CONTENT GUID { "8f020eea-1508-471f-9da6-507d7cfa40db" }
#define MF_NALU_LENGTH_SET GUID { "a7911d53-12a4-4965-ae70-6eadd6ff0551" }
#define MF_NALU_LENGTH_INFORMATION GUID { "19124e7c-ad4b-465f-bb18-20186287b6af" }
#define MF_USER_DATA_PAYLOAD GUID { "d1d4985d-dc92-457a-b3a0-651a33a31047" }
#define MF_MPEG4SINK_SPSPPS_PASSTHROUGH GUID { "5601a134-2005-4ad2-b37d-22a6c554deb2" }
#define MF_MPEG4SINK_MOOV_BEFORE_MDAT GUID { "f672e3ac-e1e6-4f10-b5ec-5f3b30828816" }
#define MF_MPEG4SINK_MINIMUM_PROPERTIES_SIZE GUID { "dca1ed52-450e-4a22-8c62-4ed452f7a187" }
#define MF_MPEG4SINK_MIN_FRAGMENT_DURATION GUID { "a30b570c-8efd-45e8-94fe-27c84b5bdff6" }
#define MF_MPEG4SINK_MAX_CODED_SEQUENCES_PER_FRAGMENT GUID { "fc1b3bd6-692d-4ce5-9299-738aa5463e9a" }
#define MF_SESSION_TOPOLOADER GUID { "1e83d482-1f1c-4571-8405-88f4b2181f71" }
#define MF_SESSION_GLOBAL_TIME GUID { "1e83d482-1f1c-4571-8405-88f4b2181f72" }
#define MF_SESSION_QUALITY_MANAGER GUID { "1e83d482-1f1c-4571-8405-88f4b2181f73" }
#define MF_SESSION_CONTENT_PROTECTION_MANAGER GUID { "1e83d482-1f1c-4571-8405-88f4b2181f74" }
#define MF_SESSION_SERVER_CONTEXT GUID { "afe5b291-50fa-46e8-b9be-0c0c3ce4b3a5" }
#define MF_SESSION_REMOTE_SOURCE_MODE GUID { "f4033ef4-9bb3-4378-941f-85a0856bc244" }
#define MF_SESSION_APPROX_EVENT_OCCURRENCE_TIME GUID { "190e852f-6238-42d1-b5af-69ea338ef850" }
#define MF_PMP_SERVER_CONTEXT GUID { "2f00c910-d2cf-4278-8b6a-d077fac3a25f" }
#define MF_TIME_FORMAT_ENTRY_RELATIVE GUID { "4399f178-46d3-4504-afda-20d32e9ba360" }
#define MF_SOURCE_STREAM_SUPPORTS_HW_CONNECTION GUID { "a38253aa-6314-42fd-a3ce-bb27b6859946" }
#define MF_STREAM_SINK_SUPPORTS_HW_CONNECTION GUID { "9b465cbf-0597-4f9e-9f3c-b97eeef90359" }
#define MF_STREAM_SINK_SUPPORTS_ROTATION GUID { "b3e96280-bd05-41a5-97ad-8a7fee24b912" }
#define MF_SINK_VIDEO_PTS GUID { "2162bde7-421e-4b90-9b33-e58fbf1d58b6" }
#define MF_SINK_VIDEO_NATIVE_WIDTH GUID { "e6d6a707-1505-4747-9b10-72d2d158cb3a" }
#define MF_SINK_VIDEO_NATIVE_HEIGHT GUID { "f0ca6705-490c-43e8-941c-c0b3206b9a65" }
#define MF_SINK_VIDEO_DISPLAY_ASPECT_RATIO_NUMERATOR GUID { "d0f33b22-b78a-4879-b455-f03ef3fa82cd" }
#define MF_SINK_VIDEO_DISPLAY_ASPECT_RATIO_DENOMINATOR GUID { "6ea1eb97-1fe0-4f10-a6e4-1f4f661564e0" }
#define MF_BD_MVC_PLANE_OFFSET_METADATA GUID { "62a654e4-b76c-4901-9823-2cb615d47318" }
#define MF_LUMA_KEY_ENABLE GUID { "7369820f-76de-43ca-9284-47b8f37e0649" }
#define MF_LUMA_KEY_LOWER GUID { "93d7b8d5-0b81-4715-aea0-8725871621e9" }
#define MF_LUMA_KEY_UPPER GUID { "d09f39bb-4602-4c31-a706-a12171a5110a" }
#define MF_USER_EXTENDED_ATTRIBUTES GUID { "c02abac6-feb2-4541-922f-920b43702722" }
#define MF_INDEPENDENT_STILL_IMAGE GUID { "ea12af41-0710-42c9-a127-daa3e78483a5" }
#define MF_XVP_SAMPLE_LOCK_TIMEOUT GUID { "aa4ddb29-5134-4363-ac72-83ec4bc10426" }
#define MF_TOPOLOGY_PROJECTSTART GUID { "7ed3f802-86bb-4b3f-b7e4-7cb43afd4b80" }
#define MF_TOPOLOGY_PROJECTSTOP GUID { "7ed3f803-86bb-4b3f-b7e4-7cb43afd4b80" }
#define MF_TOPOLOGY_NO_MARKIN_MARKOUT GUID { "7ed3f804-86bb-4b3f-b7e4-7cb43afd4b80" }
#define MF_TOPOLOGY_DXVA_MODE GUID { "1e8d34f6-f5ab-4e23-bb88-874aa3a1a74d" }
#define MF_TOPOLOGY_ENABLE_XVP_FOR_PLAYBACK GUID { "1967731f-cd78-42fc-b026-0992a56e5693" }
#define MF_TOPOLOGY_STATIC_PLAYBACK_OPTIMIZATIONS GUID { "b86cac42-41a6-4b79-897a-1ab0e52b4a1b" }
#define MF_TOPOLOGY_PLAYBACK_MAX_DIMS GUID { "5715cf19-5768-44aa-ad6e-8721f1b0f9bb" }
#define MF_TOPOLOGY_HARDWARE_MODE GUID { "d2d362fd-4e4f-4191-a579-c618b66706af" }
#define MF_TOPOLOGY_PLAYBACK_FRAMERATE GUID { "c164737a-c2b1-4553-83bb-5a526072448f" }
#define MF_TOPOLOGY_DYNAMIC_CHANGE_NOT_ALLOWED GUID { "d529950b-d484-4527-a9cd-b1909532b5b0" }
#define MF_TOPOLOGY_ENUMERATE_SOURCE_TYPES GUID { "6248c36d-5d0b-4f40-a0bb-b0b305f77698" }
#define MF_TOPOLOGY_START_TIME_ON_PRESENTATION_SWITCH GUID { "c8cc113f-7951-4548-aad6-9ed6202e62b3" }
#define MF_DISABLE_LOCALLY_REGISTERED_PLUGINS GUID { "66b16da9-add4-47e0-a16b-5af1fb483634" }
#define MF_LOCAL_PLUGIN_CONTROL_POLICY GUID { "d91b0085-c86d-4f81-8822-8c68e1d7fa04" }
#define MF_TOPONODE_FLUSH GUID { "494bbce8-b031-4e38-97c4-d5422dd618dc" }
#define MF_TOPONODE_DRAIN GUID { "494bbce9-b031-4e38-97c4-d5422dd618dc" }
#define MF_TOPONODE_D3DAWARE GUID { "494bbced-b031-4e38-97c4-d5422dd618dc" }
#define MF_TOPOLOGY_RESOLUTION_STATUS GUID { "494bbcde-b031-4e38-97c4-d5422dd618dc" }
#define MF_TOPONODE_ERRORCODE GUID { "494bbcee-b031-4e38-97c4-d5422dd618dc" }
#define MF_TOPONODE_CONNECT_METHOD GUID { "494bbcf1-b031-4e38-97c4-d5422dd618dc" }
#define MF_TOPONODE_LOCKED GUID { "494bbcf7-b031-4e38-97c4-d5422dd618dc" }
#define MF_TOPONODE_WORKQUEUE_ID GUID { "494bbcf8-b031-4e38-97c4-d5422dd618dc" }
#define MF_TOPONODE_WORKQUEUE_MMCSS_CLASS GUID { "494bbcf9-b031-4e38-97c4-d5422dd618dc" }
#define MF_TOPONODE_DECRYPTOR GUID { "494bbcfa-b031-4e38-97c4-d5422dd618dc" }
#define MF_TOPONODE_DISCARDABLE GUID { "494bbcfb-b031-4e38-97c4-d5422dd618dc" }
#define MF_TOPONODE_ERROR_MAJORTYPE GUID { "494bbcfd-b031-4e38-97c4-d5422dd618dc" }
#define MF_TOPONODE_ERROR_SUBTYPE GUID { "494bbcfe-b031-4e38-97c4-d5422dd618dc" }
#define MF_TOPONODE_WORKQUEUE_MMCSS_TASKID GUID { "494bbcff-b031-4e38-97c4-d5422dd618dc" }
#define MF_TOPONODE_WORKQUEUE_MMCSS_PRIORITY GUID { "5001f840-2816-48f4-9364-ad1ef661a123" }
#define MF_TOPONODE_WORKQUEUE_ITEM_PRIORITY GUID { "a1ff99be-5e97-4a53-b494-568c642c0ff3" }
#define MF_TOPONODE_MARKIN_HERE GUID { "494bbd00-b031-4e38-97c4-d5422dd618dc" }
#define MF_TOPONODE_MARKOUT_HERE GUID { "494bbd01-b031-4e38-97c4-d5422dd618dc" }
#define MF_TOPONODE_DECODER GUID { "494bbd02-b031-4e38-97c4-d5422dd618dc" }
#define MF_TOPONODE_MEDIASTART GUID { "835c58ea-e075-4bc7-bcba-4de000df9ae6" }
#define MF_TOPONODE_MEDIASTOP GUID { "835c58eb-e075-4bc7-bcba-4de000df9ae6" }
#define MF_TOPONODE_SOURCE GUID { "835c58ec-e075-4bc7-bcba-4de000df9ae6" }
#define MF_TOPONODE_PRESENTATION_DESCRIPTOR GUID { "835c58ed-e075-4bc7-bcba-4de000df9ae6" }
#define MF_TOPONODE_STREAM_DESCRIPTOR GUID { "835c58ee-e075-4bc7-bcba-4de000df9ae6" }
#define MF_TOPONODE_SEQUENCE_ELEMENTID GUID { "835c58ef-e075-4bc7-bcba-4de000df9ae6" }
#define MF_TOPONODE_TRANSFORM_OBJECTID GUID { "88dcc0c9-293e-4e8b-9aeb-0ad64cc016b0" }
#define MF_TOPONODE_STREAMID GUID { "14932f9b-9087-4bb4-8412-5167145cbe04" }
#define MF_TOPONODE_NOSHUTDOWN_ON_REMOVE GUID { "14932f9c-9087-4bb4-8412-5167145cbe04" }
#define MF_TOPONODE_RATELESS GUID { "14932f9d-9087-4bb4-8412-5167145cbe04" }
#define MF_TOPONODE_DISABLE_PREROLL GUID { "14932f9e-9087-4bb4-8412-5167145cbe04" }
#define MF_TOPONODE_PRIMARYOUTPUT GUID { "6304ef99-16b2-4ebe-9d67-e4c539b3a259" }
#define MF_PD_PMPHOST_CONTEXT GUID { "6c990d31-bb8e-477a-8598-0d5d96fcd88a" }
#define MF_PD_APP_CONTEXT GUID { "6c990d32-bb8e-477a-8598-0d5d96fcd88a" }
#define MF_PD_DURATION GUID { "6c990d33-bb8e-477a-8598-0d5d96fcd88a" }
#define MF_PD_TOTAL_FILE_SIZE GUID { "6c990d34-bb8e-477a-8598-0d5d96fcd88a" }
#define MF_PD_AUDIO_ENCODING_BITRATE GUID { "6c990d35-bb8e-477a-8598-0d5d96fcd88a" }
#define MF_PD_VIDEO_ENCODING_BITRATE GUID { "6c990d36-bb8e-477a-8598-0d5d96fcd88a" }
#define MF_PD_MIME_TYPE GUID { "6c990d37-bb8e-477a-8598-0d5d96fcd88a" }
#define MF_PD_LAST_MODIFIED_TIME GUID { "6c990d38-bb8e-477a-8598-0d5d96fcd88a" }
#define MF_PD_PLAYBACK_ELEMENT_ID GUID { "6c990d39-bb8e-477a-8598-0d5d96fcd88a" }
#define MF_PD_PREFERRED_LANGUAGE GUID { "6c990d3a-bb8e-477a-8598-0d5d96fcd88a" }
#define MF_PD_PLAYBACK_BOUNDARY_TIME GUID { "6c990d3b-bb8e-477a-8598-0d5d96fcd88a" }
#define MF_PD_AUDIO_ISVARIABLEBITRATE GUID { "33026ee0-e387-4582-ae0a-34a2ad3baa18" }
#define MF_SD_LANGUAGE GUID { "00af2180-bdc2-423c-abca-f503593bc121" }
#define MF_SD_PROTECTED GUID { "00af2181-bdc2-423c-abca-f503593bc121" }
#define MF_SD_STREAM_NAME GUID { "4f1b099d-d314-41e5-a781-7fefaa4c501f" }
#define MF_SD_MUTUALLY_EXCLUSIVE GUID { "023ef79c-388d-487f-ac17-696cd6e3c6f5" }
#define MF_ACTIVATE_CUSTOM_VIDEO_MIXER_CLSID GUID { "ba491360-be50-451e-95ab-6d4accc7dad8" }
#define MF_ACTIVATE_CUSTOM_VIDEO_MIXER_ACTIVATE GUID { "ba491361-be50-451e-95ab-6d4accc7dad8" }
#define MF_ACTIVATE_CUSTOM_VIDEO_MIXER_FLAGS GUID { "ba491362-be50-451e-95ab-6d4accc7dad8" }
#define MF_ACTIVATE_CUSTOM_VIDEO_PRESENTER_CLSID GUID { "ba491364-be50-451e-95ab-6d4accc7dad8" }
#define MF_ACTIVATE_CUSTOM_VIDEO_PRESENTER_ACTIVATE GUID { "ba491365-be50-451e-95ab-6d4accc7dad8" }
#define MF_ACTIVATE_CUSTOM_VIDEO_PRESENTER_FLAGS GUID { "ba491366-be50-451e-95ab-6d4accc7dad8" }
#define MF_ACTIVATE_MFT_LOCKED GUID { "c1f6093c-7f65-4fbd-9e39-5faec3c4fbd7" }
#define MF_ACTIVATE_VIDEO_WINDOW GUID { "9a2dbbdd-f57e-4162-82b9-6831377682d3" }
#define MF_AUDIO_RENDERER_ATTRIBUTE_FLAGS GUID { "ede4b5e0-f805-4d6c-99b3-db01bf95dfab" }
#define MF_AUDIO_RENDERER_ATTRIBUTE_SESSION_ID GUID { "ede4b5e3-f805-4d6c-99b3-db01bf95dfab" }
#define MF_AUDIO_RENDERER_ATTRIBUTE_ENDPOINT_ID GUID { "b10aaec3-ef71-4cc3-b873-05a9a08b9f8e" }
#define MF_AUDIO_RENDERER_ATTRIBUTE_ENDPOINT_ROLE GUID { "6ba644ff-27c5-4d02-9887-c28619fdb91b" }
#define MF_AUDIO_RENDERER_ATTRIBUTE_STREAM_CATEGORY GUID { "a9770471-92ec-4df4-94fe-81c36f0c3a7a" }
#define MFENABLETYPE_WMDRMV1_LicenseAcquisition GUID { "4ff6eeaf-0b43-4797-9b85-abf31815e7b0" }
#define MFENABLETYPE_WMDRMV7_LicenseAcquisition GUID { "003306df-4a06-4884-a097-ef6d22ec84a3" }
#define MFENABLETYPE_WMDRMV7_Individualization GUID { "acd2c84a-b303-4f65-bc2c-2c848d01a989" }
#define MFENABLETYPE_MF_UpdateRevocationInformation GUID { "e558b0b5-b3c4-44a0-924c-50d178932385" }
#define MFENABLETYPE_MF_UpdateUntrustedComponent GUID { "9879f3d6-cee2-48e6-b573-9767ab172f16" }
#define MFENABLETYPE_MF_RebootRequired GUID { "6d4d3d4b-0ece-4652-8b3a-f2d24260d887" }
#define MF_METADATA_PROVIDER_SERVICE GUID { "db214084-58a4-4d2e-b84f-6f755b2f7a0d" }
#define MF_PROPERTY_HANDLER_SERVICE GUID { "a3face02-32b8-41dd-90e7-5fef7c8991b5" }
#define MF_RATE_CONTROL_SERVICE GUID { "866fa297-b802-4bf8-9dc9-5e3b6a9f53c9" }
#define MF_TIMECODE_SERVICE GUID { "a0d502a7-0eb3-4885-b1b9-9feb0d083454" }
#define MR_POLICY_VOLUME_SERVICE GUID { "1abaa2ac-9d3b-47c6-ab48-c59506de784d" }
#define MR_CAPTURE_POLICY_VOLUME_SERVICE GUID { "24030acd-107a-4265-975c-414e33e65f2a" }
#define MR_STREAM_VOLUME_SERVICE GUID { "f8b5fa2f-32ef-46f5-b172-1321212fb2c4" }
#define MR_AUDIO_POLICY_SERVICE GUID { "911fd737-6775-4ab0-a614-297862fdac88" }
#define MF_SAMPLEGRABBERSINK_SAMPLE_TIME_OFFSET GUID { "62e3d776-8100-4e03-a6e8-bd3857ac9c47" }
#define MF_SAMPLEGRABBERSINK_IGNORE_CLOCK GUID { "0efda2c0-2b69-4e2e-ab8d-46dcbff7d25d" }
#define MF_QUALITY_SERVICES GUID { "b7e2be11-2f96-4640-b52c-282365bdf16c" }
#define MF_WORKQUEUE_SERVICES GUID { "8e37d489-41e0-413a-9068-287c886d8dda" }
#define MF_QUALITY_NOTIFY_PROCESSING_LATENCY GUID { "f6b44af8-604d-46fe-a95d-45479b10c9bc" }
#define MF_QUALITY_NOTIFY_SAMPLE_LAG GUID { "30d15206-ed2a-4760-be17-eb4a9f12295c" }
#define MF_TIME_FORMAT_SEGMENT_OFFSET GUID { "c8b8be77-869c-431d-812e-169693f65a39" }
#define MF_SOURCE_PRESENTATION_PROVIDER_SERVICE GUID { "e002aadc-f4af-4ee5-9847-053edf840426" }
#define MF_TOPONODE_ATTRIBUTE_EDITOR_SERVICE GUID { "65656e1a-077f-4472-83ef-316f11d5087a" }
#define MFNETSOURCE_SSLCERTIFICATE_MANAGER GUID { "55e6cb27-e69b-4267-940c-2d7ec5bb8a0f" }
#define MFNETSOURCE_RESOURCE_FILTER GUID { "815d0ff6-265a-4477-9e46-7b80ad80b5fb" }
#define MFNET_SAVEJOB_SERVICE GUID { "b85a587f-3d02-4e52-9565-55d3ec1e7ff7" }
#define MFNETSOURCE_STATISTICS_SERVICE GUID { "3cb1f275-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_STATISTICS GUID { "3cb1f274-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_BUFFERINGTIME GUID { "3cb1f276-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_ACCELERATEDSTREAMINGDURATION GUID { "3cb1f277-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_MAXUDPACCELERATEDSTREAMINGDURATION GUID { "4aab2879-bbe1-4994-9ff0-5495bd250129" }
#define MFNETSOURCE_MAXBUFFERTIMEMS GUID { "408b24e6-4038-4401-b5b2-fe701a9ebf10" }
#define MFNETSOURCE_CONNECTIONBANDWIDTH GUID { "3cb1f278-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_CACHEENABLED GUID { "3cb1f279-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_AUTORECONNECTLIMIT GUID { "3cb1f27a-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_RESENDSENABLED GUID { "3cb1f27b-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_THINNINGENABLED GUID { "3cb1f27c-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_PROTOCOL GUID { "3cb1f27d-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_TRANSPORT GUID { "3cb1f27e-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_PREVIEWMODEENABLED GUID { "3cb1f27f-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_CREDENTIAL_MANAGER GUID { "3cb1f280-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_PPBANDWIDTH GUID { "3cb1f281-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_AUTORECONNECTPROGRESS GUID { "3cb1f282-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_PROXYLOCATORFACTORY GUID { "3cb1f283-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_BROWSERUSERAGENT GUID { "3cb1f28b-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_BROWSERWEBPAGE GUID { "3cb1f28c-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_PLAYERVERSION GUID { "3cb1f28d-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_PLAYERID GUID { "3cb1f28e-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_HOSTEXE GUID { "3cb1f28f-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_HOSTVERSION GUID { "3cb1f291-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_PLAYERUSERAGENT GUID { "3cb1f292-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_CLIENTGUID GUID { "60a2c4a6-f197-4c14-a5bf-88830d2458af" }
#define MFNETSOURCE_LOGURL GUID { "3cb1f293-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_ENABLE_UDP GUID { "3cb1f294-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_ENABLE_TCP GUID { "3cb1f295-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_ENABLE_MSB GUID { "3cb1f296-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_ENABLE_RTSP GUID { "3cb1f298-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_ENABLE_HTTP GUID { "3cb1f299-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_ENABLE_STREAMING GUID { "3cb1f29c-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_ENABLE_DOWNLOAD GUID { "3cb1f29d-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_ENABLE_PRIVATEMODE GUID { "824779d8-f18b-4405-8cf1-464fb5aa8f71" }
#define MFNETSOURCE_UDP_PORT_RANGE GUID { "3cb1f29a-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_PROXYINFO GUID { "3cb1f29b-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_DRMNET_LICENSE_REPRESENTATION GUID { "47eae1bd-bdfe-42e2-82f3-54a48c17962d" }
#define MFNETSOURCE_PROXYSETTINGS GUID { "3cb1f287-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_PROXYHOSTNAME GUID { "3cb1f284-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_PROXYPORT GUID { "3cb1f288-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_PROXYEXCEPTIONLIST GUID { "3cb1f285-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_PROXYBYPASSFORLOCAL GUID { "3cb1f286-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_PROXYRERUNAUTODETECTION GUID { "3cb1f289-0505-4c5d-ae71-0a556344efa1" }
#define MFNETSOURCE_STREAM_LANGUAGE GUID { "9ab44318-f7cd-4f2d-8d6d-fa35b492cecb" }
#define MFNETSOURCE_LOGPARAMS GUID { "64936ae8-9418-453a-8cda-3e0a668b353b" }
#define MFNETSOURCE_PEERMANAGER GUID { "48b29adb-febf-45ee-a9bf-efb81c492efc" }
#define MFNETSOURCE_FRIENDLYNAME GUID { "5b2a7757-bc6b-447e-aa06-0dda1c646e2f" }
#define MF_BYTESTREAMHANDLER_ACCEPTS_SHARE_WRITE GUID { "a6e1f733-3001-4915-8150-1558a2180ec8" }
#define MF_BYTESTREAM_SERVICE GUID { "ab025e2b-16d9-4180-a127-ba6c70156161" }
#define MF_MEDIA_PROTECTION_MANAGER_PROPERTIES GUID { "38bd81a9-acea-4c73-89b2-5532c0aeca79" }
#define MFCONNECTOR_SPDIF GUID { "0b94a712-ad3e-4cee-83ce-ce32e3db6522" }
#define MFCONNECTOR_UNKNOWN GUID { "ac3aef5c-ce43-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_PCI GUID { "ac3aef5d-ce43-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_PCIX GUID { "ac3aef5e-ce43-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_PCI_Express GUID { "ac3aef5f-ce43-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_AGP GUID { "ac3aef60-ce43-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_VGA GUID { "57cd5968-ce47-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_SVIDEO GUID { "57cd5969-ce47-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_COMPOSITE GUID { "57cd596a-ce47-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_COMPONENT GUID { "57cd596b-ce47-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_DVI GUID { "57cd596c-ce47-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_HDMI GUID { "57cd596d-ce47-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_LVDS GUID { "57cd596e-ce47-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_D_JPN GUID { "57cd5970-ce47-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_SDI GUID { "57cd5971-ce47-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_DISPLAYPORT_EXTERNAL GUID { "57cd5972-ce47-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_DISPLAYPORT_EMBEDDED GUID { "57cd5973-ce47-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_UDI_EXTERNAL GUID { "57cd5974-ce47-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_UDI_EMBEDDED GUID { "57cd5975-ce47-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_MIRACAST GUID { "57cd5977-ce47-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_TRANSPORT_AGNOSTIC_DIGITAL_MODE_A GUID { "57cd5978-ce47-11d9-92db-000bdb28ff98" }
#define MFCONNECTOR_TRANSPORT_AGNOSTIC_DIGITAL_MODE_B GUID { "57cd5979-ce47-11d9-92db-000bdb28ff98" }
#define MF_POLICY_ID GUID { "b160c24d-c059-48f1-a901-9ee298a9a8c3" }
#define MFPROTECTION_DISABLE GUID { "8cc6d81b-fec6-4d8f-964b-cfba0b0dad0d" }
#define MFPROTECTION_CONSTRICTVIDEO GUID { "193370ce-c5e4-4c3a-8a66-6959b4da4442" }
#define MFPROTECTION_CONSTRICTVIDEO_NOOPM GUID { "a580e8cd-c247-4957-b983-3c2eebd1ff59" }
#define MFPROTECTION_CONSTRICTAUDIO GUID { "ffc99b44-df48-4e16-8e66-096892c1578a" }
#define MFPROTECTION_TRUSTEDAUDIODRIVERS GUID { "65bdf3d2-0168-4816-a533-55d47b027101" }
#define MFPROTECTION_HDCP GUID { "ae7cc03d-c828-4021-acb7-d578d27aaf13" }
#define MFPROTECTION_CGMSA GUID { "e57e69e9-226b-4d31-b4e3-d3db008736dd" }
#define MFPROTECTION_ACP GUID { "c3fd11c6-f8b7-4d20-b008-1db17d61f2da" }
#define MFPROTECTION_WMDRMOTA GUID { "a267a6a1-362e-47d0-8805-4628598a23e4" }
#define MFPROTECTION_FFT GUID { "462a56b2-2866-4bb6-980d-6d8d9edb1a8c" }
#define MFPROTECTION_PROTECTED_SURFACE GUID { "4f5d9566-e742-4a25-8d1f-d287b5fa0ade" }
#define MFPROTECTION_DISABLE_SCREEN_SCRAPE GUID { "a21179a4-b7cd-40d8-9614-8ef2371ba78d" }
#define MFPROTECTION_VIDEO_FRAMES GUID { "36a59cbc-7401-4a8c-bc20-46a7c9e597f0" }
#define MFPROTECTION_HARDWARE GUID { "4ee7f0c1-9ed7-424f-b6be-996b33528856" }
#define MFPROTECTION_HDCP_WITH_TYPE_ENFORCEMENT GUID { "a4a585e8-ed60-442d-814d-db4d4220a06d" }
#define MFPROTECTIONATTRIBUTE_BEST_EFFORT GUID { "c8e06331-75f0-4ec1-8e77-17578f773b46" }
#define MFPROTECTIONATTRIBUTE_FAIL_OVER GUID { "8536abc5-38f1-4151-9cce-f55d941229ac" }
#define MFPROTECTION_GRAPHICS_TRANSFER_AES_ENCRYPTION GUID { "c873de64-d8a5-49e6-88bb-fb963fd3d4ce" }
#define MFPROTECTIONATTRIBUTE_CONSTRICTVIDEO_IMAGESIZE GUID { "008476fc-4b58-4d80-a790-e7297673161d" }
#define MFPROTECTIONATTRIBUTE_HDCP_SRM GUID { "6f302107-3477-4468-8a08-eef9db10e20f" }
#define MF_SampleProtectionSalt GUID { "5403deee-b9ee-438f-aa83-3804997e569d" }
#define MF_REMOTE_PROXY GUID { "2f00c90e-d2cf-4278-8b6a-d077fac3a25f" }
#define CLSID_CreateMediaExtensionObject GUID { "ef65a54d-0788-45b8-8b14-bc0f6a6b5137" }
#define MF_SAMI_SERVICE GUID { "49a89ae7-b4d9-4ef2-aa5c-f65a3e05ae4e" }
#define MF_PD_SAMI_STYLELIST GUID { "e0b73c7f-486d-484e-9872-4de5192a7bf8" }
#define MF_SD_SAMI_LANGUAGE GUID { "36fcb98a-6cd0-44cb-acb9-a8f5600dd0bb" }
#define MF_TRANSCODE_CONTAINERTYPE GUID { "150ff23f-4abc-478b-ac4f-e1916fba1cca" }
#define MFTranscodeContainerType_ASF GUID { "430f6f6e-b6bf-4fc1-a0bd-9ee46eee2afb" }
#define MFTranscodeContainerType_MPEG4 GUID { "dc6cd05d-b9d0-40ef-bd35-fa622c1ab28a" }
#define MFTranscodeContainerType_MP3 GUID { "e438b912-83f1-4de6-9e3a-9ffbc6dd24d1" }
#define MFTranscodeContainerType_FLAC GUID { "31344aa3-05a9-42b5-901b-8e9d4257f75e" }
#define MFTranscodeContainerType_3GP GUID { "34c50167-4472-4f34-9ea0-c49fbacf037d" }
#define MFTranscodeContainerType_AC3 GUID { "6d8d91c3-8c91-4ed1-8742-8c347d5b44d0" }
#define MFTranscodeContainerType_ADTS GUID { "132fd27d-0f02-43de-a301-38fbbbb3834e" }
#define MFTranscodeContainerType_MPEG2 GUID { "bfc2dbf9-7bb4-4f8f-afde-e112c44ba882" }
#define MFTranscodeContainerType_WAVE GUID { "64c3453c-0f26-4741-be63-87bdf8bb935b" }
#define MFTranscodeContainerType_AVI GUID { "7edfe8af-402f-4d76-a33c-619fd157d0f1" }
#define MFTranscodeContainerType_FMPEG4 GUID { "9ba876f1-419f-4b77-a1e0-35959d9d4004" }
#define MFTranscodeContainerType_AMR GUID { "025d5ad3-621a-475b-964d-66b1c824f079" }
#define MF_TRANSCODE_SKIP_METADATA_TRANSFER GUID { "4e4469ef-b571-4959-8f83-3dcfba33a393" }
#define MF_TRANSCODE_TOPOLOGYMODE GUID { "3e3df610-394a-40b2-9dea-3bab650bebf2" }
#define MF_TRANSCODE_ADJUST_PROFILE GUID { "9c37c21b-060f-487c-a690-80d7f50d1c72" }
#define MF_TRANSCODE_ENCODINGPROFILE GUID { "6947787c-f508-4ea9-b1e9-a1fe3a49fbc9" }
#define MF_TRANSCODE_QUALITYVSSPEED GUID { "98332df8-03cd-476b-89fa-3f9e442dec9f" }
#define MF_TRANSCODE_DONOT_INSERT_ENCODER GUID { "f45aa7ce-ab24-4012-a11b-dc8220201410" }
#define MF_VIDEO_PROCESSOR_ALGORITHM GUID { "4a0a1e1f-272c-4fb6-9eb1-db330cbc97ca" }
#define MF_XVP_DISABLE_FRC GUID { "2c0afa19-7a97-4d5a-9ee8-16d4fc518d8c" }
#define MF_XVP_CALLER_ALLOCATES_OUTPUT GUID { "04a2cabc-0cab-40b1-a1b9-75bc3658f000" }
#define MF_LOCAL_MFT_REGISTRATION_SERVICE GUID { "ddf5cf9c-4506-45aa-abf0-6d5d94dd1b4a" }
#define MF_WRAPPED_SAMPLE_SERVICE GUID { "31f52bf2-d03e-4048-80d0-9c1046d87c61" }
#define MF_WRAPPED_OBJECT GUID { "2b182c4c-d6ac-49f4-8915-f71887db70cd" }
#define CLSID_HttpSchemePlugin GUID { "44cb442b-9da9-49df-b3fd-023777b16e50" }
#define CLSID_UrlmonSchemePlugin GUID { "9ec4b4f9-3029-45ad-947b-344de2a249e2" }
#define CLSID_NetSchemePlugin GUID { "e9f4ebab-d97b-463e-a2b1-c54ee3f9414d" }
#define MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE GUID { "c60ac5fe-252a-478f-a0ef-bc8fa5f7cad3" }
#define MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_HW_SOURCE GUID { "de7046ba-54d6-4487-a2a4-ec7c0d1bd163" }
#define MF_DEVSOURCE_ATTRIBUTE_FRIENDLY_NAME GUID { "60d0e559-52f8-4fa2-bbce-acdb34a8ec01" }
#define MF_DEVSOURCE_ATTRIBUTE_MEDIA_TYPE GUID { "56a819ca-0c78-4de4-a0a7-3ddaba0f24d4" }
#define MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_CATEGORY GUID { "77f0ae69-c3bd-4509-941d-467e4d24899e" }
#define MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_SYMBOLIC_LINK GUID { "58f0aad8-22bf-4f8a-bb3d-d2c4978c6e2f" }
#define MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_SYMBOLIC_LINK GUID { "98d24b5e-5930-4614-b5a1-f600f9355a78" }
#define MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_MAX_BUFFERS GUID { "7dd9b730-4f2d-41d5-8f95-0cc9a912ba26" }
#define MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_ENDPOINT_ID GUID { "30da9258-feb9-47a7-a453-763a7a8e1c5f" }
#define MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_ROLE GUID { "bc9d118e-8c67-4a18-85d4-12d300400552" }
#define MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_PROVIDER_DEVICE_ID GUID { "36689d42-a06c-40ae-84cf-f5a034067cc4" }
#define MF_DEVSOURCE_ATTRIBUTE_SOURCE_XADDRESS GUID { "bca0be52-c327-44c7-9b7d-7fa8d9b5bcda" }
#define MF_DEVSOURCE_ATTRIBUTE_SOURCE_STREAM_URL GUID { "9d7b40d2-3617-4043-93e3-8d6da9bb3492" }
#define MF_DEVSOURCE_ATTRIBUTE_SOURCE_USERNAME GUID { "05d01add-949f-46eb-bc8e-8b0d2b32d79d" }
#define MF_DEVSOURCE_ATTRIBUTE_SOURCE_PASSWORD GUID { "a0fd7e16-42d9-49df-84c0-e82c5eab8874" }
#define CLSID_FrameServerNetworkCameraSource GUID { "7a213aa7-866f-414a-8c1a-275c7283a395" }
#define MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_GUID GUID { "14dd9a1c-7cff-41be-b1b9-ba1ac6ecb571" }
#define MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_GUID GUID { "8ac3587a-4ae7-42d8-99e0-0a6013eef90f" }
#define MF_DEVICESTREAM_IMAGE_STREAM GUID { "a7ffb865-e7b2-43b0-9f6f-9af2a0e50fc0" }
#define MF_DEVICESTREAM_INDEPENDENT_IMAGE_STREAM GUID { "03eeec7e-d605-4576-8b29-6580b490d7d3" }
#define MF_DEVICESTREAM_STREAM_ID GUID { "11bd5120-d124-446b-88e6-17060257fff9" }
#define MF_DEVICESTREAM_STREAM_CATEGORY GUID { "2939e7b8-a62e-4579-b674-d4073dfabbba" }
#define MF_DEVICESTREAM_FRAMESERVER_SHARED GUID { "1cb378e9-b279-41d4-af97-34a243e68320" }
#define MF_DEVICESTREAM_TRANSFORM_STREAM_ID GUID { "e63937b7-daaf-4d49-815f-d826f8ad31e7" }
#define MF_DEVICESTREAM_EXTENSION_PLUGIN_CLSID GUID { "048e6558-60c4-4173-bd5b-6a3ca2896aee" }
#define MF_DEVICEMFT_EXTENSION_PLUGIN_CLSID GUID { "0844dbae-34fa-48a0-a783-8e696fb1c9a8" }
#define MF_DEVICESTREAM_EXTENSION_PLUGIN_CONNECTION_POINT GUID { "37f9375c-e664-4ea4-aae4-cb6d1daca1f4" }
#define MF_DEVICESTREAM_TAKEPHOTO_TRIGGER GUID { "1d180e34-538c-4fbb-a75a-859af7d261a6" }
#define MF_DEVICESTREAM_MAX_FRAME_BUFFERS GUID { "1684cebe-3175-4985-882c-0efd3e8ac11e" }
#define MF_DEVICEMFT_CONNECTED_FILTER_KSCONTROL GUID { "6a2c4fa6-d179-41cd-9523-822371ea40e5" }
#define MF_DEVICEMFT_CONNECTED_PIN_KSCONTROL GUID { "e63310f7-b244-4ef8-9a7d-24c74e32ebd0" }
#define MF_DEVICE_THERMAL_STATE_CHANGED GUID { "70ccd0af-fc9f-4deb-a875-9fecd16c5bd4" }
#define MFSampleExtension_DeviceTimestamp GUID { "8f3e35e7-2dcd-4887-8622-2a58baa652b0" }
#define MFSampleExtension_Spatial_CameraViewTransform GUID { "4e251fa4-830f-4770-859a-4b8d99aa809b" }
#define MFSampleExtension_Spatial_CameraCoordinateSystem GUID { "9d13c82f-2199-4e67-91cd-d1a4181f2534" }
#define MFSampleExtension_Spatial_CameraProjectionTransform GUID { "47f9fcb5-2a02-4f26-a477-792fdf95886a" }
#define MF_MEDIASOURCE_SERVICE GUID { "f09992f7-9fba-4c4a-a37f-8c47b4e1dfe7" }
#define MF_ACCESS_CONTROLLED_MEDIASOURCE_SERVICE GUID { "014a5031-2f05-4c6a-9f9c-7d0dc4eda5f4" }
#define MF_CONTENT_DECRYPTOR_SERVICE GUID { "68a72927-fc7b-44ee-85f4-7c51bd55a659" }
#define MF_CONTENT_PROTECTION_DEVICE_SERVICE GUID { "ff58436f-76a0-41fe-b566-10cc53962edd" }
#define MF_SD_AUDIO_ENCODER_DELAY GUID { "8e85422c-73de-403f-9a35-550ad6e8b951" }
#define MF_SD_AUDIO_ENCODER_PADDING GUID { "529c7f2c-ac4b-4e3f-bfc3-0902194982cb" }
#define CLSID_MSH264DecoderMFT GUID { "62ce7e72-4c71-4d20-b15d-452831a87d9d" }
#define CLSID_MSH264EncoderMFT GUID { "6ca50344-051a-4ded-9779-a43305165e35" }
#define CLSID_MSDDPlusDecMFT GUID { "177c0afe-900b-48d4-9e4c-57add250b3d4" }
#define CLSID_MP3DecMediaObject GUID { "bbeea841-0a63-4f52-a7ab-a9b3a84ed38a" }
#define CLSID_MSAACDecMFT GUID { "32d186a7-218f-4c75-8876-dd77273a8999" }
#define CLSID_MSH265DecoderMFT GUID { "420a51a3-d605-430c-b4fc-45274fa6c562" }
#define CLSID_WMVDecoderMFT GUID { "82d353df-90bd-4382-8bc2-3f6192b76e34" }
#define CLSID_WMADecMediaObject GUID { "2eeb4adf-4578-4d10-bca7-bb955f56320a" }
#define CLSID_MSMPEGAudDecMFT GUID { "70707b39-b2ca-4015-abea-f8447d22d88b" }
#define CLSID_MSMPEGDecoderMFT GUID { "2d709e52-123f-49b5-9cbc-9af5cde28fb9" }
#define CLSID_AudioResamplerMediaObject GUID { "f447b69e-1884-4a7e-8055-346f74d6edb3" }
#define CLSID_MSVPxDecoder GUID { "e3aaf548-c9a4-4c6e-234d-5ada374b0000" }
#define CLSID_MSOpusDecoder GUID { "63e17c10-2d43-4c42-8fe3-8d8b63e46a6a" }
#define CLSID_VideoProcessorMFT GUID { "88753b26-5b24-49bd-b2e7-0c445c78c982" }
#define MFNETSOURCE_CROSS_ORIGIN_SUPPORT GUID { "9842207c-b02c-4271-a2fc-72e49308e5c2" }
#define MFNETSOURCE_HTTP_DOWNLOAD_SESSION_PROVIDER GUID { "7d55081e-307d-4d6d-a663-a93be97c4b5c" }
#define MF_SD_MEDIASOURCE_STATUS GUID { "1913678b-fc0f-44da-8f43-1ba3b526f4ae" }
#define MF_SD_VIDEO_SPHERICAL GUID { "a51da449-3fdc-478c-bcb5-30be76595f55" }
#define MF_SD_VIDEO_SPHERICAL_FORMAT GUID { "4a8fc407-6ea1-46c8-b567-6971d4a139c3" }
#define MF_SD_VIDEO_SPHERICAL_INITIAL_VIEWDIRECTION GUID { "11d25a49-bb62-467f-9db1-c17165716c49" }
#define MF_MEDIASOURCE_EXPOSE_ALL_STREAMS GUID { "e7f250b8-8fd9-4a09-b6c1-6a315c7c720e" }
#define MF_ST_MEDIASOURCE_COLLECTION GUID { "616de972-83ad-4950-8170-630d19cbe307" }
#define MF_DEVICESTREAM_FILTER_KSCONTROL GUID { "46783cca-3df5-4923-a9ef-36b7223edde0" }
#define MF_DEVICESTREAM_PIN_KSCONTROL GUID { "ef3ef9a7-87f2-48ca-be02-674878918e98" }
#define MF_DEVICESTREAM_SOURCE_ATTRIBUTES GUID { "2f8cb617-361b-434f-85ea-99a03e1ce4e0" }
#define MF_DEVICESTREAM_FRAMESERVER_HIDDEN GUID { "f402567b-4d91-4179-96d1-74c8480c2034" }
#define MF_STF_VERSION_INFO GUID { "6770bd39-ef82-44ee-a49b-934beb24aef7" }
#define MF_STF_VERSION_DATE GUID { "31a165d5-df67-4095-8e44-8868fc20dbfd" }
#define MF_DEVICESTREAM_REQUIRED_CAPABILITIES GUID { "6d8b957e-7cf6-43f4-af56-9c0e1e4fcbe1" }
#define MF_DEVICESTREAM_REQUIRED_SDDL GUID { "331ae85d-c0d3-49ba-83ba-82a12d63cdd6" }
#define MF_DEVICEMFT_SENSORPROFILE_COLLECTION GUID { "36ebdc44-b12c-441b-89f4-08b2f41a9cfc" }
#define MF_DEVICESTREAM_SENSORSTREAM_ID GUID { "e35b9fe4-0659-4cad-bb51-33160be7e413" }
#define MF_PD_ASF_FILEPROPERTIES_FILE_ID GUID { "3de649b4-d76d-4e66-9ec9-78120fb4c7e3" }
#define MF_PD_ASF_FILEPROPERTIES_CREATION_TIME GUID { "3de649b6-d76d-4e66-9ec9-78120fb4c7e3" }
#define MF_PD_ASF_FILEPROPERTIES_PACKETS GUID { "3de649b7-d76d-4e66-9ec9-78120fb4c7e3" }
#define MF_PD_ASF_FILEPROPERTIES_PLAY_DURATION GUID { "3de649b8-d76d-4e66-9ec9-78120fb4c7e3" }
#define MF_PD_ASF_FILEPROPERTIES_SEND_DURATION GUID { "3de649b9-d76d-4e66-9ec9-78120fb4c7e3" }
#define MF_PD_ASF_FILEPROPERTIES_PREROLL GUID { "3de649ba-d76d-4e66-9ec9-78120fb4c7e3" }
#define MF_PD_ASF_FILEPROPERTIES_FLAGS GUID { "3de649bb-d76d-4e66-9ec9-78120fb4c7e3" }
#define MF_PD_ASF_FILEPROPERTIES_MIN_PACKET_SIZE GUID { "3de649bc-d76d-4e66-9ec9-78120fb4c7e3" }
#define MF_PD_ASF_FILEPROPERTIES_MAX_PACKET_SIZE GUID { "3de649bd-d76d-4e66-9ec9-78120fb4c7e3" }
#define MF_PD_ASF_FILEPROPERTIES_MAX_BITRATE GUID { "3de649be-d76d-4e66-9ec9-78120fb4c7e3" }
#define CLSID_WMDRMSystemID GUID { "8948bb22-11bd-4796-93e3-974d1b575678" }
#define MF_PD_ASF_CONTENTENCRYPTION_TYPE GUID { "8520fe3d-277e-46ea-99e4-e30a86db12be" }
#define MF_PD_ASF_CONTENTENCRYPTION_KEYID GUID { "8520fe3e-277e-46ea-99e4-e30a86db12be" }
#define MF_PD_ASF_CONTENTENCRYPTION_SECRET_DATA GUID { "8520fe3f-277e-46ea-99e4-e30a86db12be" }
#define MF_PD_ASF_CONTENTENCRYPTION_LICENSE_URL GUID { "8520fe40-277e-46ea-99e4-e30a86db12be" }
#define MF_PD_ASF_CONTENTENCRYPTIONEX_ENCRYPTION_DATA GUID { "62508be5-ecdf-4924-a359-72bab3397b9d" }
#define MF_PD_ASF_LANGLIST GUID { "f23de43c-9977-460d-a6ec-32937f160f7d" }
#define MF_PD_ASF_LANGLIST_LEGACYORDER GUID { "f23de43d-9977-460d-a6ec-32937f160f7d" }
#define MF_PD_ASF_MARKER GUID { "5134330e-83a6-475e-a9d5-4fb875fb2e31" }
#define MF_PD_ASF_SCRIPT GUID { "e29cd0d7-d602-4923-a7fe-73fd97ecc650" }
#define MF_PD_ASF_CODECLIST GUID { "e4bb3509-c18d-4df1-bb99-7a36b3cc4119" }
#define MF_PD_ASF_METADATA_IS_VBR GUID { "5fc6947a-ef60-445d-b449-442ecc78b4c1" }
#define MF_PD_ASF_METADATA_V8_VBRPEAK GUID { "5fc6947b-ef60-445d-b449-442ecc78b4c1" }
#define MF_PD_ASF_METADATA_V8_BUFFERAVERAGE GUID { "5fc6947c-ef60-445d-b449-442ecc78b4c1" }
#define MF_PD_ASF_METADATA_LEAKY_BUCKET_PAIRS GUID { "5fc6947d-ef60-445d-b449-442ecc78b4c1" }
#define MF_PD_ASF_DATA_START_OFFSET GUID { "e7d5b3e7-1f29-45d3-8822-3e78fae272ed" }
#define MF_PD_ASF_DATA_LENGTH GUID { "e7d5b3e8-1f29-45d3-8822-3e78fae272ed" }
#define MF_SD_ASF_EXTSTRMPROP_LANGUAGE_ID_INDEX GUID { "48f8a522-305d-422d-8524-2502dda33680" }
#define MF_SD_ASF_EXTSTRMPROP_AVG_DATA_BITRATE GUID { "48f8a523-305d-422d-8524-2502dda33680" }
#define MF_SD_ASF_EXTSTRMPROP_AVG_BUFFERSIZE GUID { "48f8a524-305d-422d-8524-2502dda33680" }
#define MF_SD_ASF_EXTSTRMPROP_MAX_DATA_BITRATE GUID { "48f8a525-305d-422d-8524-2502dda33680" }
#define MF_SD_ASF_EXTSTRMPROP_MAX_BUFFERSIZE GUID { "48f8a526-305d-422d-8524-2502dda33680" }
#define MF_SD_ASF_STREAMBITRATES_BITRATE GUID { "a8e182ed-afc8-43d0-b0d1-f65bad9da558" }
#define MF_SD_ASF_METADATA_DEVICE_CONFORMANCE_TEMPLATE GUID { "245e929d-c44e-4f7e-bb3c-77d4dfd27f8a" }
#define MF_PD_ASF_INFO_HAS_AUDIO GUID { "80e62295-2296-4a44-b31c-d103c6fed23c" }
#define MF_PD_ASF_INFO_HAS_VIDEO GUID { "80e62296-2296-4a44-b31c-d103c6fed23c" }
#define MF_PD_ASF_INFO_HAS_NON_AUDIO_VIDEO GUID { "80e62297-2296-4a44-b31c-d103c6fed23c" }
#define MF_ASFPROFILE_MINPACKETSIZE GUID { "22587626-47de-4168-87f5-b5aa9b12a8f0" }
#define MF_ASFPROFILE_MAXPACKETSIZE GUID { "22587627-47de-4168-87f5-b5aa9b12a8f0" }
#define MF_ASFSTREAMCONFIG_LEAKYBUCKET1 GUID { "c69b5901-ea1a-4c9b-b692-e2a0d29a8add" }
#define MF_ASFSTREAMCONFIG_LEAKYBUCKET2 GUID { "c69b5902-ea1a-4c9b-b692-e2a0d29a8add" }
#define MFASFSampleExtension_SampleDuration GUID { "c6bd9450-867f-4907-83a3-c77921b733ad" }
#define MFASFSampleExtension_OutputCleanPoint GUID { "f72a3c6f-6eb4-4ebc-b192-09ad9759e828" }
#define MFASFSampleExtension_SMPTE GUID { "399595ec-8667-4e2d-8fdb-98814ce76c1e" }
#define MFASFSampleExtension_FileName GUID { "e165ec0e-19ed-45d7-b4a7-25cbd1e28e9b" }
#define MFASFSampleExtension_ContentType GUID { "d590dc20-07bc-436c-9cf7-f3bbfbf1a4dc" }
#define MFASFSampleExtension_PixelAspectRatio GUID { "1b1ee554-f9ea-4bc8-821a-376b74e4c4b8" }
#define MFASFSampleExtension_Encryption_SampleID GUID { "6698b84e-0afa-4330-aeb2-1c0a98d7a44d" }
#define MFASFSampleExtension_Encryption_KeyID GUID { "76376591-795f-4da1-86ed-9d46eca109a9" }
#define MFASFMutexType_Language GUID { "72178c2b-e45b-11d5-bc2a-00b0d0f3f4ab" }
#define MFASFMutexType_Bitrate GUID { "72178c2c-e45b-11d5-bc2a-00b0d0f3f4ab" }
#define MFASFMutexType_Presentation GUID { "72178c2d-e45b-11d5-bc2a-00b0d0f3f4ab" }
#define MFASFMutexType_Unknown GUID { "72178c2e-e45b-11d5-bc2a-00b0d0f3f4ab" }
#define MFASFSPLITTER_PACKET_BOUNDARY GUID { "fe584a05-e8d6-42e3-b176-f1211705fb6f" }
#define MFASFINDEXER_TYPE_TIMECODE GUID { "49815231-6bad-44fd-810a-3f60984ec7fd" }
#define MF_CAPTURE_ENGINE_INITIALIZED GUID { "219992bc-cf92-4531-a1ae-96e1e886c8f1" }
#define MF_CAPTURE_ENGINE_PREVIEW_STARTED GUID { "a416df21-f9d3-4a74-991b-b817298952c4" }
#define MF_CAPTURE_ENGINE_PREVIEW_STOPPED GUID { "13d5143c-1edd-4e50-a2ef-350a47678060" }
#define MF_CAPTURE_ENGINE_RECORD_STARTED GUID { "ac2b027b-ddf9-48a0-89be-38ab35ef45c0" }
#define MF_CAPTURE_ENGINE_RECORD_STOPPED GUID { "55e5200a-f98f-4c0d-a9ec-9eb25ed3d773" }
#define MF_CAPTURE_ENGINE_PHOTO_TAKEN GUID { "3c50c445-7304-48eb-865d-bba19ba3af5c" }
#define MF_CAPTURE_SOURCE_CURRENT_DEVICE_MEDIA_TYPE_SET GUID { "e7e75e4c-039c-4410-815b-8741307b63aa" }
#define MF_CAPTURE_ENGINE_ERROR GUID { "46b89fc6-33cc-4399-9dad-784de77d587c" }
#define MF_CAPTURE_ENGINE_EFFECT_ADDED GUID { "aa8dc7b5-a048-4e13-8ebe-f23c46c830c1" }
#define MF_CAPTURE_ENGINE_EFFECT_REMOVED GUID { "c6e8db07-fb09-4a48-89c6-bf92a04222c9" }
#define MF_CAPTURE_ENGINE_ALL_EFFECTS_REMOVED GUID { "fded7521-8ed8-431a-a96b-f3e2565e981c" }
#define MF_CAPTURE_SINK_PREPARED GUID { "7bfce257-12b1-4409-8c34-d445daab7578" }
#define MF_CAPTURE_ENGINE_OUTPUT_MEDIA_TYPE_SET GUID { "caaad994-83ec-45e9-a30a-1f20aadb9831" }
#define MF_CAPTURE_ENGINE_CAMERA_STREAM_BLOCKED GUID { "a4209417-8d39-46f3-b759-5912528f4207" }
#define MF_CAPTURE_ENGINE_CAMERA_STREAM_UNBLOCKED GUID { "9be9eef0-cdaf-4717-8564-834aae66415c" }
#define MF_CAPTURE_ENGINE_D3D_MANAGER GUID { "76e25e7b-d595-4283-962c-c594afd78ddf" }
#define MF_CAPTURE_ENGINE_RECORD_SINK_VIDEO_MAX_UNPROCESSED_SAMPLES GUID { "b467f705-7913-4894-9d42-a215fea23da9" }
#define MF_CAPTURE_ENGINE_RECORD_SINK_AUDIO_MAX_UNPROCESSED_SAMPLES GUID { "1cddb141-a7f4-4d58-9896-4d15a53c4efe" }
#define MF_CAPTURE_ENGINE_RECORD_SINK_VIDEO_MAX_PROCESSED_SAMPLES GUID { "e7b4a49e-382c-4aef-a946-aed5490b7111" }
#define MF_CAPTURE_ENGINE_RECORD_SINK_AUDIO_MAX_PROCESSED_SAMPLES GUID { "9896e12a-f707-4500-b6bd-db8eb810b50f" }
#define MF_CAPTURE_ENGINE_USE_AUDIO_DEVICE_ONLY GUID { "1c8077da-8466-4dc4-8b8e-276b3f85923b" }
#define MF_CAPTURE_ENGINE_USE_VIDEO_DEVICE_ONLY GUID { "7e025171-cf32-4f2e-8f19-410577b73a66" }
#define MF_CAPTURE_ENGINE_DISABLE_HARDWARE_TRANSFORMS GUID { "b7c42a6b-3207-4495-b4e7-81f9c35d5991" }
#define MF_CAPTURE_ENGINE_DISABLE_DXVA GUID { "f9818862-179d-433f-a32f-74cbcf74466d" }
#define MF_CAPTURE_ENGINE_MEDIASOURCE_CONFIG GUID { "bc6989d2-0fc1-46e1-a74f-efd36bc788de" }
#define MF_CAPTURE_ENGINE_DECODER_MFT_FIELDOFUSE_UNLOCK_Attribute GUID { "2b8ad2e8-7acb-4321-a606-325c4249f4fc" }
#define MF_CAPTURE_ENGINE_ENCODER_MFT_FIELDOFUSE_UNLOCK_Attribute GUID { "54c63a00-78d5-422f-aa3e-5e99ac649269" }
#define MF_CAPTURE_ENGINE_ENABLE_CAMERA_STREAMSTATE_NOTIFICATION GUID { "4c808e9d-aaed-4713-90fb-cb24064ab8da" }
#define MF_CAPTURE_ENGINE_MEDIA_CATEGORY GUID { "8e3f5bd5-dbbf-42f0-8542-d07a3971762a" }
#define MF_CAPTURE_ENGINE_AUDIO_PROCESSING GUID { "10f1be5e-7e11-410b-973d-f4b6109000fe" }
#define MF_CAPTURE_ENGINE_EVENT_GENERATOR_GUID GUID { "abfa8ad5-fc6d-4911-87e0-961945f8f7ce" }
#define MF_CAPTURE_ENGINE_EVENT_STREAM_INDEX GUID { "82697f44-b1cf-42eb-9753-f86d649c8865" }
#define MF_CAPTURE_ENGINE_SELECTEDCAMERAPROFILE GUID { "03160b7e-1c6f-4db2-ad56-a7c430f82392" }
#define MF_CAPTURE_ENGINE_SELECTEDCAMERAPROFILE_INDEX GUID { "3ce88613-2214-46c3-b417-82f8a313c9c3" }
#define CLSID_MFCaptureEngine GUID { "efce38d3-8914-4674-a7df-ae1b3d654b8a" }
#define CLSID_MFCaptureEngineClassFactory GUID { "efce38d3-8914-4674-a7df-ae1b3d654b8a" }
#define MFSampleExtension_DeviceReferenceSystemTime GUID { "6523775a-ba2d-405f-b2c5-01ff88e2e8f6" }
#define MF_MSE_CALLBACK GUID { "9063a7c0-42c5-4ffd-a8a8-6fcf9ea3d00c" }
#define MF_MSE_ACTIVELIST_CALLBACK GUID { "949bda0f-4549-46d5-ad7f-b846e1ab1652" }
#define MF_MSE_BUFFERLIST_CALLBACK GUID { "42e669b0-d60e-4afb-a85b-d8e5fe6bdab5" }
#define MF_MSE_VP9_SUPPORT GUID { "92d78429-d88b-4ff0-8322-803efa6e9626" }
#define MF_MSE_OPUS_SUPPORT GUID { "4d224cc1-8cc4-48a3-a7a7-e4c16ce6388a" }
#define MF_MEDIA_ENGINE_NEEDKEY_CALLBACK GUID { "7ea80843-b6e4-432c-8ea4-7848ffe4220e" }
#define MF_MEDIA_ENGINE_CALLBACK GUID { "c60381b8-83a4-41f8-a3d0-de05076849a9" }
#define MF_MEDIA_ENGINE_DXGI_MANAGER GUID { "065702da-1094-486d-8617-ee7cc4ee4648" }
#define MF_MEDIA_ENGINE_EXTENSION GUID { "3109fd46-060d-4b62-8dcf-faff811318d2" }
#define MF_MEDIA_ENGINE_PLAYBACK_HWND GUID { "d988879b-67c9-4d92-baa7-6eadd446039d" }
#define MF_MEDIA_ENGINE_OPM_HWND GUID { "a0be8ee7-0572-4f2c-a801-2a151bd3e726" }
#define MF_MEDIA_ENGINE_PLAYBACK_VISUAL GUID { "6debd26f-6ab9-4d7e-b0ee-c61a73ffad15" }
#define MF_MEDIA_ENGINE_COREWINDOW GUID { "fccae4dc-0b7f-41c2-9f96-4659948acddc" }
#define MF_MEDIA_ENGINE_VIDEO_OUTPUT_FORMAT GUID { "5066893c-8cf9-42bc-8b8a-472212e52726" }
#define MF_MEDIA_ENGINE_CONTENT_PROTECTION_FLAGS GUID { "e0350223-5aaf-4d76-a7c3-06de70894db4" }
#define MF_MEDIA_ENGINE_CONTENT_PROTECTION_MANAGER GUID { "fdd6dfaa-bd85-4af3-9e0f-a01d539d876a" }
#define MF_MEDIA_ENGINE_AUDIO_ENDPOINT_ROLE GUID { "d2cb93d1-116a-44f2-9385-f7d0fda2fb46" }
#define MF_MEDIA_ENGINE_AUDIO_CATEGORY GUID { "c8d4c51d-350e-41f2-ba46-faebbb0857f6" }
#define MF_MEDIA_ENGINE_STREAM_CONTAINS_ALPHA_CHANNEL GUID { "5cbfaf44-d2b2-4cfb-80a7-d429c74c789d" }
#define MF_MEDIA_ENGINE_BROWSER_COMPATIBILITY_MODE GUID { "4e0212e2-e18f-41e1-95e5-c0e7e9235bc3" }
#define MF_MEDIA_ENGINE_BROWSER_COMPATIBILITY_MODE_IE9 GUID { "052c2d39-40c0-4188-ab86-f828273b7522" }
#define MF_MEDIA_ENGINE_BROWSER_COMPATIBILITY_MODE_IE10 GUID { "11a47afd-6589-4124-b312-6158ec517fc3" }
#define MF_MEDIA_ENGINE_BROWSER_COMPATIBILITY_MODE_IE11 GUID { "1cf1315f-ce3f-4035-9391-16142f775189" }
#define MF_MEDIA_ENGINE_BROWSER_COMPATIBILITY_MODE_IE_EDGE GUID { "a6f3e465-3aca-442c-a3f0-ad6ddad839ae" }
#define MF_MEDIA_ENGINE_COMPATIBILITY_MODE GUID { "3ef26ad4-dc54-45de-b9af-76c8c66bfa8e" }
#define MF_MEDIA_ENGINE_COMPATIBILITY_MODE_WWA_EDGE GUID { "15b29098-9f01-4e4d-b65a-c06c6c89da2a" }
#define MF_MEDIA_ENGINE_COMPATIBILITY_MODE_WIN10 GUID { "5b25e089-6ca7-4139-a2cb-fcaab39552a3" }
#define MF_MEDIA_ENGINE_SOURCE_RESOLVER_CONFIG_STORE GUID { "0ac0c497-b3c4-48c9-9cde-bb8ca2442ca3" }
#define MF_MEDIA_ENGINE_TRACK_ID GUID { "65bea312-4043-4815-8eab-44dce2ef8f2a" }
#define MF_MEDIA_ENGINE_TELEMETRY_APPLICATION_ID GUID { "1e7b273b-a7e4-402a-8f51-c48e88a2cabc" }
#define MF_MEDIA_ENGINE_SYNCHRONOUS_CLOSE GUID { "c3c2e12f-7e0e-4e43-b91c-dc992ccdfa5e" }
#define MF_MEDIA_ENGINE_MEDIA_PLAYER_MODE GUID { "3ddd8d45-5aa1-4112-82e5-36f6a2197e6e" }
#define CLSID_MFMediaEngineClassFactory GUID { "b44392da-499b-446b-a4cb-005fead0e6d5" }
#define MF_MEDIA_ENGINE_TIMEDTEXT GUID { "805ea411-92e0-4e59-9b6e-5c7d7915e64f" }
#define MF_MEDIA_ENGINE_CONTINUE_ON_CODEC_ERROR GUID { "dbcdb7f9-48e4-4295-b70d-d518234eeb38" }
#define MF_MEDIA_ENGINE_EME_CALLBACK GUID { "494553a7-a481-4cb7-bec5-380903513731" }
#define CLSID_MPEG2DLNASink GUID { "fa5fe7c5-6a1d-4b11-b41f-f959d6c76500" }
#define MF_MP2DLNA_USE_MMCSS GUID { "54f3e2ee-a2a2-497d-9834-973afde521eb" }
#define MF_MP2DLNA_VIDEO_BIT_RATE GUID { "e88548de-73b4-42d7-9c75-adfa0a2a6e4c" }
#define MF_MP2DLNA_AUDIO_BIT_RATE GUID { "2d1c070e-2b5f-4ab3-a7e6-8d943ba8d00a" }
#define MF_MP2DLNA_ENCODE_QUALITY GUID { "b52379d7-1d46-4fb6-a317-a4a5f60959f8" }
#define MF_MP2DLNA_STATISTICS GUID { "75e488a3-d5ad-4898-85e0-bcce24a722d7" }
#define CLSID_MFReadWriteClassFactory GUID { "48e2ed0f-98c2-4a37-bed5-166312ddd83f" }
#define CLSID_MFSourceReader GUID { "1777133c-0881-411b-a577-ad545f0714c4" }
#define MF_SOURCE_READER_ASYNC_CALLBACK GUID { "1e3dbeac-bb43-4c35-b507-cd644464c965" }
#define MF_SOURCE_READER_D3D_MANAGER GUID { "ec822da2-e1e9-4b29-a0d8-563c719f5269" }
#define MF_SOURCE_READER_DISABLE_DXVA GUID { "aa456cfd-3943-4a1e-a77d-1838c0ea2e35" }
#define MF_SOURCE_READER_MEDIASOURCE_CONFIG GUID { "9085abeb-0354-48f9-abb5-200df838c68e" }
#define MF_SOURCE_READER_MEDIASOURCE_CHARACTERISTICS GUID { "6d23f5c8-c5d7-4a9b-9971-5d11f8bca880" }
#define MF_SOURCE_READER_ENABLE_VIDEO_PROCESSING GUID { "fb394f3d-ccf1-42ee-bbb3-f9b845d5681d" }
#define MF_SOURCE_READER_ENABLE_ADVANCED_VIDEO_PROCESSING GUID { "0f81da2c-b537-4672-a8b2-a681b17307a3" }
#define MF_SOURCE_READER_DISABLE_CAMERA_PLUGINS GUID { "9d3365dd-058f-4cfb-9f97-b314cc99c8ad" }
#define MF_SOURCE_READER_DISCONNECT_MEDIASOURCE_ON_SHUTDOWN GUID { "56b67165-219e-456d-a22e-2d3004c7fe56" }
#define MF_SOURCE_READER_ENABLE_TRANSCODE_ONLY_TRANSFORMS GUID { "dfd4f008-b5fd-4e78-ae44-62a1e67bbe27" }
#define MF_SOURCE_READER_D3D11_BIND_FLAGS GUID { "33f3197b-f73a-4e14-8d85-0e4c4368788d" }
#define CLSID_MFSinkWriter GUID { "a3bbfb17-8273-4e52-9e0e-9739dc887990" }
#define MF_SINK_WRITER_ASYNC_CALLBACK GUID { "48cb183e-7b0b-46f4-822e-5e1d2dda4354" }
#define MF_SINK_WRITER_DISABLE_THROTTLING GUID { "08b845d8-2b74-4afe-9d53-be16d2d5ae4f" }
#define MF_SINK_WRITER_D3D_MANAGER GUID { "ec822da2-e1e9-4b29-a0d8-563c719f5269" }
#define MF_SINK_WRITER_ENCODER_CONFIG GUID { "ad91cd04-a7cc-4ac7-99b6-a57b9a4a7c70" }
#define MF_READWRITE_DISABLE_CONVERTERS GUID { "98d5b065-1374-4847-8d5d-31520fee7156" }
#define MF_READWRITE_ENABLE_HARDWARE_TRANSFORMS GUID { "a634a91c-822b-41b9-a494-4de4643612b0" }
#define MF_READWRITE_MMCSS_CLASS GUID { "39384300-d0eb-40b1-87a0-3318871b5a53" }
#define MF_READWRITE_MMCSS_PRIORITY GUID { "43ad19ce-f33f-4ba9-a580-e4cd12f2d144" }
#define MF_READWRITE_MMCSS_CLASS_AUDIO GUID { "430847da-0890-4b0e-938c-054332c547e1" }
#define MF_READWRITE_MMCSS_PRIORITY_AUDIO GUID { "273db885-2de2-4db2-a6a7-fdb66fb40b61" }
#define MF_READWRITE_D3D_OPTIONAL GUID { "216479d9-3071-42ca-bb6c-4c22102e1d18" }
#define MF_MEDIASINK_AUTOFINALIZE_SUPPORTED GUID { "48c131be-135a-41cb-8290-03652509c999" }
#define MF_MEDIASINK_ENABLE_AUTOFINALIZE GUID { "34014265-cb7e-4cde-ac7c-effd3b3c2530" }
#define MF_READWRITE_ENABLE_AUTOFINALIZE GUID { "dd7ca129-8cd1-4dc5-9dde-ce168675de61" }
#define MF_MEDIA_SHARING_ENGINE_DEVICE_NAME GUID { "771e05d1-862f-4299-95ac-ae81fd14f3e7" }
#define MF_MEDIA_SHARING_ENGINE_DEVICE GUID { "b461c58a-7a08-4b98-99a8-70fd5f3badfd" }
#define CLSID_MFMediaSharingEngineClassFactory GUID { "f8e307fb-6d45-4ad3-9993-66cd5a529659" }
#define CLSID_MFImageSharingEngineClassFactory GUID { "b22c3339-87f3-4059-a0c5-037aa9707eaf" }
#define CLSID_PlayToSourceClassFactory GUID { "da17539a-3dc3-42c1-a749-a183b51f085e" }
#define GUID_PlayToService GUID { "f6a8ff9d-9e14-41c9-bf0f-120a2b3ce120" }
#define GUID_NativeDeviceService GUID { "ef71e53c-52f4-43c5-b86a-ad6cb216a61e" }
#define MF_CONTENTDECRYPTIONMODULE_SERVICE GUID { "15320c45-ff80-484a-9dcb-0df894e69a01" }

//--------------------------------------------------------------------------------
// Section: Types (1378)
//--------------------------------------------------------------------------------
typedef enum {
    MF_EVENT_FLAG_NONE = 0,
    MF_EVENT_FLAG_NO_WAIT = 1,
} MEDIA_EVENT_GENERATOR_GET_EVENT_FLAGS;

typedef enum {
    MF_Plugin_Type_MFT = 0,
    MF_Plugin_Type_MediaSource = 1,
    MF_Plugin_Type_MFT_MatchOutputType = 2,
    MF_Plugin_Type_Other = -1,
} MF_Plugin_Type;

typedef int D3DCONTENTPROTECTIONCAPS;

typedef int DXVA_VideoSample2;

typedef int DXVA_VideoSample32;

typedef int DXVA_DeinterlaceBltEx32;

typedef int D3DOVERLAYCAPS;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDirect3D9ExOverlayExtension;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDirect3DDevice9Video;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDirect3DAuthenticatedChannel9;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDirect3DCryptoSession9;

typedef int CodecAPIEventData;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ICodecAPI;

typedef enum {
    D3D12_VIDEO_FIELD_TYPE_NONE = 0,
    D3D12_VIDEO_FIELD_TYPE_INTERLACED_TOP_FIELD_FIRST = 1,
    D3D12_VIDEO_FIELD_TYPE_INTERLACED_BOTTOM_FIELD_FIRST = 2,
} D3D12_VIDEO_FIELD_TYPE;

typedef enum {
    D3D12_VIDEO_FRAME_STEREO_FORMAT_NONE = 0,
    D3D12_VIDEO_FRAME_STEREO_FORMAT_MONO = 1,
    D3D12_VIDEO_FRAME_STEREO_FORMAT_HORIZONTAL = 2,
    D3D12_VIDEO_FRAME_STEREO_FORMAT_VERTICAL = 3,
    D3D12_VIDEO_FRAME_STEREO_FORMAT_SEPARATE = 4,
} D3D12_VIDEO_FRAME_STEREO_FORMAT;

typedef int D3D12_VIDEO_FORMAT;

typedef int D3D12_VIDEO_SAMPLE;

typedef enum {
    D3D12_VIDEO_FRAME_CODED_INTERLACE_TYPE_NONE = 0,
    D3D12_VIDEO_FRAME_CODED_INTERLACE_TYPE_FIELD_BASED = 1,
} D3D12_VIDEO_FRAME_CODED_INTERLACE_TYPE;

typedef enum {
    D3D12_FEATURE_VIDEO_DECODE_SUPPORT = 0,
    D3D12_FEATURE_VIDEO_DECODE_PROFILES = 1,
    D3D12_FEATURE_VIDEO_DECODE_FORMATS = 2,
    D3D12_FEATURE_VIDEO_DECODE_CONVERSION_SUPPORT = 3,
    D3D12_FEATURE_VIDEO_PROCESS_SUPPORT = 5,
    D3D12_FEATURE_VIDEO_PROCESS_MAX_INPUT_STREAMS = 6,
    D3D12_FEATURE_VIDEO_PROCESS_REFERENCE_INFO = 7,
    D3D12_FEATURE_VIDEO_DECODER_HEAP_SIZE = 8,
    D3D12_FEATURE_VIDEO_PROCESSOR_SIZE = 9,
    D3D12_FEATURE_VIDEO_DECODE_PROFILE_COUNT = 10,
    D3D12_FEATURE_VIDEO_DECODE_FORMAT_COUNT = 11,
    D3D12_FEATURE_VIDEO_ARCHITECTURE = 17,
    D3D12_FEATURE_VIDEO_DECODE_HISTOGRAM = 18,
    D3D12_FEATURE_VIDEO_FEATURE_AREA_SUPPORT = 19,
    D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR = 20,
    D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR_SIZE = 21,
    D3D12_FEATURE_VIDEO_EXTENSION_COMMAND_COUNT = 22,
    D3D12_FEATURE_VIDEO_EXTENSION_COMMANDS = 23,
    D3D12_FEATURE_VIDEO_EXTENSION_COMMAND_PARAMETER_COUNT = 24,
    D3D12_FEATURE_VIDEO_EXTENSION_COMMAND_PARAMETERS = 25,
    D3D12_FEATURE_VIDEO_EXTENSION_COMMAND_SUPPORT = 26,
    D3D12_FEATURE_VIDEO_EXTENSION_COMMAND_SIZE = 27,
    D3D12_FEATURE_VIDEO_DECODE_PROTECTED_RESOURCES = 28,
    D3D12_FEATURE_VIDEO_PROCESS_PROTECTED_RESOURCES = 29,
    D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR_PROTECTED_RESOURCES = 30,
    D3D12_FEATURE_VIDEO_DECODER_HEAP_SIZE1 = 31,
    D3D12_FEATURE_VIDEO_PROCESSOR_SIZE1 = 32,
} D3D12_FEATURE_VIDEO;

typedef enum {
    D3D12_BITSTREAM_ENCRYPTION_TYPE_NONE = 0,
} D3D12_BITSTREAM_ENCRYPTION_TYPE;

typedef int D3D12_VIDEO_DECODE_CONFIGURATION;

typedef int D3D12_VIDEO_DECODER_DESC;

typedef int D3D12_VIDEO_DECODER_HEAP_DESC;

typedef int D3D12_VIDEO_SIZE_RANGE;

typedef enum {
    D3D12_VIDEO_PROCESS_FILTER_BRIGHTNESS = 0,
    D3D12_VIDEO_PROCESS_FILTER_CONTRAST = 1,
    D3D12_VIDEO_PROCESS_FILTER_HUE = 2,
    D3D12_VIDEO_PROCESS_FILTER_SATURATION = 3,
    D3D12_VIDEO_PROCESS_FILTER_NOISE_REDUCTION = 4,
    D3D12_VIDEO_PROCESS_FILTER_EDGE_ENHANCEMENT = 5,
    D3D12_VIDEO_PROCESS_FILTER_ANAMORPHIC_SCALING = 6,
    D3D12_VIDEO_PROCESS_FILTER_STEREO_ADJUSTMENT = 7,
} D3D12_VIDEO_PROCESS_FILTER;

typedef enum {
    D3D12_VIDEO_PROCESS_FILTER_FLAG_NONE = 0,
    D3D12_VIDEO_PROCESS_FILTER_FLAG_BRIGHTNESS = 1,
    D3D12_VIDEO_PROCESS_FILTER_FLAG_CONTRAST = 2,
    D3D12_VIDEO_PROCESS_FILTER_FLAG_HUE = 4,
    D3D12_VIDEO_PROCESS_FILTER_FLAG_SATURATION = 8,
    D3D12_VIDEO_PROCESS_FILTER_FLAG_NOISE_REDUCTION = 16,
    D3D12_VIDEO_PROCESS_FILTER_FLAG_EDGE_ENHANCEMENT = 32,
    D3D12_VIDEO_PROCESS_FILTER_FLAG_ANAMORPHIC_SCALING = 64,
    D3D12_VIDEO_PROCESS_FILTER_FLAG_STEREO_ADJUSTMENT = 128,
} D3D12_VIDEO_PROCESS_FILTER_FLAGS;

typedef enum {
    D3D12_VIDEO_PROCESS_DEINTERLACE_FLAG_NONE = 0,
    D3D12_VIDEO_PROCESS_DEINTERLACE_FLAG_BOB = 1,
    D3D12_VIDEO_PROCESS_DEINTERLACE_FLAG_CUSTOM = 2147483648,
} D3D12_VIDEO_PROCESS_DEINTERLACE_FLAGS;

typedef int D3D12_VIDEO_PROCESS_ALPHA_BLENDING;

typedef int D3D12_VIDEO_PROCESS_LUMA_KEY;

typedef int D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC;

typedef enum {
    D3D12_VIDEO_PROCESS_ALPHA_FILL_MODE_OPAQUE = 0,
    D3D12_VIDEO_PROCESS_ALPHA_FILL_MODE_BACKGROUND = 1,
    D3D12_VIDEO_PROCESS_ALPHA_FILL_MODE_DESTINATION = 2,
    D3D12_VIDEO_PROCESS_ALPHA_FILL_MODE_SOURCE_STREAM = 3,
} D3D12_VIDEO_PROCESS_ALPHA_FILL_MODE;

typedef int D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC;

typedef int ID3D12VideoDecoderHeap;

typedef int ID3D12VideoDevice;

typedef int ID3D12VideoDecoder;

typedef enum {
    D3D12_VIDEO_DECODE_TIER_NOT_SUPPORTED = 0,
    D3D12_VIDEO_DECODE_TIER_1 = 1,
    D3D12_VIDEO_DECODE_TIER_2 = 2,
    D3D12_VIDEO_DECODE_TIER_3 = 3,
} D3D12_VIDEO_DECODE_TIER;

typedef enum {
    D3D12_VIDEO_DECODE_SUPPORT_FLAG_NONE = 0,
    D3D12_VIDEO_DECODE_SUPPORT_FLAG_SUPPORTED = 1,
} D3D12_VIDEO_DECODE_SUPPORT_FLAGS;

typedef enum {
    D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_NONE = 0,
    D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_HEIGHT_ALIGNMENT_MULTIPLE_32_REQUIRED = 1,
    D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_POST_PROCESSING_SUPPORTED = 2,
    D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_REFERENCE_ONLY_ALLOCATIONS_REQUIRED = 4,
    D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_ALLOW_RESOLUTION_CHANGE_ON_NON_KEY_FRAME = 8,
} D3D12_VIDEO_DECODE_CONFIGURATION_FLAGS;

typedef enum {
    D3D12_VIDEO_DECODE_STATUS_OK = 0,
    D3D12_VIDEO_DECODE_STATUS_CONTINUE = 1,
    D3D12_VIDEO_DECODE_STATUS_CONTINUE_SKIP_DISPLAY = 2,
    D3D12_VIDEO_DECODE_STATUS_RESTART = 3,
    D3D12_VIDEO_DECODE_STATUS_RATE_EXCEEDED = 4,
} D3D12_VIDEO_DECODE_STATUS;

typedef enum {
    D3D12_VIDEO_DECODE_ARGUMENT_TYPE_PICTURE_PARAMETERS = 0,
    D3D12_VIDEO_DECODE_ARGUMENT_TYPE_INVERSE_QUANTIZATION_MATRIX = 1,
    D3D12_VIDEO_DECODE_ARGUMENT_TYPE_SLICE_CONTROL = 2,
    D3D12_VIDEO_DECODE_ARGUMENT_TYPE_MAX_VALID = 3,
} D3D12_VIDEO_DECODE_ARGUMENT_TYPE;

typedef int D3D12_FEATURE_DATA_VIDEO_DECODE_SUPPORT;

typedef int D3D12_FEATURE_DATA_VIDEO_DECODE_PROFILE_COUNT;

typedef int D3D12_FEATURE_DATA_VIDEO_DECODE_PROFILES;

typedef int D3D12_FEATURE_DATA_VIDEO_DECODE_FORMAT_COUNT;

typedef int D3D12_FEATURE_DATA_VIDEO_DECODE_FORMATS;

typedef int D3D12_FEATURE_DATA_VIDEO_ARCHITECTURE;

typedef enum {
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_Y = 0,
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_U = 1,
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_V = 2,
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_R = 0,
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_G = 1,
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_B = 2,
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_A = 3,
} D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT;

typedef enum {
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_NONE = 0,
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_Y = 1,
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_U = 2,
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_V = 4,
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_R = 1,
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_G = 2,
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_B = 4,
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_A = 8,
} D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAGS;

typedef int D3D12_FEATURE_DATA_VIDEO_DECODE_HISTOGRAM;

typedef enum {
    D3D12_VIDEO_DECODE_CONVERSION_SUPPORT_FLAG_NONE = 0,
    D3D12_VIDEO_DECODE_CONVERSION_SUPPORT_FLAG_SUPPORTED = 1,
} D3D12_VIDEO_DECODE_CONVERSION_SUPPORT_FLAGS;

typedef enum {
    D3D12_VIDEO_SCALE_SUPPORT_FLAG_NONE = 0,
    D3D12_VIDEO_SCALE_SUPPORT_FLAG_POW2_ONLY = 1,
    D3D12_VIDEO_SCALE_SUPPORT_FLAG_EVEN_DIMENSIONS_ONLY = 2,
} D3D12_VIDEO_SCALE_SUPPORT_FLAGS;

typedef int D3D12_VIDEO_SCALE_SUPPORT;

typedef int D3D12_FEATURE_DATA_VIDEO_DECODE_CONVERSION_SUPPORT;

typedef int D3D12_FEATURE_DATA_VIDEO_DECODER_HEAP_SIZE;

typedef int D3D12_FEATURE_DATA_VIDEO_PROCESSOR_SIZE;

typedef int D3D12_QUERY_DATA_VIDEO_DECODE_STATISTICS;

typedef int D3D12_VIDEO_DECODE_FRAME_ARGUMENT;

typedef int D3D12_VIDEO_DECODE_REFERENCE_FRAMES;

typedef int D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM;

typedef int D3D12_VIDEO_DECODE_CONVERSION_ARGUMENTS;

typedef int D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS;

typedef int D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS;

typedef int ID3D12VideoProcessor;

typedef enum {
    D3D12_VIDEO_PROCESS_FEATURE_FLAG_NONE = 0,
    D3D12_VIDEO_PROCESS_FEATURE_FLAG_ALPHA_FILL = 1,
    D3D12_VIDEO_PROCESS_FEATURE_FLAG_LUMA_KEY = 2,
    D3D12_VIDEO_PROCESS_FEATURE_FLAG_STEREO = 4,
    D3D12_VIDEO_PROCESS_FEATURE_FLAG_ROTATION = 8,
    D3D12_VIDEO_PROCESS_FEATURE_FLAG_FLIP = 16,
    D3D12_VIDEO_PROCESS_FEATURE_FLAG_ALPHA_BLENDING = 32,
    D3D12_VIDEO_PROCESS_FEATURE_FLAG_PIXEL_ASPECT_RATIO = 64,
} D3D12_VIDEO_PROCESS_FEATURE_FLAGS;

typedef enum {
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_NONE = 0,
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_DENOISE = 1,
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_DERINGING = 2,
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_EDGE_ENHANCEMENT = 4,
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_COLOR_CORRECTION = 8,
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_FLESH_TONE_MAPPING = 16,
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_IMAGE_STABILIZATION = 32,
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_SUPER_RESOLUTION = 64,
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_ANAMORPHIC_SCALING = 128,
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_CUSTOM = 2147483648,
} D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAGS;

typedef enum {
    D3D12_VIDEO_PROCESS_ORIENTATION_DEFAULT = 0,
    D3D12_VIDEO_PROCESS_ORIENTATION_FLIP_HORIZONTAL = 1,
    D3D12_VIDEO_PROCESS_ORIENTATION_CLOCKWISE_90 = 2,
    D3D12_VIDEO_PROCESS_ORIENTATION_CLOCKWISE_90_FLIP_HORIZONTAL = 3,
    D3D12_VIDEO_PROCESS_ORIENTATION_CLOCKWISE_180 = 4,
    D3D12_VIDEO_PROCESS_ORIENTATION_FLIP_VERTICAL = 5,
    D3D12_VIDEO_PROCESS_ORIENTATION_CLOCKWISE_270 = 6,
    D3D12_VIDEO_PROCESS_ORIENTATION_CLOCKWISE_270_FLIP_HORIZONTAL = 7,
} D3D12_VIDEO_PROCESS_ORIENTATION;

typedef enum {
    D3D12_VIDEO_PROCESS_INPUT_STREAM_FLAG_NONE = 0,
    D3D12_VIDEO_PROCESS_INPUT_STREAM_FLAG_FRAME_DISCONTINUITY = 1,
    D3D12_VIDEO_PROCESS_INPUT_STREAM_FLAG_FRAME_REPEAT = 2,
} D3D12_VIDEO_PROCESS_INPUT_STREAM_FLAGS;

typedef int D3D12_VIDEO_PROCESS_FILTER_RANGE;

typedef enum {
    D3D12_VIDEO_PROCESS_SUPPORT_FLAG_NONE = 0,
    D3D12_VIDEO_PROCESS_SUPPORT_FLAG_SUPPORTED = 1,
} D3D12_VIDEO_PROCESS_SUPPORT_FLAGS;

typedef int D3D12_FEATURE_DATA_VIDEO_PROCESS_SUPPORT;

typedef int D3D12_FEATURE_DATA_VIDEO_PROCESS_MAX_INPUT_STREAMS;

typedef int D3D12_FEATURE_DATA_VIDEO_PROCESS_REFERENCE_INFO;

typedef int D3D12_VIDEO_PROCESS_REFERENCE_SET;

typedef int D3D12_VIDEO_PROCESS_TRANSFORM;

typedef int D3D12_VIDEO_PROCESS_INPUT_STREAM_RATE;

typedef int D3D12_VIDEO_PROCESS_INPUT_STREAM;

typedef int D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS;

typedef int D3D12_VIDEO_PROCESS_OUTPUT_STREAM;

typedef int D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS;

typedef int ID3D12VideoDecodeCommandList;

typedef int ID3D12VideoProcessCommandList;

typedef int D3D12_VIDEO_DECODE_OUTPUT_HISTOGRAM;

typedef int D3D12_VIDEO_DECODE_CONVERSION_ARGUMENTS1;

typedef int D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS1;

typedef int ID3D12VideoDecodeCommandList1;

typedef int D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS1;

typedef int ID3D12VideoProcessCommandList1;

typedef enum {
    D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_8X8 = 0,
    D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_16X16 = 1,
} D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE;

typedef enum {
    D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_FLAG_NONE = 0,
    D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_FLAG_8X8 = 1,
    D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_FLAG_16X16 = 2,
} D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_FLAGS;

typedef enum {
    D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION_QUARTER_PEL = 0,
} D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION;

typedef enum {
    D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION_FLAG_NONE = 0,
    D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION_FLAG_QUARTER_PEL = 1,
} D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION_FLAGS;

typedef int D3D12_FEATURE_DATA_VIDEO_FEATURE_AREA_SUPPORT;

typedef int D3D12_FEATURE_DATA_VIDEO_MOTION_ESTIMATOR;

typedef int D3D12_FEATURE_DATA_VIDEO_MOTION_ESTIMATOR_SIZE;

typedef int D3D12_VIDEO_MOTION_ESTIMATOR_DESC;

// TODO: this type is limited to platform 'windows10.0.19041'
typedef int ID3D12VideoMotionEstimator;

typedef int D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC;

// TODO: this type is limited to platform 'windows10.0.19041'
typedef int ID3D12VideoMotionVectorHeap;

typedef int ID3D12VideoDevice1;

typedef int D3D12_RESOURCE_COORDINATE;

typedef int D3D12_VIDEO_MOTION_ESTIMATOR_OUTPUT;

typedef int D3D12_VIDEO_MOTION_ESTIMATOR_INPUT;

typedef int D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT;

typedef int D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_INPUT;

// TODO: this type is limited to platform 'windows10.0.19041'
typedef int ID3D12VideoEncodeCommandList;

typedef enum {
    D3D12_VIDEO_PROTECTED_RESOURCE_SUPPORT_FLAG_NONE = 0,
    D3D12_VIDEO_PROTECTED_RESOURCE_SUPPORT_FLAG_SUPPORTED = 1,
} D3D12_VIDEO_PROTECTED_RESOURCE_SUPPORT_FLAGS;

typedef int D3D12_FEATURE_DATA_VIDEO_DECODE_PROTECTED_RESOURCES;

typedef int D3D12_FEATURE_DATA_VIDEO_PROCESS_PROTECTED_RESOURCES;

typedef int D3D12_FEATURE_DATA_VIDEO_MOTION_ESTIMATOR_PROTECTED_RESOURCES;

typedef int D3D12_FEATURE_DATA_VIDEO_DECODER_HEAP_SIZE1;

typedef int D3D12_FEATURE_DATA_VIDEO_PROCESSOR_SIZE1;

typedef enum {
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_CREATION = 0,
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_INITIALIZATION = 1,
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_EXECUTION = 2,
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_CAPS_INPUT = 3,
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_CAPS_OUTPUT = 4,
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_DEVICE_EXECUTE_INPUT = 5,
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_DEVICE_EXECUTE_OUTPUT = 6,
} D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE;

typedef enum {
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_UINT8 = 0,
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_UINT16 = 1,
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_UINT32 = 2,
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_UINT64 = 3,
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_SINT8 = 4,
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_SINT16 = 5,
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_SINT32 = 6,
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_SINT64 = 7,
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_FLOAT = 8,
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_DOUBLE = 9,
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_RESOURCE = 10,
} D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE;

typedef enum {
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_FLAG_NONE = 0,
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_FLAG_READ = 1,
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_FLAG_WRITE = 2,
} D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_FLAGS;

typedef int D3D12_FEATURE_DATA_VIDEO_EXTENSION_COMMAND_COUNT;

typedef int D3D12_VIDEO_EXTENSION_COMMAND_INFO;

typedef int D3D12_FEATURE_DATA_VIDEO_EXTENSION_COMMANDS;

typedef int D3D12_FEATURE_DATA_VIDEO_EXTENSION_COMMAND_PARAMETER_COUNT;

typedef int D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_INFO;

typedef int D3D12_FEATURE_DATA_VIDEO_EXTENSION_COMMAND_PARAMETERS;

typedef int D3D12_FEATURE_DATA_VIDEO_EXTENSION_COMMAND_SUPPORT;

typedef int D3D12_FEATURE_DATA_VIDEO_EXTENSION_COMMAND_SIZE;

typedef int D3D12_VIDEO_EXTENSION_COMMAND_DESC;

// TODO: this type is limited to platform 'windows10.0.19041'
typedef int ID3D12VideoDecoder1;

typedef int ID3D12VideoDecoderHeap1;

typedef int ID3D12VideoProcessor1;

// TODO: this type is limited to platform 'windows10.0.19041'
typedef int ID3D12VideoExtensionCommand;

typedef int ID3D12VideoDevice2;

typedef int ID3D12VideoDecodeCommandList2;

typedef int ID3D12VideoProcessCommandList2;

typedef int ID3D12VideoEncodeCommandList1;

typedef int CMpeg4DecMediaObject;

typedef int CMpeg43DecMediaObject;

typedef int CMpeg4sDecMediaObject;

typedef int CMpeg4sDecMFT;

typedef int CZuneM4S2DecMediaObject;

typedef int CMpeg4EncMediaObject;

typedef int CMpeg4sEncMediaObject;

typedef int CMSSCDecMediaObject;

typedef int CMSSCEncMediaObject;

typedef int CMSSCEncMediaObject2;

typedef int CWMADecMediaObject;

typedef int CWMAEncMediaObject;

typedef int CWMATransMediaObject;

typedef int CWMSPDecMediaObject;

typedef int CWMSPEncMediaObject;

typedef int CWMSPEncMediaObject2;

typedef int CWMTDecMediaObject;

typedef int CWMTEncMediaObject;

typedef int CWMVDecMediaObject;

typedef int CWMVEncMediaObject2;

typedef int CWMVXEncMediaObject;

typedef int CWMV9EncMediaObject;

typedef int CWVC1DecMediaObject;

typedef int CWVC1EncMediaObject;

typedef int CDeColorConvMediaObject;

typedef int CDVDecoderMediaObject;

typedef int CDVEncoderMediaObject;

typedef int CMpeg2DecMediaObject;

typedef int CPK_DS_MPEG2Decoder;

typedef int CAC3DecMediaObject;

typedef int CPK_DS_AC3Decoder;

typedef int CMP3DecMediaObject;

typedef int CResamplerMediaObject;

typedef int CResizerMediaObject;

typedef int CInterlaceMediaObject;

typedef int CWMAudioLFXAPO;

typedef int CWMAudioGFXAPO;

typedef int CWMAudioSpdTxDMO;

typedef int CWMAudioAEC;

typedef int CClusterDetectorDmo;

typedef int CColorControlDmo;

typedef int CColorConvertDMO;

typedef int CColorLegalizerDmo;

typedef int CFrameInterpDMO;

typedef int CFrameRateConvertDmo;

typedef int CResizerDMO;

typedef int CShotDetectorDmo;

typedef int CSmpteTransformsDmo;

typedef int CThumbnailGeneratorDmo;

typedef int CTocGeneratorDmo;

typedef int CMPEGAACDecMediaObject;

typedef int CNokiaAACDecMediaObject;

typedef int CVodafoneAACDecMediaObject;

typedef int CZuneAACCCDecMediaObject;

typedef int CNokiaAACCCDecMediaObject;

typedef int CVodafoneAACCCDecMediaObject;

typedef int CMPEG2EncoderDS;

typedef int CMPEG2EncoderVideoDS;

typedef int CMPEG2EncoderAudioDS;

typedef int CMPEG2AudDecoderDS;

typedef int CMPEG2VidDecoderDS;

typedef int CDTVAudDecoderDS;

typedef int CDTVVidDecoderDS;

typedef int CMSAC3Enc;

typedef int CMSH264DecoderMFT;

typedef int CMSH263EncoderMFT;

typedef int CMSH264EncoderMFT;

typedef int CMSH265EncoderMFT;

typedef int CMSVPXEncoderMFT;

typedef int CMSH264RemuxMFT;

typedef int CMSAACDecMFT;

typedef int AACMFTEncoder;

typedef int CMSDDPlusDecMFT;

typedef int CMPEG2VideoEncoderMFT;

typedef int CMPEG2AudioEncoderMFT;

typedef int CMSMPEGDecoderMFT;

typedef int CMSMPEGAudDecMFT;

typedef int CMSDolbyDigitalEncMFT;

typedef int MP3ACMCodecWrapper;

typedef int ALawCodecWrapper;

typedef int MULawCodecWrapper;

typedef int CMSVideoDSPMFT;

typedef int VorbisDecoderMFT;

typedef int CMSFLACDecMFT;

typedef int CMSFLACEncMFT;

typedef int MFFLACBytestreamHandler;

typedef int MFFLACSinkClassFactory;

typedef int CMSALACDecMFT;

typedef int CMSALACEncMFT;

typedef int CMSOpusDecMFT;

typedef int MSAMRNBDecoder;

typedef int MSAMRNBEncoder;

typedef int MFAMRNBByteStreamHandler;

typedef int MFAMRNBSinkClassFactory;

typedef enum {
    DMO_INPUT_DATA_BUFFERF_SYNCPOINT = 1,
    DMO_INPUT_DATA_BUFFERF_TIME = 2,
    DMO_INPUT_DATA_BUFFERF_TIMELENGTH = 4,
    DMO_INPUT_DATA_BUFFERF_DISCONTINUITY = 8,
} _DMO_INPUT_DATA_BUFFER_FLAGS;

typedef enum {
    DMO_OUTPUT_DATA_BUFFERF_SYNCPOINT = 1,
    DMO_OUTPUT_DATA_BUFFERF_TIME = 2,
    DMO_OUTPUT_DATA_BUFFERF_TIMELENGTH = 4,
    DMO_OUTPUT_DATA_BUFFERF_DISCONTINUITY = 8,
    DMO_OUTPUT_DATA_BUFFERF_INCOMPLETE = 16777216,
} _DMO_OUTPUT_DATA_BUFFER_FLAGS;

typedef enum {
    DMO_INPUT_STATUSF_ACCEPT_DATA = 1,
} _DMO_INPUT_STATUS_FLAGS;

typedef enum {
    DMO_INPUT_STREAMF_WHOLE_SAMPLES = 1,
    DMO_INPUT_STREAMF_SINGLE_SAMPLE_PER_BUFFER = 2,
    DMO_INPUT_STREAMF_FIXED_SAMPLE_SIZE = 4,
    DMO_INPUT_STREAMF_HOLDS_BUFFERS = 8,
} _DMO_INPUT_STREAM_INFO_FLAGS;

typedef enum {
    DMO_OUTPUT_STREAMF_WHOLE_SAMPLES = 1,
    DMO_OUTPUT_STREAMF_SINGLE_SAMPLE_PER_BUFFER = 2,
    DMO_OUTPUT_STREAMF_FIXED_SAMPLE_SIZE = 4,
    DMO_OUTPUT_STREAMF_DISCARDABLE = 8,
    DMO_OUTPUT_STREAMF_OPTIONAL = 16,
} _DMO_OUTPUT_STREAM_INFO_FLAGS;

typedef enum {
    DMO_SET_TYPEF_TEST_ONLY = 1,
    DMO_SET_TYPEF_CLEAR = 2,
} _DMO_SET_TYPE_FLAGS;

typedef enum {
    DMO_PROCESS_OUTPUT_DISCARD_WHEN_NO_BUFFER = 1,
} _DMO_PROCESS_OUTPUT_FLAGS;

typedef enum {
    DMO_INPLACE_NORMAL = 0,
    DMO_INPLACE_ZERO = 1,
} _DMO_INPLACE_PROCESS_FLAGS;

typedef enum {
    DMO_QUALITY_STATUS_ENABLED = 1,
} _DMO_QUALITY_STATUS_FLAGS;

typedef enum {
    DMO_VOSF_NEEDS_PREVIOUS_SAMPLE = 1,
} _DMO_VIDEO_OUTPUT_STREAM_FLAGS;

typedef enum {
    WMT_PROP_TYPE_DWORD = 0,
    WMT_PROP_TYPE_STRING = 1,
    WMT_PROP_TYPE_BINARY = 2,
    WMT_PROP_TYPE_BOOL = 3,
    WMT_PROP_TYPE_QWORD = 4,
    WMT_PROP_TYPE_WORD = 5,
    WMT_PROP_TYPE_GUID = 6,
} WMT_PROP_DATATYPE;

typedef int IWMValidate;

typedef int IValidateBinding;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IWMVideoDecoderHurryup;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IWMVideoForceKeyFrame;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IWMCodecStrings;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IWMCodecProps;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IWMCodecLeakyBucket;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IWMCodecOutputTimestamp;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IWMVideoDecoderReconBuffer;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IWMCodecPrivateData;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IWMSampleExtensionSupport;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IWMResamplerProps;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IWMResizerProps;

typedef int IWMColorLegalizerProps;

typedef int IWMInterlaceProps;

typedef int IWMFrameInterpProps;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IWMColorConvProps;

typedef enum {
    WMV_DYNAMIC_BITRATE = 1,
    WMV_DYNAMIC_RESOLUTION = 2,
    WMV_DYNAMIC_COMPLEXITY = 4,
} WMV_DYNAMIC_FLAGS;

typedef enum {
    VRHP_SMALLROOM = 0,
    VRHP_MEDIUMROOM = 1,
    VRHP_BIGROOM = 2,
    VRHP_CUSTUMIZEDROOM = 3,
} MF_AUVRHP_ROOMMODEL;

typedef enum {
    SINGLE_CHANNEL_AEC = 0,
    ADAPTIVE_ARRAY_ONLY = 1,
    OPTIBEAM_ARRAY_ONLY = 2,
    ADAPTIVE_ARRAY_AND_AEC = 3,
    OPTIBEAM_ARRAY_AND_AEC = 4,
    SINGLE_CHANNEL_NSAGC = 5,
    MODE_NOT_SET = 6,
} AEC_SYSTEM_MODE;

typedef int AecQualityMetrics_Struct;

typedef enum {
    AEC_VAD_DISABLED = 0,
    AEC_VAD_NORMAL = 1,
    AEC_VAD_FOR_AGC = 2,
    AEC_VAD_FOR_SILENCE_SUPPRESSION = 3,
} AEC_VAD_MODE;

typedef enum {
    AEC_CAPTURE_STREAM = 0,
    AEC_REFERENCE_STREAM = 1,
} AEC_INPUT_STREAM;

typedef enum {
    MICARRAY_SINGLE_CHAN = 0,
    MICARRAY_SIMPLE_SUM = 256,
    MICARRAY_SINGLE_BEAM = 512,
    MICARRAY_FIXED_BEAM = 1024,
    MICARRAY_EXTERN_BEAM = 2048,
} MIC_ARRAY_MODE;

typedef enum {
    MFVideoDSPMode_Passthrough = 1,
    MFVideoDSPMode_Stabilization = 4,
} MFVideoDSPMode;

typedef int TOC_DESCRIPTOR;

typedef int TOC_ENTRY_DESCRIPTOR;

typedef enum {
    TOC_POS_INHEADER = 0,
    TOC_POS_TOPLEVELOBJECT = 1,
} TOC_POS_TYPE;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ITocEntry;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ITocEntryList;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IToc;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ITocCollection;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ITocParser;

typedef enum {
    OPENMODE_FAIL_IF_NOT_EXIST = 0,
    OPENMODE_FAIL_IF_EXIST = 1,
    OPENMODE_RESET_IF_EXIST = 2,
    OPENMODE_APPEND_IF_EXIST = 3,
    OPENMODE_DELETE_IF_EXIST = 4,
} FILE_OPENMODE;

typedef enum {
    _msoBegin = 0,
    _msoCurrent = 1,
} SEEK_ORIGIN;

typedef enum {
    ACCESSMODE_READ = 1,
    ACCESSMODE_WRITE = 2,
    ACCESSMODE_READWRITE = 3,
    ACCESSMODE_WRITE_EXCLUSIVE = 4,
} FILE_ACCESSMODE;

typedef int IFileIo;

typedef int IFileClient;

typedef int IClusterDetector;

typedef int DXVA_AYUVsample2;

typedef int DXVA_BufferDescription;

typedef int DXVA_ConfigPictureDecode;

typedef int DXVA_PictureParameters;

typedef int DXVAUncompDataInfo;

typedef int DXVACompBufferInfo;

typedef int DXVABufferInfo;

typedef enum {
    DXVA_SampleFormatMask = 255,
    DXVA_SampleUnknown = 0,
    DXVA_SamplePreviousFrame = 1,
    DXVA_SampleProgressiveFrame = 2,
    DXVA_SampleFieldInterleavedEvenFirst = 3,
    DXVA_SampleFieldInterleavedOddFirst = 4,
    DXVA_SampleFieldSingleEven = 5,
    DXVA_SampleFieldSingleOdd = 6,
    DXVA_SampleSubStream = 7,
} DXVA_SampleFormat;

typedef enum {
    DXVA_VideoTransFuncShift = 27,
    DXVA_VideoTransFuncMask = -134217728,
    DXVA_VideoTransFunc_Unknown = 0,
    DXVA_VideoTransFunc_10 = 1,
    DXVA_VideoTransFunc_18 = 2,
    DXVA_VideoTransFunc_20 = 3,
    DXVA_VideoTransFunc_22 = 4,
    DXVA_VideoTransFunc_22_709 = 5,
    DXVA_VideoTransFunc_22_240M = 6,
    DXVA_VideoTransFunc_22_8bit_sRGB = 7,
    DXVA_VideoTransFunc_28 = 8,
} DXVA_VideoTransferFunction;

typedef enum {
    DXVA_VideoPrimariesShift = 22,
    DXVA_VideoPrimariesMask = 130023424,
    DXVA_VideoPrimaries_Unknown = 0,
    DXVA_VideoPrimaries_reserved = 1,
    DXVA_VideoPrimaries_BT709 = 2,
    DXVA_VideoPrimaries_BT470_2_SysM = 3,
    DXVA_VideoPrimaries_BT470_2_SysBG = 4,
    DXVA_VideoPrimaries_SMPTE170M = 5,
    DXVA_VideoPrimaries_SMPTE240M = 6,
    DXVA_VideoPrimaries_EBU3213 = 7,
    DXVA_VideoPrimaries_SMPTE_C = 8,
} DXVA_VideoPrimaries;

typedef enum {
    DXVA_VideoLightingShift = 18,
    DXVA_VideoLightingMask = 3932160,
    DXVA_VideoLighting_Unknown = 0,
    DXVA_VideoLighting_bright = 1,
    DXVA_VideoLighting_office = 2,
    DXVA_VideoLighting_dim = 3,
    DXVA_VideoLighting_dark = 4,
} DXVA_VideoLighting;

typedef enum {
    DXVA_VideoTransferMatrixShift = 15,
    DXVA_VideoTransferMatrixMask = 229376,
    DXVA_VideoTransferMatrix_Unknown = 0,
    DXVA_VideoTransferMatrix_BT709 = 1,
    DXVA_VideoTransferMatrix_BT601 = 2,
    DXVA_VideoTransferMatrix_SMPTE240M = 3,
} DXVA_VideoTransferMatrix;

typedef enum {
    DXVA_NominalRangeShift = 12,
    DXVA_NominalRangeMask = 28672,
    DXVA_NominalRange_Unknown = 0,
    DXVA_NominalRange_Normal = 1,
    DXVA_NominalRange_Wide = 2,
    DXVA_NominalRange_0_255 = 1,
    DXVA_NominalRange_16_235 = 2,
    DXVA_NominalRange_48_208 = 3,
} DXVA_NominalRange;

typedef enum {
    DXVA_VideoChromaSubsamplingShift = 8,
    DXVA_VideoChromaSubsamplingMask = 3840,
    DXVA_VideoChromaSubsampling_Unknown = 0,
    DXVA_VideoChromaSubsampling_ProgressiveChroma = 8,
    DXVA_VideoChromaSubsampling_Horizontally_Cosited = 4,
    DXVA_VideoChromaSubsampling_Vertically_Cosited = 2,
    DXVA_VideoChromaSubsampling_Vertically_AlignedChromaPlanes = 1,
    DXVA_VideoChromaSubsampling_MPEG2 = 5,
    DXVA_VideoChromaSubsampling_MPEG1 = 1,
    DXVA_VideoChromaSubsampling_DV_PAL = 6,
    DXVA_VideoChromaSubsampling_Cosited = 7,
} DXVA_VideoChromaSubsampling;

typedef int DXVA_ExtendedFormat;

typedef int DXVA_Frequency;

typedef int DXVA_VideoDesc;

typedef enum {
    DXVA_VideoProcess_None = 0,
    DXVA_VideoProcess_YUV2RGB = 1,
    DXVA_VideoProcess_StretchX = 2,
    DXVA_VideoProcess_StretchY = 4,
    DXVA_VideoProcess_AlphaBlend = 8,
    DXVA_VideoProcess_SubRects = 16,
    DXVA_VideoProcess_SubStreams = 32,
    DXVA_VideoProcess_SubStreamsExtended = 64,
    DXVA_VideoProcess_YUV2RGBExtended = 128,
    DXVA_VideoProcess_AlphaBlendExtended = 256,
} DXVA_VideoProcessCaps;

typedef enum {
    DXVA_DeinterlaceTech_Unknown = 0,
    DXVA_DeinterlaceTech_BOBLineReplicate = 1,
    DXVA_DeinterlaceTech_BOBVerticalStretch = 2,
    DXVA_DeinterlaceTech_BOBVerticalStretch4Tap = 256,
    DXVA_DeinterlaceTech_MedianFiltering = 4,
    DXVA_DeinterlaceTech_EdgeFiltering = 16,
    DXVA_DeinterlaceTech_FieldAdaptive = 32,
    DXVA_DeinterlaceTech_PixelAdaptive = 64,
    DXVA_DeinterlaceTech_MotionVectorSteered = 128,
} DXVA_DeinterlaceTech;

typedef int DXVA_VideoSample;

typedef enum {
    DXVA_SampleFlagsMask = 15,
    DXVA_SampleFlag_Palette_Changed = 1,
    DXVA_SampleFlag_SrcRect_Changed = 2,
    DXVA_SampleFlag_DstRect_Changed = 4,
    DXVA_SampleFlag_ColorData_Changed = 8,
} DXVA_SampleFlags;

typedef enum {
    DXVA_DestinationFlagMask = 15,
    DXVA_DestinationFlag_Background_Changed = 1,
    DXVA_DestinationFlag_TargetRect_Changed = 2,
    DXVA_DestinationFlag_ColorData_Changed = 4,
    DXVA_DestinationFlag_Alpha_Changed = 8,
} DXVA_DestinationFlags;

typedef int DXVA_DeinterlaceCaps;

typedef int DXVA_DeinterlaceBlt;

typedef int DXVA_DeinterlaceBltEx;

typedef int DXVA_DeinterlaceQueryAvailableModes;

typedef int DXVA_DeinterlaceQueryModeCaps;

typedef enum {
    DXVA_ProcAmp_None = 0,
    DXVA_ProcAmp_Brightness = 1,
    DXVA_ProcAmp_Contrast = 2,
    DXVA_ProcAmp_Hue = 4,
    DXVA_ProcAmp_Saturation = 8,
} DXVA_ProcAmpControlProp;

typedef int DXVA_ProcAmpControlCaps;

typedef int DXVA_ProcAmpControlQueryRange;

typedef int DXVA_VideoPropertyRange;

typedef int DXVA_ProcAmpControlBlt;

typedef int DXVA_COPPSignature;

typedef int DXVA_COPPCommand;

typedef int DXVA_COPPStatusInput;

typedef int DXVA_COPPStatusOutput;

typedef int CODECAPI_AVEncCommonFormatConstraint;

typedef int CODECAPI_GUID_AVEncCommonFormatUnSpecified;

typedef int CODECAPI_GUID_AVEncCommonFormatDVD_V;

typedef int CODECAPI_GUID_AVEncCommonFormatDVD_DashVR;

typedef int CODECAPI_GUID_AVEncCommonFormatDVD_PlusVR;

typedef int CODECAPI_GUID_AVEncCommonFormatVCD;

typedef int CODECAPI_GUID_AVEncCommonFormatSVCD;

typedef int CODECAPI_GUID_AVEncCommonFormatATSC;

typedef int CODECAPI_GUID_AVEncCommonFormatDVB;

typedef int CODECAPI_GUID_AVEncCommonFormatMP3;

typedef int CODECAPI_GUID_AVEncCommonFormatHighMAT;

typedef int CODECAPI_GUID_AVEncCommonFormatHighMPV;

typedef int CODECAPI_AVEncCodecType;

typedef int CODECAPI_GUID_AVEncMPEG1Video;

typedef int CODECAPI_GUID_AVEncMPEG2Video;

typedef int CODECAPI_GUID_AVEncMPEG1Audio;

typedef int CODECAPI_GUID_AVEncMPEG2Audio;

typedef int CODECAPI_GUID_AVEncWMV;

typedef int CODECAPI_GUID_AVEndMPEG4Video;

typedef int CODECAPI_GUID_AVEncH264Video;

typedef int CODECAPI_GUID_AVEncDV;

typedef int CODECAPI_GUID_AVEncWMAPro;

typedef int CODECAPI_GUID_AVEncWMALossless;

typedef int CODECAPI_GUID_AVEncWMAVoice;

typedef int CODECAPI_GUID_AVEncDolbyDigitalPro;

typedef int CODECAPI_GUID_AVEncDolbyDigitalConsumer;

typedef int CODECAPI_GUID_AVEncDolbyDigitalPlus;

typedef int CODECAPI_GUID_AVEncDTSHD;

typedef int CODECAPI_GUID_AVEncDTS;

typedef int CODECAPI_GUID_AVEncMLP;

typedef int CODECAPI_GUID_AVEncPCM;

typedef int CODECAPI_GUID_AVEncSDDS;

typedef int CODECAPI_AVEncCommonRateControlMode;

typedef enum {
    eAVEncCommonRateControlMode_CBR = 0,
    eAVEncCommonRateControlMode_PeakConstrainedVBR = 1,
    eAVEncCommonRateControlMode_UnconstrainedVBR = 2,
    eAVEncCommonRateControlMode_Quality = 3,
    eAVEncCommonRateControlMode_LowDelayVBR = 4,
    eAVEncCommonRateControlMode_GlobalVBR = 5,
    eAVEncCommonRateControlMode_GlobalLowDelayVBR = 6,
} eAVEncCommonRateControlMode;

typedef int CODECAPI_AVEncCommonLowLatency;

typedef int CODECAPI_AVEncCommonMultipassMode;

typedef int CODECAPI_AVEncCommonPassStart;

typedef int CODECAPI_AVEncCommonPassEnd;

typedef int CODECAPI_AVEncCommonRealTime;

typedef int CODECAPI_AVEncCommonQuality;

typedef int CODECAPI_AVEncCommonQualityVsSpeed;

typedef int CODECAPI_AVEncCommonTranscodeEncodingProfile;

typedef int CODECAPI_AVEncCommonMeanBitRate;

typedef int CODECAPI_AVEncCommonMeanBitRateInterval;

typedef int CODECAPI_AVEncCommonMaxBitRate;

typedef int CODECAPI_AVEncCommonMinBitRate;

typedef int CODECAPI_AVEncCommonBufferSize;

typedef int CODECAPI_AVEncCommonBufferInLevel;

typedef int CODECAPI_AVEncCommonBufferOutLevel;

typedef int CODECAPI_AVEncCommonStreamEndHandling;

typedef enum {
    eAVEncCommonStreamEndHandling_DiscardPartial = 0,
    eAVEncCommonStreamEndHandling_EnsureComplete = 1,
} eAVEncCommonStreamEndHandling;

typedef int CODECAPI_AVEncStatCommonCompletedPasses;

typedef int CODECAPI_AVEncVideoOutputFrameRate;

typedef int CODECAPI_AVEncVideoOutputFrameRateConversion;

typedef enum {
    eAVEncVideoOutputFrameRateConversion_Disable = 0,
    eAVEncVideoOutputFrameRateConversion_Enable = 1,
    eAVEncVideoOutputFrameRateConversion_Alias = 2,
} eAVEncVideoOutputFrameRateConversion;

typedef int CODECAPI_AVEncVideoPixelAspectRatio;

typedef int CODECAPI_AVDecVideoAcceleration_MPEG2;

typedef int CODECAPI_AVDecVideoAcceleration_H264;

typedef int CODECAPI_AVDecVideoAcceleration_VC1;

typedef int CODECAPI_AVDecVideoProcDeinterlaceCSC;

typedef int CODECAPI_AVDecVideoThumbnailGenerationMode;

typedef int CODECAPI_AVDecVideoMaxCodedWidth;

typedef int CODECAPI_AVDecVideoMaxCodedHeight;

typedef int CODECAPI_AVDecNumWorkerThreads;

typedef int CODECAPI_AVDecSoftwareDynamicFormatChange;

typedef int CODECAPI_AVDecDisableVideoPostProcessing;

typedef int CODECAPI_AVDecVideoDropPicWithMissingRef;

typedef int CODECAPI_AVDecVideoSoftwareDeinterlaceMode;

typedef enum {
    eAVDecVideoSoftwareDeinterlaceMode_NoDeinterlacing = 0,
    eAVDecVideoSoftwareDeinterlaceMode_ProgressiveDeinterlacing = 1,
    eAVDecVideoSoftwareDeinterlaceMode_BOBDeinterlacing = 2,
    eAVDecVideoSoftwareDeinterlaceMode_SmartBOBDeinterlacing = 3,
} eAVDecVideoSoftwareDeinterlaceMode;

typedef int CODECAPI_AVDecVideoFastDecodeMode;

typedef enum {
    eVideoDecodeCompliant = 0,
    eVideoDecodeOptimalLF = 1,
    eVideoDecodeDisableLF = 2,
    eVideoDecodeFastest = 32,
} eAVFastDecodeMode;

typedef int CODECAPI_AVLowLatencyMode;

typedef int CODECAPI_AVDecVideoH264ErrorConcealment;

typedef enum {
    eErrorConcealmentTypeDrop = 0,
    eErrorConcealmentTypeBasic = 1,
    eErrorConcealmentTypeAdvanced = 2,
    eErrorConcealmentTypeDXVASetBlack = 3,
} eAVDecVideoH264ErrorConcealment;

typedef int CODECAPI_AVDecVideoMPEG2ErrorConcealment;

typedef enum {
    eErrorConcealmentOff = 0,
    eErrorConcealmentOn = 1,
} eAVDecVideoMPEG2ErrorConcealment;

typedef int CODECAPI_AVDecVideoCodecType;

typedef enum {
    eAVDecVideoCodecType_NOTPLAYING = 0,
    eAVDecVideoCodecType_MPEG2 = 1,
    eAVDecVideoCodecType_H264 = 2,
} eAVDecVideoCodecType;

typedef int CODECAPI_AVDecVideoDXVAMode;

typedef enum {
    eAVDecVideoDXVAMode_NOTPLAYING = 0,
    eAVDecVideoDXVAMode_SW = 1,
    eAVDecVideoDXVAMode_MC = 2,
    eAVDecVideoDXVAMode_IDCT = 3,
    eAVDecVideoDXVAMode_VLD = 4,
} eAVDecVideoDXVAMode;

typedef int CODECAPI_AVDecVideoDXVABusEncryption;

typedef enum {
    eAVDecVideoDXVABusEncryption_NONE = 0,
    eAVDecVideoDXVABusEncryption_PRIVATE = 1,
    eAVDecVideoDXVABusEncryption_AES = 2,
} eAVDecVideoDXVABusEncryption;

typedef int CODECAPI_AVEncVideoForceSourceScanType;

typedef enum {
    eAVEncVideoSourceScan_Automatic = 0,
    eAVEncVideoSourceScan_Interlaced = 1,
    eAVEncVideoSourceScan_Progressive = 2,
} eAVEncVideoSourceScanType;

typedef int CODECAPI_AVEncVideoNoOfFieldsToEncode;

typedef int CODECAPI_AVEncVideoNoOfFieldsToSkip;

typedef int CODECAPI_AVEncVideoEncodeDimension;

typedef int CODECAPI_AVEncVideoEncodeOffsetOrigin;

typedef int CODECAPI_AVEncVideoDisplayDimension;

typedef int CODECAPI_AVEncVideoOutputScanType;

typedef enum {
    eAVEncVideoOutputScan_Progressive = 0,
    eAVEncVideoOutputScan_Interlaced = 1,
    eAVEncVideoOutputScan_SameAsInput = 2,
    eAVEncVideoOutputScan_Automatic = 3,
} eAVEncVideoOutputScanType;

typedef int CODECAPI_AVEncVideoInverseTelecineEnable;

typedef int CODECAPI_AVEncVideoInverseTelecineThreshold;

typedef int CODECAPI_AVEncVideoSourceFilmContent;

typedef enum {
    eAVEncVideoFilmContent_VideoOnly = 0,
    eAVEncVideoFilmContent_FilmOnly = 1,
    eAVEncVideoFilmContent_Mixed = 2,
} eAVEncVideoFilmContent;

typedef int CODECAPI_AVEncVideoSourceIsBW;

typedef int CODECAPI_AVEncVideoFieldSwap;

typedef int CODECAPI_AVEncVideoInputChromaResolution;

typedef int CODECAPI_AVEncVideoOutputChromaResolution;

typedef enum {
    eAVEncVideoChromaResolution_SameAsSource = 0,
    eAVEncVideoChromaResolution_444 = 1,
    eAVEncVideoChromaResolution_422 = 2,
    eAVEncVideoChromaResolution_420 = 3,
    eAVEncVideoChromaResolution_411 = 4,
} eAVEncVideoChromaResolution;

typedef int CODECAPI_AVEncVideoInputChromaSubsampling;

typedef int CODECAPI_AVEncVideoOutputChromaSubsampling;

typedef enum {
    eAVEncVideoChromaSubsamplingFormat_SameAsSource = 0,
    eAVEncVideoChromaSubsamplingFormat_ProgressiveChroma = 8,
    eAVEncVideoChromaSubsamplingFormat_Horizontally_Cosited = 4,
    eAVEncVideoChromaSubsamplingFormat_Vertically_Cosited = 2,
    eAVEncVideoChromaSubsamplingFormat_Vertically_AlignedChromaPlanes = 1,
} eAVEncVideoChromaSubsampling;

typedef int CODECAPI_AVEncVideoInputColorPrimaries;

typedef int CODECAPI_AVEncVideoOutputColorPrimaries;

typedef enum {
    eAVEncVideoColorPrimaries_SameAsSource = 0,
    eAVEncVideoColorPrimaries_Reserved = 1,
    eAVEncVideoColorPrimaries_BT709 = 2,
    eAVEncVideoColorPrimaries_BT470_2_SysM = 3,
    eAVEncVideoColorPrimaries_BT470_2_SysBG = 4,
    eAVEncVideoColorPrimaries_SMPTE170M = 5,
    eAVEncVideoColorPrimaries_SMPTE240M = 6,
    eAVEncVideoColorPrimaries_EBU3231 = 7,
    eAVEncVideoColorPrimaries_SMPTE_C = 8,
} eAVEncVideoColorPrimaries;

typedef int CODECAPI_AVEncVideoInputColorTransferFunction;

typedef int CODECAPI_AVEncVideoOutputColorTransferFunction;

typedef enum {
    eAVEncVideoColorTransferFunction_SameAsSource = 0,
    eAVEncVideoColorTransferFunction_10 = 1,
    eAVEncVideoColorTransferFunction_18 = 2,
    eAVEncVideoColorTransferFunction_20 = 3,
    eAVEncVideoColorTransferFunction_22 = 4,
    eAVEncVideoColorTransferFunction_22_709 = 5,
    eAVEncVideoColorTransferFunction_22_240M = 6,
    eAVEncVideoColorTransferFunction_22_8bit_sRGB = 7,
    eAVEncVideoColorTransferFunction_28 = 8,
} eAVEncVideoColorTransferFunction;

typedef int CODECAPI_AVEncVideoInputColorTransferMatrix;

typedef int CODECAPI_AVEncVideoOutputColorTransferMatrix;

typedef enum {
    eAVEncVideoColorTransferMatrix_SameAsSource = 0,
    eAVEncVideoColorTransferMatrix_BT709 = 1,
    eAVEncVideoColorTransferMatrix_BT601 = 2,
    eAVEncVideoColorTransferMatrix_SMPTE240M = 3,
} eAVEncVideoColorTransferMatrix;

typedef int CODECAPI_AVEncVideoInputColorLighting;

typedef int CODECAPI_AVEncVideoOutputColorLighting;

typedef enum {
    eAVEncVideoColorLighting_SameAsSource = 0,
    eAVEncVideoColorLighting_Unknown = 1,
    eAVEncVideoColorLighting_Bright = 2,
    eAVEncVideoColorLighting_Office = 3,
    eAVEncVideoColorLighting_Dim = 4,
    eAVEncVideoColorLighting_Dark = 5,
} eAVEncVideoColorLighting;

typedef int CODECAPI_AVEncVideoInputColorNominalRange;

typedef int CODECAPI_AVEncVideoOutputColorNominalRange;

typedef enum {
    eAVEncVideoColorNominalRange_SameAsSource = 0,
    eAVEncVideoColorNominalRange_0_255 = 1,
    eAVEncVideoColorNominalRange_16_235 = 2,
    eAVEncVideoColorNominalRange_48_208 = 3,
} eAVEncVideoColorNominalRange;

typedef int CODECAPI_AVEncInputVideoSystem;

typedef enum {
    eAVEncInputVideoSystem_Unspecified = 0,
    eAVEncInputVideoSystem_PAL = 1,
    eAVEncInputVideoSystem_NTSC = 2,
    eAVEncInputVideoSystem_SECAM = 3,
    eAVEncInputVideoSystem_MAC = 4,
    eAVEncInputVideoSystem_HDV = 5,
    eAVEncInputVideoSystem_Component = 6,
} eAVEncInputVideoSystem;

typedef int CODECAPI_AVEncVideoHeaderDropFrame;

typedef int CODECAPI_AVEncVideoHeaderHours;

typedef int CODECAPI_AVEncVideoHeaderMinutes;

typedef int CODECAPI_AVEncVideoHeaderSeconds;

typedef int CODECAPI_AVEncVideoHeaderFrames;

typedef int CODECAPI_AVEncVideoDefaultUpperFieldDominant;

typedef int CODECAPI_AVEncVideoCBRMotionTradeoff;

typedef int CODECAPI_AVEncVideoCodedVideoAccessUnitSize;

typedef int CODECAPI_AVEncVideoMaxKeyframeDistance;

typedef int CODECAPI_AVEncH264CABACEnable;

typedef int CODECAPI_AVEncVideoContentType;

typedef enum {
    eAVEncVideoContentType_Unknown = 0,
    eAVEncVideoContentType_FixedCameraAngle = 1,
} eAVEncVideoContentType;

typedef int CODECAPI_AVEncNumWorkerThreads;

typedef int CODECAPI_AVEncVideoEncodeQP;

typedef int CODECAPI_AVEncVideoMinQP;

typedef int CODECAPI_AVEncVideoForceKeyFrame;

typedef int CODECAPI_AVEncH264SPSID;

typedef int CODECAPI_AVEncH264PPSID;

typedef int CODECAPI_AVEncAdaptiveMode;

typedef int CODECAPI_AVScenarioInfo;

typedef int CODECAPI_AVEncMPVGOPSizeMin;

typedef int CODECAPI_AVEncMPVGOPSizeMax;

typedef int CODECAPI_AVEncVideoMaxCTBSize;

typedef int CODECAPI_AVEncVideoCTBSize;

typedef int CODECAPI_VideoEncoderDisplayContentType;

typedef int CODECAPI_AVEncEnableVideoProcessing;

typedef int CODECAPI_AVEncVideoGradualIntraRefresh;

typedef int CODECAPI_GetOPMContext;

typedef int CODECAPI_SetHDCPManagerContext;

typedef int CODECAPI_AVEncVideoMaxTemporalLayers;

typedef int CODECAPI_AVEncVideoNumGOPsPerIDR;

typedef int CODECAPI_AVEncCommonAllowFrameDrops;

typedef int CODECAPI_AVEncVideoIntraLayerPrediction;

typedef int CODECAPI_AVEncVideoInstantTemporalUpSwitching;

typedef int CODECAPI_AVEncLowPowerEncoder;

typedef int CODECAPI_AVEnableInLoopDeblockFilter;

typedef enum {
    eAVEncAdaptiveMode_None = 0,
    eAVEncAdaptiveMode_Resolution = 1,
    eAVEncAdaptiveMode_FrameRate = 2,
} eAVEncAdaptiveMode;

typedef enum {
    eAVScenarioInfo_Unknown = 0,
    eAVScenarioInfo_DisplayRemoting = 1,
    eAVScenarioInfo_VideoConference = 2,
    eAVScenarioInfo_Archive = 3,
    eAVScenarioInfo_LiveStreaming = 4,
    eAVScenarioInfo_CameraRecord = 5,
    eAVScenarioInfo_DisplayRemotingWithFeatureMap = 6,
} eAVScenarioInfo;

typedef enum {
    eVideoEncoderDisplayContent_Unknown = 0,
    eVideoEncoderDisplayContent_FullScreenVideo = 1,
} eVideoEncoderDisplayContentType;

typedef int CODECAPI_AVEncVideoSelectLayer;

typedef int CODECAPI_AVEncVideoTemporalLayerCount;

typedef int CODECAPI_AVEncVideoUsage;

typedef int CODECAPI_AVEncVideoRateControlParams;

typedef int CODECAPI_AVEncVideoSupportedControls;

typedef int CODECAPI_AVEncVideoEncodeFrameTypeQP;

typedef int CODECAPI_AVEncSliceControlMode;

typedef int CODECAPI_AVEncSliceControlSize;

typedef int CODECAPI_AVEncSliceGenerationMode;

typedef int CODECAPI_AVEncVideoMaxNumRefFrame;

typedef int CODECAPI_AVEncVideoMeanAbsoluteDifference;

typedef int CODECAPI_AVEncVideoMaxQP;

typedef int CODECAPI_AVEncVideoLTRBufferControl;

typedef int CODECAPI_AVEncVideoMarkLTRFrame;

typedef int CODECAPI_AVEncVideoUseLTRFrame;

typedef int CODECAPI_AVEncVideoROIEnabled;

typedef int CODECAPI_AVEncVideoDirtyRectEnabled;

typedef int CODECAPI_AVEncMaxFrameRate;

typedef int CODECAPI_AVEncMuxOutputStreamType;

typedef enum {
    eAVEncMuxOutputAuto = 0,
    eAVEncMuxOutputPS = 1,
    eAVEncMuxOutputTS = 2,
} eAVEncMuxOutput;

typedef int CODECAPI_AVEncStatVideoOutputFrameRate;

typedef int CODECAPI_AVEncStatVideoCodedFrames;

typedef int CODECAPI_AVEncStatVideoTotalFrames;

typedef int CODECAPI_AVEncAudioIntervalToEncode;

typedef int CODECAPI_AVEncAudioIntervalToSkip;

typedef int CODECAPI_AVEncAudioDualMono;

typedef enum {
    eAVEncAudioDualMono_SameAsInput = 0,
    eAVEncAudioDualMono_Off = 1,
    eAVEncAudioDualMono_On = 2,
} eAVEncAudioDualMono;

typedef int CODECAPI_AVEncAudioMeanBitRate;

typedef int CODECAPI_AVEncAudioMapDestChannel0;

typedef int CODECAPI_AVEncAudioMapDestChannel1;

typedef int CODECAPI_AVEncAudioMapDestChannel2;

typedef int CODECAPI_AVEncAudioMapDestChannel3;

typedef int CODECAPI_AVEncAudioMapDestChannel4;

typedef int CODECAPI_AVEncAudioMapDestChannel5;

typedef int CODECAPI_AVEncAudioMapDestChannel6;

typedef int CODECAPI_AVEncAudioMapDestChannel7;

typedef int CODECAPI_AVEncAudioMapDestChannel8;

typedef int CODECAPI_AVEncAudioMapDestChannel9;

typedef int CODECAPI_AVEncAudioMapDestChannel10;

typedef int CODECAPI_AVEncAudioMapDestChannel11;

typedef int CODECAPI_AVEncAudioMapDestChannel12;

typedef int CODECAPI_AVEncAudioMapDestChannel13;

typedef int CODECAPI_AVEncAudioMapDestChannel14;

typedef int CODECAPI_AVEncAudioMapDestChannel15;

typedef int CODECAPI_AVEncAudioInputContent;

typedef enum {
    AVEncAudioInputContent_Unknown = 0,
    AVEncAudioInputContent_Voice = 1,
    AVEncAudioInputContent_Music = 2,
} eAVEncAudioInputContent;

typedef int CODECAPI_AVEncStatAudioPeakPCMValue;

typedef int CODECAPI_AVEncStatAudioAveragePCMValue;

typedef int CODECAPI_AVEncStatAudioAverageBPS;

typedef int CODECAPI_AVEncStatAverageBPS;

typedef int CODECAPI_AVEncStatHardwareProcessorUtilitization;

typedef int CODECAPI_AVEncStatHardwareBandwidthUtilitization;

typedef int CODECAPI_AVEncMPVGOPSize;

typedef int CODECAPI_AVEncMPVGOPOpen;

typedef int CODECAPI_AVEncMPVDefaultBPictureCount;

typedef int CODECAPI_AVEncMPVProfile;

typedef enum {
    eAVEncMPVProfile_unknown = 0,
    eAVEncMPVProfile_Simple = 1,
    eAVEncMPVProfile_Main = 2,
    eAVEncMPVProfile_High = 3,
    eAVEncMPVProfile_422 = 4,
} eAVEncMPVProfile;

typedef int CODECAPI_AVEncMPVLevel;

typedef enum {
    eAVEncMPVLevel_Low = 1,
    eAVEncMPVLevel_Main = 2,
    eAVEncMPVLevel_High1440 = 3,
    eAVEncMPVLevel_High = 4,
} eAVEncMPVLevel;

typedef enum {
    eAVEncH263VProfile_Base = 0,
    eAVEncH263VProfile_CompatibilityV2 = 1,
    eAVEncH263VProfile_CompatibilityV1 = 2,
    eAVEncH263VProfile_WirelessV2 = 3,
    eAVEncH263VProfile_WirelessV3 = 4,
    eAVEncH263VProfile_HighCompression = 5,
    eAVEncH263VProfile_Internet = 6,
    eAVEncH263VProfile_Interlace = 7,
    eAVEncH263VProfile_HighLatency = 8,
} eAVEncH263VProfile;

typedef enum {
    eAVEncH264VProfile_unknown = 0,
    eAVEncH264VProfile_Simple = 66,
    eAVEncH264VProfile_Base = 66,
    eAVEncH264VProfile_Main = 77,
    eAVEncH264VProfile_High = 100,
    eAVEncH264VProfile_422 = 122,
    eAVEncH264VProfile_High10 = 110,
    eAVEncH264VProfile_444 = 244,
    eAVEncH264VProfile_Extended = 88,
    eAVEncH264VProfile_ScalableBase = 83,
    eAVEncH264VProfile_ScalableHigh = 86,
    eAVEncH264VProfile_MultiviewHigh = 118,
    eAVEncH264VProfile_StereoHigh = 128,
    eAVEncH264VProfile_ConstrainedBase = 256,
    eAVEncH264VProfile_UCConstrainedHigh = 257,
    eAVEncH264VProfile_UCScalableConstrainedBase = 258,
    eAVEncH264VProfile_UCScalableConstrainedHigh = 259,
} eAVEncH264VProfile;

typedef enum {
    eAVEncH265VProfile_unknown = 0,
    eAVEncH265VProfile_Main_420_8 = 1,
    eAVEncH265VProfile_Main_420_10 = 2,
    eAVEncH265VProfile_Main_420_12 = 3,
    eAVEncH265VProfile_Main_422_10 = 4,
    eAVEncH265VProfile_Main_422_12 = 5,
    eAVEncH265VProfile_Main_444_8 = 6,
    eAVEncH265VProfile_Main_444_10 = 7,
    eAVEncH265VProfile_Main_444_12 = 8,
    eAVEncH265VProfile_Monochrome_12 = 9,
    eAVEncH265VProfile_Monochrome_16 = 10,
    eAVEncH265VProfile_MainIntra_420_8 = 11,
    eAVEncH265VProfile_MainIntra_420_10 = 12,
    eAVEncH265VProfile_MainIntra_420_12 = 13,
    eAVEncH265VProfile_MainIntra_422_10 = 14,
    eAVEncH265VProfile_MainIntra_422_12 = 15,
    eAVEncH265VProfile_MainIntra_444_8 = 16,
    eAVEncH265VProfile_MainIntra_444_10 = 17,
    eAVEncH265VProfile_MainIntra_444_12 = 18,
    eAVEncH265VProfile_MainIntra_444_16 = 19,
    eAVEncH265VProfile_MainStill_420_8 = 20,
    eAVEncH265VProfile_MainStill_444_8 = 21,
    eAVEncH265VProfile_MainStill_444_16 = 22,
} eAVEncH265VProfile;

typedef enum {
    eAVEncVP9VProfile_unknown = 0,
    eAVEncVP9VProfile_420_8 = 1,
    eAVEncVP9VProfile_420_10 = 2,
    eAVEncVP9VProfile_420_12 = 3,
} eAVEncVP9VProfile;

typedef enum {
    eAVEncH263PictureType_I = 0,
    eAVEncH263PictureType_P = 1,
    eAVEncH263PictureType_B = 2,
} eAVEncH263PictureType;

typedef enum {
    eAVEncH264PictureType_IDR = 0,
    eAVEncH264PictureType_P = 1,
    eAVEncH264PictureType_B = 2,
} eAVEncH264PictureType;

typedef enum {
    eAVEncH263VLevel1 = 10,
    eAVEncH263VLevel2 = 20,
    eAVEncH263VLevel3 = 30,
    eAVEncH263VLevel4 = 40,
    eAVEncH263VLevel4_5 = 45,
    eAVEncH263VLevel5 = 50,
    eAVEncH263VLevel6 = 60,
    eAVEncH263VLevel7 = 70,
} eAVEncH263VLevel;

typedef enum {
    eAVEncH264VLevel1 = 10,
    eAVEncH264VLevel1_b = 11,
    eAVEncH264VLevel1_1 = 11,
    eAVEncH264VLevel1_2 = 12,
    eAVEncH264VLevel1_3 = 13,
    eAVEncH264VLevel2 = 20,
    eAVEncH264VLevel2_1 = 21,
    eAVEncH264VLevel2_2 = 22,
    eAVEncH264VLevel3 = 30,
    eAVEncH264VLevel3_1 = 31,
    eAVEncH264VLevel3_2 = 32,
    eAVEncH264VLevel4 = 40,
    eAVEncH264VLevel4_1 = 41,
    eAVEncH264VLevel4_2 = 42,
    eAVEncH264VLevel5 = 50,
    eAVEncH264VLevel5_1 = 51,
    eAVEncH264VLevel5_2 = 52,
} eAVEncH264VLevel;

typedef enum {
    eAVEncH265VLevel1 = 30,
    eAVEncH265VLevel2 = 60,
    eAVEncH265VLevel2_1 = 63,
    eAVEncH265VLevel3 = 90,
    eAVEncH265VLevel3_1 = 93,
    eAVEncH265VLevel4 = 120,
    eAVEncH265VLevel4_1 = 123,
    eAVEncH265VLevel5 = 150,
    eAVEncH265VLevel5_1 = 153,
    eAVEncH265VLevel5_2 = 156,
    eAVEncH265VLevel6 = 180,
    eAVEncH265VLevel6_1 = 183,
    eAVEncH265VLevel6_2 = 186,
} eAVEncH265VLevel;

typedef int CODECAPI_AVEncMPVFrameFieldMode;

typedef enum {
    eAVEncMPVFrameFieldMode_FieldMode = 0,
    eAVEncMPVFrameFieldMode_FrameMode = 1,
} eAVEncMPVFrameFieldMode;

typedef int CODECAPI_AVEncMPVAddSeqEndCode;

typedef int CODECAPI_AVEncMPVGOPSInSeq;

typedef int CODECAPI_AVEncMPVUseConcealmentMotionVectors;

typedef int CODECAPI_AVEncMPVSceneDetection;

typedef enum {
    eAVEncMPVSceneDetection_None = 0,
    eAVEncMPVSceneDetection_InsertIPicture = 1,
    eAVEncMPVSceneDetection_StartNewGOP = 2,
    eAVEncMPVSceneDetection_StartNewLocatableGOP = 3,
} eAVEncMPVSceneDetection;

typedef int CODECAPI_AVEncMPVGenerateHeaderSeqExt;

typedef int CODECAPI_AVEncMPVGenerateHeaderSeqDispExt;

typedef int CODECAPI_AVEncMPVGenerateHeaderPicExt;

typedef int CODECAPI_AVEncMPVGenerateHeaderPicDispExt;

typedef int CODECAPI_AVEncMPVGenerateHeaderSeqScaleExt;

typedef int CODECAPI_AVEncMPVScanPattern;

typedef enum {
    eAVEncMPVScanPattern_Auto = 0,
    eAVEncMPVScanPattern_ZigZagScan = 1,
    eAVEncMPVScanPattern_AlternateScan = 2,
} eAVEncMPVScanPattern;

typedef int CODECAPI_AVEncMPVIntraDCPrecision;

typedef int CODECAPI_AVEncMPVQScaleType;

typedef enum {
    eAVEncMPVQScaleType_Auto = 0,
    eAVEncMPVQScaleType_Linear = 1,
    eAVEncMPVQScaleType_NonLinear = 2,
} eAVEncMPVQScaleType;

typedef int CODECAPI_AVEncMPVIntraVLCTable;

typedef enum {
    eAVEncMPVIntraVLCTable_Auto = 0,
    eAVEncMPVIntraVLCTable_MPEG1 = 1,
    eAVEncMPVIntraVLCTable_Alternate = 2,
} eAVEncMPVIntraVLCTable;

typedef int CODECAPI_AVEncMPVQuantMatrixIntra;

typedef int CODECAPI_AVEncMPVQuantMatrixNonIntra;

typedef int CODECAPI_AVEncMPVQuantMatrixChromaIntra;

typedef int CODECAPI_AVEncMPVQuantMatrixChromaNonIntra;

typedef int CODECAPI_AVEncMPALayer;

typedef enum {
    eAVEncMPALayer_1 = 1,
    eAVEncMPALayer_2 = 2,
    eAVEncMPALayer_3 = 3,
} eAVEncMPALayer;

typedef int CODECAPI_AVEncMPACodingMode;

typedef enum {
    eAVEncMPACodingMode_Mono = 0,
    eAVEncMPACodingMode_Stereo = 1,
    eAVEncMPACodingMode_DualChannel = 2,
    eAVEncMPACodingMode_JointStereo = 3,
    eAVEncMPACodingMode_Surround = 4,
} eAVEncMPACodingMode;

typedef int CODECAPI_AVEncMPACopyright;

typedef int CODECAPI_AVEncMPAOriginalBitstream;

typedef int CODECAPI_AVEncMPAEnableRedundancyProtection;

typedef int CODECAPI_AVEncMPAPrivateUserBit;

typedef int CODECAPI_AVEncMPAEmphasisType;

typedef enum {
    eAVEncMPAEmphasisType_None = 0,
    eAVEncMPAEmphasisType_50_15 = 1,
    eAVEncMPAEmphasisType_Reserved = 2,
    eAVEncMPAEmphasisType_CCITT_J17 = 3,
} eAVEncMPAEmphasisType;

typedef int CODECAPI_AVEncDDService;

typedef enum {
    eAVEncDDService_CM = 0,
    eAVEncDDService_ME = 1,
    eAVEncDDService_VI = 2,
    eAVEncDDService_HI = 3,
    eAVEncDDService_D = 4,
    eAVEncDDService_C = 5,
    eAVEncDDService_E = 6,
    eAVEncDDService_VO = 7,
} eAVEncDDService;

typedef int CODECAPI_AVEncDDDialogNormalization;

typedef int CODECAPI_AVEncDDCentreDownMixLevel;

typedef int CODECAPI_AVEncDDSurroundDownMixLevel;

typedef int CODECAPI_AVEncDDProductionInfoExists;

typedef int CODECAPI_AVEncDDProductionRoomType;

typedef enum {
    eAVEncDDProductionRoomType_NotIndicated = 0,
    eAVEncDDProductionRoomType_Large = 1,
    eAVEncDDProductionRoomType_Small = 2,
} eAVEncDDProductionRoomType;

typedef int CODECAPI_AVEncDDProductionMixLevel;

typedef int CODECAPI_AVEncDDCopyright;

typedef int CODECAPI_AVEncDDOriginalBitstream;

typedef int CODECAPI_AVEncDDDigitalDeemphasis;

typedef int CODECAPI_AVEncDDDCHighPassFilter;

typedef int CODECAPI_AVEncDDChannelBWLowPassFilter;

typedef int CODECAPI_AVEncDDLFELowPassFilter;

typedef int CODECAPI_AVEncDDSurround90DegreeePhaseShift;

typedef int CODECAPI_AVEncDDSurround3dBAttenuation;

typedef int CODECAPI_AVEncDDDynamicRangeCompressionControl;

typedef enum {
    eAVEncDDDynamicRangeCompressionControl_None = 0,
    eAVEncDDDynamicRangeCompressionControl_FilmStandard = 1,
    eAVEncDDDynamicRangeCompressionControl_FilmLight = 2,
    eAVEncDDDynamicRangeCompressionControl_MusicStandard = 3,
    eAVEncDDDynamicRangeCompressionControl_MusicLight = 4,
    eAVEncDDDynamicRangeCompressionControl_Speech = 5,
} eAVEncDDDynamicRangeCompressionControl;

typedef int CODECAPI_AVEncDDRFPreEmphasisFilter;

typedef int CODECAPI_AVEncDDSurroundExMode;

typedef enum {
    eAVEncDDSurroundExMode_NotIndicated = 0,
    eAVEncDDSurroundExMode_No = 1,
    eAVEncDDSurroundExMode_Yes = 2,
} eAVEncDDSurroundExMode;

typedef int CODECAPI_AVEncDDPreferredStereoDownMixMode;

typedef enum {
    eAVEncDDPreferredStereoDownMixMode_LtRt = 0,
    eAVEncDDPreferredStereoDownMixMode_LoRo = 1,
} eAVEncDDPreferredStereoDownMixMode;

typedef int CODECAPI_AVEncDDLtRtCenterMixLvl_x10;

typedef int CODECAPI_AVEncDDLtRtSurroundMixLvl_x10;

typedef int CODECAPI_AVEncDDLoRoCenterMixLvl_x10;

typedef int CODECAPI_AVEncDDLoRoSurroundMixLvl_x10;

typedef int CODECAPI_AVEncDDAtoDConverterType;

typedef enum {
    eAVEncDDAtoDConverterType_Standard = 0,
    eAVEncDDAtoDConverterType_HDCD = 1,
} eAVEncDDAtoDConverterType;

typedef int CODECAPI_AVEncDDHeadphoneMode;

typedef enum {
    eAVEncDDHeadphoneMode_NotIndicated = 0,
    eAVEncDDHeadphoneMode_NotEncoded = 1,
    eAVEncDDHeadphoneMode_Encoded = 2,
} eAVEncDDHeadphoneMode;

typedef int CODECAPI_AVEncWMVKeyFrameDistance;

typedef int CODECAPI_AVEncWMVInterlacedEncoding;

typedef int CODECAPI_AVEncWMVDecoderComplexity;

typedef int CODECAPI_AVEncWMVKeyFrameBufferLevelMarker;

typedef int CODECAPI_AVEncWMVProduceDummyFrames;

typedef int CODECAPI_AVEncStatWMVCBAvg;

typedef int CODECAPI_AVEncStatWMVCBMax;

typedef int CODECAPI_AVEncStatWMVDecoderComplexityProfile;

typedef int CODECAPI_AVEncStatMPVSkippedEmptyFrames;

typedef int CODECAPI_AVEncMP12PktzSTDBuffer;

typedef int CODECAPI_AVEncMP12PktzStreamID;

typedef int CODECAPI_AVEncMP12PktzInitialPTS;

typedef int CODECAPI_AVEncMP12PktzPacketSize;

typedef int CODECAPI_AVEncMP12PktzCopyright;

typedef int CODECAPI_AVEncMP12PktzOriginal;

typedef int CODECAPI_AVEncMP12MuxPacketOverhead;

typedef int CODECAPI_AVEncMP12MuxNumStreams;

typedef int CODECAPI_AVEncMP12MuxEarliestPTS;

typedef int CODECAPI_AVEncMP12MuxLargestPacketSize;

typedef int CODECAPI_AVEncMP12MuxInitialSCR;

typedef int CODECAPI_AVEncMP12MuxMuxRate;

typedef int CODECAPI_AVEncMP12MuxPackSize;

typedef int CODECAPI_AVEncMP12MuxSysSTDBufferBound;

typedef int CODECAPI_AVEncMP12MuxSysRateBound;

typedef int CODECAPI_AVEncMP12MuxTargetPacketizer;

typedef int CODECAPI_AVEncMP12MuxSysFixed;

typedef int CODECAPI_AVEncMP12MuxSysCSPS;

typedef int CODECAPI_AVEncMP12MuxSysVideoLock;

typedef int CODECAPI_AVEncMP12MuxSysAudioLock;

typedef int CODECAPI_AVEncMP12MuxDVDNavPacks;

typedef int CODECAPI_AVDecCommonInputFormat;

typedef int CODECAPI_AVDecCommonOutputFormat;

typedef int CODECAPI_AVDecCommonMeanBitRate;

typedef int CODECAPI_AVDecCommonMeanBitRateInterval;

typedef int CODECAPI_GUID_AVDecAudioOutputFormat_PCM_Stereo_MatrixEncoded;

typedef int CODECAPI_GUID_AVDecAudioOutputFormat_PCM;

typedef int CODECAPI_GUID_AVDecAudioOutputFormat_SPDIF_PCM;

typedef int CODECAPI_GUID_AVDecAudioOutputFormat_SPDIF_Bitstream;

typedef int CODECAPI_GUID_AVDecAudioOutputFormat_PCM_Headphones;

typedef int CODECAPI_GUID_AVDecAudioOutputFormat_PCM_Stereo_Auto;

typedef int CODECAPI_AVDecVideoImageSize;

typedef int CODECAPI_AVDecVideoPixelAspectRatio;

typedef int CODECAPI_AVDecVideoInputScanType;

typedef enum {
    eAVDecVideoInputScan_Unknown = 0,
    eAVDecVideoInputScan_Progressive = 1,
    eAVDecVideoInputScan_Interlaced_UpperFieldFirst = 2,
    eAVDecVideoInputScan_Interlaced_LowerFieldFirst = 3,
} eAVDecVideoInputScanType;

typedef int CODECAPI_AVDecVideoSWPowerLevel;

typedef enum {
    eAVDecVideoSWPowerLevel_BatteryLife = 0,
    eAVDecVideoSWPowerLevel_Balanced = 50,
    eAVDecVideoSWPowerLevel_VideoQuality = 100,
} eAVDecVideoSWPowerLevel;

typedef int CODECAPI_GUID_AVDecAudioInputWMA;

typedef int CODECAPI_GUID_AVDecAudioInputWMAPro;

typedef int CODECAPI_GUID_AVDecAudioInputDolby;

typedef int CODECAPI_GUID_AVDecAudioInputDTS;

typedef int CODECAPI_GUID_AVDecAudioInputPCM;

typedef int CODECAPI_GUID_AVDecAudioInputMPEG;

typedef int CODECAPI_GUID_AVDecAudioInputAAC;

typedef int CODECAPI_GUID_AVDecAudioInputHEAAC;

typedef int CODECAPI_GUID_AVDecAudioInputDolbyDigitalPlus;

typedef int CODECAPI_AVDecAACDownmixMode;

typedef enum {
    eAVDecAACUseISODownmix = 0,
    eAVDecAACUseARIBDownmix = 1,
} eAVDecAACDownmixMode;

typedef int CODECAPI_AVDecHEAACDynamicRangeControl;

typedef enum {
    eAVDecHEAACDynamicRangeControl_OFF = 0,
    eAVDecHEAACDynamicRangeControl_ON = 1,
} eAVDecHEAACDynamicRangeControl;

typedef int CODECAPI_AVDecAudioDualMono;

typedef enum {
    eAVDecAudioDualMono_IsNotDualMono = 0,
    eAVDecAudioDualMono_IsDualMono = 1,
    eAVDecAudioDualMono_UnSpecified = 2,
} eAVDecAudioDualMono;

typedef int CODECAPI_AVDecAudioDualMonoReproMode;

typedef enum {
    eAVDecAudioDualMonoReproMode_STEREO = 0,
    eAVDecAudioDualMonoReproMode_LEFT_MONO = 1,
    eAVDecAudioDualMonoReproMode_RIGHT_MONO = 2,
    eAVDecAudioDualMonoReproMode_MIX_MONO = 3,
} eAVDecAudioDualMonoReproMode;

typedef int CODECAPI_AVAudioChannelCount;

typedef int CODECAPI_AVAudioChannelConfig;

typedef enum {
    eAVAudioChannelConfig_FRONT_LEFT = 1,
    eAVAudioChannelConfig_FRONT_RIGHT = 2,
    eAVAudioChannelConfig_FRONT_CENTER = 4,
    eAVAudioChannelConfig_LOW_FREQUENCY = 8,
    eAVAudioChannelConfig_BACK_LEFT = 16,
    eAVAudioChannelConfig_BACK_RIGHT = 32,
    eAVAudioChannelConfig_FRONT_LEFT_OF_CENTER = 64,
    eAVAudioChannelConfig_FRONT_RIGHT_OF_CENTER = 128,
    eAVAudioChannelConfig_BACK_CENTER = 256,
    eAVAudioChannelConfig_SIDE_LEFT = 512,
    eAVAudioChannelConfig_SIDE_RIGHT = 1024,
    eAVAudioChannelConfig_TOP_CENTER = 2048,
    eAVAudioChannelConfig_TOP_FRONT_LEFT = 4096,
    eAVAudioChannelConfig_TOP_FRONT_CENTER = 8192,
    eAVAudioChannelConfig_TOP_FRONT_RIGHT = 16384,
    eAVAudioChannelConfig_TOP_BACK_LEFT = 32768,
    eAVAudioChannelConfig_TOP_BACK_CENTER = 65536,
    eAVAudioChannelConfig_TOP_BACK_RIGHT = 131072,
} eAVAudioChannelConfig;

typedef int CODECAPI_AVAudioSampleRate;

typedef int CODECAPI_AVDDSurroundMode;

typedef enum {
    eAVDDSurroundMode_NotIndicated = 0,
    eAVDDSurroundMode_No = 1,
    eAVDDSurroundMode_Yes = 2,
} eAVDDSurroundMode;

typedef int CODECAPI_AVDecDDOperationalMode;

typedef enum {
    eAVDecDDOperationalMode_NONE = 0,
    eAVDecDDOperationalMode_LINE = 1,
    eAVDecDDOperationalMode_RF = 2,
    eAVDecDDOperationalMode_CUSTOM0 = 3,
    eAVDecDDOperationalMode_CUSTOM1 = 4,
    eAVDecDDOperationalMode_PORTABLE8 = 5,
    eAVDecDDOperationalMode_PORTABLE11 = 6,
    eAVDecDDOperationalMode_PORTABLE14 = 7,
} eAVDecDDOperationalMode;

typedef int CODECAPI_AVDecDDMatrixDecodingMode;

typedef enum {
    eAVDecDDMatrixDecodingMode_OFF = 0,
    eAVDecDDMatrixDecodingMode_ON = 1,
    eAVDecDDMatrixDecodingMode_AUTO = 2,
} eAVDecDDMatrixDecodingMode;

typedef int CODECAPI_AVDecDDDynamicRangeScaleHigh;

typedef int CODECAPI_AVDecDDDynamicRangeScaleLow;

typedef int CODECAPI_AVDecDDStereoDownMixMode;

typedef enum {
    eAVDecDDStereoDownMixMode_Auto = 0,
    eAVDecDDStereoDownMixMode_LtRt = 1,
    eAVDecDDStereoDownMixMode_LoRo = 2,
} eAVDecDDStereoDownMixMode;

typedef int CODECAPI_AVDSPLoudnessEqualization;

typedef enum {
    eAVDSPLoudnessEqualization_OFF = 0,
    eAVDSPLoudnessEqualization_ON = 1,
    eAVDSPLoudnessEqualization_AUTO = 2,
} eAVDSPLoudnessEqualization;

typedef int CODECAPI_AVDSPSpeakerFill;

typedef enum {
    eAVDSPSpeakerFill_OFF = 0,
    eAVDSPSpeakerFill_ON = 1,
    eAVDSPSpeakerFill_AUTO = 2,
} eAVDSPSpeakerFill;

typedef int CODECAPI_AVPriorityControl;

typedef int CODECAPI_AVRealtimeControl;

typedef int CODECAPI_AVEncNoInputCopy;

typedef enum {
    eAVEncChromaEncodeMode_420 = 0,
    eAVEncChromaEncodeMode_444 = 1,
    eAVEncChromaEncodeMode_444_v2 = 2,
} eAVEncChromaEncodeMode;

typedef int CODECAPI_AVEncChromaEncodeMode;

typedef enum {
    DXVAHD_FRAME_FORMAT_PROGRESSIVE = 0,
    DXVAHD_FRAME_FORMAT_INTERLACED_TOP_FIELD_FIRST = 1,
    DXVAHD_FRAME_FORMAT_INTERLACED_BOTTOM_FIELD_FIRST = 2,
} DXVAHD_FRAME_FORMAT;

typedef enum {
    DXVAHD_DEVICE_USAGE_PLAYBACK_NORMAL = 0,
    DXVAHD_DEVICE_USAGE_OPTIMAL_SPEED = 1,
    DXVAHD_DEVICE_USAGE_OPTIMAL_QUALITY = 2,
} DXVAHD_DEVICE_USAGE;

typedef enum {
    DXVAHD_SURFACE_TYPE_VIDEO_INPUT = 0,
    DXVAHD_SURFACE_TYPE_VIDEO_INPUT_PRIVATE = 1,
    DXVAHD_SURFACE_TYPE_VIDEO_OUTPUT = 2,
} DXVAHD_SURFACE_TYPE;

typedef enum {
    DXVAHD_DEVICE_TYPE_HARDWARE = 0,
    DXVAHD_DEVICE_TYPE_SOFTWARE = 1,
    DXVAHD_DEVICE_TYPE_REFERENCE = 2,
    DXVAHD_DEVICE_TYPE_OTHER = 3,
} DXVAHD_DEVICE_TYPE;

typedef enum {
    DXVAHD_DEVICE_CAPS_LINEAR_SPACE = 1,
    DXVAHD_DEVICE_CAPS_xvYCC = 2,
    DXVAHD_DEVICE_CAPS_RGB_RANGE_CONVERSION = 4,
    DXVAHD_DEVICE_CAPS_YCbCr_MATRIX_CONVERSION = 8,
} DXVAHD_DEVICE_CAPS;

typedef enum {
    DXVAHD_FEATURE_CAPS_ALPHA_FILL = 1,
    DXVAHD_FEATURE_CAPS_CONSTRICTION = 2,
    DXVAHD_FEATURE_CAPS_LUMA_KEY = 4,
    DXVAHD_FEATURE_CAPS_ALPHA_PALETTE = 8,
} DXVAHD_FEATURE_CAPS;

typedef enum {
    DXVAHD_FILTER_CAPS_BRIGHTNESS = 1,
    DXVAHD_FILTER_CAPS_CONTRAST = 2,
    DXVAHD_FILTER_CAPS_HUE = 4,
    DXVAHD_FILTER_CAPS_SATURATION = 8,
    DXVAHD_FILTER_CAPS_NOISE_REDUCTION = 16,
    DXVAHD_FILTER_CAPS_EDGE_ENHANCEMENT = 32,
    DXVAHD_FILTER_CAPS_ANAMORPHIC_SCALING = 64,
} DXVAHD_FILTER_CAPS;

typedef enum {
    DXVAHD_INPUT_FORMAT_CAPS_RGB_INTERLACED = 1,
    DXVAHD_INPUT_FORMAT_CAPS_RGB_PROCAMP = 2,
    DXVAHD_INPUT_FORMAT_CAPS_RGB_LUMA_KEY = 4,
    DXVAHD_INPUT_FORMAT_CAPS_PALETTE_INTERLACED = 8,
} DXVAHD_INPUT_FORMAT_CAPS;

typedef enum {
    DXVAHD_PROCESSOR_CAPS_DEINTERLACE_BLEND = 1,
    DXVAHD_PROCESSOR_CAPS_DEINTERLACE_BOB = 2,
    DXVAHD_PROCESSOR_CAPS_DEINTERLACE_ADAPTIVE = 4,
    DXVAHD_PROCESSOR_CAPS_DEINTERLACE_MOTION_COMPENSATION = 8,
    DXVAHD_PROCESSOR_CAPS_INVERSE_TELECINE = 16,
    DXVAHD_PROCESSOR_CAPS_FRAME_RATE_CONVERSION = 32,
} DXVAHD_PROCESSOR_CAPS;

typedef enum {
    DXVAHD_ITELECINE_CAPS_32 = 1,
    DXVAHD_ITELECINE_CAPS_22 = 2,
    DXVAHD_ITELECINE_CAPS_2224 = 4,
    DXVAHD_ITELECINE_CAPS_2332 = 8,
    DXVAHD_ITELECINE_CAPS_32322 = 16,
    DXVAHD_ITELECINE_CAPS_55 = 32,
    DXVAHD_ITELECINE_CAPS_64 = 64,
    DXVAHD_ITELECINE_CAPS_87 = 128,
    DXVAHD_ITELECINE_CAPS_222222222223 = 256,
    DXVAHD_ITELECINE_CAPS_OTHER = -2147483648,
} DXVAHD_ITELECINE_CAPS;

typedef enum {
    DXVAHD_FILTER_BRIGHTNESS = 0,
    DXVAHD_FILTER_CONTRAST = 1,
    DXVAHD_FILTER_HUE = 2,
    DXVAHD_FILTER_SATURATION = 3,
    DXVAHD_FILTER_NOISE_REDUCTION = 4,
    DXVAHD_FILTER_EDGE_ENHANCEMENT = 5,
    DXVAHD_FILTER_ANAMORPHIC_SCALING = 6,
} DXVAHD_FILTER;

typedef enum {
    DXVAHD_BLT_STATE_TARGET_RECT = 0,
    DXVAHD_BLT_STATE_BACKGROUND_COLOR = 1,
    DXVAHD_BLT_STATE_OUTPUT_COLOR_SPACE = 2,
    DXVAHD_BLT_STATE_ALPHA_FILL = 3,
    DXVAHD_BLT_STATE_CONSTRICTION = 4,
    DXVAHD_BLT_STATE_PRIVATE = 1000,
} DXVAHD_BLT_STATE;

typedef enum {
    DXVAHD_ALPHA_FILL_MODE_OPAQUE = 0,
    DXVAHD_ALPHA_FILL_MODE_BACKGROUND = 1,
    DXVAHD_ALPHA_FILL_MODE_DESTINATION = 2,
    DXVAHD_ALPHA_FILL_MODE_SOURCE_STREAM = 3,
} DXVAHD_ALPHA_FILL_MODE;

typedef enum {
    DXVAHD_STREAM_STATE_D3DFORMAT = 0,
    DXVAHD_STREAM_STATE_FRAME_FORMAT = 1,
    DXVAHD_STREAM_STATE_INPUT_COLOR_SPACE = 2,
    DXVAHD_STREAM_STATE_OUTPUT_RATE = 3,
    DXVAHD_STREAM_STATE_SOURCE_RECT = 4,
    DXVAHD_STREAM_STATE_DESTINATION_RECT = 5,
    DXVAHD_STREAM_STATE_ALPHA = 6,
    DXVAHD_STREAM_STATE_PALETTE = 7,
    DXVAHD_STREAM_STATE_LUMA_KEY = 8,
    DXVAHD_STREAM_STATE_ASPECT_RATIO = 9,
    DXVAHD_STREAM_STATE_FILTER_BRIGHTNESS = 100,
    DXVAHD_STREAM_STATE_FILTER_CONTRAST = 101,
    DXVAHD_STREAM_STATE_FILTER_HUE = 102,
    DXVAHD_STREAM_STATE_FILTER_SATURATION = 103,
    DXVAHD_STREAM_STATE_FILTER_NOISE_REDUCTION = 104,
    DXVAHD_STREAM_STATE_FILTER_EDGE_ENHANCEMENT = 105,
    DXVAHD_STREAM_STATE_FILTER_ANAMORPHIC_SCALING = 106,
    DXVAHD_STREAM_STATE_PRIVATE = 1000,
} DXVAHD_STREAM_STATE;

typedef enum {
    DXVAHD_OUTPUT_RATE_NORMAL = 0,
    DXVAHD_OUTPUT_RATE_HALF = 1,
    DXVAHD_OUTPUT_RATE_CUSTOM = 2,
} DXVAHD_OUTPUT_RATE;

typedef int DXVAHD_RATIONAL;

typedef int DXVAHD_COLOR_RGBA;

typedef int DXVAHD_COLOR_YCbCrA;

typedef int DXVAHD_COLOR;

typedef int DXVAHD_CONTENT_DESC;

typedef int DXVAHD_VPDEVCAPS;

typedef int DXVAHD_VPCAPS;

typedef int DXVAHD_CUSTOM_RATE_DATA;

typedef int DXVAHD_FILTER_RANGE_DATA;

typedef int DXVAHD_BLT_STATE_TARGET_RECT_DATA;

typedef int DXVAHD_BLT_STATE_BACKGROUND_COLOR_DATA;

typedef int DXVAHD_BLT_STATE_OUTPUT_COLOR_SPACE_DATA;

typedef int DXVAHD_BLT_STATE_ALPHA_FILL_DATA;

typedef int DXVAHD_BLT_STATE_CONSTRICTION_DATA;

typedef int DXVAHD_BLT_STATE_PRIVATE_DATA;

typedef int DXVAHD_STREAM_STATE_D3DFORMAT_DATA;

typedef int DXVAHD_STREAM_STATE_FRAME_FORMAT_DATA;

typedef int DXVAHD_STREAM_STATE_INPUT_COLOR_SPACE_DATA;

typedef int DXVAHD_STREAM_STATE_OUTPUT_RATE_DATA;

typedef int DXVAHD_STREAM_STATE_SOURCE_RECT_DATA;

typedef int DXVAHD_STREAM_STATE_DESTINATION_RECT_DATA;

typedef int DXVAHD_STREAM_STATE_ALPHA_DATA;

typedef int DXVAHD_STREAM_STATE_PALETTE_DATA;

typedef int DXVAHD_STREAM_STATE_LUMA_KEY_DATA;

typedef int DXVAHD_STREAM_STATE_ASPECT_RATIO_DATA;

typedef int DXVAHD_STREAM_STATE_FILTER_DATA;

typedef int DXVAHD_STREAM_STATE_PRIVATE_DATA;

typedef int DXVAHD_STREAM_DATA;

typedef int DXVAHD_STREAM_STATE_PRIVATE_IVTC_DATA;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDXVAHD_Device;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDXVAHD_VideoProcessor;

typedef int PDXVAHDSW_CreateDevice;

typedef int PDXVAHDSW_ProposeVideoPrivateFormat;

typedef int PDXVAHDSW_GetVideoProcessorDeviceCaps;

typedef int PDXVAHDSW_GetVideoProcessorOutputFormats;

typedef int PDXVAHDSW_GetVideoProcessorInputFormats;

typedef int PDXVAHDSW_GetVideoProcessorCaps;

typedef int PDXVAHDSW_GetVideoProcessorCustomRates;

typedef int PDXVAHDSW_GetVideoProcessorFilterRange;

typedef int PDXVAHDSW_DestroyDevice;

typedef int PDXVAHDSW_CreateVideoProcessor;

typedef int PDXVAHDSW_SetVideoProcessBltState;

typedef int PDXVAHDSW_GetVideoProcessBltStatePrivate;

typedef int PDXVAHDSW_SetVideoProcessStreamState;

typedef int PDXVAHDSW_GetVideoProcessStreamStatePrivate;

typedef int PDXVAHDSW_VideoProcessBltHD;

typedef int PDXVAHDSW_DestroyVideoProcessor;

typedef int DXVAHDSW_CALLBACKS;

typedef int PDXVAHDSW_Plugin;

typedef int DXVAHDETW_CREATEVIDEOPROCESSOR;

typedef int DXVAHDETW_VIDEOPROCESSBLTSTATE;

typedef int DXVAHDETW_VIDEOPROCESSSTREAMSTATE;

typedef int DXVAHDETW_VIDEOPROCESSBLTHD;

typedef int DXVAHDETW_VIDEOPROCESSBLTHD_STREAM;

typedef int DXVAHDETW_DESTROYVIDEOPROCESSOR;

typedef int PDXVAHD_CreateDevice;

typedef int DXVA2_ExtendedFormat;

typedef enum {
    DXVA2_SampleFormatMask = 255,
    DXVA2_SampleUnknown = 0,
    DXVA2_SampleProgressiveFrame = 2,
    DXVA2_SampleFieldInterleavedEvenFirst = 3,
    DXVA2_SampleFieldInterleavedOddFirst = 4,
    DXVA2_SampleFieldSingleEven = 5,
    DXVA2_SampleFieldSingleOdd = 6,
    DXVA2_SampleSubStream = 7,
} DXVA2_SampleFormat;

typedef enum {
    DXVA2_VideoChromaSubsamplingMask = 15,
    DXVA2_VideoChromaSubsampling_Unknown = 0,
    DXVA2_VideoChromaSubsampling_ProgressiveChroma = 8,
    DXVA2_VideoChromaSubsampling_Horizontally_Cosited = 4,
    DXVA2_VideoChromaSubsampling_Vertically_Cosited = 2,
    DXVA2_VideoChromaSubsampling_Vertically_AlignedChromaPlanes = 1,
    DXVA2_VideoChromaSubsampling_MPEG2 = 5,
    DXVA2_VideoChromaSubsampling_MPEG1 = 1,
    DXVA2_VideoChromaSubsampling_DV_PAL = 6,
    DXVA2_VideoChromaSubsampling_Cosited = 7,
} DXVA2_VideoChromaSubSampling;

typedef enum {
    DXVA2_NominalRangeMask = 7,
    DXVA2_NominalRange_Unknown = 0,
    DXVA2_NominalRange_Normal = 1,
    DXVA2_NominalRange_Wide = 2,
    DXVA2_NominalRange_0_255 = 1,
    DXVA2_NominalRange_16_235 = 2,
    DXVA2_NominalRange_48_208 = 3,
} DXVA2_NominalRange;

typedef enum {
    DXVA2_VideoTransferMatrixMask = 7,
    DXVA2_VideoTransferMatrix_Unknown = 0,
    DXVA2_VideoTransferMatrix_BT709 = 1,
    DXVA2_VideoTransferMatrix_BT601 = 2,
    DXVA2_VideoTransferMatrix_SMPTE240M = 3,
} DXVA2_VideoTransferMatrix;

typedef enum {
    DXVA2_VideoLightingMask = 15,
    DXVA2_VideoLighting_Unknown = 0,
    DXVA2_VideoLighting_bright = 1,
    DXVA2_VideoLighting_office = 2,
    DXVA2_VideoLighting_dim = 3,
    DXVA2_VideoLighting_dark = 4,
} DXVA2_VideoLighting;

typedef enum {
    DXVA2_VideoPrimariesMask = 31,
    DXVA2_VideoPrimaries_Unknown = 0,
    DXVA2_VideoPrimaries_reserved = 1,
    DXVA2_VideoPrimaries_BT709 = 2,
    DXVA2_VideoPrimaries_BT470_2_SysM = 3,
    DXVA2_VideoPrimaries_BT470_2_SysBG = 4,
    DXVA2_VideoPrimaries_SMPTE170M = 5,
    DXVA2_VideoPrimaries_SMPTE240M = 6,
    DXVA2_VideoPrimaries_EBU3213 = 7,
    DXVA2_VideoPrimaries_SMPTE_C = 8,
} DXVA2_VideoPrimaries;

typedef enum {
    DXVA2_VideoTransFuncMask = 31,
    DXVA2_VideoTransFunc_Unknown = 0,
    DXVA2_VideoTransFunc_10 = 1,
    DXVA2_VideoTransFunc_18 = 2,
    DXVA2_VideoTransFunc_20 = 3,
    DXVA2_VideoTransFunc_22 = 4,
    DXVA2_VideoTransFunc_709 = 5,
    DXVA2_VideoTransFunc_240M = 6,
    DXVA2_VideoTransFunc_sRGB = 7,
    DXVA2_VideoTransFunc_28 = 8,
} DXVA2_VideoTransferFunction;

typedef int DXVA2_Frequency;

typedef int DXVA2_VideoDesc;

typedef enum {
    DXVA2_DeinterlaceTech_Unknown = 0,
    DXVA2_DeinterlaceTech_BOBLineReplicate = 1,
    DXVA2_DeinterlaceTech_BOBVerticalStretch = 2,
    DXVA2_DeinterlaceTech_BOBVerticalStretch4Tap = 4,
    DXVA2_DeinterlaceTech_MedianFiltering = 8,
    DXVA2_DeinterlaceTech_EdgeFiltering = 16,
    DXVA2_DeinterlaceTech_FieldAdaptive = 32,
    DXVA2_DeinterlaceTech_PixelAdaptive = 64,
    DXVA2_DeinterlaceTech_MotionVectorSteered = 128,
    DXVA2_DeinterlaceTech_InverseTelecine = 256,
    DXVA2_DeinterlaceTech_Mask = 511,
} DXVA2_DeinterlaceTech;

typedef enum {
    DXVA2_NoiseFilterLumaLevel = 1,
    DXVA2_NoiseFilterLumaThreshold = 2,
    DXVA2_NoiseFilterLumaRadius = 3,
    DXVA2_NoiseFilterChromaLevel = 4,
    DXVA2_NoiseFilterChromaThreshold = 5,
    DXVA2_NoiseFilterChromaRadius = 6,
    DXVA2_DetailFilterLumaLevel = 7,
    DXVA2_DetailFilterLumaThreshold = 8,
    DXVA2_DetailFilterLumaRadius = 9,
    DXVA2_DetailFilterChromaLevel = 10,
    DXVA2_DetailFilterChromaThreshold = 11,
    DXVA2_DetailFilterChromaRadius = 12,
} DXVA2_FilterType;

typedef enum {
    DXVA2_NoiseFilterTech_Unsupported = 0,
    DXVA2_NoiseFilterTech_Unknown = 1,
    DXVA2_NoiseFilterTech_Median = 2,
    DXVA2_NoiseFilterTech_Temporal = 4,
    DXVA2_NoiseFilterTech_BlockNoise = 8,
    DXVA2_NoiseFilterTech_MosquitoNoise = 16,
    DXVA2_NoiseFilterTech_Mask = 31,
} DXVA2_NoiseFilterTech;

typedef enum {
    DXVA2_DetailFilterTech_Unsupported = 0,
    DXVA2_DetailFilterTech_Unknown = 1,
    DXVA2_DetailFilterTech_Edge = 2,
    DXVA2_DetailFilterTech_Sharpening = 4,
    DXVA2_DetailFilterTech_Mask = 7,
} DXVA2_DetailFilterTech;

typedef enum {
    DXVA2_ProcAmp_None = 0,
    DXVA2_ProcAmp_Brightness = 1,
    DXVA2_ProcAmp_Contrast = 2,
    DXVA2_ProcAmp_Hue = 4,
    DXVA2_ProcAmp_Saturation = 8,
    DXVA2_ProcAmp_Mask = 15,
} DXVA2_ProcAmp;

typedef enum {
    DXVA2_VideoProcess_None = 0,
    DXVA2_VideoProcess_YUV2RGB = 1,
    DXVA2_VideoProcess_StretchX = 2,
    DXVA2_VideoProcess_StretchY = 4,
    DXVA2_VideoProcess_AlphaBlend = 8,
    DXVA2_VideoProcess_SubRects = 16,
    DXVA2_VideoProcess_SubStreams = 32,
    DXVA2_VideoProcess_SubStreamsExtended = 64,
    DXVA2_VideoProcess_YUV2RGBExtended = 128,
    DXVA2_VideoProcess_AlphaBlendExtended = 256,
    DXVA2_VideoProcess_Constriction = 512,
    DXVA2_VideoProcess_NoiseFilter = 1024,
    DXVA2_VideoProcess_DetailFilter = 2048,
    DXVA2_VideoProcess_PlanarAlpha = 4096,
    DXVA2_VideoProcess_LinearScaling = 8192,
    DXVA2_VideoProcess_GammaCompensated = 16384,
    DXVA2_VideoProcess_MaintainsOriginalFieldData = 32768,
    DXVA2_VideoProcess_Mask = 65535,
} DXVA2_VideoProcess;

typedef enum {
    DXVA2_VPDev_HardwareDevice = 1,
    DXVA2_VPDev_EmulatedDXVA1 = 2,
    DXVA2_VPDev_SoftwareDevice = 4,
    DXVA2_VPDev_Mask = 7,
} DXVA2_VPDev;

typedef enum {
    DXVA2_SampleData_RFF = 1,
    DXVA2_SampleData_TFF = 2,
    DXVA2_SampleData_RFF_TFF_Present = 4,
    DXVA2_SampleData_Mask = 65535,
} DXVA2_SampleData;

typedef enum {
    DXVA2_DestData_RFF = 1,
    DXVA2_DestData_TFF = 2,
    DXVA2_DestData_RFF_TFF_Present = 4,
    DXVA2_DestData_Mask = 65535,
} DXVA2_DestData;

typedef int DXVA2_VideoProcessorCaps;

typedef int DXVA2_Fixed32;

typedef int DXVA2_AYUVSample8;

typedef int DXVA2_AYUVSample16;

typedef int DXVA2_VideoSample;

typedef int DXVA2_ValueRange;

typedef int DXVA2_ProcAmpValues;

typedef int DXVA2_FilterValues;

typedef int DXVA2_VideoProcessBltParams;

typedef enum {
    DXVA2_PictureParametersBufferType = 0,
    DXVA2_MacroBlockControlBufferType = 1,
    DXVA2_ResidualDifferenceBufferType = 2,
    DXVA2_DeblockingControlBufferType = 3,
    DXVA2_InverseQuantizationMatrixBufferType = 4,
    DXVA2_SliceControlBufferType = 5,
    DXVA2_BitStreamDateBufferType = 6,
    DXVA2_MotionVectorBuffer = 7,
    DXVA2_FilmGrainBuffer = 8,
} DXVA2_BufferfType;

typedef enum {
    DXVA2_VideoDecoderRenderTarget = 0,
    DXVA2_VideoProcessorRenderTarget = 1,
    DXVA2_VideoSoftwareRenderTarget = 2,
} DXVA2_VideoRenderTargetType;

typedef int DXVA2_ConfigPictureDecode;

typedef int DXVA2_DecodeBufferDesc;

typedef int DXVA2_AES_CTR_IV;

typedef int DXVA2_DecodeExtensionData;

typedef int DXVA2_DecodeExecuteParams;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IDirect3DDeviceManager9;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IDirectXVideoAccelerationService;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IDirectXVideoDecoderService;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IDirectXVideoProcessorService;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IDirectXVideoDecoder;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IDirectXVideoProcessor;

typedef enum {
    DXVA2_SurfaceType_DecoderRenderTarget = 0,
    DXVA2_SurfaceType_ProcessorRenderTarget = 1,
    DXVA2_SurfaceType_D3DRenderTargetTexture = 2,
} DXVA2_SurfaceType;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IDirectXVideoMemoryConfiguration;

typedef enum {
    OPM_OMAC_SIZE = 16,
    OPM_128_BIT_RANDOM_NUMBER_SIZE = 16,
    OPM_ENCRYPTED_INITIALIZATION_PARAMETERS_SIZE = 256,
    OPM_CONFIGURE_SETTING_DATA_SIZE = 4056,
    OPM_GET_INFORMATION_PARAMETERS_SIZE = 4056,
    OPM_REQUESTED_INFORMATION_SIZE = 4076,
    OPM_HDCP_KEY_SELECTION_VECTOR_SIZE = 5,
    OPM_PROTECTION_TYPE_SIZE = 4,
    OPM_BUS_TYPE_MASK = 65535,
    OPM_BUS_IMPLEMENTATION_MODIFIER_MASK = 32767,
} OPM_TYPE;

typedef enum {
    OPM_VOS_COPP_SEMANTICS = 0,
    OPM_VOS_OPM_SEMANTICS = 1,
    OPM_VOS_OPM_INDIRECT_DISPLAY = 2,
} OPM_VIDEO_OUTPUT_SEMANTICS;

typedef enum {
    OPM_HDCP_FLAG_NONE = 0,
    OPM_HDCP_FLAG_REPEATER = 1,
} OPM_HDCP_FLAGS;

typedef enum {
    OPM_STATUS_NORMAL = 0,
    OPM_STATUS_LINK_LOST = 1,
    OPM_STATUS_RENEGOTIATION_REQUIRED = 2,
    OPM_STATUS_TAMPERING_DETECTED = 4,
    OPM_STATUS_REVOKED_HDCP_DEVICE_ATTACHED = 8,
} OPM_STATUS;

typedef enum {
    OPM_CONNECTOR_TYPE_OTHER = -1,
    OPM_CONNECTOR_TYPE_VGA = 0,
    OPM_CONNECTOR_TYPE_SVIDEO = 1,
    OPM_CONNECTOR_TYPE_COMPOSITE_VIDEO = 2,
    OPM_CONNECTOR_TYPE_COMPONENT_VIDEO = 3,
    OPM_CONNECTOR_TYPE_DVI = 4,
    OPM_CONNECTOR_TYPE_HDMI = 5,
    OPM_CONNECTOR_TYPE_LVDS = 6,
    OPM_CONNECTOR_TYPE_D_JPN = 8,
    OPM_CONNECTOR_TYPE_SDI = 9,
    OPM_CONNECTOR_TYPE_DISPLAYPORT_EXTERNAL = 10,
    OPM_CONNECTOR_TYPE_DISPLAYPORT_EMBEDDED = 11,
    OPM_CONNECTOR_TYPE_UDI_EXTERNAL = 12,
    OPM_CONNECTOR_TYPE_UDI_EMBEDDED = 13,
    OPM_CONNECTOR_TYPE_RESERVED = 14,
    OPM_CONNECTOR_TYPE_MIRACAST = 15,
    OPM_CONNECTOR_TYPE_TRANSPORT_AGNOSTIC_DIGITAL_MODE_A = 16,
    OPM_CONNECTOR_TYPE_TRANSPORT_AGNOSTIC_DIGITAL_MODE_B = 17,
    OPM_COPP_COMPATIBLE_CONNECTOR_TYPE_INTERNAL = -2147483648,
} PM_CONNECTOR_TYPE;

typedef enum {
    OPM_DVI_CHARACTERISTIC_1_0 = 1,
    OPM_DVI_CHARACTERISTIC_1_1_OR_ABOVE = 2,
} OPM_DVI_CHARACTERISTIC;

typedef enum {
    OPM_OUTPUT_HARDWARE_PROTECTION_NOT_SUPPORTED = 0,
    OPM_OUTPUT_HARDWARE_PROTECTION_SUPPORTED = 1,
} OPM_OUTPUT_HARDWARE_PROTECTION;

typedef enum {
    OPM_BUS_TYPE_OTHER = 0,
    OPM_BUS_TYPE_PCI = 1,
    OPM_BUS_TYPE_PCIX = 2,
    OPM_BUS_TYPE_PCIEXPRESS = 3,
    OPM_BUS_TYPE_AGP = 4,
    OPM_BUS_IMPLEMENTATION_MODIFIER_INSIDE_OF_CHIPSET = 65536,
    OPM_BUS_IMPLEMENTATION_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP = 131072,
    OPM_BUS_IMPLEMENTATION_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET = 196608,
    OPM_BUS_IMPLEMENTATION_MODIFIER_DAUGHTER_BOARD_CONNECTOR = 262144,
    OPM_BUS_IMPLEMENTATION_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE = 327680,
    OPM_BUS_IMPLEMENTATION_MODIFIER_NON_STANDARD = -2147483648,
    OPM_COPP_COMPATIBLE_BUS_TYPE_INTEGRATED = -2147483648,
} OPM_BUS_TYPE;

typedef enum {
    OPM_DPCP_OFF = 0,
    OPM_DPCP_ON = 1,
    OPM_DPCP_FORCE_ULONG = 2147483647,
} OPM_DPCP_PROTECTION_LEVEL;

typedef enum {
    OPM_HDCP_OFF = 0,
    OPM_HDCP_ON = 1,
    OPM_HDCP_FORCE_ULONG = 2147483647,
} OPM_HDCP_PROTECTION_LEVEL;

typedef enum {
    OPM_TYPE_ENFORCEMENT_HDCP_OFF = 0,
    OPM_TYPE_ENFORCEMENT_HDCP_ON_WITH_NO_TYPE_RESTRICTION = 1,
    OPM_TYPE_ENFORCEMENT_HDCP_ON_WITH_TYPE1_RESTRICTION = 2,
    OPM_TYPE_ENFORCEMENT_HDCP_FORCE_ULONG = 2147483647,
} OPM_TYPE_ENFORCEMENT_HDCP_PROTECTION_LEVEL;

typedef enum {
    OPM_CGMSA_OFF = 0,
    OPM_CGMSA_COPY_FREELY = 1,
    OPM_CGMSA_COPY_NO_MORE = 2,
    OPM_CGMSA_COPY_ONE_GENERATION = 3,
    OPM_CGMSA_COPY_NEVER = 4,
    OPM_CGMSA_REDISTRIBUTION_CONTROL_REQUIRED = 8,
} OPM_CGMSA;

typedef enum {
    OPM_ACP_OFF = 0,
    OPM_ACP_LEVEL_ONE = 1,
    OPM_ACP_LEVEL_TWO = 2,
    OPM_ACP_LEVEL_THREE = 3,
    OPM_ACP_FORCE_ULONG = 2147483647,
} OPM_ACP_PROTECTION_LEVEL;

typedef enum {
    OPM_PROTECTION_TYPE_OTHER = -2147483648,
    OPM_PROTECTION_TYPE_NONE = 0,
    OPM_PROTECTION_TYPE_COPP_COMPATIBLE_HDCP = 1,
    OPM_PROTECTION_TYPE_ACP = 2,
    OPM_PROTECTION_TYPE_CGMSA = 4,
    OPM_PROTECTION_TYPE_HDCP = 8,
    OPM_PROTECTION_TYPE_DPCP = 16,
    OPM_PROTECTION_TYPE_TYPE_ENFORCEMENT_HDCP = 32,
} OPM_PROTECTION_TYPE;

typedef enum {
    OPM_PROTECTION_STANDARD_OTHER = 2147483648,
    OPM_PROTECTION_STANDARD_NONE = 0,
    OPM_PROTECTION_STANDARD_IEC61880_525I = 1,
    OPM_PROTECTION_STANDARD_IEC61880_2_525I = 2,
    OPM_PROTECTION_STANDARD_IEC62375_625P = 4,
    OPM_PROTECTION_STANDARD_EIA608B_525 = 8,
    OPM_PROTECTION_STANDARD_EN300294_625I = 16,
    OPM_PROTECTION_STANDARD_CEA805A_TYPEA_525P = 32,
    OPM_PROTECTION_STANDARD_CEA805A_TYPEA_750P = 64,
    OPM_PROTECTION_STANDARD_CEA805A_TYPEA_1125I = 128,
    OPM_PROTECTION_STANDARD_CEA805A_TYPEB_525P = 256,
    OPM_PROTECTION_STANDARD_CEA805A_TYPEB_750P = 512,
    OPM_PROTECTION_STANDARD_CEA805A_TYPEB_1125I = 1024,
    OPM_PROTECTION_STANDARD_ARIBTRB15_525I = 2048,
    OPM_PROTECTION_STANDARD_ARIBTRB15_525P = 4096,
    OPM_PROTECTION_STANDARD_ARIBTRB15_750P = 8192,
    OPM_PROTECTION_STANDARD_ARIBTRB15_1125I = 16384,
} OPM_PROTECTION_STANDARD_TYPE;

typedef enum {
    OPM_ASPECT_RATIO_EN300294_FULL_FORMAT_4_BY_3 = 0,
    OPM_ASPECT_RATIO_EN300294_BOX_14_BY_9_CENTER = 1,
    OPM_ASPECT_RATIO_EN300294_BOX_14_BY_9_TOP = 2,
    OPM_ASPECT_RATIO_EN300294_BOX_16_BY_9_CENTER = 3,
    OPM_ASPECT_RATIO_EN300294_BOX_16_BY_9_TOP = 4,
    OPM_ASPECT_RATIO_EN300294_BOX_GT_16_BY_9_CENTER = 5,
    OPM_ASPECT_RATIO_EN300294_FULL_FORMAT_4_BY_3_PROTECTED_CENTER = 6,
    OPM_ASPECT_RATIO_EN300294_FULL_FORMAT_16_BY_9_ANAMORPHIC = 7,
    OPM_ASPECT_RATIO_FORCE_ULONG = 2147483647,
} OPM_IMAGE_ASPECT_RATIO_EN300294;

typedef int OPM_RANDOM_NUMBER;

typedef int OPM_OMAC;

typedef int OPM_ENCRYPTED_INITIALIZATION_PARAMETERS;

typedef int OPM_GET_INFO_PARAMETERS;

typedef int OPM_COPP_COMPATIBLE_GET_INFO_PARAMETERS;

typedef int OPM_HDCP_KEY_SELECTION_VECTOR;

typedef int OPM_CONNECTED_HDCP_DEVICE_INFORMATION;

typedef int OPM_REQUESTED_INFORMATION;

typedef int OPM_STANDARD_INFORMATION;

typedef int OPM_ACTUAL_OUTPUT_FORMAT;

typedef int OPM_ACP_AND_CGMSA_SIGNALING;

typedef int OPM_OUTPUT_ID_DATA;

typedef int OPM_CONFIGURE_PARAMETERS;

typedef int OPM_SET_PROTECTION_LEVEL_PARAMETERS;

typedef int OPM_SET_ACP_AND_CGMSA_SIGNALING_PARAMETERS;

typedef int OPM_SET_HDCP_SRM_PARAMETERS;

typedef int OPM_GET_CODEC_INFO_PARAMETERS;

typedef int OPM_GET_CODEC_INFO_INFORMATION;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IOPMVideoOutput;

typedef int KSPROPSETID_OPMVideoOutput;

typedef enum {
    KSMETHOD_OPMVIDEOOUTPUT_STARTINITIALIZATION = 0,
    KSMETHOD_OPMVIDEOOUTPUT_FINISHINITIALIZATION = 1,
    KSMETHOD_OPMVIDEOOUTPUT_GETINFORMATION = 2,
} KSMETHOD_OPMVIDEOOUTPUT;

typedef enum {
    MF_ATTRIBUTE_UINT32 = 19,
    MF_ATTRIBUTE_UINT64 = 21,
    MF_ATTRIBUTE_DOUBLE = 5,
    MF_ATTRIBUTE_GUID = 72,
    MF_ATTRIBUTE_STRING = 31,
    MF_ATTRIBUTE_BLOB = 4113,
    MF_ATTRIBUTE_IUNKNOWN = 13,
} MF_ATTRIBUTE_TYPE;

typedef enum {
    MF_ATTRIBUTES_MATCH_OUR_ITEMS = 0,
    MF_ATTRIBUTES_MATCH_THEIR_ITEMS = 1,
    MF_ATTRIBUTES_MATCH_ALL_ITEMS = 2,
    MF_ATTRIBUTES_MATCH_INTERSECTION = 3,
    MF_ATTRIBUTES_MATCH_SMALLER = 4,
} MF_ATTRIBUTES_MATCH_TYPE;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFAttributes;

typedef enum {
    MF_ATTRIBUTE_SERIALIZE_UNKNOWN_BYREF = 1,
} MF_ATTRIBUTE_SERIALIZE_OPTIONS;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFMediaBuffer;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFSample;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMF2DBuffer;

typedef enum {
    MF2DBuffer_LockFlags_LockTypeMask = 3,
    MF2DBuffer_LockFlags_Read = 1,
    MF2DBuffer_LockFlags_Write = 2,
    MF2DBuffer_LockFlags_ReadWrite = 3,
    MF2DBuffer_LockFlags_ForceDWORD = 2147483647,
} MF2DBuffer_LockFlags;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMF2DBuffer2;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFDXGIBuffer;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFMediaType;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFAudioMediaType;

typedef int MFT_REGISTER_TYPE_INFO;

typedef enum {
    MFVideoInterlace_Unknown = 0,
    MFVideoInterlace_Progressive = 2,
    MFVideoInterlace_FieldInterleavedUpperFirst = 3,
    MFVideoInterlace_FieldInterleavedLowerFirst = 4,
    MFVideoInterlace_FieldSingleUpper = 5,
    MFVideoInterlace_FieldSingleLower = 6,
    MFVideoInterlace_MixedInterlaceOrProgressive = 7,
    MFVideoInterlace_Last = 8,
    MFVideoInterlace_ForceDWORD = 2147483647,
} MFVideoInterlaceMode;

typedef enum {
    MFVideoTransFunc_Unknown = 0,
    MFVideoTransFunc_10 = 1,
    MFVideoTransFunc_18 = 2,
    MFVideoTransFunc_20 = 3,
    MFVideoTransFunc_22 = 4,
    MFVideoTransFunc_709 = 5,
    MFVideoTransFunc_240M = 6,
    MFVideoTransFunc_sRGB = 7,
    MFVideoTransFunc_28 = 8,
    MFVideoTransFunc_Log_100 = 9,
    MFVideoTransFunc_Log_316 = 10,
    MFVideoTransFunc_709_sym = 11,
    MFVideoTransFunc_2020_const = 12,
    MFVideoTransFunc_2020 = 13,
    MFVideoTransFunc_26 = 14,
    MFVideoTransFunc_2084 = 15,
    MFVideoTransFunc_HLG = 16,
    MFVideoTransFunc_10_rel = 17,
    MFVideoTransFunc_Last = 18,
    MFVideoTransFunc_ForceDWORD = 2147483647,
} MFVideoTransferFunction;

typedef enum {
    MFVideoPrimaries_Unknown = 0,
    MFVideoPrimaries_reserved = 1,
    MFVideoPrimaries_BT709 = 2,
    MFVideoPrimaries_BT470_2_SysM = 3,
    MFVideoPrimaries_BT470_2_SysBG = 4,
    MFVideoPrimaries_SMPTE170M = 5,
    MFVideoPrimaries_SMPTE240M = 6,
    MFVideoPrimaries_EBU3213 = 7,
    MFVideoPrimaries_SMPTE_C = 8,
    MFVideoPrimaries_BT2020 = 9,
    MFVideoPrimaries_XYZ = 10,
    MFVideoPrimaries_DCI_P3 = 11,
    MFVideoPrimaries_ACES = 12,
    MFVideoPrimaries_Last = 13,
    MFVideoPrimaries_ForceDWORD = 2147483647,
} MFVideoPrimaries;

typedef enum {
    MFVideoLighting_Unknown = 0,
    MFVideoLighting_bright = 1,
    MFVideoLighting_office = 2,
    MFVideoLighting_dim = 3,
    MFVideoLighting_dark = 4,
    MFVideoLighting_Last = 5,
    MFVideoLighting_ForceDWORD = 2147483647,
} MFVideoLighting;

typedef enum {
    MFVideoTransferMatrix_Unknown = 0,
    MFVideoTransferMatrix_BT709 = 1,
    MFVideoTransferMatrix_BT601 = 2,
    MFVideoTransferMatrix_SMPTE240M = 3,
    MFVideoTransferMatrix_BT2020_10 = 4,
    MFVideoTransferMatrix_BT2020_12 = 5,
    MFVideoTransferMatrix_Last = 6,
    MFVideoTransferMatrix_ForceDWORD = 2147483647,
} MFVideoTransferMatrix;

typedef enum {
    MFVideoChromaSubsampling_Unknown = 0,
    MFVideoChromaSubsampling_ProgressiveChroma = 8,
    MFVideoChromaSubsampling_Horizontally_Cosited = 4,
    MFVideoChromaSubsampling_Vertically_Cosited = 2,
    MFVideoChromaSubsampling_Vertically_AlignedChromaPlanes = 1,
    MFVideoChromaSubsampling_MPEG2 = 5,
    MFVideoChromaSubsampling_MPEG1 = 1,
    MFVideoChromaSubsampling_DV_PAL = 6,
    MFVideoChromaSubsampling_Cosited = 7,
    MFVideoChromaSubsampling_Last = 8,
    MFVideoChromaSubsampling_ForceDWORD = 2147483647,
} MFVideoChromaSubsampling;

typedef enum {
    MFNominalRange_Unknown = 0,
    MFNominalRange_Normal = 1,
    MFNominalRange_Wide = 2,
    MFNominalRange_0_255 = 1,
    MFNominalRange_16_235 = 2,
    MFNominalRange_48_208 = 3,
    MFNominalRange_64_127 = 4,
    MFNominalRange_Last = 5,
    MFNominalRange_ForceDWORD = 2147483647,
} MFNominalRange;

typedef enum {
    MFVideoFlag_PAD_TO_Mask = 3,
    MFVideoFlag_PAD_TO_None = 0,
    MFVideoFlag_PAD_TO_4x3 = 1,
    MFVideoFlag_PAD_TO_16x9 = 2,
    MFVideoFlag_SrcContentHintMask = 28,
    MFVideoFlag_SrcContentHintNone = 0,
    MFVideoFlag_SrcContentHint16x9 = 4,
    MFVideoFlag_SrcContentHint235_1 = 8,
    MFVideoFlag_AnalogProtected = 32,
    MFVideoFlag_DigitallyProtected = 64,
    MFVideoFlag_ProgressiveContent = 128,
    MFVideoFlag_FieldRepeatCountMask = 1792,
    MFVideoFlag_FieldRepeatCountShift = 8,
    MFVideoFlag_ProgressiveSeqReset = 2048,
    MFVideoFlag_PanScanEnabled = 131072,
    MFVideoFlag_LowerFieldFirst = 262144,
    MFVideoFlag_BottomUpLinearRep = 524288,
    MFVideoFlags_DXVASurface = 1048576,
    MFVideoFlags_RenderTargetSurface = 4194304,
    MFVideoFlags_ForceQWORD = 2147483647,
} MFVideoFlags;

typedef int MFRatio;

typedef int MFOffset;

typedef int MFVideoArea;

typedef int MFVideoInfo;

typedef int MFAYUVSample;

typedef int MFARGB;

typedef int MFPaletteEntry;

typedef int MFVideoSurfaceInfo;

typedef int MFVideoCompressedInfo;

typedef int MFVIDEOFORMAT;

typedef enum {
    MFStdVideoFormat_reserved = 0,
    MFStdVideoFormat_NTSC = 1,
    MFStdVideoFormat_PAL = 2,
    MFStdVideoFormat_DVD_NTSC = 3,
    MFStdVideoFormat_DVD_PAL = 4,
    MFStdVideoFormat_DV_PAL = 5,
    MFStdVideoFormat_DV_NTSC = 6,
    MFStdVideoFormat_ATSC_SD480i = 7,
    MFStdVideoFormat_ATSC_HD1080i = 8,
    MFStdVideoFormat_ATSC_HD720p = 9,
} MFStandardVideoFormat;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFVideoMediaType;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFAsyncResult;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFAsyncCallback;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFAsyncCallbackLogging;

typedef enum {
    MEUnknown = 0,
    MEError = 1,
    MEExtendedType = 2,
    MENonFatalError = 3,
    MEGenericV1Anchor = 3,
    MESessionUnknown = 100,
    MESessionTopologySet = 101,
    MESessionTopologiesCleared = 102,
    MESessionStarted = 103,
    MESessionPaused = 104,
    MESessionStopped = 105,
    MESessionClosed = 106,
    MESessionEnded = 107,
    MESessionRateChanged = 108,
    MESessionScrubSampleComplete = 109,
    MESessionCapabilitiesChanged = 110,
    MESessionTopologyStatus = 111,
    MESessionNotifyPresentationTime = 112,
    MENewPresentation = 113,
    MELicenseAcquisitionStart = 114,
    MELicenseAcquisitionCompleted = 115,
    MEIndividualizationStart = 116,
    MEIndividualizationCompleted = 117,
    MEEnablerProgress = 118,
    MEEnablerCompleted = 119,
    MEPolicyError = 120,
    MEPolicyReport = 121,
    MEBufferingStarted = 122,
    MEBufferingStopped = 123,
    MEConnectStart = 124,
    MEConnectEnd = 125,
    MEReconnectStart = 126,
    MEReconnectEnd = 127,
    MERendererEvent = 128,
    MESessionStreamSinkFormatChanged = 129,
    MESessionV1Anchor = 129,
    MESourceUnknown = 200,
    MESourceStarted = 201,
    MEStreamStarted = 202,
    MESourceSeeked = 203,
    MEStreamSeeked = 204,
    MENewStream = 205,
    MEUpdatedStream = 206,
    MESourceStopped = 207,
    MEStreamStopped = 208,
    MESourcePaused = 209,
    MEStreamPaused = 210,
    MEEndOfPresentation = 211,
    MEEndOfStream = 212,
    MEMediaSample = 213,
    MEStreamTick = 214,
    MEStreamThinMode = 215,
    MEStreamFormatChanged = 216,
    MESourceRateChanged = 217,
    MEEndOfPresentationSegment = 218,
    MESourceCharacteristicsChanged = 219,
    MESourceRateChangeRequested = 220,
    MESourceMetadataChanged = 221,
    MESequencerSourceTopologyUpdated = 222,
    MESourceV1Anchor = 222,
    MESinkUnknown = 300,
    MEStreamSinkStarted = 301,
    MEStreamSinkStopped = 302,
    MEStreamSinkPaused = 303,
    MEStreamSinkRateChanged = 304,
    MEStreamSinkRequestSample = 305,
    MEStreamSinkMarker = 306,
    MEStreamSinkPrerolled = 307,
    MEStreamSinkScrubSampleComplete = 308,
    MEStreamSinkFormatChanged = 309,
    MEStreamSinkDeviceChanged = 310,
    MEQualityNotify = 311,
    MESinkInvalidated = 312,
    MEAudioSessionNameChanged = 313,
    MEAudioSessionVolumeChanged = 314,
    MEAudioSessionDeviceRemoved = 315,
    MEAudioSessionServerShutdown = 316,
    MEAudioSessionGroupingParamChanged = 317,
    MEAudioSessionIconChanged = 318,
    MEAudioSessionFormatChanged = 319,
    MEAudioSessionDisconnected = 320,
    MEAudioSessionExclusiveModeOverride = 321,
    MESinkV1Anchor = 321,
    MECaptureAudioSessionVolumeChanged = 322,
    MECaptureAudioSessionDeviceRemoved = 323,
    MECaptureAudioSessionFormatChanged = 324,
    MECaptureAudioSessionDisconnected = 325,
    MECaptureAudioSessionExclusiveModeOverride = 326,
    MECaptureAudioSessionServerShutdown = 327,
    MESinkV2Anchor = 327,
    METrustUnknown = 400,
    MEPolicyChanged = 401,
    MEContentProtectionMessage = 402,
    MEPolicySet = 403,
    METrustV1Anchor = 403,
    MEWMDRMLicenseBackupCompleted = 500,
    MEWMDRMLicenseBackupProgress = 501,
    MEWMDRMLicenseRestoreCompleted = 502,
    MEWMDRMLicenseRestoreProgress = 503,
    MEWMDRMLicenseAcquisitionCompleted = 506,
    MEWMDRMIndividualizationCompleted = 508,
    MEWMDRMIndividualizationProgress = 513,
    MEWMDRMProximityCompleted = 514,
    MEWMDRMLicenseStoreCleaned = 515,
    MEWMDRMRevocationDownloadCompleted = 516,
    MEWMDRMV1Anchor = 516,
    METransformUnknown = 600,
    METransformNeedInput = 601,
    METransformHaveOutput = 602,
    METransformDrainComplete = 603,
    METransformMarker = 604,
    METransformInputStreamStateChanged = 605,
    MEByteStreamCharacteristicsChanged = 700,
    MEVideoCaptureDeviceRemoved = 800,
    MEVideoCaptureDevicePreempted = 801,
    MEStreamSinkFormatInvalidated = 802,
    MEEncodingParameters = 803,
    MEContentProtectionMetadata = 900,
    MEDeviceThermalStateChanged = 950,
    MEReservedMax = 10000,
} MF_EVENT_TYPE;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFMediaEvent;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFMediaEventGenerator;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFRemoteAsyncCallback;

typedef enum {
    msoBegin = 0,
    msoCurrent = 1,
} MFBYTESTREAM_SEEK_ORIGIN;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFByteStream;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFByteStreamProxyClassFactory;

typedef enum {
    MF_ACCESSMODE_READ = 1,
    MF_ACCESSMODE_WRITE = 2,
    MF_ACCESSMODE_READWRITE = 3,
} MF_FILE_ACCESSMODE;

typedef enum {
    MF_OPENMODE_FAIL_IF_NOT_EXIST = 0,
    MF_OPENMODE_FAIL_IF_EXIST = 1,
    MF_OPENMODE_RESET_IF_EXIST = 2,
    MF_OPENMODE_APPEND_IF_EXIST = 3,
    MF_OPENMODE_DELETE_IF_EXIST = 4,
} MF_FILE_OPENMODE;

typedef enum {
    MF_FILEFLAGS_NONE = 0,
    MF_FILEFLAGS_NOBUFFERING = 1,
    MF_FILEFLAGS_ALLOW_WRITE_SHARING = 2,
} MF_FILE_FLAGS;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFSampleOutputStream;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFCollection;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFMediaEventQueue;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFActivate;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFPluginControl;

typedef enum {
    MF_PLUGIN_CONTROL_POLICY_USE_ALL_PLUGINS = 0,
    MF_PLUGIN_CONTROL_POLICY_USE_APPROVED_PLUGINS = 1,
    MF_PLUGIN_CONTROL_POLICY_USE_WEB_PLUGINS = 2,
    MF_PLUGIN_CONTROL_POLICY_USE_WEB_PLUGINS_EDGEMODE = 3,
} MF_PLUGIN_CONTROL_POLICY;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFPluginControl2;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFDXGIDeviceManager;

typedef enum {
    MF_STREAM_STATE_STOPPED = 0,
    MF_STREAM_STATE_PAUSED = 1,
    MF_STREAM_STATE_RUNNING = 2,
} MF_STREAM_STATE;

// TODO: this type is limited to platform 'windows10.0.15063'
typedef int IMFMuxStreamAttributesManager;

// TODO: this type is limited to platform 'windows10.0.15063'
typedef int IMFMuxStreamMediaTypeManager;

// TODO: this type is limited to platform 'windows10.0.15063'
typedef int IMFMuxStreamSampleManager;

typedef int IMFSecureBuffer;

typedef enum {
    MFT_INPUT_DATA_BUFFER_PLACEHOLDER = -1,
} _MFT_INPUT_DATA_BUFFER_FLAGS;

typedef enum {
    MFT_OUTPUT_DATA_BUFFER_INCOMPLETE = 16777216,
    MFT_OUTPUT_DATA_BUFFER_FORMAT_CHANGE = 256,
    MFT_OUTPUT_DATA_BUFFER_STREAM_END = 512,
    MFT_OUTPUT_DATA_BUFFER_NO_SAMPLE = 768,
} _MFT_OUTPUT_DATA_BUFFER_FLAGS;

typedef enum {
    MFT_INPUT_STATUS_ACCEPT_DATA = 1,
} _MFT_INPUT_STATUS_FLAGS;

typedef enum {
    MFT_OUTPUT_STATUS_SAMPLE_READY = 1,
} _MFT_OUTPUT_STATUS_FLAGS;

typedef enum {
    MFT_INPUT_STREAM_WHOLE_SAMPLES = 1,
    MFT_INPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER = 2,
    MFT_INPUT_STREAM_FIXED_SAMPLE_SIZE = 4,
    MFT_INPUT_STREAM_HOLDS_BUFFERS = 8,
    MFT_INPUT_STREAM_DOES_NOT_ADDREF = 256,
    MFT_INPUT_STREAM_REMOVABLE = 512,
    MFT_INPUT_STREAM_OPTIONAL = 1024,
    MFT_INPUT_STREAM_PROCESSES_IN_PLACE = 2048,
} _MFT_INPUT_STREAM_INFO_FLAGS;

typedef enum {
    MFT_OUTPUT_STREAM_WHOLE_SAMPLES = 1,
    MFT_OUTPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER = 2,
    MFT_OUTPUT_STREAM_FIXED_SAMPLE_SIZE = 4,
    MFT_OUTPUT_STREAM_DISCARDABLE = 8,
    MFT_OUTPUT_STREAM_OPTIONAL = 16,
    MFT_OUTPUT_STREAM_PROVIDES_SAMPLES = 256,
    MFT_OUTPUT_STREAM_CAN_PROVIDE_SAMPLES = 512,
    MFT_OUTPUT_STREAM_LAZY_READ = 1024,
    MFT_OUTPUT_STREAM_REMOVABLE = 2048,
} _MFT_OUTPUT_STREAM_INFO_FLAGS;

typedef enum {
    MFT_SET_TYPE_TEST_ONLY = 1,
} _MFT_SET_TYPE_FLAGS;

typedef enum {
    MFT_PROCESS_OUTPUT_DISCARD_WHEN_NO_BUFFER = 1,
    MFT_PROCESS_OUTPUT_REGENERATE_LAST_OUTPUT = 2,
} _MFT_PROCESS_OUTPUT_FLAGS;

typedef enum {
    MFT_PROCESS_OUTPUT_STATUS_NEW_STREAMS = 256,
} _MFT_PROCESS_OUTPUT_STATUS;

typedef enum {
    MFT_DRAIN_PRODUCE_TAILS = 0,
    MFT_DRAIN_NO_TAILS = 1,
} MFT_DRAIN_TYPE;

typedef enum {
    MFT_MESSAGE_COMMAND_FLUSH = 0,
    MFT_MESSAGE_COMMAND_DRAIN = 1,
    MFT_MESSAGE_SET_D3D_MANAGER = 2,
    MFT_MESSAGE_DROP_SAMPLES = 3,
    MFT_MESSAGE_COMMAND_TICK = 4,
    MFT_MESSAGE_NOTIFY_BEGIN_STREAMING = 268435456,
    MFT_MESSAGE_NOTIFY_END_STREAMING = 268435457,
    MFT_MESSAGE_NOTIFY_END_OF_STREAM = 268435458,
    MFT_MESSAGE_NOTIFY_START_OF_STREAM = 268435459,
    MFT_MESSAGE_NOTIFY_RELEASE_RESOURCES = 268435460,
    MFT_MESSAGE_NOTIFY_REACQUIRE_RESOURCES = 268435461,
    MFT_MESSAGE_NOTIFY_EVENT = 268435462,
    MFT_MESSAGE_COMMAND_SET_OUTPUT_STREAM_STATE = 268435463,
    MFT_MESSAGE_COMMAND_FLUSH_OUTPUT_STREAM = 268435464,
    MFT_MESSAGE_COMMAND_MARKER = 536870912,
} MFT_MESSAGE_TYPE;

typedef int MFT_INPUT_STREAM_INFO;

typedef int MFT_OUTPUT_STREAM_INFO;

typedef int MFT_OUTPUT_DATA_BUFFER;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFTransform;

typedef enum {
    DeviceStreamState_Stop = 0,
    DeviceStreamState_Pause = 1,
    DeviceStreamState_Run = 2,
    DeviceStreamState_Disabled = 3,
} DeviceStreamState;

typedef int STREAM_MEDIUM;

typedef enum {
    MF3DVideoOutputType_BaseView = 0,
    MF3DVideoOutputType_Stereo = 1,
} MF3DVideoOutputType;

typedef enum {
    MFT_AUDIO_DECODER_DEGRADATION_REASON_NONE = 0,
    MFT_AUDIO_DECODER_DEGRADATION_REASON_LICENSING_REQUIREMENT = 1,
} MFT_AUDIO_DECODER_DEGRADATION_REASON;

typedef enum {
    MFT_AUDIO_DECODER_DEGRADATION_TYPE_NONE = 0,
    MFT_AUDIO_DECODER_DEGRADATION_TYPE_DOWNMIX2CHANNEL = 1,
    MFT_AUDIO_DECODER_DEGRADATION_TYPE_DOWNMIX6CHANNEL = 2,
    MFT_AUDIO_DECODER_DEGRADATION_TYPE_DOWNMIX8CHANNEL = 3,
} MFT_AUDIO_DECODER_DEGRADATION_TYPE;

typedef int MFAudioDecoderDegradationInfo;

typedef int MFT_STREAM_STATE_PARAM;

typedef enum {
    MFSESSION_SETTOPOLOGY_IMMEDIATE = 1,
    MFSESSION_SETTOPOLOGY_NORESOLUTION = 2,
    MFSESSION_SETTOPOLOGY_CLEAR_CURRENT = 4,
} MFSESSION_SETTOPOLOGY_FLAGS;

typedef enum {
    MFSESSION_GETFULLTOPOLOGY_CURRENT = 1,
} MFSESSION_GETFULLTOPOLOGY_FLAGS;

typedef enum {
    MFPMPSESSION_UNPROTECTED_PROCESS = 1,
    MFPMPSESSION_IN_PROCESS = 2,
} MFPMPSESSION_CREATION_FLAGS;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFMediaSession;

typedef enum {
    MF_OBJECT_MEDIASOURCE = 0,
    MF_OBJECT_BYTESTREAM = 1,
    MF_OBJECT_INVALID = 2,
} MF_OBJECT_TYPE;

typedef enum {
    MF_RESOLUTION_MEDIASOURCE = 1,
    MF_RESOLUTION_BYTESTREAM = 2,
    MF_RESOLUTION_CONTENT_DOES_NOT_HAVE_TO_MATCH_EXTENSION_OR_MIME_TYPE = 16,
    MF_RESOLUTION_KEEP_BYTE_STREAM_ALIVE_ON_FAIL = 32,
    MF_RESOLUTION_DISABLE_LOCAL_PLUGINS = 64,
    MF_RESOLUTION_PLUGIN_CONTROL_POLICY_APPROVED_ONLY = 128,
    MF_RESOLUTION_PLUGIN_CONTROL_POLICY_WEB_ONLY = 256,
    MF_RESOLUTION_PLUGIN_CONTROL_POLICY_WEB_ONLY_EDGEMODE = 512,
    MF_RESOLUTION_ENABLE_STORE_PLUGINS = 1024,
    MF_RESOLUTION_READ = 65536,
    MF_RESOLUTION_WRITE = 131072,
} MF_RESOLUTION_FLAGS;

typedef enum {
    MF_CONNECT_DIRECT = 0,
    MF_CONNECT_ALLOW_CONVERTER = 1,
    MF_CONNECT_ALLOW_DECODER = 3,
    MF_CONNECT_RESOLVE_INDEPENDENT_OUTPUTTYPES = 4,
    MF_CONNECT_AS_OPTIONAL = 65536,
    MF_CONNECT_AS_OPTIONAL_BRANCH = 131072,
} MF_CONNECT_METHOD;

typedef enum {
    MF_TOPOLOGY_RESOLUTION_SUCCEEDED = 0,
    MF_OPTIONAL_NODE_REJECTED_MEDIA_TYPE = 1,
    MF_OPTIONAL_NODE_REJECTED_PROTECTED_PROCESS = 2,
} MF_TOPOLOGY_RESOLUTION_STATUS_FLAGS;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFSourceResolver;

typedef enum {
    MFMEDIASOURCE_IS_LIVE = 1,
    MFMEDIASOURCE_CAN_SEEK = 2,
    MFMEDIASOURCE_CAN_PAUSE = 4,
    MFMEDIASOURCE_HAS_SLOW_SEEK = 8,
    MFMEDIASOURCE_HAS_MULTIPLE_PRESENTATIONS = 16,
    MFMEDIASOURCE_CAN_SKIPFORWARD = 32,
    MFMEDIASOURCE_CAN_SKIPBACKWARD = 64,
    MFMEDIASOURCE_DOES_NOT_USE_NETWORK = 128,
} MFMEDIASOURCE_CHARACTERISTICS;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFMediaSource;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFMediaSourceEx;

// TODO: this type is limited to platform 'windows10.0.15063'
typedef int IMFClockConsumer;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFMediaStream;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFMediaSink;

typedef enum {
    MFSTREAMSINK_MARKER_DEFAULT = 0,
    MFSTREAMSINK_MARKER_ENDOFSEGMENT = 1,
    MFSTREAMSINK_MARKER_TICK = 2,
    MFSTREAMSINK_MARKER_EVENT = 3,
} MFSTREAMSINK_MARKER_TYPE;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFStreamSink;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFVideoSampleAllocator;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFVideoSampleAllocatorNotify;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IMFVideoSampleAllocatorNotifyEx;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFVideoSampleAllocatorCallback;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFVideoSampleAllocatorEx;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFDXGIDeviceManagerSource;

typedef enum {
    ROTATION_NONE = 0,
    ROTATION_NORMAL = 1,
} MF_VIDEO_PROCESSOR_ROTATION;

typedef enum {
    MIRROR_NONE = 0,
    MIRROR_HORIZONTAL = 1,
    MIRROR_VERTICAL = 2,
} MF_VIDEO_PROCESSOR_MIRROR;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFVideoProcessorControl;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IMFVideoProcessorControl2;

typedef enum {
    MFVideoSphericalFormat_Unsupported = 0,
    MFVideoSphericalFormat_Equirectangular = 1,
    MFVideoSphericalFormat_CubeMap = 2,
    MFVideoSphericalFormat_3DMesh = 3,
} MFVideoSphericalFormat;

typedef enum {
    MFVideoSphericalProjectionMode_Spherical = 0,
    MFVideoSphericalProjectionMode_Flat = 1,
} MFVideoSphericalProjectionMode;

typedef int IMFVideoProcessorControl3;

typedef int IMFVideoRendererEffectControl;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFTopology;

typedef enum {
    MFTOPOLOGY_DXVA_DEFAULT = 0,
    MFTOPOLOGY_DXVA_NONE = 1,
    MFTOPOLOGY_DXVA_FULL = 2,
} MFTOPOLOGY_DXVA_MODE;

typedef enum {
    MFTOPOLOGY_HWMODE_SOFTWARE_ONLY = 0,
    MFTOPOLOGY_HWMODE_USE_HARDWARE = 1,
    MFTOPOLOGY_HWMODE_USE_ONLY_HARDWARE = 2,
} MFTOPOLOGY_HARDWARE_MODE;

typedef enum {
    MF_TOPOLOGY_OUTPUT_NODE = 0,
    MF_TOPOLOGY_SOURCESTREAM_NODE = 1,
    MF_TOPOLOGY_TRANSFORM_NODE = 2,
    MF_TOPOLOGY_TEE_NODE = 3,
    MF_TOPOLOGY_MAX = -1,
} MF_TOPOLOGY_TYPE;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFTopologyNode;

typedef enum {
    MF_TOPONODE_FLUSH_ALWAYS = 0,
    MF_TOPONODE_FLUSH_SEEK = 1,
    MF_TOPONODE_FLUSH_NEVER = 2,
} MF_TOPONODE_FLUSH_MODE;

typedef enum {
    MF_TOPONODE_DRAIN_DEFAULT = 0,
    MF_TOPONODE_DRAIN_ALWAYS = 1,
    MF_TOPONODE_DRAIN_NEVER = 2,
} MF_TOPONODE_DRAIN_MODE;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFGetService;

typedef enum {
    MFCLOCK_CHARACTERISTICS_FLAG_FREQUENCY_10MHZ = 2,
    MFCLOCK_CHARACTERISTICS_FLAG_ALWAYS_RUNNING = 4,
    MFCLOCK_CHARACTERISTICS_FLAG_IS_SYSTEM_CLOCK = 8,
} MFCLOCK_CHARACTERISTICS_FLAGS;

typedef enum {
    MFCLOCK_STATE_INVALID = 0,
    MFCLOCK_STATE_RUNNING = 1,
    MFCLOCK_STATE_STOPPED = 2,
    MFCLOCK_STATE_PAUSED = 3,
} MFCLOCK_STATE;

typedef enum {
    MFCLOCK_RELATIONAL_FLAG_JITTER_NEVER_AHEAD = 1,
} MFCLOCK_RELATIONAL_FLAGS;

typedef int MFCLOCK_PROPERTIES;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFClock;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFPresentationClock;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFPresentationTimeSource;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFClockStateSink;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFPresentationDescriptor;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFStreamDescriptor;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFMediaTypeHandler;

typedef enum {
    MFTIMER_RELATIVE = 1,
} MFTIMER_FLAGS;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFTimer;

typedef enum {
    MF_ACTIVATE_CUSTOM_MIXER_ALLOWFAIL = 1,
} MF_ACTIVATE_CUSTOM_MIXER;

typedef enum {
    MF_ACTIVATE_CUSTOM_PRESENTER_ALLOWFAIL = 1,
} MF_ACTIVATE_CUSTOM_PRESENTER;

typedef enum {
    MFSHUTDOWN_INITIATED = 0,
    MFSHUTDOWN_COMPLETED = 1,
} MFSHUTDOWN_STATUS;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFShutdown;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFTopoLoader;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFContentProtectionManager;

typedef enum {
    MF_LICENSE_URL_UNTRUSTED = 0,
    MF_LICENSE_URL_TRUSTED = 1,
    MF_LICENSE_URL_TAMPERED = 2,
} MF_URL_TRUST_STATUS;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFContentEnabler;

typedef int MFRR_COMPONENT_HASH_INFO;

typedef int MFRR_COMPONENTS;

typedef int ASF_FLAT_PICTURE;

typedef int ASF_FLAT_SYNCHRONISED_LYRICS;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFMetadata;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFMetadataProvider;

typedef enum {
    MFRATE_FORWARD = 0,
    MFRATE_REVERSE = 1,
} MFRATE_DIRECTION;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFRateSupport;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFRateControl;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFTimecodeTranslate;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFSeekInfo;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFSimpleAudioVolume;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFAudioStreamVolume;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFAudioPolicy;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFSampleGrabberSinkCallback;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFSampleGrabberSinkCallback2;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFWorkQueueServices;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFWorkQueueServicesEx;

typedef enum {
    MF_DROP_MODE_NONE = 0,
    MF_DROP_MODE_1 = 1,
    MF_DROP_MODE_2 = 2,
    MF_DROP_MODE_3 = 3,
    MF_DROP_MODE_4 = 4,
    MF_DROP_MODE_5 = 5,
    MF_NUM_DROP_MODES = 6,
} MF_QUALITY_DROP_MODE;

typedef enum {
    MF_QUALITY_NORMAL = 0,
    MF_QUALITY_NORMAL_MINUS_1 = 1,
    MF_QUALITY_NORMAL_MINUS_2 = 2,
    MF_QUALITY_NORMAL_MINUS_3 = 3,
    MF_QUALITY_NORMAL_MINUS_4 = 4,
    MF_QUALITY_NORMAL_MINUS_5 = 5,
    MF_NUM_QUALITY_LEVELS = 6,
} MF_QUALITY_LEVEL;

typedef enum {
    MF_QUALITY_CANNOT_KEEP_UP = 1,
} MF_QUALITY_ADVISE_FLAGS;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFQualityManager;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFQualityAdvise;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFQualityAdvise2;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFQualityAdviseLimits;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFRealTimeClient;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFRealTimeClientEx;

typedef enum {
    SequencerTopologyFlags_Last = 1,
} MFSequencerTopologyFlags;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFSequencerSource;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFMediaSourceTopologyProvider;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFMediaSourcePresentationProvider;

typedef int MFTOPONODE_ATTRIBUTE_UPDATE;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFTopologyNodeAttributeEditor;

typedef int MF_LEAKY_BUCKET_PAIR;

typedef int MFBYTESTREAM_BUFFERING_PARAMS;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFByteStreamBuffering;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFByteStreamCacheControl;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFByteStreamTimeSeek;

typedef int MF_BYTE_STREAM_CACHE_RANGE;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFByteStreamCacheControl2;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFNetCredential;

typedef int MFNetCredentialManagerGetParam;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFNetCredentialManager;

typedef enum {
    REQUIRE_PROMPT = 1,
    REQUIRE_SAVE_SELECTED = 2,
} MFNetCredentialRequirements;

typedef enum {
    MFNET_CREDENTIAL_SAVE = 1,
    MFNET_CREDENTIAL_DONT_CACHE = 2,
    MFNET_CREDENTIAL_ALLOW_CLEAR_TEXT = 4,
} MFNetCredentialOptions;

typedef enum {
    MFNET_AUTHENTICATION_PROXY = 1,
    MFNET_AUTHENTICATION_CLEAR_TEXT = 2,
    MFNET_AUTHENTICATION_LOGGED_ON_USER = 4,
} MFNetAuthenticationFlags;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFNetCredentialCache;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFSSLCertificateManager;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFNetResourceFilter;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFSourceOpenMonitor;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFNetProxyLocator;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFNetProxyLocatorFactory;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFSaveJob;

typedef enum {
    MFNETSOURCE_UNDEFINED = 0,
    MFNETSOURCE_HTTP = 1,
    MFNETSOURCE_RTSP = 2,
    MFNETSOURCE_FILE = 3,
    MFNETSOURCE_MULTICAST = 4,
} MFNETSOURCE_PROTOCOL_TYPE;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFNetSchemeHandlerConfig;

typedef enum {
    MFNETSOURCE_UDP = 0,
    MFNETSOURCE_TCP = 1,
} MFNETSOURCE_TRANSPORT_TYPE;

typedef enum {
    MFNETSOURCE_CACHE_UNAVAILABLE = 0,
    MFNETSOURCE_CACHE_ACTIVE_WRITING = 1,
    MFNETSOURCE_CACHE_ACTIVE_COMPLETE = 2,
} MFNETSOURCE_CACHE_STATE;

typedef enum {
    MFNETSOURCE_RECVPACKETS_ID = 0,
    MFNETSOURCE_LOSTPACKETS_ID = 1,
    MFNETSOURCE_RESENDSREQUESTED_ID = 2,
    MFNETSOURCE_RESENDSRECEIVED_ID = 3,
    MFNETSOURCE_RECOVEREDBYECCPACKETS_ID = 4,
    MFNETSOURCE_RECOVEREDBYRTXPACKETS_ID = 5,
    MFNETSOURCE_OUTPACKETS_ID = 6,
    MFNETSOURCE_RECVRATE_ID = 7,
    MFNETSOURCE_AVGBANDWIDTHBPS_ID = 8,
    MFNETSOURCE_BYTESRECEIVED_ID = 9,
    MFNETSOURCE_PROTOCOL_ID = 10,
    MFNETSOURCE_TRANSPORT_ID = 11,
    MFNETSOURCE_CACHE_STATE_ID = 12,
    MFNETSOURCE_LINKBANDWIDTH_ID = 13,
    MFNETSOURCE_CONTENTBITRATE_ID = 14,
    MFNETSOURCE_SPEEDFACTOR_ID = 15,
    MFNETSOURCE_BUFFERSIZE_ID = 16,
    MFNETSOURCE_BUFFERPROGRESS_ID = 17,
    MFNETSOURCE_LASTBWSWITCHTS_ID = 18,
    MFNETSOURCE_SEEKRANGESTART_ID = 19,
    MFNETSOURCE_SEEKRANGEEND_ID = 20,
    MFNETSOURCE_BUFFERINGCOUNT_ID = 21,
    MFNETSOURCE_INCORRECTLYSIGNEDPACKETS_ID = 22,
    MFNETSOURCE_SIGNEDSESSION_ID = 23,
    MFNETSOURCE_MAXBITRATE_ID = 24,
    MFNETSOURCE_RECEPTION_QUALITY_ID = 25,
    MFNETSOURCE_RECOVEREDPACKETS_ID = 26,
    MFNETSOURCE_VBR_ID = 27,
    MFNETSOURCE_DOWNLOADPROGRESS_ID = 28,
    MFNETSOURCE_UNPREDEFINEDPROTOCOLNAME_ID = 29,
} MFNETSOURCE_STATISTICS_IDS;

typedef enum {
    MFNET_PROXYSETTING_NONE = 0,
    MFNET_PROXYSETTING_MANUAL = 1,
    MFNET_PROXYSETTING_AUTO = 2,
    MFNET_PROXYSETTING_BROWSER = 3,
} MFNET_PROXYSETTINGS;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFSchemeHandler;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFByteStreamHandler;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFTrustedInput;

typedef enum {
    PEACTION_NO = 0,
    PEACTION_PLAY = 1,
    PEACTION_COPY = 2,
    PEACTION_EXPORT = 3,
    PEACTION_EXTRACT = 4,
    PEACTION_RESERVED1 = 5,
    PEACTION_RESERVED2 = 6,
    PEACTION_RESERVED3 = 7,
    PEACTION_LAST = 7,
} MFPOLICYMANAGER_ACTION;

typedef int MFINPUTTRUSTAUTHORITY_ACCESS_ACTION;

typedef int MFINPUTTRUSTAUTHORITY_ACCESS_PARAMS;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFInputTrustAuthority;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFTrustedOutput;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFOutputTrustAuthority;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFOutputPolicy;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFOutputSchema;

typedef enum {
    MF_OPM_CGMSA_OFF = 0,
    MF_OPM_CGMSA_COPY_FREELY = 1,
    MF_OPM_CGMSA_COPY_NO_MORE = 2,
    MF_OPM_CGMSA_COPY_ONE_GENERATION = 3,
    MF_OPM_CGMSA_COPY_NEVER = 4,
    MF_OPM_CGMSA_REDISTRIBUTION_CONTROL_REQUIRED = 8,
} MF_OPM_CGMSA_PROTECTION_LEVEL;

typedef enum {
    MF_OPM_ACP_OFF = 0,
    MF_OPM_ACP_LEVEL_ONE = 1,
    MF_OPM_ACP_LEVEL_TWO = 2,
    MF_OPM_ACP_LEVEL_THREE = 3,
    MF_OPM_ACP_FORCE_ULONG = 2147483647,
} MF_OPM_ACP_PROTECTION_LEVEL;

typedef enum {
    MFaudioConstrictionOff = 0,
    MFaudioConstriction48_16 = 1,
    MFaudioConstriction44_16 = 2,
    MFaudioConstriction14_14 = 3,
    MFaudioConstrictionMute = 4,
} MFAudioConstriction;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFSecureChannel;

typedef enum {
    SAMPLE_PROTECTION_VERSION_NO = 0,
    SAMPLE_PROTECTION_VERSION_BASIC_LOKI = 1,
    SAMPLE_PROTECTION_VERSION_SCATTER = 2,
    SAMPLE_PROTECTION_VERSION_RC4 = 3,
    SAMPLE_PROTECTION_VERSION_AES128CTR = 4,
} SAMPLE_PROTECTION_VERSION;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFSampleProtection;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFMediaSinkPreroll;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFFinalizableMediaSink;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFStreamingSinkConfig;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFRemoteProxy;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFObjectReferenceStream;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFPMPHost;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFPMPClient;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFPMPServer;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFRemoteDesktopPlugin;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFSAMIStyle;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFTranscodeProfile;

typedef enum {
    MF_TRANSCODE_TOPOLOGYMODE_SOFTWARE_ONLY = 0,
    MF_TRANSCODE_TOPOLOGYMODE_HARDWARE_ALLOWED = 1,
} MF_TRANSCODE_TOPOLOGYMODE_FLAGS;

typedef enum {
    MF_TRANSCODE_ADJUST_PROFILE_DEFAULT = 0,
    MF_TRANSCODE_ADJUST_PROFILE_USE_SOURCE_ATTRIBUTES = 1,
} MF_TRANSCODE_ADJUST_PROFILE_FLAGS;

typedef enum {
    MF_VIDEO_PROCESSOR_ALGORITHM_DEFAULT = 0,
    MF_VIDEO_PROCESSOR_ALGORITHM_MRF_CRF_444 = 1,
} MF_VIDEO_PROCESSOR_ALGORITHM_TYPE;

typedef int MF_TRANSCODE_SINK_INFO;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFTranscodeSinkInfoProvider;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFFieldOfUseMFTUnlock;

typedef int MFT_REGISTRATION_INFO;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFLocalMFTRegistration;

typedef int IMFCapturePhotoConfirmation;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFPMPHostApp;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFPMPClientApp;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFMediaStreamSourceSampleRequest;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFTrackedSample;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFProtectedEnvironmentAccess;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFSignedLibrary;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFSystemId;

typedef int MFCONTENTPROTECTIONDEVICE_INPUT_DATA;

typedef int MFCONTENTPROTECTIONDEVICE_OUTPUT_DATA;

typedef int MFCONTENTPROTECTIONDEVICE_REALTIMECLIENT_DATA;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IMFContentProtectionDevice;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IMFContentDecryptorContext;

typedef enum {
    MF_MEDIAKEYSESSION_TYPE_TEMPORARY = 0,
    MF_MEDIAKEYSESSION_TYPE_PERSISTENT_LICENSE = 1,
    MF_MEDIAKEYSESSION_TYPE_PERSISTENT_RELEASE_MESSAGE = 2,
    MF_MEDIAKEYSESSION_TYPE_PERSISTENT_USAGE_RECORD = 3,
} MF_MEDIAKEYSESSION_TYPE;

typedef enum {
    MF_MEDIAKEY_STATUS_USABLE = 0,
    MF_MEDIAKEY_STATUS_EXPIRED = 1,
    MF_MEDIAKEY_STATUS_OUTPUT_DOWNSCALED = 2,
    MF_MEDIAKEY_STATUS_OUTPUT_NOT_ALLOWED = 3,
    MF_MEDIAKEY_STATUS_STATUS_PENDING = 4,
    MF_MEDIAKEY_STATUS_INTERNAL_ERROR = 5,
    MF_MEDIAKEY_STATUS_RELEASED = 6,
    MF_MEDIAKEY_STATUS_OUTPUT_RESTRICTED = 7,
} MF_MEDIAKEY_STATUS;

typedef int MFMediaKeyStatus;

typedef enum {
    MF_MEDIAKEYSESSION_MESSAGETYPE_LICENSE_REQUEST = 0,
    MF_MEDIAKEYSESSION_MESSAGETYPE_LICENSE_RENEWAL = 1,
    MF_MEDIAKEYSESSION_MESSAGETYPE_LICENSE_RELEASE = 2,
    MF_MEDIAKEYSESSION_MESSAGETYPE_INDIVIDUALIZATION_REQUEST = 3,
} MF_MEDIAKEYSESSION_MESSAGETYPE;

typedef enum {
    MF_CROSS_ORIGIN_POLICY_NONE = 0,
    MF_CROSS_ORIGIN_POLICY_ANONYMOUS = 1,
    MF_CROSS_ORIGIN_POLICY_USE_CREDENTIALS = 2,
} MF_CROSS_ORIGIN_POLICY;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IMFNetCrossOriginSupport;

// TODO: this type is limited to platform 'windows10.0.15063'
typedef int IMFHttpDownloadRequest;

// TODO: this type is limited to platform 'windows10.0.15063'
typedef int IMFHttpDownloadSession;

// TODO: this type is limited to platform 'windows10.0.15063'
typedef int IMFHttpDownloadSessionProvider;

typedef int MF_VIDEO_SPHERICAL_VIEWDIRECTION;

typedef int IMFMediaSource2;

typedef int IMFMediaStream2;

typedef enum {
    MFSensorDeviceType_Unknown = 0,
    MFSensorDeviceType_Device = 1,
    MFSensorDeviceType_MediaSource = 2,
    MFSensorDeviceType_FrameProvider = 3,
    MFSensorDeviceType_SensorTransform = 4,
} MFSensorDeviceType;

typedef enum {
    MFSensorStreamType_Unknown = 0,
    MFSensorStreamType_Input = 1,
    MFSensorStreamType_Output = 2,
} MFSensorStreamType;

typedef enum {
    MFSensorDeviceMode_Controller = 0,
    MFSensorDeviceMode_Shared = 1,
} MFSensorDeviceMode;

// TODO: this type is limited to platform 'windows10.0.14393'
typedef int IMFSensorDevice;

// TODO: this type is limited to platform 'windows10.0.14393'
typedef int IMFSensorGroup;

// TODO: this type is limited to platform 'windows10.0.15063'
typedef int IMFSensorStream;

// TODO: this type is limited to platform 'windows10.0.15063'
typedef int IMFSensorTransformFactory;

typedef int SENSORPROFILEID;

// TODO: this type is limited to platform 'windows10.0.17134'
typedef int IMFSensorProfile;

// TODO: this type is limited to platform 'windows10.0.17134'
typedef int IMFSensorProfileCollection;

// TODO: this type is limited to platform 'windows10.0.15063'
typedef int IMFSensorProcessActivity;

// TODO: this type is limited to platform 'windows10.0.15063'
typedef int IMFSensorActivityReport;

// TODO: this type is limited to platform 'windows10.0.15063'
typedef int IMFSensorActivitiesReport;

// TODO: this type is limited to platform 'windows10.0.15063'
typedef int IMFSensorActivitiesReportCallback;

// TODO: this type is limited to platform 'windows10.0.15063'
typedef int IMFSensorActivityMonitor;

typedef int MFCameraIntrinsic_CameraModel;

typedef int MFCameraIntrinsic_DistortionModel6KT;

typedef int MFCameraIntrinsic_DistortionModelArcTan;

typedef enum {
    MFCameraIntrinsic_DistortionModelType_6KT = 0,
    MFCameraIntrinsic_DistortionModelType_ArcTan = 1,
} MFCameraIntrinsic_DistortionModelType;

typedef int MFExtendedCameraIntrinsic_IntrinsicModel;

typedef int IMFExtendedCameraIntrinsicModel;

typedef int IMFExtendedCameraIntrinsicsDistortionModel6KT;

typedef int IMFExtendedCameraIntrinsicsDistortionModelArcTan;

typedef int IMFExtendedCameraIntrinsics;

typedef int IMFExtendedCameraControl;

typedef int IMFExtendedCameraController;

// TODO: this type is limited to platform 'windows10.0.19041'
typedef int IMFRelativePanelReport;

// TODO: this type is limited to platform 'windows10.0.19041'
typedef int IMFRelativePanelWatcher;

// TODO: this type is limited to platform 'windows10.0.19041'
typedef int IMFVideoCaptureSampleAllocator;

typedef enum {
    MFSampleAllocatorUsage_UsesProvidedAllocator = 0,
    MFSampleAllocatorUsage_UsesCustomAllocator = 1,
    MFSampleAllocatorUsage_DoesNotAllocate = 2,
} MFSampleAllocatorUsage;

// TODO: this type is limited to platform 'windows10.0.19041'
typedef int IMFSampleAllocatorControl;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFASFContentInfo;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFASFProfile;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFASFStreamConfig;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFASFMutualExclusion;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFASFStreamPrioritization;

typedef enum {
    MFASF_INDEXER_WRITE_NEW_INDEX = 1,
    MFASF_INDEXER_READ_FOR_REVERSEPLAYBACK = 2,
    MFASF_INDEXER_WRITE_FOR_LIVEREAD = 4,
} MFASF_INDEXER_FLAGS;

typedef int ASF_INDEX_IDENTIFIER;

typedef int ASF_INDEX_DESCRIPTOR;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFASFIndexer;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFASFSplitter;

typedef enum {
    MFASF_SPLITTER_REVERSE = 1,
    MFASF_SPLITTER_WMDRM = 2,
} MFASF_SPLITTERFLAGS;

typedef enum {
    ASF_STATUSFLAGS_INCOMPLETE = 1,
    ASF_STATUSFLAGS_NONFATAL_ERROR = 2,
} ASF_STATUSFLAGS;

typedef enum {
    MFASF_MULTIPLEXER_AUTOADJUST_BITRATE = 1,
} MFASF_MULTIPLEXERFLAGS;

typedef int ASF_MUX_STATISTICS;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFASFMultiplexer;

typedef enum {
    MFASF_STREAMSELECTOR_DISABLE_THINNING = 1,
    MFASF_STREAMSELECTOR_USE_AVERAGE_BITRATE = 2,
} MFASF_STREAMSELECTOR_FLAGS;

typedef enum {
    ASF_STATUS_NOTSELECTED = 0,
    ASF_STATUS_CLEANPOINTSONLY = 1,
    ASF_STATUS_ALLDATAUNITS = 2,
} ASF_SELECTION_STATUS;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFASFStreamSelector;

typedef enum {
    MFSINK_WMDRMACTION_UNDEFINED = 0,
    MFSINK_WMDRMACTION_ENCODE = 1,
    MFSINK_WMDRMACTION_TRANSCODE = 2,
    MFSINK_WMDRMACTION_TRANSCRYPT = 3,
    MFSINK_WMDRMACTION_LAST = 3,
} MFSINK_WMDRMACTION;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFDRMNetHelper;

typedef int MFVideoNormalizedRect;

typedef enum {
    MF_CAPTURE_ENGINE_DEVICE_TYPE_AUDIO = 0,
    MF_CAPTURE_ENGINE_DEVICE_TYPE_VIDEO = 1,
} MF_CAPTURE_ENGINE_DEVICE_TYPE;

typedef enum {
    MF_CAPTURE_ENGINE_SINK_TYPE_RECORD = 0,
    MF_CAPTURE_ENGINE_SINK_TYPE_PREVIEW = 1,
    MF_CAPTURE_ENGINE_SINK_TYPE_PHOTO = 2,
} MF_CAPTURE_ENGINE_SINK_TYPE;

typedef enum {
    MF_CAPTURE_ENGINE_PREFERRED_SOURCE_STREAM_FOR_VIDEO_PREVIEW = 4294967290,
    MF_CAPTURE_ENGINE_PREFERRED_SOURCE_STREAM_FOR_VIDEO_RECORD = 4294967289,
    MF_CAPTURE_ENGINE_PREFERRED_SOURCE_STREAM_FOR_PHOTO = 4294967288,
    MF_CAPTURE_ENGINE_PREFERRED_SOURCE_STREAM_FOR_AUDIO = 4294967287,
    MF_CAPTURE_ENGINE_MEDIASOURCE = 4294967295,
} MF_CAPTURE_ENGINE_SOURCE;

typedef enum {
    MF_CAPTURE_ENGINE_STREAM_CATEGORY_VIDEO_PREVIEW = 0,
    MF_CAPTURE_ENGINE_STREAM_CATEGORY_VIDEO_CAPTURE = 1,
    MF_CAPTURE_ENGINE_STREAM_CATEGORY_PHOTO_INDEPENDENT = 2,
    MF_CAPTURE_ENGINE_STREAM_CATEGORY_PHOTO_DEPENDENT = 3,
    MF_CAPTURE_ENGINE_STREAM_CATEGORY_AUDIO = 4,
    MF_CAPTURE_ENGINE_STREAM_CATEGORY_UNSUPPORTED = 5,
} MF_CAPTURE_ENGINE_STREAM_CATEGORY;

typedef enum {
    MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE_OTHER = 0,
    MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE_COMMUNICATIONS = 1,
    MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE_MEDIA = 2,
    MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE_GAMECHAT = 3,
    MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE_SPEECH = 4,
} MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE;

typedef enum {
    MF_CAPTURE_ENGINE_AUDIO_PROCESSING_DEFAULT = 0,
    MF_CAPTURE_ENGINE_AUDIO_PROCESSING_RAW = 1,
} MF_CAPTURE_ENGINE_AUDIO_PROCESSING_MODE;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFCaptureEngineOnEventCallback;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFCaptureEngineOnSampleCallback;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFCaptureSink;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFCaptureRecordSink;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFCapturePreviewSink;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFCapturePhotoSink;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFCaptureSource;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFCaptureEngine;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFCaptureEngineClassFactory;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFCaptureEngineOnSampleCallback2;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFCaptureSink2;

typedef int MFPERIODICCALLBACK;

typedef enum {
    MF_STANDARD_WORKQUEUE = 0,
    MF_WINDOW_WORKQUEUE = 1,
    MF_MULTITHREADED_WORKQUEUE = 2,
} MFASYNC_WORKQUEUE_TYPE;

typedef int MFASYNCRESULT;

typedef enum {
    MF_TOPOSTATUS_INVALID = 0,
    MF_TOPOSTATUS_READY = 100,
    MF_TOPOSTATUS_STARTED_SOURCE = 200,
    MF_TOPOSTATUS_DYNAMIC_CHANGED = 210,
    MF_TOPOSTATUS_SINK_SWITCHED = 300,
    MF_TOPOSTATUS_ENDED = 400,
} MF_TOPOSTATUS;

typedef enum {
    MF_SAMPLE_ENCRYPTION_PROTECTION_SCHEME_NONE = 0,
    MF_SAMPLE_ENCRYPTION_PROTECTION_SCHEME_AES_CTR = 1,
    MF_SAMPLE_ENCRYPTION_PROTECTION_SCHEME_AES_CBC = 2,
} MFSampleEncryptionProtectionScheme;

typedef int MOVE_RECT;

typedef int DIRTYRECT_INFO;

typedef int MOVEREGION_INFO;

typedef int ROI_AREA;

typedef int MACROBLOCK_DATA;

typedef enum {
    MFT_ENUM_FLAG_SYNCMFT = 1,
    MFT_ENUM_FLAG_ASYNCMFT = 2,
    MFT_ENUM_FLAG_HARDWARE = 4,
    MFT_ENUM_FLAG_FIELDOFUSE = 8,
    MFT_ENUM_FLAG_LOCALMFT = 16,
    MFT_ENUM_FLAG_TRANSCODE_ONLY = 32,
    MFT_ENUM_FLAG_SORTANDFILTER = 64,
    MFT_ENUM_FLAG_SORTANDFILTER_APPROVED_ONLY = 192,
    MFT_ENUM_FLAG_SORTANDFILTER_WEB_ONLY = 320,
    MFT_ENUM_FLAG_SORTANDFILTER_WEB_ONLY_EDGEMODE = 576,
    MFT_ENUM_FLAG_UNTRUSTED_STOREMFT = 1024,
    MFT_ENUM_FLAG_ALL = 63,
} _MFT_ENUM_FLAG;

typedef enum {
    MFFrameSourceTypes_Color = 1,
    MFFrameSourceTypes_Infrared = 2,
    MFFrameSourceTypes_Depth = 4,
    MFFrameSourceTypes_Image = 8,
    MFFrameSourceTypes_Custom = 128,
} MFFrameSourceTypes;

typedef enum {
    MFVideo3DSampleFormat_BaseView = 0,
    MFVideo3DSampleFormat_MultiView = 1,
    MFVideo3DSampleFormat_Packed_LeftRight = 2,
    MFVideo3DSampleFormat_Packed_TopBottom = 3,
} MFVideo3DFormat;

typedef enum {
    MFSampleExtension_3DVideo_MultiView = 1,
    MFSampleExtension_3DVideo_Packed = 0,
} MFVideo3DSampleFormat;

typedef enum {
    MFVideoRotationFormat_0 = 0,
    MFVideoRotationFormat_90 = 90,
    MFVideoRotationFormat_180 = 180,
    MFVideoRotationFormat_270 = 270,
} MFVideoRotationFormat;

typedef enum {
    DistanceToFocalPlane = 0,
    DistanceToOpticalCenter = 1,
} MFDepthMeasurement;

typedef enum {
    MF_DECODE_UNIT_NAL = 0,
    MF_DECODE_UNIT_SEI = 1,
} MF_CUSTOM_DECODE_UNIT_TYPE;

typedef int MFFOLDDOWN_MATRIX;

typedef enum {
    MFVideoDRMFlag_None = 0,
    MFVideoDRMFlag_AnalogProtected = 1,
    MFVideoDRMFlag_DigitallyProtected = 2,
} MFVideoDRMFlags;

typedef enum {
    MFVideoPadFlag_PAD_TO_None = 0,
    MFVideoPadFlag_PAD_TO_4x3 = 1,
    MFVideoPadFlag_PAD_TO_16x9 = 2,
} MFVideoPadFlags;

typedef enum {
    MFVideoSrcContentHintFlag_None = 0,
    MFVideoSrcContentHintFlag_16x9 = 1,
    MFVideoSrcContentHintFlag_235_1 = 2,
} MFVideoSrcContentHintFlags;

typedef int MT_CUSTOM_VIDEO_PRIMARIES;

typedef int MT_ARBITRARY_HEADER;

typedef int MF_FLOAT2;

typedef int MF_FLOAT3;

typedef int MF_QUATERNION;

typedef int MFCameraExtrinsic_CalibratedTransform;

typedef int MFCameraExtrinsics;

typedef int MFCameraIntrinsic_PinholeCameraModel;

typedef int MFCameraIntrinsic_DistortionModel;

typedef int MFPinholeCameraIntrinsic_IntrinsicModel;

typedef int MFPinholeCameraIntrinsics;

typedef enum {
    MFWaveFormatExConvertFlag_Normal = 0,
    MFWaveFormatExConvertFlag_ForceExtensible = 1,
} MFWaveFormatExConvertFlags;

typedef enum {
    eAllocationTypeDynamic = 0,
    eAllocationTypeRT = 1,
    eAllocationTypePageable = 2,
    eAllocationTypeIgnore = 3,
} EAllocationType;

typedef enum {
    MF_MEDIA_ENGINE_ERR_NOERROR = 0,
    MF_MEDIA_ENGINE_ERR_ABORTED = 1,
    MF_MEDIA_ENGINE_ERR_NETWORK = 2,
    MF_MEDIA_ENGINE_ERR_DECODE = 3,
    MF_MEDIA_ENGINE_ERR_SRC_NOT_SUPPORTED = 4,
    MF_MEDIA_ENGINE_ERR_ENCRYPTED = 5,
} MF_MEDIA_ENGINE_ERR;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFMediaError;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFMediaTimeRange;

typedef enum {
    MF_MEDIA_ENGINE_EVENT_LOADSTART = 1,
    MF_MEDIA_ENGINE_EVENT_PROGRESS = 2,
    MF_MEDIA_ENGINE_EVENT_SUSPEND = 3,
    MF_MEDIA_ENGINE_EVENT_ABORT = 4,
    MF_MEDIA_ENGINE_EVENT_ERROR = 5,
    MF_MEDIA_ENGINE_EVENT_EMPTIED = 6,
    MF_MEDIA_ENGINE_EVENT_STALLED = 7,
    MF_MEDIA_ENGINE_EVENT_PLAY = 8,
    MF_MEDIA_ENGINE_EVENT_PAUSE = 9,
    MF_MEDIA_ENGINE_EVENT_LOADEDMETADATA = 10,
    MF_MEDIA_ENGINE_EVENT_LOADEDDATA = 11,
    MF_MEDIA_ENGINE_EVENT_WAITING = 12,
    MF_MEDIA_ENGINE_EVENT_PLAYING = 13,
    MF_MEDIA_ENGINE_EVENT_CANPLAY = 14,
    MF_MEDIA_ENGINE_EVENT_CANPLAYTHROUGH = 15,
    MF_MEDIA_ENGINE_EVENT_SEEKING = 16,
    MF_MEDIA_ENGINE_EVENT_SEEKED = 17,
    MF_MEDIA_ENGINE_EVENT_TIMEUPDATE = 18,
    MF_MEDIA_ENGINE_EVENT_ENDED = 19,
    MF_MEDIA_ENGINE_EVENT_RATECHANGE = 20,
    MF_MEDIA_ENGINE_EVENT_DURATIONCHANGE = 21,
    MF_MEDIA_ENGINE_EVENT_VOLUMECHANGE = 22,
    MF_MEDIA_ENGINE_EVENT_FORMATCHANGE = 1000,
    MF_MEDIA_ENGINE_EVENT_PURGEQUEUEDEVENTS = 1001,
    MF_MEDIA_ENGINE_EVENT_TIMELINE_MARKER = 1002,
    MF_MEDIA_ENGINE_EVENT_BALANCECHANGE = 1003,
    MF_MEDIA_ENGINE_EVENT_DOWNLOADCOMPLETE = 1004,
    MF_MEDIA_ENGINE_EVENT_BUFFERINGSTARTED = 1005,
    MF_MEDIA_ENGINE_EVENT_BUFFERINGENDED = 1006,
    MF_MEDIA_ENGINE_EVENT_FRAMESTEPCOMPLETED = 1007,
    MF_MEDIA_ENGINE_EVENT_NOTIFYSTABLESTATE = 1008,
    MF_MEDIA_ENGINE_EVENT_FIRSTFRAMEREADY = 1009,
    MF_MEDIA_ENGINE_EVENT_TRACKSCHANGE = 1010,
    MF_MEDIA_ENGINE_EVENT_OPMINFO = 1011,
    MF_MEDIA_ENGINE_EVENT_RESOURCELOST = 1012,
    MF_MEDIA_ENGINE_EVENT_DELAYLOADEVENT_CHANGED = 1013,
    MF_MEDIA_ENGINE_EVENT_STREAMRENDERINGERROR = 1014,
    MF_MEDIA_ENGINE_EVENT_SUPPORTEDRATES_CHANGED = 1015,
    MF_MEDIA_ENGINE_EVENT_AUDIOENDPOINTCHANGE = 1016,
} MF_MEDIA_ENGINE_EVENT;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFMediaEngineNotify;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFMediaEngineSrcElements;

typedef enum {
    MF_MEDIA_ENGINE_NETWORK_EMPTY = 0,
    MF_MEDIA_ENGINE_NETWORK_IDLE = 1,
    MF_MEDIA_ENGINE_NETWORK_LOADING = 2,
    MF_MEDIA_ENGINE_NETWORK_NO_SOURCE = 3,
} MF_MEDIA_ENGINE_NETWORK;

typedef enum {
    MF_MEDIA_ENGINE_READY_HAVE_NOTHING = 0,
    MF_MEDIA_ENGINE_READY_HAVE_METADATA = 1,
    MF_MEDIA_ENGINE_READY_HAVE_CURRENT_DATA = 2,
    MF_MEDIA_ENGINE_READY_HAVE_FUTURE_DATA = 3,
    MF_MEDIA_ENGINE_READY_HAVE_ENOUGH_DATA = 4,
} MF_MEDIA_ENGINE_READY;

typedef enum {
    MF_MEDIA_ENGINE_CANPLAY_NOT_SUPPORTED = 0,
    MF_MEDIA_ENGINE_CANPLAY_MAYBE = 1,
    MF_MEDIA_ENGINE_CANPLAY_PROBABLY = 2,
} MF_MEDIA_ENGINE_CANPLAY;

typedef enum {
    MF_MEDIA_ENGINE_PRELOAD_MISSING = 0,
    MF_MEDIA_ENGINE_PRELOAD_EMPTY = 1,
    MF_MEDIA_ENGINE_PRELOAD_NONE = 2,
    MF_MEDIA_ENGINE_PRELOAD_METADATA = 3,
    MF_MEDIA_ENGINE_PRELOAD_AUTOMATIC = 4,
} MF_MEDIA_ENGINE_PRELOAD;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFMediaEngine;

typedef enum {
    MF_MEDIA_ENGINE_S3D_PACKING_MODE_NONE = 0,
    MF_MEDIA_ENGINE_S3D_PACKING_MODE_SIDE_BY_SIDE = 1,
    MF_MEDIA_ENGINE_S3D_PACKING_MODE_TOP_BOTTOM = 2,
} MF_MEDIA_ENGINE_S3D_PACKING_MODE;

typedef enum {
    MF_MEDIA_ENGINE_STATISTIC_FRAMES_RENDERED = 0,
    MF_MEDIA_ENGINE_STATISTIC_FRAMES_DROPPED = 1,
    MF_MEDIA_ENGINE_STATISTIC_BYTES_DOWNLOADED = 2,
    MF_MEDIA_ENGINE_STATISTIC_BUFFER_PROGRESS = 3,
    MF_MEDIA_ENGINE_STATISTIC_FRAMES_PER_SECOND = 4,
    MF_MEDIA_ENGINE_STATISTIC_PLAYBACK_JITTER = 5,
    MF_MEDIA_ENGINE_STATISTIC_FRAMES_CORRUPTED = 6,
    MF_MEDIA_ENGINE_STATISTIC_TOTAL_FRAME_DELAY = 7,
} MF_MEDIA_ENGINE_STATISTIC;

typedef enum {
    MF_MEDIA_ENGINE_SEEK_MODE_NORMAL = 0,
    MF_MEDIA_ENGINE_SEEK_MODE_APPROXIMATE = 1,
} MF_MEDIA_ENGINE_SEEK_MODE;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFMediaEngineEx;

typedef int IMFMediaEngineAudioEndpointId;

typedef enum {
    MF_MEDIA_ENGINE_EXTENSION_TYPE_MEDIASOURCE = 0,
    MF_MEDIA_ENGINE_EXTENSION_TYPE_BYTESTREAM = 1,
} MF_MEDIA_ENGINE_EXTENSION_TYPE;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFMediaEngineExtension;

typedef enum {
    MF_MEDIA_ENGINE_FRAME_PROTECTION_FLAG_PROTECTED = 1,
    MF_MEDIA_ENGINE_FRAME_PROTECTION_FLAG_REQUIRES_SURFACE_PROTECTION = 2,
    MF_MEDIA_ENGINE_FRAME_PROTECTION_FLAG_REQUIRES_ANTI_SCREEN_SCRAPE_PROTECTION = 4,
} MF_MEDIA_ENGINE_FRAME_PROTECTION_FLAGS;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFMediaEngineProtectedContent;

typedef int IAudioSourceProvider;

typedef int IMFMediaEngineWebSupport;

typedef enum {
    MF_MSE_VP9_SUPPORT_DEFAULT = 0,
    MF_MSE_VP9_SUPPORT_ON = 1,
    MF_MSE_VP9_SUPPORT_OFF = 2,
} MF_MSE_VP9_SUPPORT_TYPE;

typedef enum {
    MF_MSE_OPUS_SUPPORT_ON = 0,
    MF_MSE_OPUS_SUPPORT_OFF = 1,
} MF_MSE_OPUS_SUPPORT_TYPE;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFMediaSourceExtensionNotify;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFBufferListNotify;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFSourceBufferNotify;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFSourceBuffer;

typedef enum {
    MF_MSE_APPEND_MODE_SEGMENTS = 0,
    MF_MSE_APPEND_MODE_SEQUENCE = 1,
} MF_MSE_APPEND_MODE;

typedef int IMFSourceBufferAppendMode;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFSourceBufferList;

typedef enum {
    MF_MSE_READY_CLOSED = 1,
    MF_MSE_READY_OPEN = 2,
    MF_MSE_READY_ENDED = 3,
} MF_MSE_READY;

typedef enum {
    MF_MSE_ERROR_NOERROR = 0,
    MF_MSE_ERROR_NETWORK = 1,
    MF_MSE_ERROR_DECODE = 2,
    MF_MSE_ERROR_UNKNOWN_ERROR = 3,
} MF_MSE_ERROR;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFMediaSourceExtension;

typedef int IMFMediaSourceExtensionLiveSeekableRange;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFMediaEngineEME;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFMediaEngineSrcElementsEx;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFMediaEngineNeedKeyNotify;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFMediaKeys;

typedef enum {
    MF_MEDIAENGINE_KEYERR_UNKNOWN = 1,
    MF_MEDIAENGINE_KEYERR_CLIENT = 2,
    MF_MEDIAENGINE_KEYERR_SERVICE = 3,
    MF_MEDIAENGINE_KEYERR_OUTPUT = 4,
    MF_MEDIAENGINE_KEYERR_HARDWARECHANGE = 5,
    MF_MEDIAENGINE_KEYERR_DOMAIN = 6,
} MF_MEDIA_ENGINE_KEYERR;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFMediaKeySession;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFMediaKeySessionNotify;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFCdmSuspendNotify;

typedef enum {
    MF_HDCP_STATUS_ON = 0,
    MF_HDCP_STATUS_OFF = 1,
    MF_HDCP_STATUS_ON_WITH_TYPE_ENFORCEMENT = 2,
} MF_HDCP_STATUS;

typedef int IMFHDCPStatus;

typedef enum {
    MF_MEDIA_ENGINE_OPM_NOT_REQUESTED = 0,
    MF_MEDIA_ENGINE_OPM_ESTABLISHED = 1,
    MF_MEDIA_ENGINE_OPM_FAILED_VM = 2,
    MF_MEDIA_ENGINE_OPM_FAILED_BDA = 3,
    MF_MEDIA_ENGINE_OPM_FAILED_UNSIGNED_DRIVER = 4,
    MF_MEDIA_ENGINE_OPM_FAILED = 5,
} MF_MEDIA_ENGINE_OPM_STATUS;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFMediaEngineOPMInfo;

typedef enum {
    MF_MEDIA_ENGINE_AUDIOONLY = 1,
    MF_MEDIA_ENGINE_WAITFORSTABLE_STATE = 2,
    MF_MEDIA_ENGINE_FORCEMUTE = 4,
    MF_MEDIA_ENGINE_REAL_TIME_MODE = 8,
    MF_MEDIA_ENGINE_DISABLE_LOCAL_PLUGINS = 16,
    MF_MEDIA_ENGINE_CREATEFLAGS_MASK = 31,
} MF_MEDIA_ENGINE_CREATEFLAGS;

typedef enum {
    MF_MEDIA_ENGINE_ENABLE_PROTECTED_CONTENT = 1,
    MF_MEDIA_ENGINE_USE_PMP_FOR_ALL_CONTENT = 2,
    MF_MEDIA_ENGINE_USE_UNPROTECTED_PMP = 4,
} MF_MEDIA_ENGINE_PROTECTION_FLAGS;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFMediaEngineClassFactory;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFMediaEngineClassFactoryEx;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFMediaEngineClassFactory2;

typedef int IMFExtendedDRMTypeSupport;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFMediaEngineSupportsSourceTransfer;

typedef int IMFMediaEngineTransferSource;

typedef enum {
    MF_TIMED_TEXT_TRACK_KIND_UNKNOWN = 0,
    MF_TIMED_TEXT_TRACK_KIND_SUBTITLES = 1,
    MF_TIMED_TEXT_TRACK_KIND_CAPTIONS = 2,
    MF_TIMED_TEXT_TRACK_KIND_METADATA = 3,
} MF_TIMED_TEXT_TRACK_KIND;

typedef enum {
    MF_TIMED_TEXT_UNIT_TYPE_PIXELS = 0,
    MF_TIMED_TEXT_UNIT_TYPE_PERCENTAGE = 1,
} MF_TIMED_TEXT_UNIT_TYPE;

typedef enum {
    MF_TIMED_TEXT_FONT_STYLE_NORMAL = 0,
    MF_TIMED_TEXT_FONT_STYLE_OBLIQUE = 1,
    MF_TIMED_TEXT_FONT_STYLE_ITALIC = 2,
} MF_TIMED_TEXT_FONT_STYLE;

typedef enum {
    MF_TIMED_TEXT_ALIGNMENT_START = 0,
    MF_TIMED_TEXT_ALIGNMENT_END = 1,
    MF_TIMED_TEXT_ALIGNMENT_CENTER = 2,
} MF_TIMED_TEXT_ALIGNMENT;

typedef enum {
    MF_TIMED_TEXT_DISPLAY_ALIGNMENT_BEFORE = 0,
    MF_TIMED_TEXT_DISPLAY_ALIGNMENT_AFTER = 1,
    MF_TIMED_TEXT_DISPLAY_ALIGNMENT_CENTER = 2,
} MF_TIMED_TEXT_DISPLAY_ALIGNMENT;

typedef enum {
    MF_TIMED_TEXT_DECORATION_NONE = 0,
    MF_TIMED_TEXT_DECORATION_UNDERLINE = 1,
    MF_TIMED_TEXT_DECORATION_LINE_THROUGH = 2,
    MF_TIMED_TEXT_DECORATION_OVERLINE = 4,
} MF_TIMED_TEXT_DECORATION;

typedef enum {
    MF_TIMED_TEXT_WRITING_MODE_LRTB = 0,
    MF_TIMED_TEXT_WRITING_MODE_RLTB = 1,
    MF_TIMED_TEXT_WRITING_MODE_TBRL = 2,
    MF_TIMED_TEXT_WRITING_MODE_TBLR = 3,
    MF_TIMED_TEXT_WRITING_MODE_LR = 4,
    MF_TIMED_TEXT_WRITING_MODE_RL = 5,
    MF_TIMED_TEXT_WRITING_MODE_TB = 6,
} MF_TIMED_TEXT_WRITING_MODE;

typedef enum {
    MF_TIMED_TEXT_SCROLL_MODE_POP_ON = 0,
    MF_TIMED_TEXT_SCROLL_MODE_ROLL_UP = 1,
} MF_TIMED_TEXT_SCROLL_MODE;

typedef enum {
    MF_TIMED_TEXT_ERROR_CODE_NOERROR = 0,
    MF_TIMED_TEXT_ERROR_CODE_FATAL = 1,
    MF_TIMED_TEXT_ERROR_CODE_DATA_FORMAT = 2,
    MF_TIMED_TEXT_ERROR_CODE_NETWORK = 3,
    MF_TIMED_TEXT_ERROR_CODE_INTERNAL = 4,
} MF_TIMED_TEXT_ERROR_CODE;

typedef enum {
    MF_TIMED_TEXT_CUE_EVENT_ACTIVE = 0,
    MF_TIMED_TEXT_CUE_EVENT_INACTIVE = 1,
    MF_TIMED_TEXT_CUE_EVENT_CLEAR = 2,
} MF_TIMED_TEXT_CUE_EVENT;

typedef enum {
    MF_TIMED_TEXT_TRACK_READY_STATE_NONE = 0,
    MF_TIMED_TEXT_TRACK_READY_STATE_LOADING = 1,
    MF_TIMED_TEXT_TRACK_READY_STATE_LOADED = 2,
    MF_TIMED_TEXT_TRACK_READY_STATE_ERROR = 3,
} MF_TIMED_TEXT_TRACK_READY_STATE;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IMFTimedText;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IMFTimedTextNotify;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IMFTimedTextTrack;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IMFTimedTextTrackList;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IMFTimedTextCue;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IMFTimedTextFormattedText;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IMFTimedTextStyle;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IMFTimedTextRegion;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IMFTimedTextBinary;

typedef int IMFTimedTextCueList;

typedef enum {
    MF_MEDIA_ENGINE_STREAMTYPE_FAILED_UNKNOWN = 0,
    MF_MEDIA_ENGINE_STREAMTYPE_FAILED_AUDIO = 1,
    MF_MEDIA_ENGINE_STREAMTYPE_FAILED_VIDEO = 2,
} MF_MEDIA_ENGINE_STREAMTYPE_FAILED;

typedef int IMFMediaEngineEMENotify;

typedef enum {
    MF_MEDIAKEYS_REQUIREMENT_REQUIRED = 1,
    MF_MEDIAKEYS_REQUIREMENT_OPTIONAL = 2,
    MF_MEDIAKEYS_REQUIREMENT_NOT_ALLOWED = 3,
} MF_MEDIAKEYS_REQUIREMENT;

typedef int IMFMediaKeySessionNotify2;

typedef int IMFMediaKeySystemAccess;

typedef int IMFMediaEngineClassFactory3;

typedef int IMFMediaKeys2;

typedef int IMFMediaKeySession2;

typedef int IMFMediaEngineClassFactory4;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFDLNASinkInit;

typedef int MFMPEG2DLNASINKSTATS;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFReadWriteClassFactory;

typedef enum {
    MF_SOURCE_READERF_ERROR = 1,
    MF_SOURCE_READERF_ENDOFSTREAM = 2,
    MF_SOURCE_READERF_NEWSTREAM = 4,
    MF_SOURCE_READERF_NATIVEMEDIATYPECHANGED = 16,
    MF_SOURCE_READERF_CURRENTMEDIATYPECHANGED = 32,
    MF_SOURCE_READERF_STREAMTICK = 256,
    MF_SOURCE_READERF_ALLEFFECTSREMOVED = 512,
} MF_SOURCE_READER_FLAG;

typedef enum {
    MF_SOURCE_READER_CONTROLF_DRAIN = 1,
} MF_SOURCE_READER_CONTROL_FLAG;

typedef enum {
    MF_SOURCE_READER_INVALID_STREAM_INDEX = -1,
    MF_SOURCE_READER_ALL_STREAMS = -2,
    MF_SOURCE_READER_ANY_STREAM = -2,
    MF_SOURCE_READER_FIRST_AUDIO_STREAM = -3,
    MF_SOURCE_READER_FIRST_VIDEO_STREAM = -4,
    MF_SOURCE_READER_MEDIASOURCE = -1,
} MF_SOURCE_READER_CONSTANTS;

typedef enum {
    MF_SOURCE_READER_CURRENT_TYPE_INDEX = -1,
} MF_SOURCE_READER_CURRENT_TYPE_CONSTANTS;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFSourceReader;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFSourceReaderEx;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFSourceReaderCallback;

typedef int IMFSourceReaderCallback2;

typedef enum {
    MF_SINK_WRITER_INVALID_STREAM_INDEX = 4294967295,
    MF_SINK_WRITER_ALL_STREAMS = 4294967294,
    MF_SINK_WRITER_MEDIASINK = 4294967295,
} MF_SINK_WRITER_CONSTANTS;

typedef int MF_SINK_WRITER_STATISTICS;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFSinkWriter;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFSinkWriterEx;

// TODO: this type is limited to platform 'windows8.1'
typedef int IMFSinkWriterEncoderConfig;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFSinkWriterCallback;

typedef int IMFSinkWriterCallback2;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFVideoPositionMapper;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFVideoDeviceID;

typedef enum {
    MFVideoARMode_None = 0,
    MFVideoARMode_PreservePicture = 1,
    MFVideoARMode_PreservePixel = 2,
    MFVideoARMode_NonLinearStretch = 4,
    MFVideoARMode_Mask = 7,
} MFVideoAspectRatioMode;

typedef enum {
    MFVideoRenderPrefs_DoNotRenderBorder = 1,
    MFVideoRenderPrefs_DoNotClipToDevice = 2,
    MFVideoRenderPrefs_AllowOutputThrottling = 4,
    MFVideoRenderPrefs_ForceOutputThrottling = 8,
    MFVideoRenderPrefs_ForceBatching = 16,
    MFVideoRenderPrefs_AllowBatching = 32,
    MFVideoRenderPrefs_ForceScaling = 64,
    MFVideoRenderPrefs_AllowScaling = 128,
    MFVideoRenderPrefs_DoNotRepaintOnStop = 256,
    MFVideoRenderPrefs_Mask = 511,
} MFVideoRenderPrefs;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFVideoDisplayControl;

typedef enum {
    MFVP_MESSAGE_FLUSH = 0,
    MFVP_MESSAGE_INVALIDATEMEDIATYPE = 1,
    MFVP_MESSAGE_PROCESSINPUTNOTIFY = 2,
    MFVP_MESSAGE_BEGINSTREAMING = 3,
    MFVP_MESSAGE_ENDSTREAMING = 4,
    MFVP_MESSAGE_ENDOFSTREAM = 5,
    MFVP_MESSAGE_STEP = 6,
    MFVP_MESSAGE_CANCELSTEP = 7,
} MFVP_MESSAGE_TYPE;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFVideoPresenter;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFDesiredSample;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFVideoMixerControl;

typedef enum {
    MFVideoMixPrefs_ForceHalfInterlace = 1,
    MFVideoMixPrefs_AllowDropToHalfInterlace = 2,
    MFVideoMixPrefs_AllowDropToBob = 4,
    MFVideoMixPrefs_ForceBob = 8,
    MFVideoMixPrefs_EnableRotation = 16,
    MFVideoMixPrefs_Mask = 31,
} MFVideoMixPrefs;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFVideoMixerControl2;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFVideoRenderer;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IEVRFilterConfig;

typedef enum {
    EVRFilterConfigPrefs_EnableQoS = 1,
    EVRFilterConfigPrefs_Mask = 1,
} EVRFilterConfigPrefs;

// TODO: this type is limited to platform 'windows6.1'
typedef int IEVRFilterConfigEx;

typedef enum {
    MF_SERVICE_LOOKUP_UPSTREAM = 0,
    MF_SERVICE_LOOKUP_UPSTREAM_DIRECT = 1,
    MF_SERVICE_LOOKUP_DOWNSTREAM = 2,
    MF_SERVICE_LOOKUP_DOWNSTREAM_DIRECT = 3,
    MF_SERVICE_LOOKUP_ALL = 4,
    MF_SERVICE_LOOKUP_GLOBAL = 5,
} MF_SERVICE_LOOKUP_TYPE;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFTopologyServiceLookup;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFTopologyServiceLookupClient;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IEVRTrustedVideoPlugin;

typedef enum {
    MFP_OPTION_NONE = 0,
    MFP_OPTION_FREE_THREADED_CALLBACK = 1,
    MFP_OPTION_NO_MMCSS = 2,
    MFP_OPTION_NO_REMOTE_DESKTOP_OPTIMIZATION = 4,
} MFP_CREATION_OPTIONS;

typedef enum {
    MFP_MEDIAPLAYER_STATE_EMPTY = 0,
    MFP_MEDIAPLAYER_STATE_STOPPED = 1,
    MFP_MEDIAPLAYER_STATE_PLAYING = 2,
    MFP_MEDIAPLAYER_STATE_PAUSED = 3,
    MFP_MEDIAPLAYER_STATE_SHUTDOWN = 4,
} MFP_MEDIAPLAYER_STATE;

typedef enum {
    MFP_MEDIAITEM_IS_LIVE = 1,
    MFP_MEDIAITEM_CAN_SEEK = 2,
    MFP_MEDIAITEM_CAN_PAUSE = 4,
    MFP_MEDIAITEM_HAS_SLOW_SEEK = 8,
} _MFP_MEDIAITEM_CHARACTERISTICS;

typedef enum {
    MFP_CREDENTIAL_PROMPT = 1,
    MFP_CREDENTIAL_SAVE = 2,
    MFP_CREDENTIAL_DO_NOT_CACHE = 4,
    MFP_CREDENTIAL_CLEAR_TEXT = 8,
    MFP_CREDENTIAL_PROXY = 16,
    MFP_CREDENTIAL_LOGGED_ON_USER = 32,
} _MFP_CREDENTIAL_FLAGS;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFPMediaPlayer;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFPMediaItem;

typedef enum {
    MFP_EVENT_TYPE_PLAY = 0,
    MFP_EVENT_TYPE_PAUSE = 1,
    MFP_EVENT_TYPE_STOP = 2,
    MFP_EVENT_TYPE_POSITION_SET = 3,
    MFP_EVENT_TYPE_RATE_SET = 4,
    MFP_EVENT_TYPE_MEDIAITEM_CREATED = 5,
    MFP_EVENT_TYPE_MEDIAITEM_SET = 6,
    MFP_EVENT_TYPE_FRAME_STEP = 7,
    MFP_EVENT_TYPE_MEDIAITEM_CLEARED = 8,
    MFP_EVENT_TYPE_MF = 9,
    MFP_EVENT_TYPE_ERROR = 10,
    MFP_EVENT_TYPE_PLAYBACK_ENDED = 11,
    MFP_EVENT_TYPE_ACQUIRE_USER_CREDENTIAL = 12,
} MFP_EVENT_TYPE;

typedef int MFP_EVENT_HEADER;

typedef int MFP_PLAY_EVENT;

typedef int MFP_PAUSE_EVENT;

typedef int MFP_STOP_EVENT;

typedef int MFP_POSITION_SET_EVENT;

typedef int MFP_RATE_SET_EVENT;

typedef int MFP_MEDIAITEM_CREATED_EVENT;

typedef int MFP_MEDIAITEM_SET_EVENT;

typedef int MFP_FRAME_STEP_EVENT;

typedef int MFP_MEDIAITEM_CLEARED_EVENT;

typedef int MFP_MF_EVENT;

typedef int MFP_ERROR_EVENT;

typedef int MFP_PLAYBACK_ENDED_EVENT;

typedef int MFP_ACQUIRE_USER_CREDENTIAL_EVENT;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMFPMediaPlayerCallback;

typedef int DEVICE_INFO;

typedef enum {
    MF_SHARING_ENGINE_EVENT_DISCONNECT = 2000,
    MF_SHARING_ENGINE_EVENT_LOCALRENDERINGSTARTED = 2001,
    MF_SHARING_ENGINE_EVENT_LOCALRENDERINGENDED = 2002,
    MF_SHARING_ENGINE_EVENT_STOPPED = 2003,
    MF_SHARING_ENGINE_EVENT_ERROR = 2501,
} MF_SHARING_ENGINE_EVENT;

typedef enum {
    MF_MEDIA_SHARING_ENGINE_EVENT_DISCONNECT = 2000,
} MF_MEDIA_SHARING_ENGINE_EVENT;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFSharingEngineClassFactory;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFMediaSharingEngine;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFMediaSharingEngineClassFactory;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFImageSharingEngine;

// TODO: this type is limited to platform 'windows8.0'
typedef int IMFImageSharingEngineClassFactory;

typedef enum {
    PLAYTO_SOURCE_NONE = 0,
    PLAYTO_SOURCE_IMAGE = 1,
    PLAYTO_SOURCE_AUDIO = 2,
    PLAYTO_SOURCE_VIDEO = 4,
    PLAYTO_SOURCE_PROTECTED = 8,
} PLAYTO_SOURCE_CREATEFLAGS;

// TODO: this type is limited to platform 'windows8.0'
typedef int IPlayToControl;

// TODO: this type is limited to platform 'windows8.1'
typedef int IPlayToControlWithCapabilities;

// TODO: this type is limited to platform 'windows8.0'
typedef int IPlayToSourceClassFactory;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IEVRVideoStreamControl;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFVideoProcessor;

typedef int MFVideoAlphaBitmapParams;

typedef int MFVideoAlphaBitmap;

typedef enum {
    MFVideoAlphaBitmap_EntireDDS = 1,
    MFVideoAlphaBitmap_SrcColorKey = 2,
    MFVideoAlphaBitmap_SrcRect = 4,
    MFVideoAlphaBitmap_DestRect = 8,
    MFVideoAlphaBitmap_FilterMode = 16,
    MFVideoAlphaBitmap_Alpha = 32,
    MFVideoAlphaBitmap_BitMask = 63,
} MFVideoAlphaBitmapFlags;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMFVideoMixerBitmap;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAdvancedMediaCaptureInitializationSettings;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAdvancedMediaCaptureSettings;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAdvancedMediaCapture;

// TODO: this type is limited to platform 'windows10.0.15063'
typedef int IMFSpatialAudioObjectBuffer;

// TODO: this type is limited to platform 'windows10.0.15063'
typedef int IMFSpatialAudioSample;

// TODO: this type is limited to platform 'windows10.0.19041'
typedef int IMFContentDecryptionModuleSession;

// TODO: this type is limited to platform 'windows10.0.19041'
typedef int IMFContentDecryptionModuleSessionCallbacks;

// TODO: this type is limited to platform 'windows10.0.19041'
typedef int IMFContentDecryptionModule;

// TODO: this type is limited to platform 'windows10.0.19041'
typedef int IMFContentDecryptionModuleAccess;

// TODO: this type is limited to platform 'windows10.0.19041'
typedef int IMFContentDecryptionModuleFactory;

typedef int D3DCONTENTPROTECTIONCAPS;

typedef int DXVA_VideoSample2;


//--------------------------------------------------------------------------------
// Section: Functions (235)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void DXVAHD_CreateDevice();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void DXVA2CreateDirect3DDeviceManager9();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void DXVA2CreateVideoService();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void OPMGetVideoOutputsFromHMONITOR();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void OPMGetVideoOutputForTarget();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void OPMGetVideoOutputsFromIDirect3DDevice9Object();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFSerializeAttributesToStream();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFDeserializeAttributesFromStream();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateTransformActivate();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateMediaSession();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreatePMPMediaSession();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateSourceResolver();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void CreatePropertyStore();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFGetSupportedSchemes();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFGetSupportedMimeTypes();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateTopology();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateTopologyNode();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFGetTopoNodeCurrentType();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFGetService();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i64*/void MFGetSystemTime();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreatePresentationClock();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateSystemTimeSource();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreatePresentationDescriptor();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFRequireProtectedEnvironment();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFSerializePresentationDescriptor();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFDeserializePresentationDescriptor();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateStreamDescriptor();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateSimpleTypeHandler();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFShutdownObject();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateAudioRenderer();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateAudioRendererActivate();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateVideoRendererActivate();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateMPEG4MediaSink();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreate3GPMediaSink();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateMP3MediaSink();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreateAC3MediaSink();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreateADTSMediaSink();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreateMuxSink();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreateFMPEG4MediaSink();

// TODO: this type is limited to platform 'windows8.1'
/*HRESULT*/void MFCreateAVIMediaSink();

// TODO: this type is limited to platform 'windows8.1'
/*HRESULT*/void MFCreateWAVEMediaSink();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateTopoLoader();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateSampleGrabberSinkActivate();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateStandardQualityManager();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateSequencerSource();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateSequencerSegmentOffset();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateAggregateSource();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateCredentialCache();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateProxyLocator();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateNetSchemePlugin();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreatePMPServer();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateRemoteDesktopPlugin();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void CreateNamedPropertyStore();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateSampleCopierMFT();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateTranscodeProfile();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateTranscodeTopology();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreateTranscodeTopologyFromByteStream();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFTranscodeGetAudioOutputAvailableTypes();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateTranscodeSinkActivate();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreateTrackedSample();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateMFByteStreamOnStream();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreateStreamOnMFByteStream();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreateMFByteStreamOnStreamEx();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreateStreamOnMFByteStreamEx();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreateMediaTypeFromProperties();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreatePropertiesFromMediaType();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFEnumDeviceSources();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateDeviceSource();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateDeviceSourceActivate();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreateProtectedEnvironmentAccess();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFLoadSignedLibrary();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFGetSystemId();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFGetLocalId();

// TODO: this type is limited to platform 'windows10.0.10240'
/*HRESULT*/void MFCreateContentProtectionDevice();

// TODO: this type is limited to platform 'windows10.0.10240'
/*HRESULT*/void MFIsContentProtectionDeviceSupported();

// TODO: this type is limited to platform 'windows10.0.10240'
/*HRESULT*/void MFCreateContentDecryptorContext();

// TODO: this type is limited to platform 'windows10.0.14393'
/*HRESULT*/void MFCreateSensorGroup();

// TODO: this type is limited to platform 'windows10.0.15063'
/*HRESULT*/void MFCreateSensorStream();

// TODO: this type is limited to platform 'windows10.0.17134'
/*HRESULT*/void MFCreateSensorProfile();

// TODO: this type is limited to platform 'windows10.0.15063'
/*HRESULT*/void MFCreateSensorProfileCollection();

/*HRESULT*/void MFCreateSensorActivityMonitor();

/*HRESULT*/void MFCreateExtendedCameraIntrinsics();

/*HRESULT*/void MFCreateExtendedCameraIntrinsicModel();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void MFCreateRelativePanelWatcher();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateASFContentInfo();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateASFIndexer();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateASFIndexerByteStream();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateASFSplitter();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateASFProfile();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateASFProfileFromPresentationDescriptor();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreatePresentationDescriptorFromASFProfile();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateASFMultiplexer();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateASFStreamSelector();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateASFMediaSink();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateASFMediaSinkActivate();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateWMVEncoderActivate();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateWMAEncoderActivate();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateASFStreamingMediaSink();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateASFStreamingMediaSinkActivate();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFStartup();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFShutdown();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFLockPlatform();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFUnlockPlatform();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFPutWorkItem();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFPutWorkItem2();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFPutWorkItemEx();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFPutWorkItemEx2();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFPutWaitingWorkItem();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFAllocateSerialWorkQueue();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFScheduleWorkItemEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFScheduleWorkItem();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCancelWorkItem();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFGetTimerPeriodicity();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFAddPeriodicCallback();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFRemovePeriodicCallback();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFAllocateWorkQueueEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFAllocateWorkQueue();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFLockWorkQueue();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFUnlockWorkQueue();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFBeginRegisterWorkQueueWithMMCSS();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFBeginRegisterWorkQueueWithMMCSSEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFEndRegisterWorkQueueWithMMCSS();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFBeginUnregisterWorkQueueWithMMCSS();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFEndUnregisterWorkQueueWithMMCSS();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFGetWorkQueueMMCSSClass();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFGetWorkQueueMMCSSTaskId();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFRegisterPlatformWithMMCSS();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFUnregisterPlatformFromMMCSS();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFLockSharedWorkQueue();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFGetWorkQueueMMCSSPriority();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateAsyncResult();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFInvokeCallback();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateFile();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateTempFile();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFBeginCreateFile();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFEndCreateFile();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCancelCreateFile();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateMemoryBuffer();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateMediaBufferWrapper();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateLegacyMediaBufferOnMFMediaBuffer();

// TODO: this type is limited to platform 'windows8.0'
/*DXGI_FORMAT*/void MFMapDX9FormatToDXGIFormat();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void MFMapDXGIFormatToDX9Format();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFLockDXGIDeviceManager();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFUnlockDXGIDeviceManager();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateDXSurfaceBuffer();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreateWICBitmapBuffer();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreateDXGISurfaceBuffer();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreateVideoSampleAllocatorEx();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreateDXGIDeviceManager();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateAlignedMemoryBuffer();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateMediaEvent();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateEventQueue();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateSample();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateAttributes();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFInitAttributesFromBlob();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFGetAttributesAsBlobSize();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFGetAttributesAsBlob();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFTRegister();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFTUnregister();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFTRegisterLocal();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFTUnregisterLocal();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFTRegisterLocalByCLSID();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFTUnregisterLocalByCLSID();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFTEnum();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFTEnumEx();

// TODO: this type is limited to platform 'windows10.0.10240'
/*HRESULT*/void MFTEnum2();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFTGetInfo();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFGetPluginControl();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFGetMFTMerit();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFRegisterLocalSchemeHandler();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFRegisterLocalByteStreamHandler();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreateMFByteStreamWrapper();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreateMediaExtensionActivate();

// TODO: this type is limited to platform 'windows10.0.15063'
/*HRESULT*/void MFCreateMuxStreamAttributes();

// TODO: this type is limited to platform 'windows10.0.15063'
/*HRESULT*/void MFCreateMuxStreamMediaType();

// TODO: this type is limited to platform 'windows10.0.15063'
/*HRESULT*/void MFCreateMuxStreamSample();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFValidateMediaTypeSize();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateMediaType();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateMFVideoFormatFromMFMediaType();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateWaveFormatExFromMFMediaType();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFInitMediaTypeFromVideoInfoHeader();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFInitMediaTypeFromVideoInfoHeader2();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFInitMediaTypeFromMPEG1VideoInfo();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFInitMediaTypeFromMPEG2VideoInfo();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCalculateBitmapImageSize();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCalculateImageSize();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFFrameRateToAverageTimePerFrame();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFAverageTimePerFrameToFrameRate();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFInitMediaTypeFromMFVideoFormat();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFInitMediaTypeFromWaveFormatEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFInitMediaTypeFromAMMediaType();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFInitAMMediaTypeFromMFMediaType();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateAMMediaTypeFromMFMediaType();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void MFCompareFullToPartialMediaType();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFWrapMediaType();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFUnwrapMediaType();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateVideoMediaType();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateVideoMediaTypeFromSubtype();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void MFIsFormatYUV();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateVideoMediaTypeFromBitMapInfoHeader();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFGetStrideForBitmapInfoHeader();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFGetPlaneSize();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateVideoMediaTypeFromBitMapInfoHeaderEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateMediaTypeFromRepresentation();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateAudioMediaType();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void MFGetUncompressedVideoFormat();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFInitVideoFormat();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFInitVideoFormat_RGB();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFConvertColorInfoToDXVA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFConvertColorInfoFromDXVA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCopyImage();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFConvertFromFP16Array();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFConvertToFP16Array();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreate2DMediaBuffer();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFCreateMediaBufferFromMediaType();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void MFCreateCollection();

// TODO: this type is limited to platform 'windows6.0.6000'
/*?*c_void*/void MFHeapAlloc();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void MFHeapFree();

// TODO: this type is limited to platform 'windows6.1'
/*i64*/void MFllMulDiv();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void MFGetContentProtectionSystemCLSID();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void MFCombineSamples();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void MFSplitSample();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateSourceReaderFromURL();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateSourceReaderFromByteStream();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateSourceReaderFromMediaSource();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateSinkWriterFromURL();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFCreateSinkWriterFromMediaSink();

/*HRESULT*/void MFCreateVideoPresenter();

/*HRESULT*/void MFCreateVideoMixer();

/*HRESULT*/void MFCreateVideoMixerAndPresenter();

/*HRESULT*/void MFCreateVideoRenderer();

/*HRESULT*/void MFCreateVideoSampleFromSurface();

/*HRESULT*/void MFCreateVideoSampleAllocator();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MFPCreateMediaPlayer();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void MFCreateEncryptedMediaExtensionsStoreActivate();

