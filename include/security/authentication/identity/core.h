// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../../../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (856)
//--------------------------------------------------------------------------------
#define ISSP_LEVEL (UINT)32
#define ISSP_MODE (UINT)1
#define SECPKG_FLAG_INTEGRITY (UINT)1
#define SECPKG_FLAG_PRIVACY (UINT)2
#define SECPKG_FLAG_TOKEN_ONLY (UINT)4
#define SECPKG_FLAG_DATAGRAM (UINT)8
#define SECPKG_FLAG_CONNECTION (UINT)16
#define SECPKG_FLAG_MULTI_REQUIRED (UINT)32
#define SECPKG_FLAG_CLIENT_ONLY (UINT)64
#define SECPKG_FLAG_EXTENDED_ERROR (UINT)128
#define SECPKG_FLAG_IMPERSONATION (UINT)256
#define SECPKG_FLAG_ACCEPT_WIN32_NAME (UINT)512
#define SECPKG_FLAG_STREAM (UINT)1024
#define SECPKG_FLAG_NEGOTIABLE (UINT)2048
#define SECPKG_FLAG_GSS_COMPATIBLE (UINT)4096
#define SECPKG_FLAG_LOGON (UINT)8192
#define SECPKG_FLAG_ASCII_BUFFERS (UINT)16384
#define SECPKG_FLAG_FRAGMENT (UINT)32768
#define SECPKG_FLAG_MUTUAL_AUTH (UINT)65536
#define SECPKG_FLAG_DELEGATION (UINT)131072
#define SECPKG_FLAG_READONLY_WITH_CHECKSUM (UINT)262144
#define SECPKG_FLAG_RESTRICTED_TOKENS (UINT)524288
#define SECPKG_FLAG_NEGO_EXTENDER (UINT)1048576
#define SECPKG_FLAG_NEGOTIABLE2 (UINT)2097152
#define SECPKG_FLAG_APPCONTAINER_PASSTHROUGH (UINT)4194304
#define SECPKG_FLAG_APPCONTAINER_CHECKS (UINT)8388608
#define SECPKG_FLAG_CREDENTIAL_ISOLATION_ENABLED (UINT)16777216
#define SECPKG_FLAG_APPLY_LOOPBACK (UINT)33554432
#define SECPKG_ID_NONE (UINT)65535
#define SECPKG_CALLFLAGS_APPCONTAINER (UINT)1
#define SECPKG_CALLFLAGS_APPCONTAINER_AUTHCAPABLE (UINT)2
#define SECPKG_CALLFLAGS_FORCE_SUPPLIED (UINT)4
#define SECPKG_CALLFLAGS_APPCONTAINER_UPNCAPABLE (UINT)8
#define SECBUFFER_VERSION (UINT)0
#define SECBUFFER_EMPTY (UINT)0
#define SECBUFFER_DATA (UINT)1
#define SECBUFFER_TOKEN (UINT)2
#define SECBUFFER_PKG_PARAMS (UINT)3
#define SECBUFFER_MISSING (UINT)4
#define SECBUFFER_EXTRA (UINT)5
#define SECBUFFER_STREAM_TRAILER (UINT)6
#define SECBUFFER_STREAM_HEADER (UINT)7
#define SECBUFFER_NEGOTIATION_INFO (UINT)8
#define SECBUFFER_PADDING (UINT)9
#define SECBUFFER_STREAM (UINT)10
#define SECBUFFER_MECHLIST (UINT)11
#define SECBUFFER_MECHLIST_SIGNATURE (UINT)12
#define SECBUFFER_TARGET (UINT)13
#define SECBUFFER_CHANNEL_BINDINGS (UINT)14
#define SECBUFFER_CHANGE_PASS_RESPONSE (UINT)15
#define SECBUFFER_TARGET_HOST (UINT)16
#define SECBUFFER_ALERT (UINT)17
#define SECBUFFER_APPLICATION_PROTOCOLS (UINT)18
#define SECBUFFER_SRTP_PROTECTION_PROFILES (UINT)19
#define SECBUFFER_SRTP_MASTER_KEY_IDENTIFIER (UINT)20
#define SECBUFFER_TOKEN_BINDING (UINT)21
#define SECBUFFER_PRESHARED_KEY (UINT)22
#define SECBUFFER_PRESHARED_KEY_IDENTITY (UINT)23
#define SECBUFFER_DTLS_MTU (UINT)24
#define SECBUFFER_SEND_GENERIC_TLS_EXTENSION (UINT)25
#define SECBUFFER_SUBSCRIBE_GENERIC_TLS_EXTENSION (UINT)26
#define SECBUFFER_FLAGS (UINT)27
#define SECBUFFER_TRAFFIC_SECRETS (UINT)28
#define SECBUFFER_ATTRMASK (UINT)4026531840
#define SECBUFFER_READONLY (UINT)2147483648
#define SECBUFFER_READONLY_WITH_CHECKSUM (UINT)268435456
#define SECBUFFER_RESERVED (UINT)1610612736
#define SZ_ALG_MAX_SIZE (UINT)64
#define SECURITY_NATIVE_DREP (UINT)16
#define SECURITY_NETWORK_DREP (UINT)0
#define SECPKG_CRED_BOTH (UINT)3
#define SECPKG_CRED_DEFAULT (UINT)4
#define SECPKG_CRED_RESERVED (UINT)4026531840
#define SECPKG_CRED_AUTOLOGON_RESTRICTED (UINT)16
#define SECPKG_CRED_PROCESS_POLICY_ONLY (UINT)32
#define ISC_REQ_DELEGATE (UINT)1
#define ISC_REQ_MUTUAL_AUTH (UINT)2
#define ISC_REQ_REPLAY_DETECT (UINT)4
#define ISC_REQ_SEQUENCE_DETECT (UINT)8
#define ISC_REQ_CONFIDENTIALITY (UINT)16
#define ISC_REQ_USE_SESSION_KEY (UINT)32
#define ISC_REQ_PROMPT_FOR_CREDS (UINT)64
#define ISC_REQ_USE_SUPPLIED_CREDS (UINT)128
#define ISC_REQ_ALLOCATE_MEMORY (UINT)256
#define ISC_REQ_USE_DCE_STYLE (UINT)512
#define ISC_REQ_DATAGRAM (UINT)1024
#define ISC_REQ_CONNECTION (UINT)2048
#define ISC_REQ_CALL_LEVEL (UINT)4096
#define ISC_REQ_FRAGMENT_SUPPLIED (UINT)8192
#define ISC_REQ_EXTENDED_ERROR (UINT)16384
#define ISC_REQ_STREAM (UINT)32768
#define ISC_REQ_INTEGRITY (UINT)65536
#define ISC_REQ_IDENTIFY (UINT)131072
#define ISC_REQ_NULL_SESSION (UINT)262144
#define ISC_REQ_MANUAL_CRED_VALIDATION (UINT)524288
#define ISC_REQ_RESERVED1 (UINT)1048576
#define ISC_REQ_FRAGMENT_TO_FIT (UINT)2097152
#define ISC_REQ_FORWARD_CREDENTIALS (UINT)4194304
#define ISC_REQ_NO_INTEGRITY (UINT)8388608
#define ISC_REQ_USE_HTTP_STYLE (UINT)16777216
#define ISC_REQ_UNVERIFIED_TARGET_NAME (UINT)536870912
#define ISC_REQ_CONFIDENTIALITY_ONLY (UINT)1073741824
#define ISC_REQ_MESSAGES (UINT64)4294967296
#define ISC_RET_DELEGATE (UINT)1
#define ISC_RET_MUTUAL_AUTH (UINT)2
#define ISC_RET_REPLAY_DETECT (UINT)4
#define ISC_RET_SEQUENCE_DETECT (UINT)8
#define ISC_RET_CONFIDENTIALITY (UINT)16
#define ISC_RET_USE_SESSION_KEY (UINT)32
#define ISC_RET_USED_COLLECTED_CREDS (UINT)64
#define ISC_RET_USED_SUPPLIED_CREDS (UINT)128
#define ISC_RET_ALLOCATED_MEMORY (UINT)256
#define ISC_RET_USED_DCE_STYLE (UINT)512
#define ISC_RET_DATAGRAM (UINT)1024
#define ISC_RET_CONNECTION (UINT)2048
#define ISC_RET_INTERMEDIATE_RETURN (UINT)4096
#define ISC_RET_CALL_LEVEL (UINT)8192
#define ISC_RET_EXTENDED_ERROR (UINT)16384
#define ISC_RET_STREAM (UINT)32768
#define ISC_RET_INTEGRITY (UINT)65536
#define ISC_RET_IDENTIFY (UINT)131072
#define ISC_RET_NULL_SESSION (UINT)262144
#define ISC_RET_MANUAL_CRED_VALIDATION (UINT)524288
#define ISC_RET_RESERVED1 (UINT)1048576
#define ISC_RET_FRAGMENT_ONLY (UINT)2097152
#define ISC_RET_FORWARD_CREDENTIALS (UINT)4194304
#define ISC_RET_USED_HTTP_STYLE (UINT)16777216
#define ISC_RET_NO_ADDITIONAL_TOKEN (UINT)33554432
#define ISC_RET_REAUTHENTICATION (UINT)134217728
#define ISC_RET_CONFIDENTIALITY_ONLY (UINT)1073741824
#define ISC_RET_MESSAGES (UINT64)4294967296
#define ASC_REQ_MUTUAL_AUTH (UINT)2
#define ASC_REQ_CONFIDENTIALITY (UINT)16
#define ASC_REQ_USE_SESSION_KEY (UINT)32
#define ASC_REQ_SESSION_TICKET (UINT)64
#define ASC_REQ_USE_DCE_STYLE (UINT)512
#define ASC_REQ_DATAGRAM (UINT)1024
#define ASC_REQ_CALL_LEVEL (UINT)4096
#define ASC_REQ_FRAGMENT_SUPPLIED (UINT)8192
#define ASC_REQ_INTEGRITY (UINT)131072
#define ASC_REQ_LICENSING (UINT)262144
#define ASC_REQ_IDENTIFY (UINT)524288
#define ASC_REQ_ALLOW_NULL_SESSION (UINT)1048576
#define ASC_REQ_ALLOW_NON_USER_LOGONS (UINT)2097152
#define ASC_REQ_ALLOW_CONTEXT_REPLAY (UINT)4194304
#define ASC_REQ_FRAGMENT_TO_FIT (UINT)8388608
#define ASC_REQ_NO_TOKEN (UINT)16777216
#define ASC_REQ_PROXY_BINDINGS (UINT)67108864
#define ASC_REQ_ALLOW_MISSING_BINDINGS (UINT)268435456
#define ASC_REQ_MESSAGES (UINT64)4294967296
#define ASC_RET_DELEGATE (UINT)1
#define ASC_RET_MUTUAL_AUTH (UINT)2
#define ASC_RET_REPLAY_DETECT (UINT)4
#define ASC_RET_SEQUENCE_DETECT (UINT)8
#define ASC_RET_CONFIDENTIALITY (UINT)16
#define ASC_RET_USE_SESSION_KEY (UINT)32
#define ASC_RET_SESSION_TICKET (UINT)64
#define ASC_RET_ALLOCATED_MEMORY (UINT)256
#define ASC_RET_USED_DCE_STYLE (UINT)512
#define ASC_RET_DATAGRAM (UINT)1024
#define ASC_RET_CONNECTION (UINT)2048
#define ASC_RET_CALL_LEVEL (UINT)8192
#define ASC_RET_THIRD_LEG_FAILED (UINT)16384
#define ASC_RET_EXTENDED_ERROR (UINT)32768
#define ASC_RET_STREAM (UINT)65536
#define ASC_RET_INTEGRITY (UINT)131072
#define ASC_RET_LICENSING (UINT)262144
#define ASC_RET_IDENTIFY (UINT)524288
#define ASC_RET_NULL_SESSION (UINT)1048576
#define ASC_RET_ALLOW_NON_USER_LOGONS (UINT)2097152
#define ASC_RET_ALLOW_CONTEXT_REPLAY (UINT)4194304
#define ASC_RET_FRAGMENT_ONLY (UINT)8388608
#define ASC_RET_NO_TOKEN (UINT)16777216
#define ASC_RET_NO_ADDITIONAL_TOKEN (UINT)33554432
#define ASC_RET_MESSAGES (UINT64)4294967296
#define SECPKG_CRED_ATTR_NAMES (UINT)1
#define SECPKG_CRED_ATTR_SSI_PROVIDER (UINT)2
#define SECPKG_CRED_ATTR_KDC_PROXY_SETTINGS (UINT)3
#define SECPKG_CRED_ATTR_CERT (UINT)4
#define SECPKG_CRED_ATTR_PAC_BYPASS (UINT)5
#define KDC_PROXY_SETTINGS_V1 (UINT)1
#define KDC_PROXY_SETTINGS_FLAGS_FORCEPROXY (UINT)1
#define SECPKG_ATTR_PROTO_INFO (UINT)7
#define SECPKG_ATTR_USER_FLAGS (UINT)11
#define SECPKG_ATTR_USE_VALIDATED (UINT)15
#define SECPKG_ATTR_CREDENTIAL_NAME (UINT)16
#define SECPKG_ATTR_TARGET (UINT)19
#define SECPKG_ATTR_AUTHENTICATION_ID (UINT)20
#define SECPKG_ATTR_LOGOFF_TIME (UINT)21
#define SECPKG_ATTR_NEGO_KEYS (UINT)22
#define SECPKG_ATTR_PROMPTING_NEEDED (UINT)24
#define SECPKG_ATTR_NEGO_PKG_INFO (UINT)31
#define SECPKG_ATTR_NEGO_STATUS (UINT)32
#define SECPKG_ATTR_CONTEXT_DELETED (UINT)33
#define SECPKG_ATTR_APPLICATION_PROTOCOL (UINT)35
#define SECPKG_ATTR_NEGOTIATED_TLS_EXTENSIONS (UINT)36
#define SECPKG_ATTR_IS_LOOPBACK (UINT)37
#define SECPKG_ATTR_NEGO_INFO_FLAG_NO_KERBEROS (UINT)1
#define SECPKG_ATTR_NEGO_INFO_FLAG_NO_NTLM (UINT)2
#define SECPKG_NEGOTIATION_COMPLETE (UINT)0
#define SECPKG_NEGOTIATION_OPTIMISTIC (UINT)1
#define SECPKG_NEGOTIATION_IN_PROGRESS (UINT)2
#define SECPKG_NEGOTIATION_DIRECT (UINT)3
#define SECPKG_NEGOTIATION_TRY_MULTICRED (UINT)4
#define MAX_PROTOCOL_ID_SIZE (UINT)255
#define SECQOP_WRAP_NO_ENCRYPT (UINT)2147483649
#define SECQOP_WRAP_OOB_DATA (UINT)1073741824
#define SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION (UINT)1
#define SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_2 (UINT)2
#define SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_3 (UINT)3
#define SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_4 (UINT)4
#define SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_5 (UINT)5
#define SASL_OPTION_SEND_SIZE (UINT)1
#define SASL_OPTION_RECV_SIZE (UINT)2
#define SASL_OPTION_AUTHZ_STRING (UINT)3
#define SASL_OPTION_AUTHZ_PROCESSING (UINT)4
#define SEC_WINNT_AUTH_IDENTITY_VERSION_2 (UINT)513
#define SEC_WINNT_AUTH_IDENTITY_VERSION (UINT)512
#define SEC_WINNT_AUTH_IDENTITY_FLAGS_PROCESS_ENCRYPTED (UINT)16
#define SEC_WINNT_AUTH_IDENTITY_FLAGS_SYSTEM_PROTECTED (UINT)32
#define SEC_WINNT_AUTH_IDENTITY_FLAGS_USER_PROTECTED (UINT)64
#define SEC_WINNT_AUTH_IDENTITY_FLAGS_SYSTEM_ENCRYPTED (UINT)128
#define SEC_WINNT_AUTH_IDENTITY_FLAGS_RESERVED (UINT)65536
#define SEC_WINNT_AUTH_IDENTITY_FLAGS_NULL_USER (UINT)131072
#define SEC_WINNT_AUTH_IDENTITY_FLAGS_NULL_DOMAIN (UINT)262144
#define SEC_WINNT_AUTH_IDENTITY_FLAGS_ID_PROVIDER (UINT)524288
#define SEC_WINNT_AUTH_IDENTITY_FLAGS_SSPIPFC_USE_MASK (UINT)4278190080
#define SEC_WINNT_AUTH_IDENTITY_FLAGS_SSPIPFC_CREDPROV_DO_NOT_SAVE (UINT)2147483648
#define SEC_WINNT_AUTH_IDENTITY_FLAGS_SSPIPFC_SAVE_CRED_CHECKED (UINT)1073741824
#define SEC_WINNT_AUTH_IDENTITY_FLAGS_SSPIPFC_NO_CHECKBOX (UINT)536870912
#define SEC_WINNT_AUTH_IDENTITY_FLAGS_SSPIPFC_CREDPROV_DO_NOT_LOAD (UINT)268435456
#define SSPIPFC_CREDPROV_DO_NOT_SAVE (UINT)1
#define SSPIPFC_NO_CHECKBOX (UINT)2
#define SSPIPFC_CREDPROV_DO_NOT_LOAD (UINT)4
#define SSPIPFC_USE_CREDUIBROKER (UINT)8
#define NGC_DATA_FLAG_KERB_CERTIFICATE_LOGON_FLAG_CHECK_DUPLICATES (UINT)1
#define NGC_DATA_FLAG_KERB_CERTIFICATE_LOGON_FLAG_USE_CERTIFICATE_INFO (UINT)2
#define NGC_DATA_FLAG_IS_SMARTCARD_DATA (UINT)4
#define SEC_WINNT_AUTH_IDENTITY_ENCRYPT_SAME_LOGON (UINT)1
#define SEC_WINNT_AUTH_IDENTITY_ENCRYPT_SAME_PROCESS (UINT)2
#define SEC_WINNT_AUTH_IDENTITY_ENCRYPT_FOR_SYSTEM (UINT)4
#define SEC_WINNT_AUTH_IDENTITY_MARSHALLED (UINT)4
#define SEC_WINNT_AUTH_IDENTITY_ONLY (UINT)8
#define SECPKG_OPTIONS_PERMANENT (UINT)1
#define LOOKUP_VIEW_LOCAL_INFORMATION (UINT)1
#define LOOKUP_TRANSLATE_NAMES (UINT)2048
#define SECPKG_ATTR_ISSUER_LIST (UINT)80
#define SECPKG_ATTR_REMOTE_CRED (UINT)81
#define SECPKG_ATTR_SUPPORTED_ALGS (UINT)86
#define SECPKG_ATTR_CIPHER_STRENGTHS (UINT)87
#define SECPKG_ATTR_SUPPORTED_PROTOCOLS (UINT)88
#define SECPKG_ATTR_MAPPED_CRED_ATTR (UINT)92
#define SECPKG_ATTR_REMOTE_CERTIFICATES (UINT)95
#define SECPKG_ATTR_CLIENT_CERT_POLICY (UINT)96
#define SECPKG_ATTR_CC_POLICY_RESULT (UINT)97
#define SECPKG_ATTR_USE_NCRYPT (UINT)98
#define SECPKG_ATTR_LOCAL_CERT_INFO (UINT)99
#define SECPKG_ATTR_CIPHER_INFO (UINT)100
#define SECPKG_ATTR_REMOTE_CERT_CHAIN (UINT)103
#define SECPKG_ATTR_UI_INFO (UINT)104
#define SECPKG_ATTR_KEYING_MATERIAL (UINT)107
#define SECPKG_ATTR_SRTP_PARAMETERS (UINT)108
#define SECPKG_ATTR_TOKEN_BINDING (UINT)109
#define SECPKG_ATTR_CONNECTION_INFO_EX (UINT)110
#define SECPKG_ATTR_KEYING_MATERIAL_TOKEN_BINDING (UINT)111
#define SECPKG_ATTR_KEYING_MATERIAL_INPROC (UINT)112
#define LSA_MODE_PASSWORD_PROTECTED (INT)1
#define LSA_MODE_INDIVIDUAL_ACCOUNTS (INT)2
#define LSA_MODE_MANDATORY_ACCESS (INT)4
#define LSA_MODE_LOG_FULL (INT)8
#define LSA_MAXIMUM_SID_COUNT (INT)256
#define LSA_MAXIMUM_ENUMERATION_LENGTH (UINT)32000
#define LSA_CALL_LICENSE_SERVER (UINT)2147483648
#define SE_ADT_OBJECT_ONLY (UINT)1
#define SE_MAX_AUDIT_PARAMETERS (UINT)32
#define SE_MAX_GENERIC_AUDIT_PARAMETERS (UINT)28
#define SE_ADT_PARAMETERS_SELF_RELATIVE (UINT)1
#define SE_ADT_PARAMETERS_SEND_TO_LSA (UINT)2
#define SE_ADT_PARAMETER_EXTENSIBLE_AUDIT (UINT)4
#define SE_ADT_PARAMETER_GENERIC_AUDIT (UINT)8
#define SE_ADT_PARAMETER_WRITE_SYNCHRONOUS (UINT)16
#define SE_ADT_POLICY_AUDIT_EVENT_TYPE_EX_BEGIN (UINT)100
#define POLICY_AUDIT_EVENT_UNCHANGED (INT)0
#define POLICY_AUDIT_EVENT_SUCCESS (INT)1
#define POLICY_AUDIT_EVENT_FAILURE (INT)2
#define POLICY_AUDIT_EVENT_NONE (INT)4
#define POLICY_VIEW_LOCAL_INFORMATION (INT)1
#define POLICY_VIEW_AUDIT_INFORMATION (INT)2
#define POLICY_GET_PRIVATE_INFORMATION (INT)4
#define POLICY_TRUST_ADMIN (INT)8
#define POLICY_CREATE_ACCOUNT (INT)16
#define POLICY_CREATE_SECRET (INT)32
#define POLICY_CREATE_PRIVILEGE (INT)64
#define POLICY_SET_DEFAULT_QUOTA_LIMITS (INT)128
#define POLICY_SET_AUDIT_REQUIREMENTS (INT)256
#define POLICY_AUDIT_LOG_ADMIN (INT)512
#define POLICY_SERVER_ADMIN (INT)1024
#define POLICY_LOOKUP_NAMES (INT)2048
#define POLICY_NOTIFICATION (INT)4096
#define LSA_LOOKUP_ISOLATED_AS_LOCAL (UINT)2147483648
#define LSA_LOOKUP_DISALLOW_CONNECTED_ACCOUNT_INTERNET_SID (UINT)2147483648
#define LSA_LOOKUP_PREFER_INTERNET_NAMES (UINT)1073741824
#define PER_USER_POLICY_UNCHANGED (UINT)0
#define PER_USER_AUDIT_SUCCESS_INCLUDE (UINT)1
#define PER_USER_AUDIT_SUCCESS_EXCLUDE (UINT)2
#define PER_USER_AUDIT_FAILURE_INCLUDE (UINT)4
#define PER_USER_AUDIT_FAILURE_EXCLUDE (UINT)8
#define PER_USER_AUDIT_NONE (UINT)16
#define POLICY_QOS_SCHANNEL_REQUIRED (UINT)1
#define POLICY_QOS_OUTBOUND_INTEGRITY (UINT)2
#define POLICY_QOS_OUTBOUND_CONFIDENTIALITY (UINT)4
#define POLICY_QOS_INBOUND_INTEGRITY (UINT)8
#define POLICY_QOS_INBOUND_CONFIDENTIALITY (UINT)16
#define POLICY_QOS_ALLOW_LOCAL_ROOT_CERT_STORE (UINT)32
#define POLICY_QOS_RAS_SERVER_ALLOWED (UINT)64
#define POLICY_QOS_DHCP_SERVER_ALLOWED (UINT)128
#define POLICY_KERBEROS_VALIDATE_CLIENT (UINT)128
#define ACCOUNT_VIEW (INT)1
#define ACCOUNT_ADJUST_PRIVILEGES (INT)2
#define ACCOUNT_ADJUST_QUOTAS (INT)4
#define ACCOUNT_ADJUST_SYSTEM_ACCESS (INT)8
#define TRUSTED_QUERY_DOMAIN_NAME (INT)1
#define TRUSTED_QUERY_CONTROLLERS (INT)2
#define TRUSTED_SET_CONTROLLERS (INT)4
#define TRUSTED_QUERY_POSIX (INT)8
#define TRUSTED_SET_POSIX (INT)16
#define TRUSTED_SET_AUTH (INT)32
#define TRUSTED_QUERY_AUTH (INT)64
#define TRUST_ATTRIBUTE_TREE_PARENT (UINT)4194304
#define TRUST_ATTRIBUTE_TREE_ROOT (UINT)8388608
#define TRUST_ATTRIBUTES_VALID (UINT)4278386687
#define TRUST_ATTRIBUTE_QUARANTINED_DOMAIN (UINT)4
#define TRUST_ATTRIBUTE_TRUST_USES_RC4_ENCRYPTION (UINT)128
#define TRUST_ATTRIBUTE_TRUST_USES_AES_KEYS (UINT)256
#define TRUST_ATTRIBUTE_CROSS_ORGANIZATION_NO_TGT_DELEGATION (UINT)512
#define TRUST_ATTRIBUTE_PIM_TRUST (UINT)1024
#define TRUST_ATTRIBUTE_CROSS_ORGANIZATION_ENABLE_TGT_DELEGATION (UINT)2048
#define TRUST_ATTRIBUTES_USER (UINT)4278190080
#define LSA_FOREST_TRUST_RECORD_TYPE_UNRECOGNIZED (UINT)2147483648
#define LSA_FTRECORD_DISABLED_REASONS (INT)65535
#define LSA_TLN_DISABLED_NEW (INT)1
#define LSA_TLN_DISABLED_ADMIN (INT)2
#define LSA_TLN_DISABLED_CONFLICT (INT)4
#define LSA_SID_DISABLED_ADMIN (INT)1
#define LSA_SID_DISABLED_CONFLICT (INT)2
#define LSA_NB_DISABLED_ADMIN (INT)4
#define LSA_NB_DISABLED_CONFLICT (INT)8
#define MAX_RECORDS_IN_FOREST_TRUST_INFO (UINT)4000
#define SECRET_SET_VALUE (INT)1
#define SECRET_QUERY_VALUE (INT)2
#define LSA_GLOBAL_SECRET_PREFIX_LENGTH (UINT)2
#define LSA_LOCAL_SECRET_PREFIX_LENGTH (UINT)2
#define LSA_SECRET_MAXIMUM_COUNT (INT)4096
#define LSA_SECRET_MAXIMUM_LENGTH (INT)512
#define MAXIMUM_CAPES_PER_CAP (UINT)127
#define CENTRAL_ACCESS_POLICY_OWNER_RIGHTS_PRESENT_FLAG (UINT)1
#define CENTRAL_ACCESS_POLICY_STAGED_OWNER_RIGHTS_PRESENT_FLAG (UINT)256
#define CENTRAL_ACCESS_POLICY_STAGED_FLAG (UINT)65536
#define LSASETCAPS_RELOAD_FLAG (UINT)1
#define NEGOTIATE_MAX_PREFIX (UINT)32
#define NEGOTIATE_ALLOW_NTLM (UINT)268435456
#define NEGOTIATE_NEG_NTLM (UINT)536870912
#define MAX_USER_RECORDS (UINT)1000
#define Audit_System_SecurityStateChange GUID { "0cce9210-69ae-11d9-bed3-505054503030" }
#define Audit_System_SecuritySubsystemExtension GUID { "0cce9211-69ae-11d9-bed3-505054503030" }
#define Audit_System_Integrity GUID { "0cce9212-69ae-11d9-bed3-505054503030" }
#define Audit_System_IPSecDriverEvents GUID { "0cce9213-69ae-11d9-bed3-505054503030" }
#define Audit_System_Others GUID { "0cce9214-69ae-11d9-bed3-505054503030" }
#define Audit_Logon_Logon GUID { "0cce9215-69ae-11d9-bed3-505054503030" }
#define Audit_Logon_Logoff GUID { "0cce9216-69ae-11d9-bed3-505054503030" }
#define Audit_Logon_AccountLockout GUID { "0cce9217-69ae-11d9-bed3-505054503030" }
#define Audit_Logon_IPSecMainMode GUID { "0cce9218-69ae-11d9-bed3-505054503030" }
#define Audit_Logon_IPSecQuickMode GUID { "0cce9219-69ae-11d9-bed3-505054503030" }
#define Audit_Logon_IPSecUserMode GUID { "0cce921a-69ae-11d9-bed3-505054503030" }
#define Audit_Logon_SpecialLogon GUID { "0cce921b-69ae-11d9-bed3-505054503030" }
#define Audit_Logon_Others GUID { "0cce921c-69ae-11d9-bed3-505054503030" }
#define Audit_ObjectAccess_FileSystem GUID { "0cce921d-69ae-11d9-bed3-505054503030" }
#define Audit_ObjectAccess_Registry GUID { "0cce921e-69ae-11d9-bed3-505054503030" }
#define Audit_ObjectAccess_Kernel GUID { "0cce921f-69ae-11d9-bed3-505054503030" }
#define Audit_ObjectAccess_Sam GUID { "0cce9220-69ae-11d9-bed3-505054503030" }
#define Audit_ObjectAccess_CertificationServices GUID { "0cce9221-69ae-11d9-bed3-505054503030" }
#define Audit_ObjectAccess_ApplicationGenerated GUID { "0cce9222-69ae-11d9-bed3-505054503030" }
#define Audit_ObjectAccess_Handle GUID { "0cce9223-69ae-11d9-bed3-505054503030" }
#define Audit_ObjectAccess_Share GUID { "0cce9224-69ae-11d9-bed3-505054503030" }
#define Audit_ObjectAccess_FirewallPacketDrops GUID { "0cce9225-69ae-11d9-bed3-505054503030" }
#define Audit_ObjectAccess_FirewallConnection GUID { "0cce9226-69ae-11d9-bed3-505054503030" }
#define Audit_ObjectAccess_Other GUID { "0cce9227-69ae-11d9-bed3-505054503030" }
#define Audit_PrivilegeUse_Sensitive GUID { "0cce9228-69ae-11d9-bed3-505054503030" }
#define Audit_PrivilegeUse_NonSensitive GUID { "0cce9229-69ae-11d9-bed3-505054503030" }
#define Audit_PrivilegeUse_Others GUID { "0cce922a-69ae-11d9-bed3-505054503030" }
#define Audit_DetailedTracking_ProcessCreation GUID { "0cce922b-69ae-11d9-bed3-505054503030" }
#define Audit_DetailedTracking_ProcessTermination GUID { "0cce922c-69ae-11d9-bed3-505054503030" }
#define Audit_DetailedTracking_DpapiActivity GUID { "0cce922d-69ae-11d9-bed3-505054503030" }
#define Audit_DetailedTracking_RpcCall GUID { "0cce922e-69ae-11d9-bed3-505054503030" }
#define Audit_PolicyChange_AuditPolicy GUID { "0cce922f-69ae-11d9-bed3-505054503030" }
#define Audit_PolicyChange_AuthenticationPolicy GUID { "0cce9230-69ae-11d9-bed3-505054503030" }
#define Audit_PolicyChange_AuthorizationPolicy GUID { "0cce9231-69ae-11d9-bed3-505054503030" }
#define Audit_PolicyChange_MpsscvRulePolicy GUID { "0cce9232-69ae-11d9-bed3-505054503030" }
#define Audit_PolicyChange_WfpIPSecPolicy GUID { "0cce9233-69ae-11d9-bed3-505054503030" }
#define Audit_PolicyChange_Others GUID { "0cce9234-69ae-11d9-bed3-505054503030" }
#define Audit_AccountManagement_UserAccount GUID { "0cce9235-69ae-11d9-bed3-505054503030" }
#define Audit_AccountManagement_ComputerAccount GUID { "0cce9236-69ae-11d9-bed3-505054503030" }
#define Audit_AccountManagement_SecurityGroup GUID { "0cce9237-69ae-11d9-bed3-505054503030" }
#define Audit_AccountManagement_DistributionGroup GUID { "0cce9238-69ae-11d9-bed3-505054503030" }
#define Audit_AccountManagement_ApplicationGroup GUID { "0cce9239-69ae-11d9-bed3-505054503030" }
#define Audit_AccountManagement_Others GUID { "0cce923a-69ae-11d9-bed3-505054503030" }
#define Audit_DSAccess_DSAccess GUID { "0cce923b-69ae-11d9-bed3-505054503030" }
#define Audit_DsAccess_AdAuditChanges GUID { "0cce923c-69ae-11d9-bed3-505054503030" }
#define Audit_Ds_Replication GUID { "0cce923d-69ae-11d9-bed3-505054503030" }
#define Audit_Ds_DetailedReplication GUID { "0cce923e-69ae-11d9-bed3-505054503030" }
#define Audit_AccountLogon_CredentialValidation GUID { "0cce923f-69ae-11d9-bed3-505054503030" }
#define Audit_AccountLogon_Kerberos GUID { "0cce9240-69ae-11d9-bed3-505054503030" }
#define Audit_AccountLogon_Others GUID { "0cce9241-69ae-11d9-bed3-505054503030" }
#define Audit_AccountLogon_KerbCredentialValidation GUID { "0cce9242-69ae-11d9-bed3-505054503030" }
#define Audit_Logon_NPS GUID { "0cce9243-69ae-11d9-bed3-505054503030" }
#define Audit_ObjectAccess_DetailedFileShare GUID { "0cce9244-69ae-11d9-bed3-505054503030" }
#define Audit_ObjectAccess_RemovableStorage GUID { "0cce9245-69ae-11d9-bed3-505054503030" }
#define Audit_ObjectAccess_CbacStaging GUID { "0cce9246-69ae-11d9-bed3-505054503030" }
#define Audit_Logon_Claims GUID { "0cce9247-69ae-11d9-bed3-505054503030" }
#define Audit_DetailedTracking_PnpActivity GUID { "0cce9248-69ae-11d9-bed3-505054503030" }
#define Audit_Logon_Groups GUID { "0cce9249-69ae-11d9-bed3-505054503030" }
#define Audit_DetailedTracking_TokenRightAdjusted GUID { "0cce924a-69ae-11d9-bed3-505054503030" }
#define Audit_System GUID { "69979848-797a-11d9-bed3-505054503030" }
#define Audit_Logon GUID { "69979849-797a-11d9-bed3-505054503030" }
#define Audit_ObjectAccess GUID { "6997984a-797a-11d9-bed3-505054503030" }
#define Audit_PrivilegeUse GUID { "6997984b-797a-11d9-bed3-505054503030" }
#define Audit_DetailedTracking GUID { "6997984c-797a-11d9-bed3-505054503030" }
#define Audit_PolicyChange GUID { "6997984d-797a-11d9-bed3-505054503030" }
#define Audit_AccountManagement GUID { "6997984e-797a-11d9-bed3-505054503030" }
#define Audit_DirectoryServiceAccess GUID { "6997984f-797a-11d9-bed3-505054503030" }
#define Audit_AccountLogon GUID { "69979850-797a-11d9-bed3-505054503030" }
#define DOMAIN_NO_LM_OWF_CHANGE (INT)64
#define MSV1_0_CHALLENGE_LENGTH (UINT)8
#define MSV1_0_USER_SESSION_KEY_LENGTH (UINT)16
#define MSV1_0_LANMAN_SESSION_KEY_LENGTH (UINT)8
#define MSV1_0_USE_CLIENT_CHALLENGE (UINT)128
#define MSV1_0_DISABLE_PERSONAL_FALLBACK (UINT)4096
#define MSV1_0_ALLOW_FORCE_GUEST (UINT)8192
#define MSV1_0_CLEARTEXT_PASSWORD_SUPPLIED (UINT)16384
#define MSV1_0_USE_DOMAIN_FOR_ROUTING_ONLY (UINT)32768
#define MSV1_0_SUBAUTHENTICATION_DLL_EX (UINT)1048576
#define MSV1_0_ALLOW_MSVCHAPV2 (UINT)65536
#define MSV1_0_S4U2SELF (UINT)131072
#define MSV1_0_CHECK_LOGONHOURS_FOR_S4U (UINT)262144
#define MSV1_0_INTERNET_DOMAIN (UINT)524288
#define MSV1_0_SUBAUTHENTICATION_DLL (UINT)4278190080
#define MSV1_0_SUBAUTHENTICATION_DLL_SHIFT (UINT)24
#define MSV1_0_MNS_LOGON (UINT)16777216
#define MSV1_0_SUBAUTHENTICATION_DLL_RAS (UINT)2
#define MSV1_0_SUBAUTHENTICATION_DLL_IIS (UINT)132
#define MSV1_0_S4U_LOGON_FLAG_CHECK_LOGONHOURS (UINT)2
#define LOGON_NTLMV2_ENABLED (UINT)256
#define LOGON_NT_V2 (UINT)2048
#define LOGON_LM_V2 (UINT)4096
#define LOGON_NTLM_V2 (UINT)8192
#define LOGON_OPTIMIZED (UINT)16384
#define LOGON_WINLOGON (UINT)32768
#define LOGON_PKINIT (UINT)65536
#define LOGON_NO_OPTIMIZED (UINT)131072
#define LOGON_NO_ELEVATION (UINT)262144
#define LOGON_MANAGED_SERVICE (UINT)524288
#define MSV1_0_SUBAUTHENTICATION_FLAGS (UINT)4278190080
#define LOGON_GRACE_LOGON (UINT)16777216
#define MSV1_0_OWF_PASSWORD_LENGTH (UINT)16
#define MSV1_0_SHA_PASSWORD_LENGTH (UINT)20
#define MSV1_0_CREDENTIAL_KEY_LENGTH (UINT)20
#define MSV1_0_CRED_REMOVED (UINT)4
#define MSV1_0_CRED_CREDKEY_PRESENT (UINT)8
#define MSV1_0_CRED_SHA_PRESENT (UINT)16
#define MSV1_0_CRED_VERSION_V2 (UINT)2
#define MSV1_0_CRED_VERSION_V3 (UINT)4
#define MSV1_0_CRED_VERSION_IUM (UINT)4294901761
#define MSV1_0_CRED_VERSION_REMOTE (UINT)4294901762
#define MSV1_0_CRED_VERSION_ARSO (UINT)4294901763
#define MSV1_0_CRED_VERSION_RESERVED_1 (UINT)4294967294
#define MSV1_0_CRED_VERSION_INVALID (UINT)4294967295
#define MSV1_0_NTLM3_RESPONSE_LENGTH (UINT)16
#define MSV1_0_NTLM3_OWF_LENGTH (UINT)16
#define MSV1_0_MAX_NTLM3_LIFE (UINT)1800
#define MSV1_0_MAX_AVL_SIZE (UINT)64000
#define MSV1_0_AV_FLAG_FORCE_GUEST (UINT)1
#define MSV1_0_AV_FLAG_MIC_HANDSHAKE_MESSAGES (UINT)2
#define MSV1_0_AV_FLAG_UNVERIFIED_TARGET (UINT)4
#define RTL_ENCRYPT_MEMORY_SIZE (UINT)8
#define RTL_ENCRYPT_OPTION_CROSS_PROCESS (UINT)1
#define RTL_ENCRYPT_OPTION_SAME_LOGON (UINT)2
#define RTL_ENCRYPT_OPTION_FOR_SYSTEM (UINT)4
#define KERBEROS_VERSION (UINT)5
#define KERBEROS_REVISION (UINT)6
#define KERB_ETYPE_AES128_CTS_HMAC_SHA1_96 (UINT)17
#define KERB_ETYPE_AES256_CTS_HMAC_SHA1_96 (UINT)18
#define KERB_ETYPE_RC4_PLAIN2 (INT)-129
#define KERB_ETYPE_RC4_LM (INT)-130
#define KERB_ETYPE_RC4_SHA (INT)-131
#define KERB_ETYPE_DES_PLAIN (INT)-132
#define KERB_ETYPE_RC4_HMAC_OLD (INT)-133
#define KERB_ETYPE_RC4_PLAIN_OLD (INT)-134
#define KERB_ETYPE_RC4_HMAC_OLD_EXP (INT)-135
#define KERB_ETYPE_RC4_PLAIN_OLD_EXP (INT)-136
#define KERB_ETYPE_RC4_PLAIN (INT)-140
#define KERB_ETYPE_RC4_PLAIN_EXP (INT)-141
#define KERB_ETYPE_AES128_CTS_HMAC_SHA1_96_PLAIN (INT)-148
#define KERB_ETYPE_AES256_CTS_HMAC_SHA1_96_PLAIN (INT)-149
#define KERB_ETYPE_DSA_SHA1_CMS (UINT)9
#define KERB_ETYPE_RSA_MD5_CMS (UINT)10
#define KERB_ETYPE_RSA_SHA1_CMS (UINT)11
#define KERB_ETYPE_RC2_CBC_ENV (UINT)12
#define KERB_ETYPE_RSA_ENV (UINT)13
#define KERB_ETYPE_RSA_ES_OEAP_ENV (UINT)14
#define KERB_ETYPE_DES_EDE3_CBC_ENV (UINT)15
#define KERB_ETYPE_DSA_SIGN (UINT)8
#define KERB_ETYPE_RSA_PRIV (UINT)9
#define KERB_ETYPE_RSA_PUB (UINT)10
#define KERB_ETYPE_RSA_PUB_MD5 (UINT)11
#define KERB_ETYPE_RSA_PUB_SHA1 (UINT)12
#define KERB_ETYPE_PKCS7_PUB (UINT)13
#define KERB_ETYPE_DES3_CBC_MD5 (UINT)5
#define KERB_ETYPE_DES3_CBC_SHA1 (UINT)7
#define KERB_ETYPE_DES3_CBC_SHA1_KD (UINT)16
#define KERB_ETYPE_DES_CBC_MD5_NT (UINT)20
#define KERB_ETYPE_RC4_HMAC_NT_EXP (UINT)24
#define KERB_CHECKSUM_NONE (UINT)0
#define KERB_CHECKSUM_CRC32 (UINT)1
#define KERB_CHECKSUM_MD4 (UINT)2
#define KERB_CHECKSUM_KRB_DES_MAC (UINT)4
#define KERB_CHECKSUM_KRB_DES_MAC_K (UINT)5
#define KERB_CHECKSUM_MD5 (UINT)7
#define KERB_CHECKSUM_MD5_DES (UINT)8
#define KERB_CHECKSUM_SHA1_NEW (UINT)14
#define KERB_CHECKSUM_HMAC_SHA1_96_AES128 (UINT)15
#define KERB_CHECKSUM_HMAC_SHA1_96_AES256 (UINT)16
#define KERB_CHECKSUM_LM (INT)-130
#define KERB_CHECKSUM_SHA1 (INT)-131
#define KERB_CHECKSUM_REAL_CRC32 (INT)-132
#define KERB_CHECKSUM_DES_MAC (INT)-133
#define KERB_CHECKSUM_DES_MAC_MD5 (INT)-134
#define KERB_CHECKSUM_MD25 (INT)-135
#define KERB_CHECKSUM_RC4_MD5 (INT)-136
#define KERB_CHECKSUM_MD5_HMAC (INT)-137
#define KERB_CHECKSUM_HMAC_MD5 (INT)-138
#define KERB_CHECKSUM_HMAC_SHA1_96_AES128_Ki (INT)-150
#define KERB_CHECKSUM_HMAC_SHA1_96_AES256_Ki (INT)-151
#define AUTH_REQ_ALLOW_FORWARDABLE (UINT)1
#define AUTH_REQ_ALLOW_PROXIABLE (UINT)2
#define AUTH_REQ_ALLOW_POSTDATE (UINT)4
#define AUTH_REQ_ALLOW_RENEWABLE (UINT)8
#define AUTH_REQ_ALLOW_NOADDRESS (UINT)16
#define AUTH_REQ_ALLOW_ENC_TKT_IN_SKEY (UINT)32
#define AUTH_REQ_ALLOW_VALIDATE (UINT)64
#define AUTH_REQ_VALIDATE_CLIENT (UINT)128
#define AUTH_REQ_OK_AS_DELEGATE (UINT)256
#define AUTH_REQ_PREAUTH_REQUIRED (UINT)512
#define AUTH_REQ_TRANSITIVE_TRUST (UINT)1024
#define AUTH_REQ_ALLOW_S4U_DELEGATE (UINT)2048
#define KERB_TICKET_FLAGS_name_canonicalize (UINT)65536
#define KERB_TICKET_FLAGS_cname_in_pa_data (UINT)262144
#define KERB_TICKET_FLAGS_enc_pa_rep (UINT)65536
#define KRB_NT_UNKNOWN (UINT)0
#define KRB_NT_PRINCIPAL (UINT)1
#define KRB_NT_PRINCIPAL_AND_ID (INT)-131
#define KRB_NT_SRV_INST (UINT)2
#define KRB_NT_SRV_INST_AND_ID (INT)-132
#define KRB_NT_SRV_HST (UINT)3
#define KRB_NT_SRV_XHST (UINT)4
#define KRB_NT_UID (UINT)5
#define KRB_NT_ENTERPRISE_PRINCIPAL (UINT)10
#define KRB_NT_WELLKNOWN (UINT)11
#define KRB_NT_ENT_PRINCIPAL_AND_ID (INT)-130
#define KRB_NT_MS_PRINCIPAL (INT)-128
#define KRB_NT_MS_PRINCIPAL_AND_ID (INT)-129
#define KRB_NT_MS_BRANCH_ID (INT)-133
#define KRB_NT_X500_PRINCIPAL (UINT)6
#define KERB_WRAP_NO_ENCRYPT (UINT)2147483649
#define KERB_CERTIFICATE_LOGON_FLAG_CHECK_DUPLICATES (UINT)1
#define KERB_CERTIFICATE_LOGON_FLAG_USE_CERTIFICATE_INFO (UINT)2
#define KERB_CERTIFICATE_S4U_LOGON_FLAG_CHECK_DUPLICATES (UINT)1
#define KERB_CERTIFICATE_S4U_LOGON_FLAG_CHECK_LOGONHOURS (UINT)2
#define KERB_CERTIFICATE_S4U_LOGON_FLAG_FAIL_IF_NT_AUTH_POLICY_REQUIRED (UINT)4
#define KERB_CERTIFICATE_S4U_LOGON_FLAG_IDENTIFY (UINT)8
#define KERB_LOGON_FLAG_ALLOW_EXPIRED_TICKET (UINT)1
#define KERB_LOGON_FLAG_REDIRECTED (UINT)2
#define KERB_S4U_LOGON_FLAG_CHECK_LOGONHOURS (UINT)2
#define KERB_S4U_LOGON_FLAG_IDENTIFY (UINT)8
#define KERB_USE_DEFAULT_TICKET_FLAGS (UINT)0
#define KERB_RETRIEVE_TICKET_DEFAULT (UINT)0
#define KERB_RETRIEVE_TICKET_DONT_USE_CACHE (UINT)1
#define KERB_RETRIEVE_TICKET_USE_CACHE_ONLY (UINT)2
#define KERB_RETRIEVE_TICKET_USE_CREDHANDLE (UINT)4
#define KERB_RETRIEVE_TICKET_AS_KERB_CRED (UINT)8
#define KERB_RETRIEVE_TICKET_WITH_SEC_CRED (UINT)16
#define KERB_RETRIEVE_TICKET_CACHE_TICKET (UINT)32
#define KERB_RETRIEVE_TICKET_MAX_LIFETIME (UINT)64
#define KERB_ETYPE_DEFAULT (UINT)0
#define KERB_PURGE_ALL_TICKETS (UINT)1
#define KERB_S4U2PROXY_CACHE_ENTRY_INFO_FLAG_NEGATIVE (UINT)1
#define KERB_S4U2PROXY_CRED_FLAG_NEGATIVE (UINT)1
#define DS_UNKNOWN_ADDRESS_TYPE (UINT)0
#define KERB_SETPASS_USE_LOGONID (UINT)1
#define KERB_SETPASS_USE_CREDHANDLE (UINT)2
#define KERB_DECRYPT_FLAG_DEFAULT_KEY (UINT)1
#define KERB_REFRESH_SCCRED_RELEASE (UINT)0
#define KERB_REFRESH_SCCRED_GETTGT (UINT)1
#define KERB_TRANSFER_CRED_WITH_TICKETS (UINT)1
#define KERB_TRANSFER_CRED_CLEANUP_CREDENTIALS (UINT)2
#define KERB_QUERY_DOMAIN_EXTENDED_POLICIES_RESPONSE_FLAG_DAC_DISABLED (UINT)1
#define AUDIT_SET_SYSTEM_POLICY (UINT)1
#define AUDIT_QUERY_SYSTEM_POLICY (UINT)2
#define AUDIT_SET_USER_POLICY (UINT)4
#define AUDIT_QUERY_USER_POLICY (UINT)8
#define AUDIT_ENUMERATE_USERS (UINT)16
#define AUDIT_SET_MISC_POLICY (UINT)32
#define AUDIT_QUERY_MISC_POLICY (UINT)64
#define SECPKG_CLIENT_PROCESS_TERMINATED (UINT)1
#define SECPKG_CLIENT_THREAD_TERMINATED (UINT)2
#define SECPKG_CALL_KERNEL_MODE (UINT)1
#define SECPKG_CALL_ANSI (UINT)2
#define SECPKG_CALL_URGENT (UINT)4
#define SECPKG_CALL_RECURSIVE (UINT)8
#define SECPKG_CALL_IN_PROC (UINT)16
#define SECPKG_CALL_CLEANUP (UINT)32
#define SECPKG_CALL_WOWCLIENT (UINT)64
#define SECPKG_CALL_THREAD_TERM (UINT)128
#define SECPKG_CALL_PROCESS_TERM (UINT)256
#define SECPKG_CALL_IS_TCB (UINT)512
#define SECPKG_CALL_NETWORK_ONLY (UINT)1024
#define SECPKG_CALL_WINLOGON (UINT)2048
#define SECPKG_CALL_ASYNC_UPDATE (UINT)4096
#define SECPKG_CALL_SYSTEM_PROC (UINT)8192
#define SECPKG_CALL_NEGO (UINT)16384
#define SECPKG_CALL_NEGO_EXTENDER (UINT)32768
#define SECPKG_CALL_BUFFER_MARSHAL (UINT)65536
#define SECPKG_CALL_UNLOCK (UINT)131072
#define SECPKG_CALL_CLOUDAP_CONNECT (UINT)262144
#define SECPKG_CALL_WOWX86 (UINT)64
#define SECPKG_CALL_WOWA32 (UINT)262144
#define SECPKG_CREDENTIAL_VERSION (UINT)201
#define SECPKG_CREDENTIAL_FLAGS_CALLER_HAS_TCB (UINT)1
#define SECPKG_CREDENTIAL_FLAGS_CREDMAN_CRED (UINT)2
#define SECPKG_SURROGATE_LOGON_VERSION_1 (UINT)1
#define SECBUFFER_UNMAPPED (UINT)1073741824
#define SECBUFFER_KERNEL_MAP (UINT)536870912
#define PRIMARY_CRED_CLEAR_PASSWORD (UINT)1
#define PRIMARY_CRED_OWF_PASSWORD (UINT)2
#define PRIMARY_CRED_UPDATE (UINT)4
#define PRIMARY_CRED_CACHED_LOGON (UINT)8
#define PRIMARY_CRED_LOGON_NO_TCB (UINT)16
#define PRIMARY_CRED_LOGON_LUA (UINT)32
#define PRIMARY_CRED_INTERACTIVE_SMARTCARD_LOGON (UINT)64
#define PRIMARY_CRED_REFRESH_NEEDED (UINT)128
#define PRIMARY_CRED_INTERNET_USER (UINT)256
#define PRIMARY_CRED_AUTH_ID (UINT)512
#define PRIMARY_CRED_DO_NOT_SPLIT (UINT)1024
#define PRIMARY_CRED_PROTECTED_USER (UINT)2048
#define PRIMARY_CRED_EX (UINT)4096
#define PRIMARY_CRED_TRANSFER (UINT)8192
#define PRIMARY_CRED_RESTRICTED_TS (UINT)16384
#define PRIMARY_CRED_PACKED_CREDS (UINT)32768
#define PRIMARY_CRED_ENTERPRISE_INTERNET_USER (UINT)65536
#define PRIMARY_CRED_ENCRYPTED_CREDGUARD_PASSWORD (UINT)131072
#define PRIMARY_CRED_CACHED_INTERACTIVE_LOGON (UINT)262144
#define PRIMARY_CRED_INTERACTIVE_NGC_LOGON (UINT)524288
#define PRIMARY_CRED_INTERACTIVE_FIDO_LOGON (UINT)1048576
#define PRIMARY_CRED_ARSO_LOGON (UINT)2097152
#define PRIMARY_CRED_LOGON_PACKAGE_SHIFT (UINT)24
#define PRIMARY_CRED_PACKAGE_MASK (UINT)4278190080
#define MAX_CRED_SIZE (UINT)1024
#define SECPKG_STATE_ENCRYPTION_PERMITTED (UINT)1
#define SECPKG_STATE_STRONG_ENCRYPTION_PERMITTED (UINT)2
#define SECPKG_STATE_DOMAIN_CONTROLLER (UINT)4
#define SECPKG_STATE_WORKSTATION (UINT)8
#define SECPKG_STATE_STANDALONE (UINT)16
#define SECPKG_STATE_CRED_ISOLATION_ENABLED (UINT)32
#define SECPKG_STATE_RESERVED_1 (UINT)2147483648
#define SECPKG_MAX_OID_LENGTH (UINT)32
#define SECPKG_ATTR_SASL_CONTEXT (UINT)65536
#define SECPKG_ATTR_THUNK_ALL (UINT)65536
#define UNDERSTANDS_LONG_NAMES (UINT)1
#define NO_LONG_NAMES (UINT)2
#define SECPKG_CALL_PACKAGE_TRANSFER_CRED_REQUEST_FLAG_OPTIMISTIC_LOGON (UINT)1
#define SECPKG_CALL_PACKAGE_TRANSFER_CRED_REQUEST_FLAG_CLEANUP_CREDENTIALS (UINT)2
#define SECPKG_CALL_PACKAGE_TRANSFER_CRED_REQUEST_FLAG_TO_SSO_SESSION (UINT)4
#define NOTIFIER_FLAG_NEW_THREAD (UINT)1
#define NOTIFIER_FLAG_ONE_SHOT (UINT)2
#define NOTIFIER_FLAG_SECONDS (UINT)2147483648
#define NOTIFIER_TYPE_INTERVAL (UINT)1
#define NOTIFIER_TYPE_HANDLE_WAIT (UINT)2
#define NOTIFIER_TYPE_STATE_CHANGE (UINT)3
#define NOTIFIER_TYPE_NOTIFY_EVENT (UINT)4
#define NOTIFIER_TYPE_IMMEDIATE (UINT)16
#define NOTIFY_CLASS_PACKAGE_CHANGE (UINT)1
#define NOTIFY_CLASS_ROLE_CHANGE (UINT)2
#define NOTIFY_CLASS_DOMAIN_CHANGE (UINT)3
#define NOTIFY_CLASS_REGISTRY_CHANGE (UINT)4
#define LSA_QUERY_CLIENT_PRELOGON_SESSION_ID (UINT)1
#define CREDP_FLAGS_IN_PROCESS (UINT)1
#define CREDP_FLAGS_USE_MIDL_HEAP (UINT)2
#define CREDP_FLAGS_DONT_CACHE_TI (UINT)4
#define CREDP_FLAGS_CLEAR_PASSWORD (UINT)8
#define CREDP_FLAGS_USER_ENCRYPTED_PASSWORD (UINT)16
#define CREDP_FLAGS_TRUSTED_CALLER (UINT)32
#define CREDP_FLAGS_VALIDATE_PROXY_TARGET (UINT)64
#define CRED_MARSHALED_TI_SIZE_SIZE (UINT)12
#define SECPKG_INTERFACE_VERSION (UINT)65536
#define SECPKG_INTERFACE_VERSION_2 (UINT)131072
#define SECPKG_INTERFACE_VERSION_3 (UINT)262144
#define SECPKG_INTERFACE_VERSION_4 (UINT)524288
#define SECPKG_INTERFACE_VERSION_5 (UINT)1048576
#define SECPKG_INTERFACE_VERSION_6 (UINT)2097152
#define SECPKG_INTERFACE_VERSION_7 (UINT)4194304
#define SECPKG_INTERFACE_VERSION_8 (UINT)8388608
#define SECPKG_INTERFACE_VERSION_9 (UINT)16777216
#define SECPKG_INTERFACE_VERSION_10 (UINT)33554432
#define UNISP_RPC_ID (UINT)14
#define RCRED_STATUS_NOCRED (UINT)0
#define RCRED_CRED_EXISTS (UINT)1
#define RCRED_STATUS_UNKNOWN_ISSUER (UINT)2
#define LCRED_STATUS_NOCRED (UINT)0
#define LCRED_CRED_EXISTS (UINT)1
#define LCRED_STATUS_UNKNOWN_ISSUER (UINT)2
#define SECPKGCONTEXT_CONNECTION_INFO_EX_V1 (UINT)1
#define SECPKGCONTEXT_CIPHERINFO_V1 (UINT)1
#define SSL_SESSION_RECONNECT (UINT)1
#define KERN_CONTEXT_CERT_INFO_V1 (UINT)0
#define ENABLE_TLS_CLIENT_EARLY_START (UINT)1
#define SCH_CRED_V1 (UINT)1
#define SCH_CRED_V2 (UINT)2
#define SCH_CRED_VERSION (UINT)2
#define SCH_CRED_V3 (UINT)3
#define SCHANNEL_CRED_VERSION (UINT)4
#define SCH_CREDENTIALS_VERSION (UINT)5
#define TLS_PARAMS_OPTIONAL (UINT)1
#define SCH_CRED_MAX_SUPPORTED_PARAMETERS (UINT)16
#define SCH_CRED_MAX_SUPPORTED_ALPN_IDS (UINT)16
#define SCH_CRED_MAX_SUPPORTED_CRYPTO_SETTINGS (UINT)16
#define SCH_CRED_MAX_SUPPORTED_CHAINING_MODES (UINT)16
#define SCH_MAX_EXT_SUBSCRIPTIONS (UINT)2
#define SCH_CRED_FORMAT_CERT_CONTEXT (UINT)0
#define SCH_CRED_FORMAT_CERT_HASH (UINT)1
#define SCH_CRED_FORMAT_CERT_HASH_STORE (UINT)2
#define SCH_CRED_MAX_STORE_NAME_SIZE (UINT)128
#define SCH_CRED_MAX_SUPPORTED_ALGS (UINT)256
#define SCH_CRED_MAX_SUPPORTED_CERTS (UINT)100
#define SCH_MACHINE_CERT_HASH (UINT)1
#define SCH_CRED_DISABLE_RECONNECTS (UINT)128
#define SCH_CRED_RESTRICTED_ROOTS (UINT)8192
#define SCH_CRED_REVOCATION_CHECK_CACHE_ONLY (UINT)16384
#define SCH_CRED_CACHE_ONLY_URL_RETRIEVAL (UINT)32768
#define SCH_CRED_MEMORY_STORE_CERT (UINT)65536
#define SCH_CRED_SNI_CREDENTIAL (UINT)524288
#define SCH_CRED_SNI_ENABLE_OCSP (UINT)1048576
#define SCH_USE_DTLS_ONLY (UINT)16777216
#define SCH_ALLOW_NULL_ENCRYPTION (UINT)33554432
#define SCHANNEL_RENEGOTIATE (UINT)0
#define SCHANNEL_SHUTDOWN (UINT)1
#define SCHANNEL_ALERT (UINT)2
#define SCHANNEL_SESSION (UINT)3
#define TLS1_ALERT_CLOSE_NOTIFY (UINT)0
#define TLS1_ALERT_UNEXPECTED_MESSAGE (UINT)10
#define TLS1_ALERT_BAD_RECORD_MAC (UINT)20
#define TLS1_ALERT_DECRYPTION_FAILED (UINT)21
#define TLS1_ALERT_RECORD_OVERFLOW (UINT)22
#define TLS1_ALERT_DECOMPRESSION_FAIL (UINT)30
#define TLS1_ALERT_HANDSHAKE_FAILURE (UINT)40
#define TLS1_ALERT_BAD_CERTIFICATE (UINT)42
#define TLS1_ALERT_UNSUPPORTED_CERT (UINT)43
#define TLS1_ALERT_CERTIFICATE_REVOKED (UINT)44
#define TLS1_ALERT_CERTIFICATE_EXPIRED (UINT)45
#define TLS1_ALERT_CERTIFICATE_UNKNOWN (UINT)46
#define TLS1_ALERT_ILLEGAL_PARAMETER (UINT)47
#define TLS1_ALERT_UNKNOWN_CA (UINT)48
#define TLS1_ALERT_ACCESS_DENIED (UINT)49
#define TLS1_ALERT_DECODE_ERROR (UINT)50
#define TLS1_ALERT_DECRYPT_ERROR (UINT)51
#define TLS1_ALERT_EXPORT_RESTRICTION (UINT)60
#define TLS1_ALERT_PROTOCOL_VERSION (UINT)70
#define TLS1_ALERT_INSUFFIENT_SECURITY (UINT)71
#define TLS1_ALERT_INTERNAL_ERROR (UINT)80
#define TLS1_ALERT_USER_CANCELED (UINT)90
#define TLS1_ALERT_NO_RENEGOTIATION (UINT)100
#define TLS1_ALERT_UNSUPPORTED_EXT (UINT)110
#define TLS1_ALERT_UNKNOWN_PSK_IDENTITY (UINT)115
#define TLS1_ALERT_NO_APP_PROTOCOL (UINT)120
#define SP_PROT_PCT1_SERVER (UINT)1
#define SP_PROT_PCT1_CLIENT (UINT)2
#define SP_PROT_SSL2_SERVER (UINT)4
#define SP_PROT_SSL2_CLIENT (UINT)8
#define SP_PROT_SSL3_SERVER (UINT)16
#define SP_PROT_SSL3_CLIENT (UINT)32
#define SP_PROT_TLS1_SERVER (UINT)64
#define SP_PROT_TLS1_CLIENT (UINT)128
#define SP_PROT_UNI_SERVER (UINT)1073741824
#define SP_PROT_UNI_CLIENT (UINT)2147483648
#define SP_PROT_ALL (UINT)4294967295
#define SP_PROT_NONE (UINT)0
#define SP_PROT_TLS1_1_SERVER (UINT)256
#define SP_PROT_TLS1_1_CLIENT (UINT)512
#define SP_PROT_TLS1_2_SERVER (UINT)1024
#define SP_PROT_TLS1_2_CLIENT (UINT)2048
#define SP_PROT_TLS1_3_SERVER (UINT)4096
#define SP_PROT_TLS1_3_CLIENT (UINT)8192
#define SP_PROT_DTLS_SERVER (UINT)65536
#define SP_PROT_DTLS_CLIENT (UINT)131072
#define SP_PROT_DTLS1_2_SERVER (UINT)262144
#define SP_PROT_DTLS1_2_CLIENT (UINT)524288
#define SCHANNEL_SECRET_TYPE_CAPI (UINT)1
#define SCHANNEL_SECRET_PRIVKEY (UINT)2
#define SCH_CRED_X509_CERTCHAIN (UINT)1
#define SCH_CRED_X509_CAPI (UINT)2
#define SCH_CRED_CERT_CONTEXT (UINT)3
#define SL_SYSTEM_STATE_REBOOT_POLICY_FOUND (UINT)1
#define SL_SYSTEM_STATE_TAMPERED (UINT)2
#define SL_REARM_REBOOT_REQUIRED (UINT)1
#define SPP_MIGRATION_GATHER_MIGRATABLE_APPS (UINT)1
#define SPP_MIGRATION_GATHER_ACTIVATED_WINDOWS_STATE (UINT)2
#define SPP_MIGRATION_GATHER_ALL (UINT)4294967295
#define USER_ACCOUNT_DISABLED (UINT)1
#define USER_HOME_DIRECTORY_REQUIRED (UINT)2
#define USER_PASSWORD_NOT_REQUIRED (UINT)4
#define USER_TEMP_DUPLICATE_ACCOUNT (UINT)8
#define USER_NORMAL_ACCOUNT (UINT)16
#define USER_MNS_LOGON_ACCOUNT (UINT)32
#define USER_INTERDOMAIN_TRUST_ACCOUNT (UINT)64
#define USER_WORKSTATION_TRUST_ACCOUNT (UINT)128
#define USER_SERVER_TRUST_ACCOUNT (UINT)256
#define USER_DONT_EXPIRE_PASSWORD (UINT)512
#define USER_ACCOUNT_AUTO_LOCKED (UINT)1024
#define USER_ENCRYPTED_TEXT_PASSWORD_ALLOWED (UINT)2048
#define USER_SMARTCARD_REQUIRED (UINT)4096
#define USER_TRUSTED_FOR_DELEGATION (UINT)8192
#define USER_NOT_DELEGATED (UINT)16384
#define USER_USE_DES_KEY_ONLY (UINT)32768
#define USER_DONT_REQUIRE_PREAUTH (UINT)65536
#define USER_PASSWORD_EXPIRED (UINT)131072
#define USER_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION (UINT)262144
#define USER_NO_AUTH_DATA_REQUIRED (UINT)524288
#define USER_PARTIAL_SECRETS_ACCOUNT (UINT)1048576
#define USER_USE_AES_KEYS (UINT)2097152
#define SAM_DAYS_PER_WEEK (UINT)7
#define USER_ALL_PARAMETERS (UINT)2097152
#define CLEAR_BLOCK_LENGTH (UINT)8
#define CYPHER_BLOCK_LENGTH (UINT)8
#define MSV1_0_VALIDATION_LOGOFF_TIME (UINT)1
#define MSV1_0_VALIDATION_KICKOFF_TIME (UINT)2
#define MSV1_0_VALIDATION_LOGON_SERVER (UINT)4
#define MSV1_0_VALIDATION_LOGON_DOMAIN (UINT)8
#define MSV1_0_VALIDATION_SESSION_KEY (UINT)16
#define MSV1_0_VALIDATION_USER_FLAGS (UINT)32
#define MSV1_0_VALIDATION_USER_ID (UINT)64
#define MSV1_0_SUBAUTH_ACCOUNT_DISABLED (UINT)1
#define MSV1_0_SUBAUTH_PASSWORD (UINT)2
#define MSV1_0_SUBAUTH_WORKSTATIONS (UINT)4
#define MSV1_0_SUBAUTH_LOGON_HOURS (UINT)8
#define MSV1_0_SUBAUTH_ACCOUNT_EXPIRY (UINT)16
#define MSV1_0_SUBAUTH_PASSWORD_EXPIRY (UINT)32
#define MSV1_0_SUBAUTH_ACCOUNT_TYPE (UINT)64
#define MSV1_0_SUBAUTH_LOCKOUT (UINT)128

//--------------------------------------------------------------------------------
// Section: Types (597)
//--------------------------------------------------------------------------------
typedef enum {
    SECPKG_ATTR_C_ACCESS_TOKEN = 2147483666,
    SECPKG_ATTR_C_FULL_ACCESS_TOKEN = 2147483778,
    SECPKG_ATTR_CERT_TRUST_STATUS = 2147483780,
    SECPKG_ATTR_CREDS = 2147483776,
    SECPKG_ATTR_CREDS_2 = 2147483782,
    SECPKG_ATTR_NEGOTIATION_PACKAGE = 2147483777,
    SECPKG_ATTR_PACKAGE_INFO = 10,
    SECPKG_ATTR_SERVER_AUTH_FLAGS = 2147483779,
    SECPKG_ATTR_SIZES = 0,
    SECPKG_ATTR_SUBJECT_SECURITY_ATTRIBUTES = 124,
    SECPKG_ATTR_APP_DATA = 94,
    SECPKG_ATTR_EAP_PRF_INFO = 101,
    SECPKG_ATTR_EARLY_START = 105,
    SECPKG_ATTR_DTLS_MTU = 34,
    SECPKG_ATTR_KEYING_MATERIAL_INFO = 106,
    SECPKG_ATTR_ACCESS_TOKEN = 18,
    SECPKG_ATTR_AUTHORITY = 6,
    SECPKG_ATTR_CLIENT_SPECIFIED_TARGET = 27,
    SECPKG_ATTR_CONNECTION_INFO = 90,
    SECPKG_ATTR_DCE_INFO = 3,
    SECPKG_ATTR_ENDPOINT_BINDINGS = 26,
    SECPKG_ATTR_EAP_KEY_BLOCK = 91,
    SECPKG_ATTR_FLAGS = 14,
    SECPKG_ATTR_ISSUER_LIST_EX = 89,
    SECPKG_ATTR_KEY_INFO = 5,
    SECPKG_ATTR_LAST_CLIENT_TOKEN_STATUS = 30,
    SECPKG_ATTR_LIFESPAN = 2,
    SECPKG_ATTR_LOCAL_CERT_CONTEXT = 84,
    SECPKG_ATTR_LOCAL_CRED = 82,
    SECPKG_ATTR_NAMES = 1,
    SECPKG_ATTR_NATIVE_NAMES = 13,
    SECPKG_ATTR_NEGOTIATION_INFO = 12,
    SECPKG_ATTR_PASSWORD_EXPIRY = 8,
    SECPKG_ATTR_REMOTE_CERT_CONTEXT = 83,
    SECPKG_ATTR_ROOT_STORE = 85,
    SECPKG_ATTR_SESSION_KEY = 9,
    SECPKG_ATTR_SESSION_INFO = 93,
    SECPKG_ATTR_STREAM_SIZES = 4,
    SECPKG_ATTR_SUPPORTED_SIGNATURES = 102,
    SECPKG_ATTR_TARGET_INFORMATION = 17,
    SECPKG_ATTR_UNIQUE_BINDINGS = 25,
} SECPKG_ATTR;

typedef enum {
    MSV1_0_PASSTHRU = 1,
    MSV1_0_GUEST_LOGON = 2,
} MSV1_0;

typedef enum {
    SECPKG_CRED_INBOUND = 1,
    SECPKG_CRED_OUTBOUND = 2,
} SECPKG_CRED;

typedef enum {
    LOGON_GUEST = 1,
    LOGON_NOENCRYPTION = 2,
    LOGON_CACHED_ACCOUNT = 4,
    LOGON_USED_LM_PASSWORD = 8,
    LOGON_EXTRA_SIDS = 32,
    LOGON_SUBAUTH_SESSION_KEY = 64,
    LOGON_SERVER_TRUST_ACCOUNT = 128,
    LOGON_PROFILE_PATH_RETURNED = 1024,
    LOGON_RESOURCE_GROUPS = 512,
} MSV_SUB_AUTHENTICATION_FILTER;

typedef enum {
    SECPKG_CONTEXT_EXPORT_RESET_NEW = 1,
    SECPKG_CONTEXT_EXPORT_DELETE_OLD = 2,
    SECPKG_CONTEXT_EXPORT_TO_KERNEL = 4,
} EXPORT_SECURITY_CONTEXT_FLAGS;

typedef enum {
    ASC_REQ_ALLOCATE_MEMORY = 256,
    ASC_REQ_CONNECTION = 2048,
    ASC_REQ_DELEGATE = 1,
    ASC_REQ_EXTENDED_ERROR = 32768,
    ASC_REQ_REPLAY_DETECT = 4,
    ASC_REQ_SEQUENCE_DETECT = 8,
    ASC_REQ_STREAM = 65536,
} ACCEPT_SECURITY_CONTEXT_CONTEXT_REQ;

typedef enum {
    KERB_TICKET_FLAGS_forwardable = 1073741824,
    KERB_TICKET_FLAGS_forwarded = 536870912,
    KERB_TICKET_FLAGS_hw_authent = 1048576,
    KERB_TICKET_FLAGS_initial = 4194304,
    KERB_TICKET_FLAGS_invalid = 16777216,
    KERB_TICKET_FLAGS_may_postdate = 67108864,
    KERB_TICKET_FLAGS_ok_as_delegate = 262144,
    KERB_TICKET_FLAGS_postdated = 33554432,
    KERB_TICKET_FLAGS_pre_authent = 2097152,
    KERB_TICKET_FLAGS_proxiable = 268435456,
    KERB_TICKET_FLAGS_proxy = 134217728,
    KERB_TICKET_FLAGS_renewable = 8388608,
    KERB_TICKET_FLAGS_reserved = 2147483648,
    KERB_TICKET_FLAGS_reserved1 = 1,
} KERB_TICKET_FLAGS;

typedef enum {
    DS_INET_ADDRESS = 1,
    DS_NETBIOS_ADDRESS = 2,
} KERB_ADDRESS_TYPE;

typedef enum {
    SCH_CRED_AUTO_CRED_VALIDATION = 32,
    SCH_CRED_CACHE_ONLY_URL_RETRIEVAL_ON_CREATE = 131072,
    SCH_DISABLE_RECONNECTS = 128,
    SCH_CRED_IGNORE_NO_REVOCATION_CHECK = 2048,
    SCH_CRED_IGNORE_REVOCATION_OFFLINE = 4096,
    SCH_CRED_MANUAL_CRED_VALIDATION = 8,
    SCH_CRED_NO_DEFAULT_CREDS = 16,
    SCH_CRED_NO_SERVERNAME_CHECK = 4,
    SCH_CRED_NO_SYSTEM_MAPPER = 2,
    SCH_CRED_REVOCATION_CHECK_CHAIN = 512,
    SCH_CRED_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT = 1024,
    SCH_CRED_REVOCATION_CHECK_END_CERT = 256,
    SCH_CRED_USE_DEFAULT_CREDS = 64,
    SCH_SEND_AUX_RECORD = 2097152,
    SCH_SEND_ROOT_CERT = 262144,
    SCH_USE_STRONG_CRYPTO = 4194304,
    SCH_USE_PRESHAREDKEY_ONLY = 8388608,
} SCHANNEL_CRED_FLAGS;

typedef enum {
    DOMAIN_PASSWORD_COMPLEX = 1,
    DOMAIN_PASSWORD_NO_ANON_CHANGE = 2,
    DOMAIN_PASSWORD_NO_CLEAR_CHANGE = 4,
    DOMAIN_LOCKOUT_ADMINS = 8,
    DOMAIN_PASSWORD_STORE_CLEARTEXT = 16,
    DOMAIN_REFUSE_PASSWORD_CHANGE = 32,
} DOMAIN_PASSWORD_PROPERTIES;

typedef enum {
    TLS1_ALERT_WARNING = 1,
    TLS1_ALERT_FATAL = 2,
} SCHANNEL_ALERT_TOKEN_ALERT_TYPE;

typedef enum {
    TRUST_TYPE_DOWNLEVEL = 1,
    TRUST_TYPE_UPLEVEL = 2,
    TRUST_TYPE_MIT = 3,
    TRUST_TYPE_DCE = 4,
} TRUSTED_DOMAIN_TRUST_TYPE;

typedef enum {
    MSV1_0_CLEARTEXT_PASSWORD_ALLOWED = 2,
    MSV1_0_UPDATE_LOGON_STATISTICS = 4,
    MSV1_0_RETURN_USER_PARAMETERS = 8,
    MSV1_0_DONT_TRY_GUEST_ACCOUNT = 16,
    MSV1_0_ALLOW_SERVER_TRUST_ACCOUNT = 32,
    MSV1_0_RETURN_PASSWORD_EXPIRY = 64,
    MSV1_0_ALLOW_WORKSTATION_TRUST_ACCOUNT = 2048,
    MSV1_0_TRY_GUEST_ACCOUNT_ONLY = 256,
    MSV1_0_RETURN_PROFILE_PATH = 512,
    MSV1_0_TRY_SPECIFIED_DOMAIN_ONLY = 1024,
} MSV_SUBAUTH_LOGON_PARAMETER_CONTROL;

typedef enum {
    KERB_REQUEST_ADD_CREDENTIAL = 1,
    KERB_REQUEST_REPLACE_CREDENTIAL = 2,
    KERB_REQUEST_REMOVE_CREDENTIAL = 4,
} KERB_REQUEST_FLAGS;

typedef enum {
    TRUST_DIRECTION_DISABLED = 0,
    TRUST_DIRECTION_INBOUND = 1,
    TRUST_DIRECTION_OUTBOUND = 2,
    TRUST_DIRECTION_BIDIRECTIONAL = 3,
} TRUSTED_DOMAIN_TRUST_DIRECTION;

typedef enum {
    MSV1_0_CRED_LM_PRESENT = 1,
    MSV1_0_CRED_NT_PRESENT = 2,
    MSV1_0_CRED_VERSION = 0,
} MSV_SUPPLEMENTAL_CREDENTIAL_FLAGS;

typedef enum {
    SECPKG_OPTIONS_TYPE_UNKNOWN = 0,
    SECPKG_OPTIONS_TYPE_LSA = 1,
    SECPKG_OPTIONS_TYPE_SSPI = 2,
} SECURITY_PACKAGE_OPTIONS_TYPE;

typedef enum {
    SSL_SESSION_ENABLE_RECONNECTS = 1,
    SSL_SESSION_DISABLE_RECONNECTS = 2,
} SCHANNEL_SESSION_TOKEN_FLAGS;

typedef enum {
    KERB_ETYPE_DES_CBC_CRC = 1,
    KERB_ETYPE_DES_CBC_MD4 = 2,
    KERB_ETYPE_DES_CBC_MD5 = 3,
    KERB_ETYPE_NULL = 0,
    KERB_ETYPE_RC4_HMAC_NT = 23,
    KERB_ETYPE_RC4_MD4 = -128,
} KERB_CRYPTO_KEY_TYPE;

typedef enum {
    TRUST_AUTH_TYPE_NONE = 0,
    TRUST_AUTH_TYPE_NT4OWF = 1,
    TRUST_AUTH_TYPE_CLEAR = 2,
    TRUST_AUTH_TYPE_VERSION = 3,
} LSA_AUTH_INFORMATION_AUTH_TYPE;

typedef enum {
    SECPKG_PACKAGE_CHANGE_LOAD = 0,
    SECPKG_PACKAGE_CHANGE_UNLOAD = 1,
    SECPKG_PACKAGE_CHANGE_SELECT = 2,
} SECPKG_PACKAGE_CHANGE_TYPE;

typedef enum {
    TRUST_ATTRIBUTE_NON_TRANSITIVE = 1,
    TRUST_ATTRIBUTE_UPLEVEL_ONLY = 2,
    TRUST_ATTRIBUTE_FILTER_SIDS = 4,
    TRUST_ATTRIBUTE_FOREST_TRANSITIVE = 8,
    TRUST_ATTRIBUTE_CROSS_ORGANIZATION = 16,
    TRUST_ATTRIBUTE_TREAT_AS_EXTERNAL = 64,
    TRUST_ATTRIBUTE_WITHIN_FOREST = 32,
} TRUSTED_DOMAIN_TRUST_ATTRIBUTES;

typedef int _HMAPPER;

typedef int LsaHandle;

typedef int LSA_TRUST_INFORMATION;

typedef int LSA_REFERENCED_DOMAIN_LIST;

typedef int LSA_TRANSLATED_SID2;

typedef int LSA_TRANSLATED_NAME;

typedef int POLICY_ACCOUNT_DOMAIN_INFO;

typedef int POLICY_DNS_DOMAIN_INFO;

typedef enum {
    AccountDomainInformation = 5,
    DnsDomainInformation = 12,
} LSA_LOOKUP_DOMAIN_INFO_CLASS;

typedef enum {
    UndefinedLogonType = 0,
    Interactive = 2,
    Network = 3,
    Batch = 4,
    Service = 5,
    Proxy = 6,
    Unlock = 7,
    NetworkCleartext = 8,
    NewCredentials = 9,
    RemoteInteractive = 10,
    CachedInteractive = 11,
    CachedRemoteInteractive = 12,
    CachedUnlock = 13,
} SECURITY_LOGON_TYPE;
// NOTE: not creating aliases because this enum is 'Scoped'

typedef enum {
    SeAdtParmTypeNone = 0,
    SeAdtParmTypeString = 1,
    SeAdtParmTypeFileSpec = 2,
    SeAdtParmTypeUlong = 3,
    SeAdtParmTypeSid = 4,
    SeAdtParmTypeLogonId = 5,
    SeAdtParmTypeNoLogonId = 6,
    SeAdtParmTypeAccessMask = 7,
    SeAdtParmTypePrivs = 8,
    SeAdtParmTypeObjectTypes = 9,
    SeAdtParmTypeHexUlong = 10,
    SeAdtParmTypePtr = 11,
    SeAdtParmTypeTime = 12,
    SeAdtParmTypeGuid = 13,
    SeAdtParmTypeLuid = 14,
    SeAdtParmTypeHexInt64 = 15,
    SeAdtParmTypeStringList = 16,
    SeAdtParmTypeSidList = 17,
    SeAdtParmTypeDuration = 18,
    SeAdtParmTypeUserAccountControl = 19,
    SeAdtParmTypeNoUac = 20,
    SeAdtParmTypeMessage = 21,
    SeAdtParmTypeDateTime = 22,
    SeAdtParmTypeSockAddr = 23,
    SeAdtParmTypeSD = 24,
    SeAdtParmTypeLogonHours = 25,
    SeAdtParmTypeLogonIdNoSid = 26,
    SeAdtParmTypeUlongNoConv = 27,
    SeAdtParmTypeSockAddrNoPort = 28,
    SeAdtParmTypeAccessReason = 29,
    SeAdtParmTypeStagingReason = 30,
    SeAdtParmTypeResourceAttribute = 31,
    SeAdtParmTypeClaims = 32,
    SeAdtParmTypeLogonIdAsSid = 33,
    SeAdtParmTypeMultiSzString = 34,
    SeAdtParmTypeLogonIdEx = 35,
} SE_ADT_PARAMETER_TYPE;

typedef int SE_ADT_OBJECT_TYPE;

typedef int SE_ADT_PARAMETER_ARRAY_ENTRY;

typedef int SE_ADT_ACCESS_REASON;

typedef int SE_ADT_CLAIMS;

typedef int SE_ADT_PARAMETER_ARRAY;

typedef int SE_ADT_PARAMETER_ARRAY_EX;

typedef enum {
    AuditCategorySystem = 0,
    AuditCategoryLogon = 1,
    AuditCategoryObjectAccess = 2,
    AuditCategoryPrivilegeUse = 3,
    AuditCategoryDetailedTracking = 4,
    AuditCategoryPolicyChange = 5,
    AuditCategoryAccountManagement = 6,
    AuditCategoryDirectoryServiceAccess = 7,
    AuditCategoryAccountLogon = 8,
} POLICY_AUDIT_EVENT_TYPE;

typedef int LSA_TRANSLATED_SID;

typedef enum {
    PolicyServerRoleBackup = 2,
    PolicyServerRolePrimary = 3,
} POLICY_LSA_SERVER_ROLE;

typedef enum {
    PolicyAuditLogInformation = 1,
    PolicyAuditEventsInformation = 2,
    PolicyPrimaryDomainInformation = 3,
    PolicyPdAccountInformation = 4,
    PolicyAccountDomainInformation = 5,
    PolicyLsaServerRoleInformation = 6,
    PolicyReplicaSourceInformation = 7,
    PolicyDefaultQuotaInformation = 8,
    PolicyModificationInformation = 9,
    PolicyAuditFullSetInformation = 10,
    PolicyAuditFullQueryInformation = 11,
    PolicyDnsDomainInformation = 12,
    PolicyDnsDomainInformationInt = 13,
    PolicyLocalAccountDomainInformation = 14,
    PolicyMachineAccountInformation = 15,
    PolicyLastEntry = 16,
} POLICY_INFORMATION_CLASS;

typedef int POLICY_AUDIT_LOG_INFO;

typedef int POLICY_AUDIT_EVENTS_INFO;

typedef int POLICY_AUDIT_SUBCATEGORIES_INFO;

typedef int POLICY_AUDIT_CATEGORIES_INFO;

typedef int POLICY_PRIMARY_DOMAIN_INFO;

typedef int POLICY_PD_ACCOUNT_INFO;

typedef int POLICY_LSA_SERVER_ROLE_INFO;

typedef int POLICY_REPLICA_SOURCE_INFO;

typedef int POLICY_DEFAULT_QUOTA_INFO;

typedef int POLICY_MODIFICATION_INFO;

typedef int POLICY_AUDIT_FULL_SET_INFO;

typedef int POLICY_AUDIT_FULL_QUERY_INFO;

typedef enum {
    PolicyDomainEfsInformation = 2,
    PolicyDomainKerberosTicketInformation = 3,
} POLICY_DOMAIN_INFORMATION_CLASS;

typedef int POLICY_DOMAIN_EFS_INFO;

typedef int POLICY_DOMAIN_KERBEROS_TICKET_INFO;

typedef int POLICY_MACHINE_ACCT_INFO;

typedef enum {
    PolicyNotifyAuditEventsInformation = 1,
    PolicyNotifyAccountDomainInformation = 2,
    PolicyNotifyServerRoleInformation = 3,
    PolicyNotifyDnsDomainInformation = 4,
    PolicyNotifyDomainEfsInformation = 5,
    PolicyNotifyDomainKerberosTicketInformation = 6,
    PolicyNotifyMachineAccountPasswordInformation = 7,
    PolicyNotifyGlobalSaclInformation = 8,
    PolicyNotifyMax = 9,
} POLICY_NOTIFICATION_INFORMATION_CLASS;

typedef enum {
    TrustedDomainNameInformation = 1,
    TrustedControllersInformation = 2,
    TrustedPosixOffsetInformation = 3,
    TrustedPasswordInformation = 4,
    TrustedDomainInformationBasic = 5,
    TrustedDomainInformationEx = 6,
    TrustedDomainAuthInformation = 7,
    TrustedDomainFullInformation = 8,
    TrustedDomainAuthInformationInternal = 9,
    TrustedDomainFullInformationInternal = 10,
    TrustedDomainInformationEx2Internal = 11,
    TrustedDomainFullInformation2Internal = 12,
    TrustedDomainSupportedEncryptionTypes = 13,
} TRUSTED_INFORMATION_CLASS;

typedef int TRUSTED_DOMAIN_NAME_INFO;

typedef int TRUSTED_CONTROLLERS_INFO;

typedef int TRUSTED_POSIX_OFFSET_INFO;

typedef int TRUSTED_PASSWORD_INFO;

typedef int TRUSTED_DOMAIN_INFORMATION_EX;

typedef int TRUSTED_DOMAIN_INFORMATION_EX2;

typedef int LSA_AUTH_INFORMATION;

typedef int TRUSTED_DOMAIN_AUTH_INFORMATION;

typedef int TRUSTED_DOMAIN_FULL_INFORMATION;

typedef int TRUSTED_DOMAIN_FULL_INFORMATION2;

typedef int TRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES;

typedef enum {
    ForestTrustTopLevelName = 0,
    ForestTrustTopLevelNameEx = 1,
    ForestTrustDomainInfo = 2,
    ForestTrustRecordTypeLast = 2,
} LSA_FOREST_TRUST_RECORD_TYPE;

typedef int LSA_FOREST_TRUST_DOMAIN_INFO;

typedef int LSA_FOREST_TRUST_BINARY_DATA;

typedef int LSA_FOREST_TRUST_RECORD;

typedef int LSA_FOREST_TRUST_INFORMATION;

typedef enum {
    CollisionTdo = 0,
    CollisionXref = 1,
    CollisionOther = 2,
} LSA_FOREST_TRUST_COLLISION_RECORD_TYPE;

typedef int LSA_FOREST_TRUST_COLLISION_RECORD;

typedef int LSA_FOREST_TRUST_COLLISION_INFORMATION;

typedef int LSA_ENUMERATION_INFORMATION;

typedef int LSA_LAST_INTER_LOGON_INFO;

typedef int SECURITY_LOGON_SESSION_DATA;

typedef int CENTRAL_ACCESS_POLICY_ENTRY;

typedef int CENTRAL_ACCESS_POLICY;

typedef enum {
    NegEnumPackagePrefixes = 0,
    NegGetCallerName = 1,
    NegTransferCredentials = 2,
    NegMsgReserved1 = 3,
    NegCallPackageMax = 4,
} NEGOTIATE_MESSAGES;

typedef int NEGOTIATE_PACKAGE_PREFIX;

typedef int NEGOTIATE_PACKAGE_PREFIXES;

typedef int NEGOTIATE_CALLER_NAME_REQUEST;

typedef int NEGOTIATE_CALLER_NAME_RESPONSE;

typedef int DOMAIN_PASSWORD_INFORMATION;

typedef int PSAM_PASSWORD_NOTIFICATION_ROUTINE;

typedef int PSAM_INIT_NOTIFICATION_ROUTINE;

typedef int PSAM_PASSWORD_FILTER_ROUTINE;

typedef enum {
    MsV1_0InteractiveLogon = 2,
    MsV1_0Lm20Logon = 3,
    MsV1_0NetworkLogon = 4,
    MsV1_0SubAuthLogon = 5,
    MsV1_0WorkstationUnlockLogon = 7,
    MsV1_0S4ULogon = 12,
    MsV1_0VirtualLogon = 82,
    MsV1_0NoElevationLogon = 83,
    MsV1_0LuidLogon = 84,
} MSV1_0_LOGON_SUBMIT_TYPE;

typedef enum {
    MsV1_0InteractiveProfile = 2,
    MsV1_0Lm20LogonProfile = 3,
    MsV1_0SmartCardProfile = 4,
} MSV1_0_PROFILE_BUFFER_TYPE;

typedef int MSV1_0_INTERACTIVE_LOGON;

typedef int MSV1_0_INTERACTIVE_PROFILE;

typedef int MSV1_0_LM20_LOGON;

typedef int MSV1_0_SUBAUTH_LOGON;

typedef int MSV1_0_S4U_LOGON;

typedef int MSV1_0_LM20_LOGON_PROFILE;

typedef enum {
    InvalidCredKey = 0,
    DeprecatedIUMCredKey = 1,
    DomainUserCredKey = 2,
    LocalUserCredKey = 3,
    ExternallySuppliedCredKey = 4,
} MSV1_0_CREDENTIAL_KEY_TYPE;

typedef int MSV1_0_CREDENTIAL_KEY;

typedef int MSV1_0_SUPPLEMENTAL_CREDENTIAL;

typedef int MSV1_0_SUPPLEMENTAL_CREDENTIAL_V2;

typedef int MSV1_0_SUPPLEMENTAL_CREDENTIAL_V3;

typedef int MSV1_0_IUM_SUPPLEMENTAL_CREDENTIAL;

typedef int MSV1_0_REMOTE_SUPPLEMENTAL_CREDENTIAL;

typedef int MSV1_0_NTLM3_RESPONSE;

typedef enum {
    MsvAvEOL = 0,
    MsvAvNbComputerName = 1,
    MsvAvNbDomainName = 2,
    MsvAvDnsComputerName = 3,
    MsvAvDnsDomainName = 4,
    MsvAvDnsTreeName = 5,
    MsvAvFlags = 6,
    MsvAvTimestamp = 7,
    MsvAvRestrictions = 8,
    MsvAvTargetName = 9,
    MsvAvChannelBindings = 10,
} MSV1_0_AVID;

typedef int MSV1_0_AV_PAIR;

typedef enum {
    MsV1_0Lm20ChallengeRequest = 0,
    MsV1_0Lm20GetChallengeResponse = 1,
    MsV1_0EnumerateUsers = 2,
    MsV1_0GetUserInfo = 3,
    MsV1_0ReLogonUsers = 4,
    MsV1_0ChangePassword = 5,
    MsV1_0ChangeCachedPassword = 6,
    MsV1_0GenericPassthrough = 7,
    MsV1_0CacheLogon = 8,
    MsV1_0SubAuth = 9,
    MsV1_0DeriveCredential = 10,
    MsV1_0CacheLookup = 11,
    MsV1_0SetProcessOption = 12,
    MsV1_0ConfigLocalAliases = 13,
    MsV1_0ClearCachedCredentials = 14,
    MsV1_0LookupToken = 15,
    MsV1_0ValidateAuth = 16,
    MsV1_0CacheLookupEx = 17,
    MsV1_0GetCredentialKey = 18,
    MsV1_0SetThreadOption = 19,
    MsV1_0DecryptDpapiMasterKey = 20,
    MsV1_0GetStrongCredentialKey = 21,
    MsV1_0TransferCred = 22,
    MsV1_0ProvisionTbal = 23,
    MsV1_0DeleteTbalSecrets = 24,
} MSV1_0_PROTOCOL_MESSAGE_TYPE;

typedef int MSV1_0_CHANGEPASSWORD_REQUEST;

typedef int MSV1_0_CHANGEPASSWORD_RESPONSE;

typedef int MSV1_0_PASSTHROUGH_REQUEST;

typedef int MSV1_0_PASSTHROUGH_RESPONSE;

typedef int MSV1_0_SUBAUTH_REQUEST;

typedef int MSV1_0_SUBAUTH_RESPONSE;

typedef enum {
    KerbInteractiveLogon = 2,
    KerbSmartCardLogon = 6,
    KerbWorkstationUnlockLogon = 7,
    KerbSmartCardUnlockLogon = 8,
    KerbProxyLogon = 9,
    KerbTicketLogon = 10,
    KerbTicketUnlockLogon = 11,
    KerbS4ULogon = 12,
    KerbCertificateLogon = 13,
    KerbCertificateS4ULogon = 14,
    KerbCertificateUnlockLogon = 15,
    KerbNoElevationLogon = 83,
    KerbLuidLogon = 84,
} KERB_LOGON_SUBMIT_TYPE;

typedef int KERB_INTERACTIVE_LOGON;

typedef int KERB_INTERACTIVE_UNLOCK_LOGON;

typedef int KERB_SMART_CARD_LOGON;

typedef int KERB_SMART_CARD_UNLOCK_LOGON;

typedef int KERB_CERTIFICATE_LOGON;

typedef int KERB_CERTIFICATE_UNLOCK_LOGON;

typedef int KERB_CERTIFICATE_S4U_LOGON;

typedef int KERB_TICKET_LOGON;

typedef int KERB_TICKET_UNLOCK_LOGON;

typedef int KERB_S4U_LOGON;

typedef enum {
    KerbInteractiveProfile = 2,
    KerbSmartCardProfile = 4,
    KerbTicketProfile = 6,
} KERB_PROFILE_BUFFER_TYPE;

typedef int KERB_INTERACTIVE_PROFILE;

typedef int KERB_SMART_CARD_PROFILE;

typedef int KERB_CRYPTO_KEY;

typedef int KERB_CRYPTO_KEY32;

typedef int KERB_TICKET_PROFILE;

typedef enum {
    KerbDebugRequestMessage = 0,
    KerbQueryTicketCacheMessage = 1,
    KerbChangeMachinePasswordMessage = 2,
    KerbVerifyPacMessage = 3,
    KerbRetrieveTicketMessage = 4,
    KerbUpdateAddressesMessage = 5,
    KerbPurgeTicketCacheMessage = 6,
    KerbChangePasswordMessage = 7,
    KerbRetrieveEncodedTicketMessage = 8,
    KerbDecryptDataMessage = 9,
    KerbAddBindingCacheEntryMessage = 10,
    KerbSetPasswordMessage = 11,
    KerbSetPasswordExMessage = 12,
    KerbVerifyCredentialsMessage = 13,
    KerbQueryTicketCacheExMessage = 14,
    KerbPurgeTicketCacheExMessage = 15,
    KerbRefreshSmartcardCredentialsMessage = 16,
    KerbAddExtraCredentialsMessage = 17,
    KerbQuerySupplementalCredentialsMessage = 18,
    KerbTransferCredentialsMessage = 19,
    KerbQueryTicketCacheEx2Message = 20,
    KerbSubmitTicketMessage = 21,
    KerbAddExtraCredentialsExMessage = 22,
    KerbQueryKdcProxyCacheMessage = 23,
    KerbPurgeKdcProxyCacheMessage = 24,
    KerbQueryTicketCacheEx3Message = 25,
    KerbCleanupMachinePkinitCredsMessage = 26,
    KerbAddBindingCacheEntryExMessage = 27,
    KerbQueryBindingCacheMessage = 28,
    KerbPurgeBindingCacheMessage = 29,
    KerbPinKdcMessage = 30,
    KerbUnpinAllKdcsMessage = 31,
    KerbQueryDomainExtendedPoliciesMessage = 32,
    KerbQueryS4U2ProxyCacheMessage = 33,
    KerbRetrieveKeyTabMessage = 34,
} KERB_PROTOCOL_MESSAGE_TYPE;

typedef int KERB_QUERY_TKT_CACHE_REQUEST;

typedef int KERB_TICKET_CACHE_INFO;

typedef int KERB_TICKET_CACHE_INFO_EX;

typedef int KERB_TICKET_CACHE_INFO_EX2;

typedef int KERB_TICKET_CACHE_INFO_EX3;

typedef int KERB_QUERY_TKT_CACHE_RESPONSE;

typedef int KERB_QUERY_TKT_CACHE_EX_RESPONSE;

typedef int KERB_QUERY_TKT_CACHE_EX2_RESPONSE;

typedef int KERB_QUERY_TKT_CACHE_EX3_RESPONSE;

typedef int KERB_AUTH_DATA;

typedef int KERB_NET_ADDRESS;

typedef int KERB_NET_ADDRESSES;

typedef int KERB_EXTERNAL_NAME;

typedef int KERB_EXTERNAL_TICKET;

typedef int KERB_RETRIEVE_TKT_REQUEST;

typedef int KERB_RETRIEVE_TKT_RESPONSE;

typedef int KERB_PURGE_TKT_CACHE_REQUEST;

typedef int KERB_PURGE_TKT_CACHE_EX_REQUEST;

typedef int KERB_SUBMIT_TKT_REQUEST;

typedef int KERB_QUERY_KDC_PROXY_CACHE_REQUEST;

typedef int KDC_PROXY_CACHE_ENTRY_DATA;

typedef int KERB_QUERY_KDC_PROXY_CACHE_RESPONSE;

typedef int KERB_PURGE_KDC_PROXY_CACHE_REQUEST;

typedef int KERB_PURGE_KDC_PROXY_CACHE_RESPONSE;

typedef int KERB_S4U2PROXY_CACHE_ENTRY_INFO;

typedef int KERB_S4U2PROXY_CRED;

typedef int KERB_QUERY_S4U2PROXY_CACHE_REQUEST;

typedef int KERB_QUERY_S4U2PROXY_CACHE_RESPONSE;

typedef int KERB_RETRIEVE_KEY_TAB_REQUEST;

typedef int KERB_RETRIEVE_KEY_TAB_RESPONSE;

typedef int KERB_CHANGEPASSWORD_REQUEST;

typedef int KERB_SETPASSWORD_REQUEST;

typedef int KERB_SETPASSWORD_EX_REQUEST;

typedef int KERB_DECRYPT_REQUEST;

typedef int KERB_DECRYPT_RESPONSE;

typedef int KERB_ADD_BINDING_CACHE_ENTRY_REQUEST;

typedef int KERB_REFRESH_SCCRED_REQUEST;

typedef int KERB_ADD_CREDENTIALS_REQUEST;

typedef int KERB_ADD_CREDENTIALS_REQUEST_EX;

typedef int KERB_TRANSFER_CRED_REQUEST;

typedef int KERB_CLEANUP_MACHINE_PKINIT_CREDS_REQUEST;

typedef int KERB_BINDING_CACHE_ENTRY_DATA;

typedef int KERB_QUERY_BINDING_CACHE_RESPONSE;

typedef int KERB_ADD_BINDING_CACHE_ENTRY_EX_REQUEST;

typedef int KERB_QUERY_BINDING_CACHE_REQUEST;

typedef int KERB_PURGE_BINDING_CACHE_REQUEST;

typedef int KERB_QUERY_DOMAIN_EXTENDED_POLICIES_REQUEST;

typedef int KERB_QUERY_DOMAIN_EXTENDED_POLICIES_RESPONSE;

typedef enum {
    CertHashInfo = 1,
} KERB_CERTIFICATE_INFO_TYPE;

typedef int KERB_CERTIFICATE_HASHINFO;

typedef int KERB_CERTIFICATE_INFO;

typedef int POLICY_AUDIT_SID_ARRAY;

typedef int AUDIT_POLICY_INFORMATION;

typedef int PKU2U_CERT_BLOB;

typedef int PKU2U_CREDUI_CONTEXT;

typedef enum {
    Pku2uCertificateS4ULogon = 14,
} PKU2U_LOGON_SUBMIT_TYPE;

typedef int PKU2U_CERTIFICATE_S4U_LOGON;

typedef int SecPkgInfoW;

typedef int SecPkgInfoA;

typedef int SecBuffer;

typedef int SecBufferDesc;

typedef int SEC_NEGOTIATION_INFO;

typedef int SEC_CHANNEL_BINDINGS;

typedef enum {
    SecApplicationProtocolNegotiationExt_None = 0,
    SecApplicationProtocolNegotiationExt_NPN = 1,
    SecApplicationProtocolNegotiationExt_ALPN = 2,
} SEC_APPLICATION_PROTOCOL_NEGOTIATION_EXT;

typedef int SEC_APPLICATION_PROTOCOL_LIST;

typedef int SEC_APPLICATION_PROTOCOLS;

typedef int SEC_SRTP_PROTECTION_PROFILES;

typedef int SEC_SRTP_MASTER_KEY_IDENTIFIER;

typedef int SEC_TOKEN_BINDING;

typedef int SEC_PRESHAREDKEY;

typedef int SEC_PRESHAREDKEY_IDENTITY;

typedef int SEC_DTLS_MTU;

typedef int SEC_FLAGS;

typedef enum {
    SecTrafficSecret_None = 0,
    SecTrafficSecret_Client = 1,
    SecTrafficSecret_Server = 2,
} SEC_TRAFFIC_SECRET_TYPE;

typedef int SEC_TRAFFIC_SECRETS;

typedef int SecPkgCredentials_NamesW;

typedef int SecPkgCredentials_NamesA;

typedef int SecPkgCredentials_SSIProviderW;

typedef int SecPkgCredentials_SSIProviderA;

typedef int SecPkgCredentials_KdcProxySettingsW;

typedef int SecPkgCredentials_Cert;

typedef int SecPkgContext_SubjectAttributes;

typedef enum {
    SecPkgCredClass_None = 0,
    SecPkgCredClass_Ephemeral = 10,
    SecPkgCredClass_PersistedGeneric = 20,
    SecPkgCredClass_PersistedSpecific = 30,
    SecPkgCredClass_Explicit = 40,
} SECPKG_CRED_CLASS;

typedef int SecPkgContext_CredInfo;

typedef int SecPkgContext_NegoPackageInfo;

typedef int SecPkgContext_NegoStatus;

typedef int SecPkgContext_Sizes;

typedef int SecPkgContext_StreamSizes;

typedef int SecPkgContext_NamesW;

typedef enum {
    SecPkgAttrLastClientTokenYes = 0,
    SecPkgAttrLastClientTokenNo = 1,
    SecPkgAttrLastClientTokenMaybe = 2,
} SECPKG_ATTR_LCT_STATUS;

typedef int SecPkgContext_LastClientTokenStatus;

typedef int SecPkgContext_NamesA;

typedef int SecPkgContext_Lifespan;

typedef int SecPkgContext_DceInfo;

typedef int SecPkgContext_KeyInfoA;

typedef int SecPkgContext_KeyInfoW;

typedef int SecPkgContext_AuthorityA;

typedef int SecPkgContext_AuthorityW;

typedef int SecPkgContext_ProtoInfoA;

typedef int SecPkgContext_ProtoInfoW;

typedef int SecPkgContext_PasswordExpiry;

typedef int SecPkgContext_LogoffTime;

typedef int SecPkgContext_SessionKey;

typedef int SecPkgContext_NegoKeys;

typedef int SecPkgContext_PackageInfoW;

typedef int SecPkgContext_PackageInfoA;

typedef int SecPkgContext_UserFlags;

typedef int SecPkgContext_Flags;

typedef int SecPkgContext_NegotiationInfoA;

typedef int SecPkgContext_NegotiationInfoW;

typedef int SecPkgContext_NativeNamesW;

typedef int SecPkgContext_NativeNamesA;

typedef int SecPkgContext_CredentialNameW;

typedef int SecPkgContext_CredentialNameA;

typedef int SecPkgContext_AccessToken;

typedef int SecPkgContext_TargetInformation;

typedef int SecPkgContext_AuthzID;

typedef int SecPkgContext_Target;

typedef int SecPkgContext_ClientSpecifiedTarget;

typedef int SecPkgContext_Bindings;

typedef enum {
    SecApplicationProtocolNegotiationStatus_None = 0,
    SecApplicationProtocolNegotiationStatus_Success = 1,
    SecApplicationProtocolNegotiationStatus_SelectedClientOnly = 2,
} SEC_APPLICATION_PROTOCOL_NEGOTIATION_STATUS;

typedef int SecPkgContext_ApplicationProtocol;

typedef int SecPkgContext_NegotiatedTlsExtensions;

typedef int SECPKG_APP_MODE_INFO;

typedef int SEC_GET_KEY_FN;

typedef int ACQUIRE_CREDENTIALS_HANDLE_FN_W;

typedef int ACQUIRE_CREDENTIALS_HANDLE_FN_A;

typedef int FREE_CREDENTIALS_HANDLE_FN;

typedef int ADD_CREDENTIALS_FN_W;

typedef int ADD_CREDENTIALS_FN_A;

typedef int CHANGE_PASSWORD_FN_W;

typedef int CHANGE_PASSWORD_FN_A;

typedef int INITIALIZE_SECURITY_CONTEXT_FN_W;

typedef int INITIALIZE_SECURITY_CONTEXT_FN_A;

typedef int ACCEPT_SECURITY_CONTEXT_FN;

typedef int COMPLETE_AUTH_TOKEN_FN;

typedef int IMPERSONATE_SECURITY_CONTEXT_FN;

typedef int REVERT_SECURITY_CONTEXT_FN;

typedef int QUERY_SECURITY_CONTEXT_TOKEN_FN;

typedef int DELETE_SECURITY_CONTEXT_FN;

typedef int APPLY_CONTROL_TOKEN_FN;

typedef int QUERY_CONTEXT_ATTRIBUTES_FN_W;

typedef int QUERY_CONTEXT_ATTRIBUTES_EX_FN_W;

typedef int QUERY_CONTEXT_ATTRIBUTES_FN_A;

typedef int QUERY_CONTEXT_ATTRIBUTES_EX_FN_A;

typedef int SET_CONTEXT_ATTRIBUTES_FN_W;

typedef int SET_CONTEXT_ATTRIBUTES_FN_A;

typedef int QUERY_CREDENTIALS_ATTRIBUTES_FN_W;

typedef int QUERY_CREDENTIALS_ATTRIBUTES_EX_FN_W;

typedef int QUERY_CREDENTIALS_ATTRIBUTES_FN_A;

typedef int QUERY_CREDENTIALS_ATTRIBUTES_EX_FN_A;

typedef int SET_CREDENTIALS_ATTRIBUTES_FN_W;

typedef int SET_CREDENTIALS_ATTRIBUTES_FN_A;

typedef int FREE_CONTEXT_BUFFER_FN;

typedef int MAKE_SIGNATURE_FN;

typedef int VERIFY_SIGNATURE_FN;

typedef int ENCRYPT_MESSAGE_FN;

typedef int DECRYPT_MESSAGE_FN;

typedef int ENUMERATE_SECURITY_PACKAGES_FN_W;

typedef int ENUMERATE_SECURITY_PACKAGES_FN_A;

typedef int QUERY_SECURITY_PACKAGE_INFO_FN_W;

typedef int QUERY_SECURITY_PACKAGE_INFO_FN_A;

typedef enum {
    SecFull = 0,
    SecService = 1,
    SecTree = 2,
    SecDirectory = 3,
    SecObject = 4,
} SecDelegationType;

typedef int EXPORT_SECURITY_CONTEXT_FN;

typedef int IMPORT_SECURITY_CONTEXT_FN_W;

typedef int IMPORT_SECURITY_CONTEXT_FN_A;

typedef int SecurityFunctionTableW;

typedef int SecurityFunctionTableA;

typedef int INIT_SECURITY_INTERFACE_A;

typedef int INIT_SECURITY_INTERFACE_W;

typedef enum {
    Sasl_AuthZIDForbidden = 0,
    Sasl_AuthZIDProcessed = 1,
} SASL_AUTHZID_STATE;

typedef int SEC_WINNT_AUTH_IDENTITY_EX2;

typedef int SEC_WINNT_AUTH_IDENTITY_EXW;

typedef int SEC_WINNT_AUTH_IDENTITY_EXA;

typedef int SEC_WINNT_AUTH_IDENTITY_INFO;

typedef int SECURITY_PACKAGE_OPTIONS;

typedef enum {
    LsaTokenInformationNull = 0,
    LsaTokenInformationV1 = 1,
    LsaTokenInformationV2 = 2,
    LsaTokenInformationV3 = 3,
} LSA_TOKEN_INFORMATION_TYPE;

typedef int LSA_TOKEN_INFORMATION_NULL;

typedef int LSA_TOKEN_INFORMATION_V1;

typedef int LSA_TOKEN_INFORMATION_V3;

typedef int PLSA_CREATE_LOGON_SESSION;

typedef int PLSA_DELETE_LOGON_SESSION;

typedef int PLSA_ADD_CREDENTIAL;

typedef int PLSA_GET_CREDENTIALS;

typedef int PLSA_DELETE_CREDENTIAL;

typedef int PLSA_ALLOCATE_LSA_HEAP;

typedef int PLSA_FREE_LSA_HEAP;

typedef int PLSA_ALLOCATE_PRIVATE_HEAP;

typedef int PLSA_FREE_PRIVATE_HEAP;

typedef int PLSA_ALLOCATE_CLIENT_BUFFER;

typedef int PLSA_FREE_CLIENT_BUFFER;

typedef int PLSA_COPY_TO_CLIENT_BUFFER;

typedef int PLSA_COPY_FROM_CLIENT_BUFFER;

typedef int LSA_DISPATCH_TABLE;

typedef int PLSA_AP_INITIALIZE_PACKAGE;

typedef int PLSA_AP_LOGON_USER;

typedef int PLSA_AP_LOGON_USER_EX;

typedef int PLSA_AP_CALL_PACKAGE;

typedef int PLSA_AP_CALL_PACKAGE_PASSTHROUGH;

typedef int PLSA_AP_LOGON_TERMINATED;

typedef int PSAM_CREDENTIAL_UPDATE_NOTIFY_ROUTINE;

typedef int PSAM_CREDENTIAL_UPDATE_REGISTER_ROUTINE;

typedef int PSAM_CREDENTIAL_UPDATE_FREE_ROUTINE;

typedef int SAM_REGISTER_MAPPING_ELEMENT;

typedef int SAM_REGISTER_MAPPING_LIST;

typedef int SAM_REGISTER_MAPPING_TABLE;

typedef int PSAM_CREDENTIAL_UPDATE_REGISTER_MAPPED_ENTRYPOINTS_ROUTINE;

typedef int SECPKG_CLIENT_INFO;

typedef int SECPKG_CALL_INFO;

typedef int SECPKG_SUPPLEMENTAL_CRED;

typedef int SECPKG_BYTE_VECTOR;

typedef int SECPKG_SHORT_VECTOR;

typedef int SECPKG_SUPPLIED_CREDENTIAL;

typedef int SECPKG_CREDENTIAL;

typedef int SECPKG_SUPPLEMENTAL_CRED_ARRAY;

typedef int SECPKG_SURROGATE_LOGON_ENTRY;

typedef int SECPKG_SURROGATE_LOGON;

typedef int PLSA_CALLBACK_FUNCTION;

typedef int SECPKG_PRIMARY_CRED;

typedef int SECPKG_PRIMARY_CRED_EX;

typedef int SECPKG_PARAMETERS;

typedef enum {
    SecpkgGssInfo = 1,
    SecpkgContextThunks = 2,
    SecpkgMutualAuthLevel = 3,
    SecpkgWowClientDll = 4,
    SecpkgExtraOids = 5,
    SecpkgMaxInfo = 6,
    SecpkgNego2Info = 7,
} SECPKG_EXTENDED_INFORMATION_CLASS;

typedef int SECPKG_GSS_INFO;

typedef int SECPKG_CONTEXT_THUNKS;

typedef int SECPKG_MUTUAL_AUTH_LEVEL;

typedef int SECPKG_WOW_CLIENT_DLL;

typedef int SECPKG_SERIALIZED_OID;

typedef int SECPKG_EXTRA_OIDS;

typedef int SECPKG_NEGO2_INFO;

typedef int SECPKG_EXTENDED_INFORMATION;

typedef int SECPKG_TARGETINFO;

typedef int SecPkgContext_SaslContext;

typedef int SECURITY_USER_DATA;

typedef enum {
    SecPkgCallPackageMinMessage = 1024,
    SecPkgCallPackagePinDcMessage = 1024,
    SecPkgCallPackageUnpinAllDcsMessage = 1025,
    SecPkgCallPackageTransferCredMessage = 1026,
    SecPkgCallPackageMaxMessage = 1026,
} SECPKG_CALL_PACKAGE_MESSAGE_TYPE;

typedef int SECPKG_CALL_PACKAGE_PIN_DC_REQUEST;

typedef int SECPKG_CALL_PACKAGE_UNPIN_ALL_DCS_REQUEST;

typedef int SECPKG_CALL_PACKAGE_TRANSFER_CRED_REQUEST;

typedef int PLSA_REDIRECTED_LOGON_INIT;

typedef int PLSA_REDIRECTED_LOGON_CALLBACK;

typedef int PLSA_REDIRECTED_LOGON_CLEANUP_CALLBACK;

typedef int PLSA_REDIRECTED_LOGON_GET_LOGON_CREDS;

typedef int PLSA_REDIRECTED_LOGON_GET_SUPP_CREDS;

typedef int SECPKG_REDIRECTED_LOGON_BUFFER;

typedef int SECPKG_POST_LOGON_USER_INFO;

typedef int PLSA_IMPERSONATE_CLIENT;

typedef int PLSA_UNLOAD_PACKAGE;

typedef int PLSA_DUPLICATE_HANDLE;

typedef int PLSA_SAVE_SUPPLEMENTAL_CREDENTIALS;

typedef int PLSA_CREATE_THREAD;

typedef int PLSA_GET_CLIENT_INFO;

typedef int PLSA_REGISTER_NOTIFICATION;

typedef int PLSA_CANCEL_NOTIFICATION;

typedef int PLSA_MAP_BUFFER;

typedef int PLSA_CREATE_TOKEN;

typedef enum {
    SecSessionPrimaryCred = 0,
} SECPKG_SESSIONINFO_TYPE;

typedef int PLSA_CREATE_TOKEN_EX;

typedef int PLSA_AUDIT_LOGON;

typedef int PLSA_CALL_PACKAGE;

typedef int PLSA_CALL_PACKAGEEX;

typedef int PLSA_CALL_PACKAGE_PASSTHROUGH;

typedef int PLSA_GET_CALL_INFO;

typedef int PLSA_CREATE_SHARED_MEMORY;

typedef int PLSA_ALLOCATE_SHARED_MEMORY;

typedef int PLSA_FREE_SHARED_MEMORY;

typedef int PLSA_DELETE_SHARED_MEMORY;

typedef int PLSA_GET_APP_MODE_INFO;

typedef int PLSA_SET_APP_MODE_INFO;

typedef enum {
    SecNameSamCompatible = 0,
    SecNameAlternateId = 1,
    SecNameFlat = 2,
    SecNameDN = 3,
    SecNameSPN = 4,
} SECPKG_NAME_TYPE;

typedef int PLSA_OPEN_SAM_USER;

typedef int PLSA_GET_USER_CREDENTIALS;

typedef int PLSA_GET_USER_AUTH_DATA;

typedef int PLSA_CLOSE_SAM_USER;

typedef int PLSA_GET_AUTH_DATA_FOR_USER;

typedef int PLSA_CONVERT_AUTH_DATA_TO_TOKEN;

typedef int PLSA_CRACK_SINGLE_NAME;

typedef int PLSA_AUDIT_ACCOUNT_LOGON;

typedef int PLSA_CLIENT_CALLBACK;

typedef int PLSA_REGISTER_CALLBACK;

typedef int PLSA_GET_EXTENDED_CALL_FLAGS;

typedef int SECPKG_EVENT_PACKAGE_CHANGE;

typedef int SECPKG_EVENT_ROLE_CHANGE;

typedef int SECPKG_EVENT_NOTIFY;

typedef int PLSA_UPDATE_PRIMARY_CREDENTIALS;

typedef int PLSA_PROTECT_MEMORY;

typedef int PLSA_OPEN_TOKEN_BY_LOGON_ID;

typedef int PLSA_EXPAND_AUTH_DATA_FOR_DOMAIN;

typedef enum {
    CredFetchDefault = 0,
    CredFetchDPAPI = 1,
    CredFetchForced = 2,
} CRED_FETCH;

typedef int PLSA_GET_SERVICE_ACCOUNT_PASSWORD;

typedef int PLSA_AUDIT_LOGON_EX;

typedef int PLSA_CHECK_PROTECTED_USER_BY_TOKEN;

typedef int PLSA_QUERY_CLIENT_REQUEST;

typedef int ENCRYPTED_CREDENTIALW;

typedef int CredReadFn;

typedef int CredReadDomainCredentialsFn;

typedef int CredFreeCredentialsFn;

typedef int CredWriteFn;

typedef int CrediUnmarshalandDecodeStringFn;

typedef int SEC_WINNT_AUTH_IDENTITY32;

typedef int SEC_WINNT_AUTH_IDENTITY_EX32;

typedef int LSA_SECPKG_FUNCTION_TABLE;

typedef int PLSA_LOCATE_PKG_BY_ID;

typedef int SECPKG_DLL_FUNCTIONS;

typedef int SpInitializeFn;

typedef int SpShutdownFn;

typedef int SpGetInfoFn;

typedef int SpGetExtendedInformationFn;

typedef int SpSetExtendedInformationFn;

typedef int PLSA_AP_LOGON_USER_EX2;

typedef int PLSA_AP_LOGON_USER_EX3;

typedef int PLSA_AP_PRE_LOGON_USER_SURROGATE;

typedef int PLSA_AP_POST_LOGON_USER_SURROGATE;

typedef int SpAcceptCredentialsFn;

typedef int SpAcquireCredentialsHandleFn;

typedef int SpFreeCredentialsHandleFn;

typedef int SpQueryCredentialsAttributesFn;

typedef int SpSetCredentialsAttributesFn;

typedef int SpAddCredentialsFn;

typedef int SpSaveCredentialsFn;

typedef int SpGetCredentialsFn;

typedef int SpDeleteCredentialsFn;

typedef int SpInitLsaModeContextFn;

typedef int SpDeleteContextFn;

typedef int SpApplyControlTokenFn;

typedef int SpAcceptLsaModeContextFn;

typedef int SpGetUserInfoFn;

typedef int SpQueryContextAttributesFn;

typedef int SpSetContextAttributesFn;

typedef int SpChangeAccountPasswordFn;

typedef int SpQueryMetaDataFn;

typedef int SpExchangeMetaDataFn;

typedef int SpGetCredUIContextFn;

typedef int SpUpdateCredentialsFn;

typedef int SpValidateTargetInfoFn;

typedef int LSA_AP_POST_LOGON_USER;

typedef int SpGetRemoteCredGuardLogonBufferFn;

typedef int SpGetRemoteCredGuardSupplementalCredsFn;

typedef int SpGetTbalSupplementalCredsFn;

typedef int SECPKG_FUNCTION_TABLE;

typedef int SpInstanceInitFn;

typedef int SpInitUserModeContextFn;

typedef int SpMakeSignatureFn;

typedef int SpVerifySignatureFn;

typedef int SpSealMessageFn;

typedef int SpUnsealMessageFn;

typedef int SpGetContextTokenFn;

typedef int SpExportSecurityContextFn;

typedef int SpImportSecurityContextFn;

typedef int SpCompleteAuthTokenFn;

typedef int SpFormatCredentialsFn;

typedef int SpMarshallSupplementalCredsFn;

typedef int SECPKG_USER_FUNCTION_TABLE;

typedef int SpLsaModeInitializeFn;

typedef int SpUserModeInitializeFn;

typedef enum {
    KSecPaged = 0,
    KSecNonPaged = 1,
} KSEC_CONTEXT_TYPE;

typedef int KSEC_LIST_ENTRY;

typedef int PKSEC_CREATE_CONTEXT_LIST;

typedef int PKSEC_INSERT_LIST_ENTRY;

typedef int PKSEC_REFERENCE_LIST_ENTRY;

typedef int PKSEC_DEREFERENCE_LIST_ENTRY;

typedef int PKSEC_SERIALIZE_WINNT_AUTH_DATA;

typedef int PKSEC_SERIALIZE_SCHANNEL_AUTH_DATA;

typedef int PKSEC_LOCATE_PKG_BY_ID;

typedef int SECPKG_KERNEL_FUNCTIONS;

typedef int KspInitPackageFn;

typedef int KspDeleteContextFn;

typedef int KspInitContextFn;

typedef int KspMakeSignatureFn;

typedef int KspVerifySignatureFn;

typedef int KspSealMessageFn;

typedef int KspUnsealMessageFn;

typedef int KspGetTokenFn;

typedef int KspQueryAttributesFn;

typedef int KspCompleteTokenFn;

typedef int KspMapHandleFn;

typedef int KspSetPagingModeFn;

typedef int KspSerializeAuthDataFn;

typedef int SECPKG_KERNEL_FUNCTION_TABLE;

typedef int SecPkgCred_SupportedAlgs;

typedef int SecPkgCred_CipherStrengths;

typedef int SecPkgCred_SupportedProtocols;

typedef int SecPkgCred_ClientCertPolicy;

typedef enum {
    TlsSignatureAlgorithm_Anonymous = 0,
    TlsSignatureAlgorithm_Rsa = 1,
    TlsSignatureAlgorithm_Dsa = 2,
    TlsSignatureAlgorithm_Ecdsa = 3,
} eTlsSignatureAlgorithm;

typedef enum {
    TlsHashAlgorithm_None = 0,
    TlsHashAlgorithm_Md5 = 1,
    TlsHashAlgorithm_Sha1 = 2,
    TlsHashAlgorithm_Sha224 = 3,
    TlsHashAlgorithm_Sha256 = 4,
    TlsHashAlgorithm_Sha384 = 5,
    TlsHashAlgorithm_Sha512 = 6,
} eTlsHashAlgorithm;

typedef int SecPkgContext_RemoteCredentialInfo;

typedef int SecPkgContext_LocalCredentialInfo;

typedef int SecPkgContext_ClientCertPolicyResult;

typedef int SecPkgContext_IssuerListInfoEx;

typedef int SecPkgContext_ConnectionInfo;

typedef int SecPkgContext_ConnectionInfoEx;

typedef int SecPkgContext_CipherInfo;

typedef int SecPkgContext_EapKeyBlock;

typedef int SecPkgContext_MappedCredAttr;

typedef int SecPkgContext_SessionInfo;

typedef int SecPkgContext_SessionAppData;

typedef int SecPkgContext_EapPrfInfo;

typedef int SecPkgContext_SupportedSignatures;

typedef int SecPkgContext_Certificates;

typedef int SecPkgContext_CertInfo;

typedef int SecPkgContext_UiInfo;

typedef int SecPkgContext_EarlyStart;

typedef int SecPkgContext_KeyingMaterialInfo;

typedef int SecPkgContext_KeyingMaterial;

typedef int SecPkgContext_KeyingMaterial_Inproc;

typedef int SecPkgContext_SrtpParameters;

typedef int SecPkgContext_TokenBinding;

typedef int SCHANNEL_CRED;

typedef int SEND_GENERIC_TLS_EXTENSION;

typedef int TLS_EXTENSION_SUBSCRIPTION;

typedef int SUBSCRIBE_GENERIC_TLS_EXTENSION;

typedef int SCHANNEL_CERT_HASH;

typedef int SCHANNEL_CERT_HASH_STORE;

typedef int SCHANNEL_ALERT_TOKEN;

typedef int SCHANNEL_SESSION_TOKEN;

typedef int SCHANNEL_CLIENT_SIGNATURE;

typedef int SSL_EMPTY_CACHE_FN_A;

typedef int SSL_EMPTY_CACHE_FN_W;

typedef int SSL_CREDENTIAL_CERTIFICATE;

typedef int SCH_CRED;

typedef int SCH_CRED_SECRET_CAPI;

typedef int SCH_CRED_SECRET_PRIVKEY;

typedef int SCH_CRED_PUBLIC_CERTCHAIN;

typedef int PctPublicKey;

typedef int X509Certificate;

typedef int SSL_CRACK_CERTIFICATE_FN;

typedef int SSL_FREE_CERTIFICATE_FN;

typedef int SslGetServerIdentityFn;

typedef int SCH_EXTENSION_DATA;

typedef enum {
    SCH_EXTENSIONS_OPTIONS_NONE = 0,
    SCH_NO_RECORD_HEADER = 1,
} SchGetExtensionsOptions;

typedef int SslGetExtensionsFn;

typedef int LOGON_HOURS;

typedef int SR_SECURITY_DESCRIPTOR;

typedef int USER_ALL_INFORMATION;

typedef int CLEAR_BLOCK;

typedef int USER_SESSION_KEY;

typedef enum {
    NetlogonInteractiveInformation = 1,
    NetlogonNetworkInformation = 2,
    NetlogonServiceInformation = 3,
    NetlogonGenericInformation = 4,
    NetlogonInteractiveTransitiveInformation = 5,
    NetlogonNetworkTransitiveInformation = 6,
    NetlogonServiceTransitiveInformation = 7,
} NETLOGON_LOGON_INFO_CLASS;

typedef int NETLOGON_LOGON_IDENTITY_INFO;

typedef int NETLOGON_INTERACTIVE_INFO;

typedef int NETLOGON_SERVICE_INFO;

typedef int NETLOGON_NETWORK_INFO;

typedef int NETLOGON_GENERIC_INFO;

typedef int MSV1_0_VALIDATION_INFO;

typedef enum {
    TOKENBINDING_TYPE_PROVIDED = 0,
    TOKENBINDING_TYPE_REFERRED = 1,
} TOKENBINDING_TYPE;

typedef enum {
    TOKENBINDING_EXTENSION_FORMAT_UNDEFINED = 0,
} TOKENBINDING_EXTENSION_FORMAT;

typedef enum {
    TOKENBINDING_KEY_PARAMETERS_TYPE_RSA2048_PKCS = 0,
    TOKENBINDING_KEY_PARAMETERS_TYPE_RSA2048_PSS = 1,
    TOKENBINDING_KEY_PARAMETERS_TYPE_ECDSAP256 = 2,
    TOKENBINDING_KEY_PARAMETERS_TYPE_ANYEXISTING = 255,
} TOKENBINDING_KEY_PARAMETERS_TYPE;

typedef int TOKENBINDING_IDENTIFIER;

typedef int TOKENBINDING_RESULT_DATA;

typedef int TOKENBINDING_RESULT_LIST;

typedef int TOKENBINDING_KEY_TYPES;

typedef enum {
    NameUnknown = 0,
    NameFullyQualifiedDN = 1,
    NameSamCompatible = 2,
    NameDisplay = 3,
    NameUniqueId = 6,
    NameCanonical = 7,
    NameUserPrincipal = 8,
    NameCanonicalEx = 9,
    NameServicePrincipal = 10,
    NameDnsDomain = 12,
    NameGivenName = 13,
    NameSurname = 14,
} EXTENDED_NAME_FORMAT;

typedef enum {
    SL_DATA_NONE = 0,
    SL_DATA_SZ = 1,
    SL_DATA_DWORD = 4,
    SL_DATA_BINARY = 3,
    SL_DATA_MULTI_SZ = 7,
    SL_DATA_SUM = 100,
} SLDATATYPE;

typedef enum {
    SL_ID_APPLICATION = 0,
    SL_ID_PRODUCT_SKU = 1,
    SL_ID_LICENSE_FILE = 2,
    SL_ID_LICENSE = 3,
    SL_ID_PKEY = 4,
    SL_ID_ALL_LICENSES = 5,
    SL_ID_ALL_LICENSE_FILES = 6,
    SL_ID_STORE_TOKEN = 7,
    SL_ID_LAST = 8,
} SLIDTYPE;

typedef enum {
    SL_LICENSING_STATUS_UNLICENSED = 0,
    SL_LICENSING_STATUS_LICENSED = 1,
    SL_LICENSING_STATUS_IN_GRACE_PERIOD = 2,
    SL_LICENSING_STATUS_NOTIFICATION = 3,
    SL_LICENSING_STATUS_LAST = 4,
} SLLICENSINGSTATUS;

typedef int SL_LICENSING_STATUS;

typedef enum {
    SL_ACTIVATION_TYPE_DEFAULT = 0,
    SL_ACTIVATION_TYPE_ACTIVE_DIRECTORY = 1,
} SL_ACTIVATION_TYPE;

typedef int SL_ACTIVATION_INFO_HEADER;

typedef int SL_AD_ACTIVATION_INFO;

typedef enum {
    SL_REFERRALTYPE_SKUID = 0,
    SL_REFERRALTYPE_APPID = 1,
    SL_REFERRALTYPE_OVERRIDE_SKUID = 2,
    SL_REFERRALTYPE_OVERRIDE_APPID = 3,
    SL_REFERRALTYPE_BEST_MATCH = 4,
} SLREFERRALTYPE;

typedef enum {
    SL_GEN_STATE_IS_GENUINE = 0,
    SL_GEN_STATE_INVALID_LICENSE = 1,
    SL_GEN_STATE_TAMPERED = 2,
    SL_GEN_STATE_OFFLINE = 3,
    SL_GEN_STATE_LAST = 4,
} SL_GENUINE_STATE;

typedef int SL_NONGENUINE_UI_OPTIONS;

typedef int SL_SYSTEM_POLICY_INFORMATION;


//--------------------------------------------------------------------------------
// Section: Functions (211)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaRegisterLogonProcess();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaLogonUser();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaLookupAuthenticationPackage();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaFreeReturnBuffer();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaCallAuthenticationPackage();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaDeregisterLogonProcess();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaConnectUntrusted();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaFreeMemory();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaClose();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaEnumerateLogonSessions();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaGetLogonSessionData();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaOpenPolicy();

/*NTSTATUS*/void LsaSetCAPs();

// TODO: this type is limited to platform 'windows8.0'
/*NTSTATUS*/void LsaGetAppliedCAPIDs();

// TODO: this type is limited to platform 'windows8.0'
/*NTSTATUS*/void LsaQueryCAPs();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaQueryInformationPolicy();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaSetInformationPolicy();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaQueryDomainInformationPolicy();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaSetDomainInformationPolicy();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaRegisterPolicyChangeNotification();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaUnregisterPolicyChangeNotification();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaEnumerateTrustedDomains();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaLookupNames();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaLookupNames2();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaLookupSids();

// TODO: this type is limited to platform 'windows8.0'
/*NTSTATUS*/void LsaLookupSids2();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaEnumerateAccountsWithUserRight();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaEnumerateAccountRights();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaAddAccountRights();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaRemoveAccountRights();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaOpenTrustedDomainByName();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaQueryTrustedDomainInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaSetTrustedDomainInformation();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaDeleteTrustedDomain();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaQueryTrustedDomainInfoByName();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaSetTrustedDomainInfoByName();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaEnumerateTrustedDomainsEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaCreateTrustedDomainEx();

// TODO: this type is limited to platform 'windowsServer2003'
/*NTSTATUS*/void LsaQueryForestTrustInformation();

// TODO: this type is limited to platform 'windowsServer2003'
/*NTSTATUS*/void LsaSetForestTrustInformation();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaStorePrivateData();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void LsaRetrievePrivateData();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void LsaNtStatusToWinError();

/*BOOLEAN*/void SystemFunction036();

/*NTSTATUS*/void SystemFunction040();

/*NTSTATUS*/void SystemFunction041();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOLEAN*/void AuditSetSystemPolicy();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOLEAN*/void AuditSetPerUserPolicy();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOLEAN*/void AuditQuerySystemPolicy();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOLEAN*/void AuditQueryPerUserPolicy();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOLEAN*/void AuditEnumeratePerUserPolicy();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOLEAN*/void AuditComputeEffectivePolicyBySid();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOLEAN*/void AuditComputeEffectivePolicyByToken();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOLEAN*/void AuditEnumerateCategories();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOLEAN*/void AuditEnumerateSubCategories();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOLEAN*/void AuditLookupCategoryNameW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOLEAN*/void AuditLookupCategoryNameA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOLEAN*/void AuditLookupSubCategoryNameW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOLEAN*/void AuditLookupSubCategoryNameA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOLEAN*/void AuditLookupCategoryIdFromCategoryGuid();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOLEAN*/void AuditLookupCategoryGuidFromCategoryId();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOLEAN*/void AuditSetSecurity();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOLEAN*/void AuditQuerySecurity();

// TODO: this type is limited to platform 'windows6.1'
/*BOOLEAN*/void AuditSetGlobalSaclW();

// TODO: this type is limited to platform 'windows6.1'
/*BOOLEAN*/void AuditSetGlobalSaclA();

// TODO: this type is limited to platform 'windows6.1'
/*BOOLEAN*/void AuditQueryGlobalSaclW();

// TODO: this type is limited to platform 'windows6.1'
/*BOOLEAN*/void AuditQueryGlobalSaclA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void AuditFree();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void AcquireCredentialsHandleW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void AcquireCredentialsHandleA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void FreeCredentialsHandle();

/*i32*/void AddCredentialsW();

/*i32*/void AddCredentialsA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void ChangeAccountPasswordW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void ChangeAccountPasswordA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void InitializeSecurityContextW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void InitializeSecurityContextA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void AcceptSecurityContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void CompleteAuthToken();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void ImpersonateSecurityContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void RevertSecurityContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void QuerySecurityContextToken();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void DeleteSecurityContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void ApplyControlToken();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void QueryContextAttributesW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void QueryContextAttributesExW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void QueryContextAttributesA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void QueryContextAttributesExA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void SetContextAttributesW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void SetContextAttributesA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void QueryCredentialsAttributesW();

/*i32*/void QueryCredentialsAttributesExW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void QueryCredentialsAttributesA();

/*i32*/void QueryCredentialsAttributesExA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void SetCredentialsAttributesW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void SetCredentialsAttributesA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void FreeContextBuffer();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void MakeSignature();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void VerifySignature();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void EncryptMessage();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void DecryptMessage();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void EnumerateSecurityPackagesW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void EnumerateSecurityPackagesA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void QuerySecurityPackageInfoW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void QuerySecurityPackageInfoA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void ExportSecurityContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void ImportSecurityContextW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void ImportSecurityContextA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*SecurityFunctionTableA*/void InitSecurityInterfaceA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*SecurityFunctionTableW*/void InitSecurityInterfaceW();

// TODO: this type is limited to platform 'windowsServer2003'
/*i32*/void SaslEnumerateProfilesA();

// TODO: this type is limited to platform 'windowsServer2003'
/*i32*/void SaslEnumerateProfilesW();

// TODO: this type is limited to platform 'windowsServer2003'
/*i32*/void SaslGetProfilePackageA();

// TODO: this type is limited to platform 'windowsServer2003'
/*i32*/void SaslGetProfilePackageW();

// TODO: this type is limited to platform 'windowsServer2003'
/*i32*/void SaslIdentifyPackageA();

// TODO: this type is limited to platform 'windowsServer2003'
/*i32*/void SaslIdentifyPackageW();

// TODO: this type is limited to platform 'windowsServer2003'
/*i32*/void SaslInitializeSecurityContextW();

// TODO: this type is limited to platform 'windowsServer2003'
/*i32*/void SaslInitializeSecurityContextA();

// TODO: this type is limited to platform 'windowsServer2003'
/*i32*/void SaslAcceptSecurityContext();

// TODO: this type is limited to platform 'windowsServer2003'
/*i32*/void SaslSetContextOption();

// TODO: this type is limited to platform 'windowsServer2003'
/*i32*/void SaslGetContextOption();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void SspiPromptForCredentialsW();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void SspiPromptForCredentialsA();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void SspiPrepareForCredRead();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void SspiPrepareForCredWrite();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void SspiEncryptAuthIdentity();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void SspiEncryptAuthIdentityEx();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void SspiDecryptAuthIdentity();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void SspiDecryptAuthIdentityEx();

// TODO: this type is limited to platform 'windows6.1'
/*BOOLEAN*/void SspiIsAuthIdentityEncrypted();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void SspiEncodeAuthIdentityAsStrings();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void SspiValidateAuthIdentity();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void SspiCopyAuthIdentity();

// TODO: this type is limited to platform 'windows6.1'
/*void*/void SspiFreeAuthIdentity();

// TODO: this type is limited to platform 'windows6.1'
/*void*/void SspiZeroAuthIdentity();

// TODO: this type is limited to platform 'windows6.1'
/*void*/void SspiLocalFree();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void SspiEncodeStringsAsAuthIdentity();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void SspiCompareAuthIdentities();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void SspiMarshalAuthIdentity();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void SspiUnmarshalAuthIdentity();

// TODO: this type is limited to platform 'windows6.1'
/*BOOLEAN*/void SspiIsPromptingNeeded();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void SspiGetTargetHostName();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void SspiExcludePackage();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void AddSecurityPackageA();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void AddSecurityPackageW();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void DeleteSecurityPackageA();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void DeleteSecurityPackageW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void CredMarshalTargetInfo();

/*NTSTATUS*/void CredUnmarshalTargetInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SslEmptyCacheA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SslEmptyCacheW();

/*void*/void SslGenerateRandomBits();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SslCrackCertificate();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void SslFreeCertificate();

/*u32*/void SslGetMaximumKeySize();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void SslGetServerIdentity();

/*i32*/void SslGetExtensions();

// TODO: this type is limited to platform 'windows10.0.10240'
/*i32*/void TokenBindingGenerateBinding();

// TODO: this type is limited to platform 'windows10.0.10240'
/*i32*/void TokenBindingGenerateMessage();

// TODO: this type is limited to platform 'windows10.0.10240'
/*i32*/void TokenBindingVerifyMessage();

// TODO: this type is limited to platform 'windows10.0.10240'
/*i32*/void TokenBindingGetKeyTypesClient();

// TODO: this type is limited to platform 'windows10.0.10240'
/*i32*/void TokenBindingGetKeyTypesServer();

// TODO: this type is limited to platform 'windows10.0.10240'
/*i32*/void TokenBindingDeleteBinding();

// TODO: this type is limited to platform 'windows10.0.10240'
/*i32*/void TokenBindingDeleteAllBindings();

// TODO: this type is limited to platform 'windows10.0.10240'
/*i32*/void TokenBindingGenerateID();

/*i32*/void TokenBindingGenerateIDForUri();

/*i32*/void TokenBindingGetHighestSupportedVersion();

// TODO: this type is limited to platform 'windows5.0'
/*BOOLEAN*/void GetUserNameExA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOLEAN*/void GetUserNameExW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOLEAN*/void GetComputerObjectNameA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOLEAN*/void GetComputerObjectNameW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOLEAN*/void TranslateNameA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOLEAN*/void TranslateNameW();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLOpen();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLClose();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLInstallProofOfPurchase();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLUninstallProofOfPurchase();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLInstallLicense();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLUninstallLicense();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLConsumeRight();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLGetProductSkuInformation();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLGetPKeyInformation();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLGetLicenseInformation();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLGetLicensingStatusInformation();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLGetPolicyInformation();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLGetPolicyInformationDWORD();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLGetServiceInformation();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLGetApplicationInformation();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLActivateProduct();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLGetServerStatus();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLGenerateOfflineInstallationId();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLGenerateOfflineInstallationIdEx();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLDepositOfflineConfirmationId();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLDepositOfflineConfirmationIdEx();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLGetPKeyId();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLGetInstalledProductKeyIds();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLSetCurrentProductKey();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLGetSLIDList();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLGetLicenseFileId();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLGetLicense();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLFireEvent();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLRegisterEvent();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLUnregisterEvent();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void SLGetWindowsInformation();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void SLGetWindowsInformationDWORD();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void SLIsGenuineLocal();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void SLAcquireGenuineTicket();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void SLSetGenuineInformation();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void SLGetReferralInformation();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void SLGetGenuineInformation();

// TODO: this type is limited to platform 'windows10.0.10240'
/*HRESULT*/void SLQueryLicenseValueFromApp();

