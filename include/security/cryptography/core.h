// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (1490)
//--------------------------------------------------------------------------------
#define CERT_COMPARE_SHIFT (INT)16
#define BCRYPT_OBJECT_ALIGNMENT (UINT)16
#define KDF_HASH_ALGORITHM (UINT)0
#define KDF_SECRET_PREPEND (UINT)1
#define KDF_SECRET_APPEND (UINT)2
#define KDF_HMAC_KEY (UINT)3
#define KDF_TLS_PRF_LABEL (UINT)4
#define KDF_TLS_PRF_SEED (UINT)5
#define KDF_SECRET_HANDLE (UINT)6
#define KDF_TLS_PRF_PROTOCOL (UINT)7
#define KDF_ALGORITHMID (UINT)8
#define KDF_PARTYUINFO (UINT)9
#define KDF_PARTYVINFO (UINT)10
#define KDF_SUPPPUBINFO (UINT)11
#define KDF_SUPPPRIVINFO (UINT)12
#define KDF_LABEL (UINT)13
#define KDF_CONTEXT (UINT)14
#define KDF_SALT (UINT)15
#define KDF_ITERATION_COUNT (UINT)16
#define KDF_GENERIC_PARAMETER (UINT)17
#define KDF_KEYBITLENGTH (UINT)18
#define KDF_HKDF_SALT (UINT)19
#define KDF_HKDF_INFO (UINT)20
#define KDF_USE_SECRET_AS_HMAC_KEY_FLAG (UINT)1
#define BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_VERSION (UINT)1
#define BCRYPT_AUTH_MODE_CHAIN_CALLS_FLAG (UINT)1
#define BCRYPT_AUTH_MODE_IN_PROGRESS_FLAG (UINT)2
#define BCRYPT_SUPPORTED_PAD_ROUTER (UINT)1
#define BCRYPT_SUPPORTED_PAD_PKCS1_ENC (UINT)2
#define BCRYPT_SUPPORTED_PAD_PKCS1_SIG (UINT)4
#define BCRYPT_SUPPORTED_PAD_OAEP (UINT)8
#define BCRYPT_SUPPORTED_PAD_PSS (UINT)16
#define BCRYPT_BLOCK_PADDING (UINT)1
#define BCRYPT_PAD_PKCS1_OPTIONAL_HASH_OID (UINT)16
#define BCRYPTBUFFER_VERSION (UINT)0
#define BCRYPT_ECDH_PUBLIC_P256_MAGIC (UINT)827016005
#define BCRYPT_ECDH_PRIVATE_P256_MAGIC (UINT)843793221
#define BCRYPT_ECDH_PUBLIC_P384_MAGIC (UINT)860570437
#define BCRYPT_ECDH_PRIVATE_P384_MAGIC (UINT)877347653
#define BCRYPT_ECDH_PUBLIC_P521_MAGIC (UINT)894124869
#define BCRYPT_ECDH_PRIVATE_P521_MAGIC (UINT)910902085
#define BCRYPT_ECDH_PUBLIC_GENERIC_MAGIC (UINT)1347109701
#define BCRYPT_ECDH_PRIVATE_GENERIC_MAGIC (UINT)1447772997
#define BCRYPT_ECDSA_PUBLIC_P256_MAGIC (UINT)827540293
#define BCRYPT_ECDSA_PRIVATE_P256_MAGIC (UINT)844317509
#define BCRYPT_ECDSA_PUBLIC_P384_MAGIC (UINT)861094725
#define BCRYPT_ECDSA_PRIVATE_P384_MAGIC (UINT)877871941
#define BCRYPT_ECDSA_PUBLIC_P521_MAGIC (UINT)894649157
#define BCRYPT_ECDSA_PRIVATE_P521_MAGIC (UINT)911426373
#define BCRYPT_ECDSA_PUBLIC_GENERIC_MAGIC (UINT)1346650949
#define BCRYPT_ECDSA_PRIVATE_GENERIC_MAGIC (UINT)1447314245
#define BCRYPT_ECC_FULLKEY_BLOB_V1 (UINT)1
#define BCRYPT_DH_PARAMETERS_MAGIC (UINT)1297107012
#define BCRYPT_DSA_PUBLIC_MAGIC_V2 (UINT)843206724
#define BCRYPT_DSA_PRIVATE_MAGIC_V2 (UINT)844517444
#define BCRYPT_KEY_DATA_BLOB_MAGIC (UINT)1296188491
#define BCRYPT_KEY_DATA_BLOB_VERSION1 (UINT)1
#define BCRYPT_DSA_PARAMETERS_MAGIC (UINT)1297109828
#define BCRYPT_DSA_PARAMETERS_MAGIC_V2 (UINT)843927620
#define BCRYPT_ECC_PARAMETERS_MAGIC (UINT)1346585413
#define BCRYPT_KEY_DERIVATION_INTERFACE (UINT)7
#define BCRYPT_MD2_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)1
#define BCRYPT_MD4_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)17
#define BCRYPT_MD5_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)33
#define BCRYPT_SHA1_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)49
#define BCRYPT_SHA256_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)65
#define BCRYPT_SHA384_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)81
#define BCRYPT_SHA512_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)97
#define BCRYPT_RC4_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)113
#define BCRYPT_RNG_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)129
#define BCRYPT_HMAC_MD5_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)145
#define BCRYPT_HMAC_SHA1_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)161
#define BCRYPT_HMAC_SHA256_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)177
#define BCRYPT_HMAC_SHA384_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)193
#define BCRYPT_HMAC_SHA512_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)209
#define BCRYPT_RSA_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)225
#define BCRYPT_ECDSA_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)241
#define BCRYPT_AES_CMAC_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)257
#define BCRYPT_AES_GMAC_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)273
#define BCRYPT_HMAC_MD2_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)289
#define BCRYPT_HMAC_MD4_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)305
#define BCRYPT_3DES_CBC_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)321
#define BCRYPT_3DES_ECB_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)337
#define BCRYPT_3DES_CFB_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)353
#define BCRYPT_3DES_112_CBC_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)369
#define BCRYPT_3DES_112_ECB_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)385
#define BCRYPT_3DES_112_CFB_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)401
#define BCRYPT_AES_CBC_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)417
#define BCRYPT_AES_ECB_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)433
#define BCRYPT_AES_CFB_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)449
#define BCRYPT_AES_CCM_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)465
#define BCRYPT_AES_GCM_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)481
#define BCRYPT_DES_CBC_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)497
#define BCRYPT_DES_ECB_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)513
#define BCRYPT_DES_CFB_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)529
#define BCRYPT_DESX_CBC_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)545
#define BCRYPT_DESX_ECB_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)561
#define BCRYPT_DESX_CFB_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)577
#define BCRYPT_RC2_CBC_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)593
#define BCRYPT_RC2_ECB_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)609
#define BCRYPT_RC2_CFB_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)625
#define BCRYPT_DH_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)641
#define BCRYPT_ECDH_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)657
#define BCRYPT_ECDH_P256_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)673
#define BCRYPT_ECDH_P384_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)689
#define BCRYPT_ECDH_P521_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)705
#define BCRYPT_DSA_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)721
#define BCRYPT_ECDSA_P256_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)737
#define BCRYPT_ECDSA_P384_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)753
#define BCRYPT_ECDSA_P521_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)769
#define BCRYPT_RSA_SIGN_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)785
#define BCRYPT_CAPI_KDF_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)801
#define BCRYPT_PBKDF2_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)817
#define BCRYPT_SP800108_CTR_HMAC_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)833
#define BCRYPT_SP80056A_CONCAT_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)849
#define BCRYPT_TLS1_1_KDF_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)865
#define BCRYPT_TLS1_2_KDF_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)881
#define BCRYPT_XTS_AES_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)897
#define BCRYPT_HKDF_ALG_HANDLE (BCRYPT_ALG_HANDLE)(UINT)913
#define BCRYPT_CAPI_AES_FLAG (UINT)16
#define BCRYPT_MULTI_FLAG (UINT)64
#define BCRYPT_TLS_CBC_HMAC_VERIFY_FLAG (UINT)4
#define BCRYPT_BUFFERS_LOCKED_FLAG (UINT)64
#define BCRYPT_EXTENDED_KEYSIZE (UINT)128
#define BCRYPT_ENABLE_INCOMPATIBLE_FIPS_CHECKS (UINT)256
#define BCRYPT_KEY_DERIVATION_OPERATION (UINT)64
#define BCRYPT_PUBLIC_KEY_FLAG (UINT)1
#define BCRYPT_PRIVATE_KEY_FLAG (UINT)2
#define BCRYPT_NO_KEY_VALIDATION (UINT)8
#define BCRYPT_RNG_USE_ENTROPY_IN_BUFFER (UINT)1
#define BCRYPT_USE_SYSTEM_PREFERRED_RNG (UINT)2
#define BCRYPT_HASH_INTERFACE_MAJORVERSION_2 (UINT)2
#define CRYPT_OVERWRITE (UINT)1
#define CRYPT_PRIORITY_TOP (UINT)0
#define CRYPT_PRIORITY_BOTTOM (UINT)4294967295
#define CRYTPDLG_FLAGS_MASK (UINT)4278190080
#define CRYPTDLG_REVOCATION_DEFAULT (UINT)0
#define CRYPTDLG_REVOCATION_ONLINE (UINT)2147483648
#define CRYPTDLG_REVOCATION_CACHE (UINT)1073741824
#define CRYPTDLG_REVOCATION_NONE (UINT)536870912
#define CRYPTDLG_CACHE_ONLY_URL_RETRIEVAL (UINT)268435456
#define CRYPTDLG_DISABLE_AIA (UINT)134217728
#define CRYPTDLG_POLICY_MASK (UINT)65535
#define POLICY_IGNORE_NON_CRITICAL_BC (UINT)1
#define CRYPTDLG_ACTION_MASK (UINT)4294901760
#define ACTION_REVOCATION_DEFAULT_ONLINE (UINT)65536
#define ACTION_REVOCATION_DEFAULT_CACHE (UINT)131072
#define CERT_DISPWELL_SELECT (UINT)1
#define CERT_DISPWELL_TRUST_CA_CERT (UINT)2
#define CERT_DISPWELL_TRUST_LEAF_CERT (UINT)3
#define CERT_DISPWELL_TRUST_ADD_CA_CERT (UINT)4
#define CERT_DISPWELL_TRUST_ADD_LEAF_CERT (UINT)5
#define CERT_DISPWELL_DISTRUST_CA_CERT (UINT)6
#define CERT_DISPWELL_DISTRUST_LEAF_CERT (UINT)7
#define CERT_DISPWELL_DISTRUST_ADD_CA_CERT (UINT)8
#define CERT_DISPWELL_DISTRUST_ADD_LEAF_CERT (UINT)9
#define CSS_SELECTCERT_MASK (UINT)16777215
#define SELCERT_PROPERTIES (UINT)100
#define SELCERT_FINEPRINT (UINT)101
#define SELCERT_CERTLIST (UINT)102
#define SELCERT_ISSUED_TO (UINT)103
#define SELCERT_VALIDITY (UINT)104
#define SELCERT_ALGORITHM (UINT)105
#define SELCERT_SERIAL_NUM (UINT)106
#define SELCERT_THUMBPRINT (UINT)107
#define CM_VIEWFLAGS_MASK (UINT)16777215
#define CERTVIEW_CRYPTUI_LPARAM (UINT)8388608
#define CERT_FILTER_OP_EXISTS (UINT)1
#define CERT_FILTER_OP_NOT_EXISTS (UINT)2
#define CERT_FILTER_OP_EQUALITY (UINT)3
#define CERT_FILTER_INCLUDE_V1_CERTS (UINT)1
#define CERT_FILTER_VALID_TIME_RANGE (UINT)2
#define CERT_FILTER_VALID_SIGNATURE (UINT)4
#define CERT_FILTER_LEAF_CERTS_ONLY (UINT)8
#define CERT_FILTER_ISSUER_CERTS_ONLY (UINT)16
#define CERT_FILTER_KEY_EXISTS (UINT)32
#define CERT_VALIDITY_BEFORE_START (UINT)1
#define CERT_VALIDITY_AFTER_END (UINT)2
#define CERT_VALIDITY_SIGNATURE_FAILS (UINT)4
#define CERT_VALIDITY_CERTIFICATE_REVOKED (UINT)8
#define CERT_VALIDITY_KEY_USAGE_EXT_FAILURE (UINT)16
#define CERT_VALIDITY_EXTENDED_USAGE_FAILURE (UINT)32
#define CERT_VALIDITY_NAME_CONSTRAINTS_FAILURE (UINT)64
#define CERT_VALIDITY_UNKNOWN_CRITICAL_EXTENSION (UINT)128
#define CERT_VALIDITY_ISSUER_INVALID (UINT)256
#define CERT_VALIDITY_OTHER_EXTENSION_FAILURE (UINT)512
#define CERT_VALIDITY_PERIOD_NESTING_FAILURE (UINT)1024
#define CERT_VALIDITY_OTHER_ERROR (UINT)2048
#define CERT_VALIDITY_ISSUER_DISTRUST (UINT)33554432
#define CERT_VALIDITY_EXPLICITLY_DISTRUSTED (UINT)16777216
#define CERT_VALIDITY_NO_ISSUER_CERT_FOUND (UINT)268435456
#define CERT_VALIDITY_NO_CRL_FOUND (UINT)536870912
#define CERT_VALIDITY_CRL_OUT_OF_DATE (UINT)1073741824
#define CERT_VALIDITY_NO_TRUST_DATA (UINT)2147483648
#define CERT_VALIDITY_MASK_TRUST (UINT)4294901760
#define CERT_VALIDITY_MASK_VALIDITY (UINT)65535
#define CERT_TRUST_MASK (UINT)16777215
#define CERT_TRUST_DO_FULL_SEARCH (UINT)1
#define CERT_TRUST_PERMIT_MISSING_CRLS (UINT)2
#define CERT_TRUST_DO_FULL_TRUST (UINT)5
#define CERT_CREDENTIAL_PROVIDER_ID (INT)-509
#define CRYPTUI_SELECT_ISSUEDTO_COLUMN (UINT64)1
#define CRYPTUI_SELECT_ISSUEDBY_COLUMN (UINT64)2
#define CRYPTUI_SELECT_INTENDEDUSE_COLUMN (UINT64)4
#define CRYPTUI_SELECT_FRIENDLYNAME_COLUMN (UINT64)8
#define CRYPTUI_SELECT_LOCATION_COLUMN (UINT64)16
#define CRYPTUI_SELECT_EXPIRATION_COLUMN (UINT64)32
#define CRYPTUI_CERT_MGR_TAB_MASK (UINT)15
#define CRYPTUI_CERT_MGR_PUBLISHER_TAB (UINT)4
#define CRYPTUI_CERT_MGR_SINGLE_TAB_FLAG (UINT)32768
#define CRYPTUI_WIZ_DIGITAL_SIGN_EXCLUDE_PAGE_HASHES (UINT)2
#define CRYPTUI_WIZ_DIGITAL_SIGN_INCLUDE_PAGE_HASHES (UINT)4
#define CRYPTUI_WIZ_EXPORT_FORMAT_SERIALIZED_CERT_STORE (UINT)5
#define CRYPT_XML_BLOB_MAX (UINT)2147483640
#define CRYPT_XML_ID_MAX (UINT)256
#define CRYPT_XML_SIGNATURES_MAX (UINT)16
#define CRYPT_XML_TRANSFORM_MAX (UINT)16
#define CRYPT_XML_SIGNATURE_VALUE_MAX (UINT)2048
#define CRYPT_XML_DIGEST_VALUE_MAX (UINT)128
#define CRYPT_XML_OBJECTS_MAX (UINT)256
#define CRYPT_XML_REFERENCES_MAX (UINT)32760
#define CRYPT_XML_E_BASE (HRESULT)(INT)-2146885376
#define CRYPT_XML_E_LARGE (HRESULT)(INT)-2146885375
#define CRYPT_XML_E_TOO_MANY_TRANSFORMS (HRESULT)(INT)-2146885374
#define CRYPT_XML_E_ENCODING (HRESULT)(INT)-2146885373
#define CRYPT_XML_E_ALGORITHM (HRESULT)(INT)-2146885372
#define CRYPT_XML_E_TRANSFORM (HRESULT)(INT)-2146885371
#define CRYPT_XML_E_HANDLE (HRESULT)(INT)-2146885370
#define CRYPT_XML_E_OPERATION (HRESULT)(INT)-2146885369
#define CRYPT_XML_E_UNRESOLVED_REFERENCE (HRESULT)(INT)-2146885368
#define CRYPT_XML_E_INVALID_DIGEST (HRESULT)(INT)-2146885367
#define CRYPT_XML_E_INVALID_SIGNATURE (HRESULT)(INT)-2146885366
#define CRYPT_XML_E_HASH_FAILED (HRESULT)(INT)-2146885365
#define CRYPT_XML_E_SIGN_FAILED (HRESULT)(INT)-2146885364
#define CRYPT_XML_E_VERIFY_FAILED (HRESULT)(INT)-2146885363
#define CRYPT_XML_E_TOO_MANY_SIGNATURES (HRESULT)(INT)-2146885362
#define CRYPT_XML_E_INVALID_KEYVALUE (HRESULT)(INT)-2146885361
#define CRYPT_XML_E_UNEXPECTED_XML (HRESULT)(INT)-2146885360
#define CRYPT_XML_E_SIGNER (HRESULT)(INT)-2146885359
#define CRYPT_XML_E_NON_UNIQUE_ID (HRESULT)(INT)-2146885358
#define CRYPT_XML_E_LAST (HRESULT)(INT)-2146885358
#define CRYPT_XML_FLAG_ALWAYS_RETURN_ENCODED_OBJECT (UINT)1073741824
#define CRYPT_XML_FLAG_ENFORCE_ID_NCNAME_FORMAT (UINT)536870912
#define CRYPT_XML_FLAG_ENFORCE_ID_NAME_FORMAT (UINT)134217728
#define CRYPT_XML_FLAG_ECDSA_DSIG11 (UINT)67108864
#define CRYPT_XML_STATUS_NO_ERROR (UINT)0
#define CRYPT_XML_FLAG_ADD_OBJECT_CREATE_COPY (UINT)1
#define CRYPT_XML_FLAG_CREATE_REFERENCE_AS_OBJECT (UINT)1
#define CRYPT_XML_DIGEST_REFERENCE_DATA_TRANSFORMED (UINT)1
#define CRYPT_XML_GROUP_ID_HASH (UINT)1
#define CRYPT_XML_GROUP_ID_SIGN (UINT)2
#define CRYPT_XML_ALGORITHM_INFO_FIND_BY_URI (UINT)1
#define CRYPT_XML_ALGORITHM_INFO_FIND_BY_NAME (UINT)2
#define CRYPT_XML_ALGORITHM_INFO_FIND_BY_CNG_ALGID (UINT)3
#define CRYPT_XML_ALGORITHM_INFO_FIND_BY_CNG_SIGN_ALGID (UINT)4
#define NCRYPT_MAX_KEY_NAME_LENGTH (UINT)512
#define NCRYPT_MAX_ALG_ID_LENGTH (UINT)512
#define NCRYPT_KEY_PROTECTION_INTERFACE (UINT)65540
#define NCRYPTBUFFER_VERSION (UINT)0
#define NCRYPTBUFFER_EMPTY (UINT)0
#define NCRYPTBUFFER_DATA (UINT)1
#define NCRYPTBUFFER_PROTECTION_DESCRIPTOR_STRING (UINT)3
#define NCRYPTBUFFER_PROTECTION_FLAGS (UINT)4
#define NCRYPTBUFFER_SSL_CLIENT_RANDOM (UINT)20
#define NCRYPTBUFFER_SSL_SERVER_RANDOM (UINT)21
#define NCRYPTBUFFER_SSL_HIGHEST_VERSION (UINT)22
#define NCRYPTBUFFER_SSL_CLEAR_KEY (UINT)23
#define NCRYPTBUFFER_SSL_KEY_ARG_DATA (UINT)24
#define NCRYPTBUFFER_SSL_SESSION_HASH (UINT)25
#define NCRYPTBUFFER_PKCS_OID (UINT)40
#define NCRYPTBUFFER_PKCS_ALG_OID (UINT)41
#define NCRYPTBUFFER_PKCS_ALG_PARAM (UINT)42
#define NCRYPTBUFFER_PKCS_ALG_ID (UINT)43
#define NCRYPTBUFFER_PKCS_ATTRS (UINT)44
#define NCRYPTBUFFER_PKCS_KEY_NAME (UINT)45
#define NCRYPTBUFFER_PKCS_SECRET (UINT)46
#define NCRYPTBUFFER_CERT_BLOB (UINT)47
#define NCRYPTBUFFER_CLAIM_IDBINDING_NONCE (UINT)48
#define NCRYPTBUFFER_CLAIM_KEYATTESTATION_NONCE (UINT)49
#define NCRYPTBUFFER_KEY_PROPERTY_FLAGS (UINT)50
#define NCRYPTBUFFER_ATTESTATIONSTATEMENT_BLOB (UINT)51
#define NCRYPTBUFFER_ATTESTATION_CLAIM_TYPE (UINT)52
#define NCRYPTBUFFER_ATTESTATION_CLAIM_CHALLENGE_REQUIRED (UINT)53
#define NCRYPTBUFFER_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS (UINT)54
#define NCRYPTBUFFER_ECC_CURVE_NAME (UINT)60
#define NCRYPTBUFFER_ECC_PARAMETERS (UINT)61
#define NCRYPTBUFFER_TPM_SEAL_PASSWORD (UINT)70
#define NCRYPTBUFFER_TPM_SEAL_POLICYINFO (UINT)71
#define NCRYPTBUFFER_TPM_SEAL_TICKET (UINT)72
#define NCRYPTBUFFER_TPM_SEAL_NO_DA_PROTECTION (UINT)73
#define NCRYPTBUFFER_TPM_PLATFORM_CLAIM_PCR_MASK (UINT)80
#define NCRYPTBUFFER_TPM_PLATFORM_CLAIM_NONCE (UINT)81
#define NCRYPTBUFFER_TPM_PLATFORM_CLAIM_STATIC_CREATE (UINT)82
#define NCRYPT_CIPHER_NO_PADDING_FLAG (UINT)0
#define NCRYPT_CIPHER_BLOCK_PADDING_FLAG (UINT)1
#define NCRYPT_CIPHER_OTHER_PADDING_FLAG (UINT)2
#define NCRYPT_PLATFORM_ATTEST_MAGIC (UINT)1146110288
#define NCRYPT_KEY_ATTEST_MAGIC (UINT)1146110283
#define NCRYPT_CLAIM_AUTHORITY_ONLY (UINT)1
#define NCRYPT_CLAIM_SUBJECT_ONLY (UINT)2
#define NCRYPT_CLAIM_WEB_AUTH_SUBJECT_ONLY (UINT)258
#define NCRYPT_CLAIM_AUTHORITY_AND_SUBJECT (UINT)3
#define NCRYPT_CLAIM_VSM_KEY_ATTESTATION_STATEMENT (UINT)4
#define NCRYPT_CLAIM_UNKNOWN (UINT)4096
#define NCRYPT_CLAIM_PLATFORM (UINT)65536
#define NCRYPT_ISOLATED_KEY_FLAG_CREATED_IN_ISOLATION (UINT)1
#define NCRYPT_ISOLATED_KEY_FLAG_IMPORT_ONLY (UINT)2
#define NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES_V0 (UINT)0
#define NCRYPT_VSM_KEY_ATTESTATION_STATEMENT_V0 (UINT)0
#define NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS_V0 (UINT)0
#define NCRYPT_EXPORTED_ISOLATED_KEY_HEADER_V0 (UINT)0
#define NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT_V0 (UINT)0
#define NCRYPT_PAD_CIPHER_FLAG (UINT)16
#define NCRYPT_ATTESTATION_FLAG (UINT)32
#define NCRYPT_SEALING_FLAG (UINT)256
#define NCRYPT_DO_NOT_FINALIZE_FLAG (UINT)1024
#define NCRYPT_EXPORT_LEGACY_FLAG (UINT)2048
#define NCRYPT_IGNORE_DEVICE_STATE_FLAG (UINT)4096
#define NCRYPT_TREAT_NIST_AS_GENERIC_ECC_FLAG (UINT)8192
#define NCRYPT_NO_CACHED_PASSWORD (UINT)16384
#define NCRYPT_PROTECT_TO_LOCAL_SYSTEM (UINT)32768
#define NCRYPT_PREFER_VIRTUAL_ISOLATION_FLAG (UINT)65536
#define NCRYPT_USE_VIRTUAL_ISOLATION_FLAG (UINT)131072
#define NCRYPT_USE_PER_BOOT_KEY_FLAG (UINT)262144
#define NCRYPT_AUTHORITY_KEY_FLAG (UINT)256
#define NCRYPT_TPM_PSS_SALT_SIZE_UNKNOWN (UINT)0
#define NCRYPT_TPM_PSS_SALT_SIZE_MAXIMUM (UINT)1
#define NCRYPT_TPM_PSS_SALT_SIZE_HASHSIZE (UINT)2
#define NCRYPT_TPM_PAD_PSS_IGNORE_SALT (UINT)32
#define IFX_RSA_KEYGEN_VUL_NOT_AFFECTED (UINT)0
#define IFX_RSA_KEYGEN_VUL_AFFECTED_LEVEL_1 (UINT)1
#define IFX_RSA_KEYGEN_VUL_AFFECTED_LEVEL_2 (UINT)2
#define NCRYPT_TPM12_PROVIDER (UINT)65536
#define NCRYPT_PCP_SIGNATURE_KEY (UINT)1
#define NCRYPT_PCP_ENCRYPTION_KEY (UINT)2
#define NCRYPT_PCP_STORAGE_KEY (UINT)4
#define NCRYPT_PCP_IDENTITY_KEY (UINT)8
#define NCRYPT_PCP_HMACVERIFICATION_KEY (UINT)16
#define NCRYPT_MAX_PROPERTY_NAME (UINT)64
#define NCRYPT_MAX_PROPERTY_DATA (UINT)1048576
#define NCRYPT_ALLOW_EXPORT_FLAG (UINT)1
#define NCRYPT_ALLOW_PLAINTEXT_EXPORT_FLAG (UINT)2
#define NCRYPT_ALLOW_ARCHIVING_FLAG (UINT)4
#define NCRYPT_ALLOW_PLAINTEXT_ARCHIVING_FLAG (UINT)8
#define NCRYPT_IMPL_HARDWARE_FLAG (UINT)1
#define NCRYPT_IMPL_SOFTWARE_FLAG (UINT)2
#define NCRYPT_IMPL_REMOVABLE_FLAG (UINT)8
#define NCRYPT_IMPL_HARDWARE_RNG_FLAG (UINT)16
#define NCRYPT_IMPL_VIRTUAL_ISOLATION_FLAG (UINT)32
#define NCRYPT_ALLOW_DECRYPT_FLAG (UINT)1
#define NCRYPT_ALLOW_SIGNING_FLAG (UINT)2
#define NCRYPT_ALLOW_KEY_AGREEMENT_FLAG (UINT)4
#define NCRYPT_ALLOW_KEY_IMPORT_FLAG (UINT)8
#define NCRYPT_ALLOW_ALL_USAGES (UINT)16777215
#define NCRYPT_UI_PROTECT_KEY_FLAG (UINT)1
#define NCRYPT_UI_FORCE_HIGH_PROTECTION_FLAG (UINT)2
#define NCRYPT_UI_FINGERPRINT_PROTECTION_FLAG (UINT)4
#define NCRYPT_UI_APPCONTAINER_ACCESS_MEDIUM_FLAG (UINT)8
#define NCRYPT_PIN_CACHE_DISABLE_DPL_FLAG (UINT)1
#define NCRYPT_PIN_CACHE_REQUIRE_GESTURE_FLAG (UINT)1
#define NCRYPT_PIN_CACHE_PIN_BYTE_LENGTH (UINT)90
#define NCRYPT_PIN_CACHE_APPLICATION_TICKET_BYTE_LENGTH (UINT)90
#define NCRYPT_PIN_CACHE_CLEAR_FOR_CALLING_PROCESS_OPTION (UINT)1
#define NCRYPT_KEY_ACCESS_POLICY_VERSION (UINT)1
#define NCRYPT_ALLOW_SILENT_KEY_ACCESS (UINT)1
#define NCRYPT_CIPHER_KEY_BLOB_MAGIC (UINT)1380470851
#define NCRYPT_KDF_KEY_BLOB_MAGIC (UINT)826688587
#define NCRYPT_PROTECTED_KEY_BLOB_MAGIC (UINT)1263817296
#define NCRYPT_TPM_LOADABLE_KEY_BLOB_MAGIC (UINT)1297371211
#define NCRYPT_NAMED_DESCRIPTOR_FLAG (UINT)1
#define NCRYPT_PROTECTION_INFO_TYPE_DESCRIPTOR_STRING (UINT)1
#define ALG_CLASS_ANY (UINT)0
#define ALG_CLASS_SIGNATURE (UINT)8192
#define ALG_CLASS_MSG_ENCRYPT (UINT)16384
#define ALG_CLASS_DATA_ENCRYPT (UINT)24576
#define ALG_CLASS_HASH (UINT)32768
#define ALG_CLASS_KEY_EXCHANGE (UINT)40960
#define ALG_CLASS_ALL (UINT)57344
#define ALG_TYPE_ANY (UINT)0
#define ALG_TYPE_DSS (UINT)512
#define ALG_TYPE_RSA (UINT)1024
#define ALG_TYPE_BLOCK (UINT)1536
#define ALG_TYPE_STREAM (UINT)2048
#define ALG_TYPE_DH (UINT)2560
#define ALG_TYPE_SECURECHANNEL (UINT)3072
#define ALG_TYPE_ECDH (UINT)3584
#define ALG_TYPE_THIRDPARTY (UINT)4096
#define ALG_SID_ANY (UINT)0
#define ALG_SID_THIRDPARTY_ANY (UINT)0
#define ALG_SID_RSA_ANY (UINT)0
#define ALG_SID_RSA_PKCS (UINT)1
#define ALG_SID_RSA_MSATWORK (UINT)2
#define ALG_SID_RSA_ENTRUST (UINT)3
#define ALG_SID_RSA_PGP (UINT)4
#define ALG_SID_DSS_ANY (UINT)0
#define ALG_SID_DSS_PKCS (UINT)1
#define ALG_SID_DSS_DMS (UINT)2
#define ALG_SID_ECDSA (UINT)3
#define ALG_SID_DES (UINT)1
#define ALG_SID_3DES (UINT)3
#define ALG_SID_DESX (UINT)4
#define ALG_SID_IDEA (UINT)5
#define ALG_SID_CAST (UINT)6
#define ALG_SID_SAFERSK64 (UINT)7
#define ALG_SID_SAFERSK128 (UINT)8
#define ALG_SID_3DES_112 (UINT)9
#define ALG_SID_CYLINK_MEK (UINT)12
#define ALG_SID_RC5 (UINT)13
#define ALG_SID_AES_128 (UINT)14
#define ALG_SID_AES_192 (UINT)15
#define ALG_SID_AES_256 (UINT)16
#define ALG_SID_AES (UINT)17
#define ALG_SID_SKIPJACK (UINT)10
#define ALG_SID_TEK (UINT)11
#define CRYPT_MODE_CBCI (UINT)6
#define CRYPT_MODE_CFBP (UINT)7
#define CRYPT_MODE_OFBP (UINT)8
#define CRYPT_MODE_CBCOFM (UINT)9
#define CRYPT_MODE_CBCOFMI (UINT)10
#define ALG_SID_RC2 (UINT)2
#define ALG_SID_RC4 (UINT)1
#define ALG_SID_SEAL (UINT)2
#define ALG_SID_DH_SANDF (UINT)1
#define ALG_SID_DH_EPHEM (UINT)2
#define ALG_SID_AGREED_KEY_ANY (UINT)3
#define ALG_SID_KEA (UINT)4
#define ALG_SID_ECDH (UINT)5
#define ALG_SID_ECDH_EPHEM (UINT)6
#define ALG_SID_MD2 (UINT)1
#define ALG_SID_MD4 (UINT)2
#define ALG_SID_MD5 (UINT)3
#define ALG_SID_SHA (UINT)4
#define ALG_SID_SHA1 (UINT)4
#define ALG_SID_MAC (UINT)5
#define ALG_SID_RIPEMD (UINT)6
#define ALG_SID_RIPEMD160 (UINT)7
#define ALG_SID_SSL3SHAMD5 (UINT)8
#define ALG_SID_HMAC (UINT)9
#define ALG_SID_TLS1PRF (UINT)10
#define ALG_SID_HASH_REPLACE_OWF (UINT)11
#define ALG_SID_SHA_256 (UINT)12
#define ALG_SID_SHA_384 (UINT)13
#define ALG_SID_SHA_512 (UINT)14
#define ALG_SID_SSL3_MASTER (UINT)1
#define ALG_SID_SCHANNEL_MASTER_HASH (UINT)2
#define ALG_SID_SCHANNEL_MAC_KEY (UINT)3
#define ALG_SID_PCT1_MASTER (UINT)4
#define ALG_SID_SSL2_MASTER (UINT)5
#define ALG_SID_TLS1_MASTER (UINT)6
#define ALG_SID_SCHANNEL_ENC_KEY (UINT)7
#define ALG_SID_ECMQV (UINT)1
#define ALG_SID_EXAMPLE (UINT)80
#define SIGNATURE_RESOURCE_NUMBER (UINT)666
#define CRYPT_VERIFYCONTEXT (UINT)4026531840
#define CRYPT_NEWKEYSET (UINT)8
#define CRYPT_DELETEKEYSET (UINT)16
#define CRYPT_SILENT (UINT)64
#define CRYPT_DEFAULT_CONTAINER_OPTIONAL (UINT)128
#define CRYPT_UPDATE_KEY (UINT)8
#define CRYPT_USER_PROTECTED_STRONG (UINT)1048576
#define RSA1024BIT_KEY (UINT)67108864
#define CRYPT_SERVER (UINT)1024
#define KEY_LENGTH_MASK (UINT)4294901760
#define CRYPT_DECRYPT_RSA_NO_PADDING_CHECK (UINT)32
#define CRYPT_SECRETDIGEST (UINT)1
#define CRYPT_OWF_REPL_LM_HASH (UINT)1
#define CRYPT_LITTLE_ENDIAN (UINT)1
#define CRYPT_NOHASHOID (UINT)1
#define CRYPT_TYPE2_FORMAT (UINT)2
#define CRYPT_X931_FORMAT (UINT)4
#define CRYPT_MACHINE_DEFAULT (UINT)1
#define CRYPT_USER_DEFAULT (UINT)2
#define CRYPT_DELETE_DEFAULT (UINT)4
#define SIMPLEBLOB (UINT)1
#define PUBLICKEYBLOB (UINT)6
#define PRIVATEKEYBLOB (UINT)7
#define PLAINTEXTKEYBLOB (UINT)8
#define OPAQUEKEYBLOB (UINT)9
#define PUBLICKEYBLOBEX (UINT)10
#define SYMMETRICWRAPKEYBLOB (UINT)11
#define KEYSTATEBLOB (UINT)12
#define CRYPT_USERDATA (UINT)1
#define KP_IV (UINT)1
#define KP_PADDING (UINT)3
#define KP_MODE (UINT)4
#define KP_MODE_BITS (UINT)5
#define KP_P (UINT)11
#define KP_G (UINT)12
#define KP_Q (UINT)13
#define KP_X (UINT)14
#define KP_Y (UINT)15
#define KP_RA (UINT)16
#define KP_RB (UINT)17
#define KP_INFO (UINT)18
#define KP_EFFECTIVE_KEYLEN (UINT)19
#define KP_SCHANNEL_ALG (UINT)20
#define KP_CLIENT_RANDOM (UINT)21
#define KP_SERVER_RANDOM (UINT)22
#define KP_RP (UINT)23
#define KP_PRECOMP_MD5 (UINT)24
#define KP_PRECOMP_SHA (UINT)25
#define KP_CLEAR_KEY (UINT)27
#define KP_PUB_EX_LEN (UINT)28
#define KP_PUB_EX_VAL (UINT)29
#define KP_KEYVAL (UINT)30
#define KP_ADMIN_PIN (UINT)31
#define KP_KEYEXCHANGE_PIN (UINT)32
#define KP_SIGNATURE_PIN (UINT)33
#define KP_PREHASH (UINT)34
#define KP_ROUNDS (UINT)35
#define KP_OAEP_PARAMS (UINT)36
#define KP_CMS_KEY_INFO (UINT)37
#define KP_CMS_DH_KEY_INFO (UINT)38
#define KP_PUB_PARAMS (UINT)39
#define KP_VERIFY_PARAMS (UINT)40
#define KP_HIGHEST_VERSION (UINT)41
#define KP_PIN_ID (UINT)43
#define KP_PIN_INFO (UINT)44
#define PKCS5_PADDING (UINT)1
#define RANDOM_PADDING (UINT)2
#define ZERO_PADDING (UINT)3
#define CRYPT_MODE_CBC (UINT)1
#define CRYPT_MODE_ECB (UINT)2
#define CRYPT_MODE_OFB (UINT)3
#define CRYPT_MODE_CFB (UINT)4
#define CRYPT_MODE_CTS (UINT)5
#define CRYPT_ENCRYPT (UINT)1
#define CRYPT_DECRYPT (UINT)2
#define CRYPT_EXPORT (UINT)4
#define CRYPT_READ (UINT)8
#define CRYPT_WRITE (UINT)16
#define CRYPT_MAC (UINT)32
#define CRYPT_EXPORT_KEY (UINT)64
#define CRYPT_IMPORT_KEY (UINT)128
#define CRYPT_ARCHIVE (UINT)256
#define HP_ALGID (UINT)1
#define HP_HASHSIZE (UINT)4
#define HP_TLS1PRF_LABEL (UINT)6
#define HP_TLS1PRF_SEED (UINT)7
#define CRYPT_FAILED (UINT)0
#define CRYPT_SUCCEED (UINT)1
#define PP_ENUMALGS (UINT)1
#define PP_ENUMCONTAINERS (UINT)2
#define PP_IMPTYPE (UINT)3
#define PP_NAME (UINT)4
#define PP_VERSION (UINT)5
#define PP_CONTAINER (UINT)6
#define PP_CHANGE_PASSWORD (UINT)7
#define PP_CERTCHAIN (UINT)9
#define PP_KEY_TYPE_SUBTYPE (UINT)10
#define PP_PROVTYPE (UINT)16
#define PP_KEYSTORAGE (UINT)17
#define PP_APPLI_CERT (UINT)18
#define PP_SYM_KEYSIZE (UINT)19
#define PP_SESSION_KEYSIZE (UINT)20
#define PP_ENUMALGS_EX (UINT)22
#define PP_ENUMMANDROOTS (UINT)25
#define PP_ENUMELECTROOTS (UINT)26
#define PP_KEYSET_TYPE (UINT)27
#define PP_ADMIN_PIN (UINT)31
#define PP_SIG_KEYSIZE_INC (UINT)34
#define PP_KEYX_KEYSIZE_INC (UINT)35
#define PP_UNIQUE_CONTAINER (UINT)36
#define PP_SGC_INFO (UINT)37
#define PP_KEYSPEC (UINT)39
#define PP_ENUMEX_SIGNING_PROT (UINT)40
#define PP_CRYPT_COUNT_KEY_USE (UINT)41
#define PP_SMARTCARD_GUID (UINT)45
#define PP_SMARTCARD_READER_ICON (UINT)47
#define CRYPT_FIRST (UINT)1
#define CRYPT_NEXT (UINT)2
#define CRYPT_SGC_ENUM (UINT)4
#define CRYPT_IMPL_HARDWARE (UINT)1
#define CRYPT_IMPL_SOFTWARE (UINT)2
#define CRYPT_IMPL_MIXED (UINT)3
#define CRYPT_IMPL_UNKNOWN (UINT)4
#define CRYPT_IMPL_REMOVABLE (UINT)8
#define CRYPT_SEC_DESCR (UINT)1
#define CRYPT_PSTORE (UINT)2
#define CRYPT_UI_PROMPT (UINT)4
#define CRYPT_FLAG_PCT1 (UINT)1
#define CRYPT_FLAG_SSL2 (UINT)2
#define CRYPT_FLAG_SSL3 (UINT)4
#define CRYPT_FLAG_TLS1 (UINT)8
#define CRYPT_FLAG_IPSEC (UINT)16
#define CRYPT_FLAG_SIGNING (UINT)32
#define CRYPT_SGC (UINT)1
#define CRYPT_FASTSGC (UINT)2
#define PP_CONTEXT_INFO (UINT)11
#define PP_DISMISS_PIN_UI_SEC (UINT)49
#define PROV_RSA_FULL (UINT)1
#define PROV_RSA_SIG (UINT)2
#define PROV_DSS (UINT)3
#define PROV_FORTEZZA (UINT)4
#define PROV_MS_EXCHANGE (UINT)5
#define PROV_SSL (UINT)6
#define PROV_RSA_SCHANNEL (UINT)12
#define PROV_DSS_DH (UINT)13
#define PROV_EC_ECDSA_SIG (UINT)14
#define PROV_EC_ECNRA_SIG (UINT)15
#define PROV_EC_ECDSA_FULL (UINT)16
#define PROV_EC_ECNRA_FULL (UINT)17
#define PROV_DH_SCHANNEL (UINT)18
#define PROV_SPYRUS_LYNKS (UINT)20
#define PROV_RNG (UINT)21
#define PROV_INTEL_SEC (UINT)22
#define PROV_REPLACE_OWF (UINT)23
#define PROV_RSA_AES (UINT)24
#define PROV_STT_MER (UINT)7
#define PROV_STT_ACQ (UINT)8
#define PROV_STT_BRND (UINT)9
#define PROV_STT_ROOT (UINT)10
#define PROV_STT_ISS (UINT)11
#define MAXUIDLEN (UINT)64
#define CUR_BLOB_VERSION (UINT)2
#define SCHANNEL_MAC_KEY (UINT)0
#define SCHANNEL_ENC_KEY (UINT)1
#define INTERNATIONAL_USAGE (UINT)1
#define CERT_RDN_TYPE_MASK (UINT)255
#define CERT_RDN_FLAGS_MASK (UINT)4278190080
#define CERT_RDN_ENABLE_T61_UNICODE_FLAG (UINT)2147483648
#define CERT_RDN_ENABLE_UTF8_UNICODE_FLAG (UINT)536870912
#define CERT_RDN_FORCE_UTF8_UNICODE_FLAG (UINT)268435456
#define CERT_RDN_DISABLE_CHECK_TYPE_FLAG (UINT)1073741824
#define CERT_RDN_DISABLE_IE4_UTF8_FLAG (UINT)16777216
#define CERT_RDN_ENABLE_PUNYCODE_FLAG (UINT)33554432
#define CRYPT_ECC_PRIVATE_KEY_INFO_v1 (UINT)1
#define CERT_V1 (UINT)0
#define CERT_V2 (UINT)1
#define CERT_V3 (UINT)2
#define CERT_INFO_VERSION_FLAG (UINT)1
#define CERT_INFO_SERIAL_NUMBER_FLAG (UINT)2
#define CERT_INFO_SIGNATURE_ALGORITHM_FLAG (UINT)3
#define CERT_INFO_ISSUER_FLAG (UINT)4
#define CERT_INFO_NOT_BEFORE_FLAG (UINT)5
#define CERT_INFO_NOT_AFTER_FLAG (UINT)6
#define CERT_INFO_SUBJECT_FLAG (UINT)7
#define CERT_INFO_SUBJECT_PUBLIC_KEY_INFO_FLAG (UINT)8
#define CERT_INFO_ISSUER_UNIQUE_ID_FLAG (UINT)9
#define CERT_INFO_SUBJECT_UNIQUE_ID_FLAG (UINT)10
#define CERT_INFO_EXTENSION_FLAG (UINT)11
#define CRL_V1 (UINT)0
#define CRL_V2 (UINT)1
#define CERT_BUNDLE_CERTIFICATE (UINT)0
#define CERT_BUNDLE_CRL (UINT)1
#define CERT_REQUEST_V1 (UINT)0
#define CERT_KEYGEN_REQUEST_V1 (UINT)0
#define CTL_V1 (UINT)0
#define CERT_ENCODING_TYPE_MASK (UINT)65535
#define CMSG_ENCODING_TYPE_MASK (UINT)4294901760
#define CRYPT_ASN_ENCODING (UINT)1
#define CRYPT_NDR_ENCODING (UINT)2
#define X509_NDR_ENCODING (UINT)2
#define PKCS_7_NDR_ENCODING (UINT)131072
#define CRYPT_FORMAT_STR_MULTI_LINE (UINT)1
#define CRYPT_FORMAT_STR_NO_HEX (UINT)16
#define CRYPT_FORMAT_SIMPLE (UINT)1
#define CRYPT_FORMAT_X509 (UINT)2
#define CRYPT_FORMAT_OID (UINT)4
#define CRYPT_FORMAT_RDN_SEMICOLON (UINT)256
#define CRYPT_FORMAT_RDN_CRLF (UINT)512
#define CRYPT_FORMAT_RDN_UNQUOTE (UINT)1024
#define CRYPT_FORMAT_RDN_REVERSE (UINT)2048
#define CRYPT_FORMAT_COMMA (UINT)4096
#define CRYPT_ENCODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG (UINT)8
#define CRYPT_SORTED_CTL_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG (UINT)65536
#define CRYPT_ENCODE_ENABLE_UTF8PERCENT_FLAG (UINT)262144
#define CRYPT_DECODE_NOCOPY_FLAG (UINT)1
#define CRYPT_DECODE_TO_BE_SIGNED_FLAG (UINT)2
#define CRYPT_DECODE_SHARE_OID_STRING_FLAG (UINT)4
#define CRYPT_DECODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG (UINT)8
#define CRYPT_DECODE_ALLOC_FLAG (UINT)32768
#define CRYPT_DECODE_ENABLE_PUNYCODE_FLAG (UINT)33554432
#define CRYPT_DECODE_ENABLE_UTF8PERCENT_FLAG (UINT)67108864
#define CRYPT_ENCODE_DECODE_NONE (UINT)0
#define SITE_PIN_RULES_ALL_SUBDOMAINS_FLAG (UINT)1
#define CERT_ROOT_PROGRAM_FLAG_OU (UINT)16
#define CERT_ROOT_PROGRAM_FLAG_ADDRESS (UINT)8
#define CERT_UNICODE_RDN_ERR_INDEX_MASK (UINT)1023
#define CERT_UNICODE_RDN_ERR_INDEX_SHIFT (UINT)22
#define CERT_UNICODE_ATTR_ERR_INDEX_MASK (UINT)63
#define CERT_UNICODE_ATTR_ERR_INDEX_SHIFT (UINT)16
#define CERT_UNICODE_VALUE_ERR_INDEX_MASK (UINT)65535
#define CERT_UNICODE_VALUE_ERR_INDEX_SHIFT (UINT)0
#define CERT_DIGITAL_SIGNATURE_KEY_USAGE (UINT)128
#define CERT_NON_REPUDIATION_KEY_USAGE (UINT)64
#define CERT_KEY_ENCIPHERMENT_KEY_USAGE (UINT)32
#define CERT_DATA_ENCIPHERMENT_KEY_USAGE (UINT)16
#define CERT_KEY_AGREEMENT_KEY_USAGE (UINT)8
#define CERT_KEY_CERT_SIGN_KEY_USAGE (UINT)4
#define CERT_OFFLINE_CRL_SIGN_KEY_USAGE (UINT)2
#define CERT_CRL_SIGN_KEY_USAGE (UINT)2
#define CERT_ENCIPHER_ONLY_KEY_USAGE (UINT)1
#define CERT_DECIPHER_ONLY_KEY_USAGE (UINT)128
#define CERT_ALT_NAME_X400_ADDRESS (UINT)4
#define CERT_ALT_NAME_EDI_PARTY_NAME (UINT)6
#define CERT_ALT_NAME_ENTRY_ERR_INDEX_MASK (UINT)255
#define CERT_ALT_NAME_ENTRY_ERR_INDEX_SHIFT (UINT)16
#define CERT_ALT_NAME_VALUE_ERR_INDEX_MASK (UINT)65535
#define CERT_ALT_NAME_VALUE_ERR_INDEX_SHIFT (UINT)0
#define CERT_CA_SUBJECT_FLAG (UINT)128
#define CERT_END_ENTITY_SUBJECT_FLAG (UINT)64
#define CRL_REASON_PRIVILEGE_WITHDRAWN (UINT)9
#define CRL_REASON_AA_COMPROMISE (UINT)10
#define CRL_DIST_POINT_NO_NAME (UINT)0
#define CRL_DIST_POINT_FULL_NAME (UINT)1
#define CRL_DIST_POINT_ISSUER_RDN_NAME (UINT)2
#define CRL_REASON_UNUSED_FLAG (UINT)128
#define CRL_REASON_KEY_COMPROMISE_FLAG (UINT)64
#define CRL_REASON_CA_COMPROMISE_FLAG (UINT)32
#define CRL_REASON_AFFILIATION_CHANGED_FLAG (UINT)16
#define CRL_REASON_SUPERSEDED_FLAG (UINT)8
#define CRL_REASON_CESSATION_OF_OPERATION_FLAG (UINT)4
#define CRL_REASON_CERTIFICATE_HOLD_FLAG (UINT)2
#define CRL_REASON_PRIVILEGE_WITHDRAWN_FLAG (UINT)1
#define CRL_REASON_AA_COMPROMISE_FLAG (UINT)128
#define CRL_DIST_POINT_ERR_INDEX_MASK (UINT)127
#define CRL_DIST_POINT_ERR_INDEX_SHIFT (UINT)24
#define CRL_DIST_POINT_ERR_CRL_ISSUER_BIT (INT)-2147483648
#define CROSS_CERT_DIST_POINT_ERR_INDEX_MASK (UINT)255
#define CROSS_CERT_DIST_POINT_ERR_INDEX_SHIFT (UINT)24
#define CERT_EXCLUDED_SUBTREE_BIT (INT)-2147483648
#define SORTED_CTL_EXT_HASHED_SUBJECT_IDENTIFIER_FLAG (UINT)1
#define CERT_DSS_R_LEN (UINT)20
#define CERT_DSS_S_LEN (UINT)20
#define CRYPT_X942_COUNTER_BYTE_LENGTH (UINT)4
#define CRYPT_X942_KEY_LENGTH_BYTE_LENGTH (UINT)4
#define CRYPT_ECC_CMS_SHARED_INFO_SUPPPUBINFO_BYTE_LENGTH (UINT)4
#define CRYPT_RC2_40BIT_VERSION (UINT)160
#define CRYPT_RC2_56BIT_VERSION (UINT)52
#define CRYPT_RC2_64BIT_VERSION (UINT)120
#define CRYPT_RC2_128BIT_VERSION (UINT)58
#define PKCS_RSA_SSA_PSS_TRAILER_FIELD_BC (UINT)1
#define NETSCAPE_SSL_CLIENT_AUTH_CERT_TYPE (UINT)128
#define NETSCAPE_SSL_SERVER_AUTH_CERT_TYPE (UINT)64
#define NETSCAPE_SMIME_CERT_TYPE (UINT)32
#define NETSCAPE_SIGN_CERT_TYPE (UINT)16
#define NETSCAPE_SSL_CA_CERT_TYPE (UINT)4
#define NETSCAPE_SMIME_CA_CERT_TYPE (UINT)2
#define NETSCAPE_SIGN_CA_CERT_TYPE (UINT)1
#define CMC_TAGGED_CERT_REQUEST_CHOICE (UINT)1
#define CMC_OTHER_INFO_NO_CHOICE (UINT)0
#define CMC_OTHER_INFO_FAIL_CHOICE (UINT)1
#define CMC_OTHER_INFO_PEND_CHOICE (UINT)2
#define CMC_STATUS_SUCCESS (UINT)0
#define CMC_STATUS_FAILED (UINT)2
#define CMC_STATUS_PENDING (UINT)3
#define CMC_STATUS_NO_SUPPORT (UINT)4
#define CMC_STATUS_CONFIRM_REQUIRED (UINT)5
#define CMC_FAIL_BAD_ALG (UINT)0
#define CMC_FAIL_BAD_MESSAGE_CHECK (UINT)1
#define CMC_FAIL_BAD_REQUEST (UINT)2
#define CMC_FAIL_BAD_TIME (UINT)3
#define CMC_FAIL_BAD_CERT_ID (UINT)4
#define CMC_FAIL_UNSUPORTED_EXT (UINT)5
#define CMC_FAIL_MUST_ARCHIVE_KEYS (UINT)6
#define CMC_FAIL_BAD_IDENTITY (UINT)7
#define CMC_FAIL_POP_REQUIRED (UINT)8
#define CMC_FAIL_POP_FAILED (UINT)9
#define CMC_FAIL_NO_KEY_REUSE (UINT)10
#define CMC_FAIL_INTERNAL_CA_ERROR (UINT)11
#define CMC_FAIL_TRY_LATER (UINT)12
#define CERT_BIOMETRIC_PICTURE_TYPE (UINT)0
#define CERT_BIOMETRIC_SIGNATURE_TYPE (UINT)1
#define OCSP_REQUEST_V1 (UINT)0
#define OCSP_SUCCESSFUL_RESPONSE (UINT)0
#define OCSP_MALFORMED_REQUEST_RESPONSE (UINT)1
#define OCSP_INTERNAL_ERROR_RESPONSE (UINT)2
#define OCSP_TRY_LATER_RESPONSE (UINT)3
#define OCSP_SIG_REQUIRED_RESPONSE (UINT)5
#define OCSP_UNAUTHORIZED_RESPONSE (UINT)6
#define OCSP_BASIC_GOOD_CERT_STATUS (UINT)0
#define OCSP_BASIC_REVOKED_CERT_STATUS (UINT)1
#define OCSP_BASIC_UNKNOWN_CERT_STATUS (UINT)2
#define OCSP_BASIC_RESPONSE_V1 (UINT)0
#define OCSP_BASIC_BY_NAME_RESPONDER_ID (UINT)1
#define OCSP_BASIC_BY_KEY_RESPONDER_ID (UINT)2
#define CRYPT_INSTALL_OID_FUNC_BEFORE_FLAG (UINT)1
#define CRYPT_GET_INSTALLED_OID_FUNC_FLAG (UINT)1
#define CRYPT_REGISTER_FIRST_INDEX (UINT)0
#define CRYPT_REGISTER_LAST_INDEX (UINT)4294967295
#define CRYPT_MATCH_ANY_ENCODING_TYPE (UINT)4294967295
#define CALG_OID_INFO_CNG_ONLY (UINT)4294967295
#define CALG_OID_INFO_PARAMETERS (UINT)4294967294
#define CRYPT_HASH_ALG_OID_GROUP_ID (UINT)1
#define CRYPT_ENCRYPT_ALG_OID_GROUP_ID (UINT)2
#define CRYPT_PUBKEY_ALG_OID_GROUP_ID (UINT)3
#define CRYPT_SIGN_ALG_OID_GROUP_ID (UINT)4
#define CRYPT_RDN_ATTR_OID_GROUP_ID (UINT)5
#define CRYPT_EXT_OR_ATTR_OID_GROUP_ID (UINT)6
#define CRYPT_ENHKEY_USAGE_OID_GROUP_ID (UINT)7
#define CRYPT_POLICY_OID_GROUP_ID (UINT)8
#define CRYPT_TEMPLATE_OID_GROUP_ID (UINT)9
#define CRYPT_KDF_OID_GROUP_ID (UINT)10
#define CRYPT_LAST_OID_GROUP_ID (UINT)10
#define CRYPT_OID_INHIBIT_SIGNATURE_FORMAT_FLAG (UINT)1
#define CRYPT_OID_USE_PUBKEY_PARA_FOR_PKCS7_FLAG (UINT)2
#define CRYPT_OID_NO_NULL_ALGORITHM_PARA_FLAG (UINT)4
#define CRYPT_OID_PUBKEY_SIGN_ONLY_FLAG (UINT)2147483648
#define CRYPT_OID_PUBKEY_ENCRYPT_ONLY_FLAG (UINT)1073741824
#define CRYPT_OID_USE_CURVE_NAME_FOR_ENCODE_FLAG (UINT)536870912
#define CRYPT_OID_USE_CURVE_PARAMETERS_FOR_ENCODE_FLAG (UINT)268435456
#define CRYPT_OID_INFO_OID_KEY (UINT)1
#define CRYPT_OID_INFO_NAME_KEY (UINT)2
#define CRYPT_OID_INFO_ALGID_KEY (UINT)3
#define CRYPT_OID_INFO_SIGN_KEY (UINT)4
#define CRYPT_OID_INFO_CNG_ALGID_KEY (UINT)5
#define CRYPT_OID_INFO_CNG_SIGN_KEY (UINT)6
#define CRYPT_OID_INFO_OID_KEY_FLAGS_MASK (UINT)4294901760
#define CRYPT_OID_DISABLE_SEARCH_DS_FLAG (UINT)2147483648
#define CRYPT_OID_PREFER_CNG_ALGID_FLAG (UINT)1073741824
#define CRYPT_OID_INFO_OID_GROUP_BIT_LEN_MASK (UINT)268369920
#define CRYPT_OID_INFO_OID_GROUP_BIT_LEN_SHIFT (UINT)16
#define CRYPT_INSTALL_OID_INFO_BEFORE_FLAG (UINT)1
#define CRYPT_LOCALIZED_NAME_ENCODING_TYPE (UINT)0
#define CERT_STRONG_SIGN_SERIALIZED_INFO_CHOICE (UINT)1
#define CERT_STRONG_SIGN_OID_INFO_CHOICE (UINT)2
#define CMSG_ENCRYPTED (UINT)6
#define CMSG_MAIL_LIST_HANDLE_KEY_CHOICE (UINT)1
#define CMSG_KEY_TRANS_RECIPIENT (UINT)1
#define CMSG_KEY_AGREE_RECIPIENT (UINT)2
#define CMSG_MAIL_LIST_RECIPIENT (UINT)3
#define CMSG_SP3_COMPATIBLE_ENCRYPT_FLAG (UINT)2147483648
#define CMSG_RC4_NO_SALT_FLAG (UINT)1073741824
#define CMSG_INDEFINITE_LENGTH (UINT)4294967295
#define CMSG_BARE_CONTENT_FLAG (UINT)1
#define CMSG_LENGTH_ONLY_FLAG (UINT)2
#define CMSG_DETACHED_FLAG (UINT)4
#define CMSG_AUTHENTICATED_ATTRIBUTES_FLAG (UINT)8
#define CMSG_CONTENTS_OCTETS_FLAG (UINT)16
#define CMSG_MAX_LENGTH_FLAG (UINT)32
#define CMSG_CMS_ENCAPSULATED_CONTENT_FLAG (UINT)64
#define CMSG_SIGNED_DATA_NO_SIGN_FLAG (UINT)128
#define CMSG_CRYPT_RELEASE_CONTEXT_FLAG (UINT)32768
#define CMSG_TYPE_PARAM (UINT)1
#define CMSG_CONTENT_PARAM (UINT)2
#define CMSG_BARE_CONTENT_PARAM (UINT)3
#define CMSG_INNER_CONTENT_TYPE_PARAM (UINT)4
#define CMSG_SIGNER_COUNT_PARAM (UINT)5
#define CMSG_SIGNER_INFO_PARAM (UINT)6
#define CMSG_SIGNER_CERT_INFO_PARAM (UINT)7
#define CMSG_SIGNER_HASH_ALGORITHM_PARAM (UINT)8
#define CMSG_SIGNER_AUTH_ATTR_PARAM (UINT)9
#define CMSG_SIGNER_UNAUTH_ATTR_PARAM (UINT)10
#define CMSG_CERT_COUNT_PARAM (UINT)11
#define CMSG_CERT_PARAM (UINT)12
#define CMSG_CRL_COUNT_PARAM (UINT)13
#define CMSG_CRL_PARAM (UINT)14
#define CMSG_ENVELOPE_ALGORITHM_PARAM (UINT)15
#define CMSG_RECIPIENT_COUNT_PARAM (UINT)17
#define CMSG_RECIPIENT_INDEX_PARAM (UINT)18
#define CMSG_RECIPIENT_INFO_PARAM (UINT)19
#define CMSG_HASH_ALGORITHM_PARAM (UINT)20
#define CMSG_HASH_DATA_PARAM (UINT)21
#define CMSG_COMPUTED_HASH_PARAM (UINT)22
#define CMSG_ENCRYPT_PARAM (UINT)26
#define CMSG_ENCRYPTED_DIGEST (UINT)27
#define CMSG_ENCODED_SIGNER (UINT)28
#define CMSG_ENCODED_MESSAGE (UINT)29
#define CMSG_VERSION_PARAM (UINT)30
#define CMSG_ATTR_CERT_COUNT_PARAM (UINT)31
#define CMSG_ATTR_CERT_PARAM (UINT)32
#define CMSG_CMS_RECIPIENT_COUNT_PARAM (UINT)33
#define CMSG_CMS_RECIPIENT_INDEX_PARAM (UINT)34
#define CMSG_CMS_RECIPIENT_ENCRYPTED_KEY_INDEX_PARAM (UINT)35
#define CMSG_CMS_RECIPIENT_INFO_PARAM (UINT)36
#define CMSG_UNPROTECTED_ATTR_PARAM (UINT)37
#define CMSG_SIGNER_CERT_ID_PARAM (UINT)38
#define CMSG_CMS_SIGNER_INFO_PARAM (UINT)39
#define CMSG_SIGNED_DATA_V1 (UINT)1
#define CMSG_SIGNED_DATA_V3 (UINT)3
#define CMSG_SIGNER_INFO_V1 (UINT)1
#define CMSG_SIGNER_INFO_V3 (UINT)3
#define CMSG_HASHED_DATA_V0 (UINT)0
#define CMSG_HASHED_DATA_V2 (UINT)2
#define CMSG_ENVELOPED_DATA_V0 (UINT)0
#define CMSG_ENVELOPED_DATA_V2 (UINT)2
#define CMSG_ENVELOPED_RECIPIENT_V0 (UINT)0
#define CMSG_ENVELOPED_RECIPIENT_V2 (UINT)2
#define CMSG_ENVELOPED_RECIPIENT_V3 (UINT)3
#define CMSG_ENVELOPED_RECIPIENT_V4 (UINT)4
#define CMSG_CTRL_VERIFY_SIGNATURE (UINT)1
#define CMSG_CTRL_DECRYPT (UINT)2
#define CMSG_CTRL_VERIFY_HASH (UINT)5
#define CMSG_CTRL_ADD_SIGNER (UINT)6
#define CMSG_CTRL_DEL_SIGNER (UINT)7
#define CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR (UINT)8
#define CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR (UINT)9
#define CMSG_CTRL_ADD_CERT (UINT)10
#define CMSG_CTRL_DEL_CERT (UINT)11
#define CMSG_CTRL_ADD_CRL (UINT)12
#define CMSG_CTRL_DEL_CRL (UINT)13
#define CMSG_CTRL_ADD_ATTR_CERT (UINT)14
#define CMSG_CTRL_DEL_ATTR_CERT (UINT)15
#define CMSG_CTRL_KEY_TRANS_DECRYPT (UINT)16
#define CMSG_CTRL_KEY_AGREE_DECRYPT (UINT)17
#define CMSG_CTRL_MAIL_LIST_DECRYPT (UINT)18
#define CMSG_CTRL_VERIFY_SIGNATURE_EX (UINT)19
#define CMSG_CTRL_ADD_CMS_SIGNER_INFO (UINT)20
#define CMSG_CTRL_ENABLE_STRONG_SIGNATURE (UINT)21
#define CMSG_VERIFY_SIGNER_PUBKEY (UINT)1
#define CMSG_VERIFY_SIGNER_CERT (UINT)2
#define CMSG_VERIFY_SIGNER_CHAIN (UINT)3
#define CMSG_VERIFY_SIGNER_NULL (UINT)4
#define CMSG_VERIFY_COUNTER_SIGN_ENABLE_STRONG_FLAG (UINT)1
#define CMSG_CONTENT_ENCRYPT_PAD_ENCODED_LEN_FLAG (UINT)1
#define CMSG_CONTENT_ENCRYPT_FREE_PARA_FLAG (UINT)1
#define CMSG_CONTENT_ENCRYPT_FREE_OBJID_FLAG (UINT)2
#define CMSG_CONTENT_ENCRYPT_RELEASE_CONTEXT_FLAG (UINT)32768
#define CMSG_KEY_TRANS_ENCRYPT_FREE_PARA_FLAG (UINT)1
#define CMSG_KEY_TRANS_ENCRYPT_FREE_OBJID_FLAG (UINT)2
#define CMSG_KEY_AGREE_ENCRYPT_FREE_PARA_FLAG (UINT)1
#define CMSG_KEY_AGREE_ENCRYPT_FREE_MATERIAL_FLAG (UINT)2
#define CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_ALG_FLAG (UINT)4
#define CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_PARA_FLAG (UINT)8
#define CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_BITS_FLAG (UINT)16
#define CMSG_KEY_AGREE_ENCRYPT_FREE_OBJID_FLAG (UINT)32
#define CMSG_MAIL_LIST_ENCRYPT_FREE_PARA_FLAG (UINT)1
#define CMSG_MAIL_LIST_ENCRYPT_FREE_OBJID_FLAG (UINT)2
#define CERT_KEY_PROV_HANDLE_PROP_ID (UINT)1
#define CERT_KEY_PROV_INFO_PROP_ID (UINT)2
#define CERT_SHA1_HASH_PROP_ID (UINT)3
#define CERT_MD5_HASH_PROP_ID (UINT)4
#define CERT_KEY_CONTEXT_PROP_ID (UINT)5
#define CERT_KEY_SPEC_PROP_ID (UINT)6
#define CERT_IE30_RESERVED_PROP_ID (UINT)7
#define CERT_PUBKEY_HASH_RESERVED_PROP_ID (UINT)8
#define CERT_ENHKEY_USAGE_PROP_ID (UINT)9
#define CERT_NEXT_UPDATE_LOCATION_PROP_ID (UINT)10
#define CERT_FRIENDLY_NAME_PROP_ID (UINT)11
#define CERT_PVK_FILE_PROP_ID (UINT)12
#define CERT_DESCRIPTION_PROP_ID (UINT)13
#define CERT_ACCESS_STATE_PROP_ID (UINT)14
#define CERT_SIGNATURE_HASH_PROP_ID (UINT)15
#define CERT_SMART_CARD_DATA_PROP_ID (UINT)16
#define CERT_EFS_PROP_ID (UINT)17
#define CERT_FORTEZZA_DATA_PROP_ID (UINT)18
#define CERT_ARCHIVED_PROP_ID (UINT)19
#define CERT_KEY_IDENTIFIER_PROP_ID (UINT)20
#define CERT_AUTO_ENROLL_PROP_ID (UINT)21
#define CERT_PUBKEY_ALG_PARA_PROP_ID (UINT)22
#define CERT_CROSS_CERT_DIST_POINTS_PROP_ID (UINT)23
#define CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID (UINT)24
#define CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID (UINT)25
#define CERT_ENROLLMENT_PROP_ID (UINT)26
#define CERT_DATE_STAMP_PROP_ID (UINT)27
#define CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID (UINT)28
#define CERT_SUBJECT_NAME_MD5_HASH_PROP_ID (UINT)29
#define CERT_EXTENDED_ERROR_INFO_PROP_ID (UINT)30
#define CERT_RENEWAL_PROP_ID (UINT)64
#define CERT_ARCHIVED_KEY_HASH_PROP_ID (UINT)65
#define CERT_AUTO_ENROLL_RETRY_PROP_ID (UINT)66
#define CERT_AIA_URL_RETRIEVED_PROP_ID (UINT)67
#define CERT_AUTHORITY_INFO_ACCESS_PROP_ID (UINT)68
#define CERT_BACKED_UP_PROP_ID (UINT)69
#define CERT_OCSP_RESPONSE_PROP_ID (UINT)70
#define CERT_REQUEST_ORIGINATOR_PROP_ID (UINT)71
#define CERT_SOURCE_LOCATION_PROP_ID (UINT)72
#define CERT_SOURCE_URL_PROP_ID (UINT)73
#define CERT_NEW_KEY_PROP_ID (UINT)74
#define CERT_OCSP_CACHE_PREFIX_PROP_ID (UINT)75
#define CERT_SMART_CARD_ROOT_INFO_PROP_ID (UINT)76
#define CERT_NO_AUTO_EXPIRE_CHECK_PROP_ID (UINT)77
#define CERT_NCRYPT_KEY_HANDLE_PROP_ID (UINT)78
#define CERT_HCRYPTPROV_OR_NCRYPT_KEY_HANDLE_PROP_ID (UINT)79
#define CERT_SUBJECT_INFO_ACCESS_PROP_ID (UINT)80
#define CERT_CA_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID (UINT)81
#define CERT_CA_DISABLE_CRL_PROP_ID (UINT)82
#define CERT_ROOT_PROGRAM_CERT_POLICIES_PROP_ID (UINT)83
#define CERT_ROOT_PROGRAM_NAME_CONSTRAINTS_PROP_ID (UINT)84
#define CERT_SUBJECT_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID (UINT)85
#define CERT_SUBJECT_DISABLE_CRL_PROP_ID (UINT)86
#define CERT_CEP_PROP_ID (UINT)87
#define CERT_SIGN_HASH_CNG_ALG_PROP_ID (UINT)89
#define CERT_SCARD_PIN_ID_PROP_ID (UINT)90
#define CERT_SCARD_PIN_INFO_PROP_ID (UINT)91
#define CERT_SUBJECT_PUB_KEY_BIT_LENGTH_PROP_ID (UINT)92
#define CERT_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID (UINT)93
#define CERT_ISSUER_PUB_KEY_BIT_LENGTH_PROP_ID (UINT)94
#define CERT_ISSUER_CHAIN_SIGN_HASH_CNG_ALG_PROP_ID (UINT)95
#define CERT_ISSUER_CHAIN_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID (UINT)96
#define CERT_NO_EXPIRE_NOTIFICATION_PROP_ID (UINT)97
#define CERT_AUTH_ROOT_SHA256_HASH_PROP_ID (UINT)98
#define CERT_NCRYPT_KEY_HANDLE_TRANSFER_PROP_ID (UINT)99
#define CERT_HCRYPTPROV_TRANSFER_PROP_ID (UINT)100
#define CERT_SMART_CARD_READER_PROP_ID (UINT)101
#define CERT_SEND_AS_TRUSTED_ISSUER_PROP_ID (UINT)102
#define CERT_KEY_REPAIR_ATTEMPTED_PROP_ID (UINT)103
#define CERT_DISALLOWED_FILETIME_PROP_ID (UINT)104
#define CERT_ROOT_PROGRAM_CHAIN_POLICIES_PROP_ID (UINT)105
#define CERT_SMART_CARD_READER_NON_REMOVABLE_PROP_ID (UINT)106
#define CERT_SHA256_HASH_PROP_ID (UINT)107
#define CERT_SCEP_SERVER_CERTS_PROP_ID (UINT)108
#define CERT_SCEP_RA_SIGNATURE_CERT_PROP_ID (UINT)109
#define CERT_SCEP_RA_ENCRYPTION_CERT_PROP_ID (UINT)110
#define CERT_SCEP_CA_CERT_PROP_ID (UINT)111
#define CERT_SCEP_SIGNER_CERT_PROP_ID (UINT)112
#define CERT_SCEP_NONCE_PROP_ID (UINT)113
#define CERT_SCEP_ENCRYPT_HASH_CNG_ALG_PROP_ID (UINT)114
#define CERT_SCEP_FLAGS_PROP_ID (UINT)115
#define CERT_SCEP_GUID_PROP_ID (UINT)116
#define CERT_SERIALIZABLE_KEY_CONTEXT_PROP_ID (UINT)117
#define CERT_ISOLATED_KEY_PROP_ID (UINT)118
#define CERT_SERIAL_CHAIN_PROP_ID (UINT)119
#define CERT_KEY_CLASSIFICATION_PROP_ID (UINT)120
#define CERT_OCSP_MUST_STAPLE_PROP_ID (UINT)121
#define CERT_DISALLOWED_ENHKEY_USAGE_PROP_ID (UINT)122
#define CERT_NONCOMPLIANT_ROOT_URL_PROP_ID (UINT)123
#define CERT_PIN_SHA256_HASH_PROP_ID (UINT)124
#define CERT_CLR_DELETE_KEY_PROP_ID (UINT)125
#define CERT_NOT_BEFORE_FILETIME_PROP_ID (UINT)126
#define CERT_NOT_BEFORE_ENHKEY_USAGE_PROP_ID (UINT)127
#define CERT_FIRST_RESERVED_PROP_ID (UINT)128
#define CERT_LAST_RESERVED_PROP_ID (UINT)32767
#define CERT_FIRST_USER_PROP_ID (UINT)32768
#define CERT_LAST_USER_PROP_ID (UINT)65535
#define CERT_ACCESS_STATE_WRITE_PERSIST_FLAG (UINT)1
#define CERT_ACCESS_STATE_SYSTEM_STORE_FLAG (UINT)2
#define CERT_ACCESS_STATE_LM_SYSTEM_STORE_FLAG (UINT)4
#define CERT_ACCESS_STATE_GP_SYSTEM_STORE_FLAG (UINT)8
#define CERT_ACCESS_STATE_SHARED_USER_FLAG (UINT)16
#define CERT_STORE_SIGNATURE_FLAG (UINT)1
#define CERT_STORE_TIME_VALIDITY_FLAG (UINT)2
#define CERT_STORE_REVOCATION_FLAG (UINT)4
#define CERT_STORE_NO_CRL_FLAG (UINT)65536
#define CERT_STORE_NO_ISSUER_FLAG (UINT)131072
#define CERT_STORE_BASE_CRL_FLAG (UINT)256
#define CERT_STORE_DELTA_CRL_FLAG (UINT)512
#define CERT_STORE_UNSAFE_PHYSICAL_FLAG (UINT)32
#define CERT_STORE_SHARE_STORE_FLAG (UINT)64
#define CERT_STORE_MANIFOLD_FLAG (UINT)256
#define CERT_SYSTEM_STORE_MASK (UINT)4294901760
#define CERT_SYSTEM_STORE_UNPROTECTED_FLAG (UINT)1073741824
#define CERT_SYSTEM_STORE_DEFER_READ_FLAG (UINT)536870912
#define CERT_SYSTEM_STORE_LOCATION_SHIFT (UINT)16
#define CERT_SYSTEM_STORE_CURRENT_USER_ID (UINT)1
#define CERT_SYSTEM_STORE_LOCAL_MACHINE_ID (UINT)2
#define CERT_SYSTEM_STORE_CURRENT_SERVICE_ID (UINT)4
#define CERT_SYSTEM_STORE_SERVICES_ID (UINT)5
#define CERT_SYSTEM_STORE_USERS_ID (UINT)6
#define CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY_ID (UINT)7
#define CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY_ID (UINT)8
#define CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE_ID (UINT)9
#define CERT_SYSTEM_STORE_LOCAL_MACHINE_WCOS_ID (UINT)10
#define CERT_PROT_ROOT_DISABLE_CURRENT_USER_FLAG (UINT)1
#define CERT_PROT_ROOT_INHIBIT_ADD_AT_INIT_FLAG (UINT)2
#define CERT_PROT_ROOT_INHIBIT_PURGE_LM_FLAG (UINT)4
#define CERT_PROT_ROOT_DISABLE_LM_AUTH_FLAG (UINT)8
#define CERT_PROT_ROOT_ONLY_LM_GPT_FLAG (UINT)8
#define CERT_PROT_ROOT_DISABLE_NT_AUTH_REQUIRED_FLAG (UINT)16
#define CERT_PROT_ROOT_DISABLE_NOT_DEFINED_NAME_CONSTRAINT_FLAG (UINT)32
#define CERT_PROT_ROOT_DISABLE_PEER_TRUST (UINT)65536
#define CERT_TRUST_PUB_ALLOW_TRUST_MASK (UINT)3
#define CERT_TRUST_PUB_ALLOW_END_USER_TRUST (UINT)0
#define CERT_TRUST_PUB_ALLOW_MACHINE_ADMIN_TRUST (UINT)1
#define CERT_TRUST_PUB_ALLOW_ENTERPRISE_ADMIN_TRUST (UINT)2
#define CERT_TRUST_PUB_CHECK_PUBLISHER_REV_FLAG (UINT)256
#define CERT_TRUST_PUB_CHECK_TIMESTAMP_REV_FLAG (UINT)512
#define CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_UNTRUSTED_ROOT_LOGGING_FLAG (UINT)1
#define CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_PARTIAL_CHAIN_LOGGING_FLAG (UINT)2
#define CERT_AUTO_UPDATE_DISABLE_RANDOM_QUERY_STRING_FLAG (UINT)4
#define CERT_REGISTRY_STORE_REMOTE_FLAG (UINT)65536
#define CERT_REGISTRY_STORE_SERIALIZED_FLAG (UINT)131072
#define CERT_REGISTRY_STORE_CLIENT_GPT_FLAG (UINT)2147483648
#define CERT_REGISTRY_STORE_LM_GPT_FLAG (UINT)16777216
#define CERT_REGISTRY_STORE_ROAMING_FLAG (UINT)262144
#define CERT_REGISTRY_STORE_MY_IE_DIRTY_FLAG (UINT)524288
#define CERT_REGISTRY_STORE_EXTERNAL_FLAG (UINT)1048576
#define CERT_FILE_STORE_COMMIT_ENABLE_FLAG (UINT)65536
#define CERT_LDAP_STORE_SIGN_FLAG (UINT)65536
#define CERT_LDAP_STORE_AREC_EXCLUSIVE_FLAG (UINT)131072
#define CERT_LDAP_STORE_OPENED_FLAG (UINT)262144
#define CERT_LDAP_STORE_UNBIND_FLAG (UINT)524288
#define CERT_STORE_PROV_GP_SYSTEM_STORE_FLAG (UINT)32
#define CERT_STORE_PROV_SHARED_USER_FLAG (UINT)64
#define CERT_STORE_PROV_CLOSE_FUNC (UINT)0
#define CERT_STORE_PROV_READ_CERT_FUNC (UINT)1
#define CERT_STORE_PROV_WRITE_CERT_FUNC (UINT)2
#define CERT_STORE_PROV_DELETE_CERT_FUNC (UINT)3
#define CERT_STORE_PROV_SET_CERT_PROPERTY_FUNC (UINT)4
#define CERT_STORE_PROV_READ_CRL_FUNC (UINT)5
#define CERT_STORE_PROV_WRITE_CRL_FUNC (UINT)6
#define CERT_STORE_PROV_DELETE_CRL_FUNC (UINT)7
#define CERT_STORE_PROV_SET_CRL_PROPERTY_FUNC (UINT)8
#define CERT_STORE_PROV_READ_CTL_FUNC (UINT)9
#define CERT_STORE_PROV_WRITE_CTL_FUNC (UINT)10
#define CERT_STORE_PROV_DELETE_CTL_FUNC (UINT)11
#define CERT_STORE_PROV_SET_CTL_PROPERTY_FUNC (UINT)12
#define CERT_STORE_PROV_CONTROL_FUNC (UINT)13
#define CERT_STORE_PROV_FIND_CERT_FUNC (UINT)14
#define CERT_STORE_PROV_FREE_FIND_CERT_FUNC (UINT)15
#define CERT_STORE_PROV_GET_CERT_PROPERTY_FUNC (UINT)16
#define CERT_STORE_PROV_FIND_CRL_FUNC (UINT)17
#define CERT_STORE_PROV_FREE_FIND_CRL_FUNC (UINT)18
#define CERT_STORE_PROV_GET_CRL_PROPERTY_FUNC (UINT)19
#define CERT_STORE_PROV_FIND_CTL_FUNC (UINT)20
#define CERT_STORE_PROV_FREE_FIND_CTL_FUNC (UINT)21
#define CERT_STORE_PROV_GET_CTL_PROPERTY_FUNC (UINT)22
#define CERT_STORE_PROV_WRITE_ADD_FLAG (UINT)1
#define CERT_STORE_SAVE_AS_PKCS12 (UINT)3
#define CERT_CLOSE_STORE_FORCE_FLAG (UINT)1
#define CERT_CLOSE_STORE_CHECK_FLAG (UINT)2
#define CERT_COMPARE_MASK (UINT)65535
#define CERT_COMPARE_ANY (UINT)0
#define CERT_COMPARE_SHA1_HASH (UINT)1
#define CERT_COMPARE_NAME (UINT)2
#define CERT_COMPARE_ATTR (UINT)3
#define CERT_COMPARE_MD5_HASH (UINT)4
#define CERT_COMPARE_PROPERTY (UINT)5
#define CERT_COMPARE_PUBLIC_KEY (UINT)6
#define CERT_COMPARE_NAME_STR_A (UINT)7
#define CERT_COMPARE_NAME_STR_W (UINT)8
#define CERT_COMPARE_KEY_SPEC (UINT)9
#define CERT_COMPARE_ENHKEY_USAGE (UINT)10
#define CERT_COMPARE_SUBJECT_CERT (UINT)11
#define CERT_COMPARE_ISSUER_OF (UINT)12
#define CERT_COMPARE_EXISTING (UINT)13
#define CERT_COMPARE_SIGNATURE_HASH (UINT)14
#define CERT_COMPARE_KEY_IDENTIFIER (UINT)15
#define CERT_COMPARE_CERT_ID (UINT)16
#define CERT_COMPARE_CROSS_CERT_DIST_POINTS (UINT)17
#define CERT_COMPARE_PUBKEY_MD5_HASH (UINT)18
#define CERT_COMPARE_SUBJECT_INFO_ACCESS (UINT)19
#define CERT_COMPARE_HASH_STR (UINT)20
#define CERT_COMPARE_HAS_PRIVATE_KEY (UINT)21
#define CERT_SET_PROPERTY_IGNORE_PERSIST_ERROR_FLAG (UINT)2147483648
#define CERT_SET_PROPERTY_INHIBIT_PERSIST_FLAG (UINT)1073741824
#define CTL_ENTRY_FROM_PROP_CHAIN_FLAG (UINT)1
#define CRL_FIND_ANY (UINT)0
#define CRL_FIND_ISSUED_BY (UINT)1
#define CRL_FIND_EXISTING (UINT)2
#define CRL_FIND_ISSUED_FOR (UINT)3
#define CRL_FIND_ISSUED_BY_AKI_FLAG (UINT)1
#define CRL_FIND_ISSUED_BY_SIGNATURE_FLAG (UINT)2
#define CRL_FIND_ISSUED_BY_DELTA_FLAG (UINT)4
#define CRL_FIND_ISSUED_BY_BASE_FLAG (UINT)8
#define CRL_FIND_ISSUED_FOR_SET_STRONG_PROPERTIES_FLAG (UINT)16
#define CERT_STORE_ADD_NEW (UINT)1
#define CERT_STORE_ADD_USE_EXISTING (UINT)2
#define CERT_STORE_ADD_REPLACE_EXISTING (UINT)3
#define CERT_STORE_ADD_ALWAYS (UINT)4
#define CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES (UINT)5
#define CERT_STORE_ADD_NEWER (UINT)6
#define CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES (UINT)7
#define CERT_STORE_CERTIFICATE_CONTEXT (UINT)1
#define CERT_STORE_CRL_CONTEXT (UINT)2
#define CERT_STORE_CTL_CONTEXT (UINT)3
#define CTL_ANY_SUBJECT_TYPE (UINT)1
#define CTL_CERT_SUBJECT_TYPE (UINT)2
#define CTL_FIND_NO_LIST_ID_CBDATA (UINT)4294967295
#define CERT_STORE_CTRL_RESYNC (UINT)1
#define CERT_STORE_CTRL_NOTIFY_CHANGE (UINT)2
#define CERT_STORE_CTRL_COMMIT (UINT)3
#define CERT_STORE_CTRL_AUTO_RESYNC (UINT)4
#define CERT_STORE_CTRL_CANCEL_NOTIFY (UINT)5
#define CERT_STORE_LOCALIZED_NAME_PROP_ID (UINT)4096
#define CERT_CREATE_CONTEXT_NOCOPY_FLAG (UINT)1
#define CERT_CREATE_CONTEXT_SORTED_FLAG (UINT)2
#define CERT_CREATE_CONTEXT_NO_HCRYPTMSG_FLAG (UINT)4
#define CERT_CREATE_CONTEXT_NO_ENTRY_FLAG (UINT)8
#define CERT_PHYSICAL_STORE_ADD_ENABLE_FLAG (UINT)1
#define CERT_PHYSICAL_STORE_OPEN_DISABLE_FLAG (UINT)2
#define CERT_PHYSICAL_STORE_REMOTE_OPEN_DISABLE_FLAG (UINT)4
#define CERT_PHYSICAL_STORE_INSERT_COMPUTER_NAME_ENABLE_FLAG (UINT)8
#define CERT_PHYSICAL_STORE_PREDEFINED_ENUM_FLAG (UINT)1
#define CMSG_TRUSTED_SIGNER_FLAG (UINT)1
#define CMSG_SIGNER_ONLY_FLAG (UINT)2
#define CMSG_USE_SIGNER_INDEX_FLAG (UINT)4
#define CMSG_CMS_ENCAPSULATED_CTL_FLAG (UINT)32768
#define CMSG_ENCODE_SORTED_CTL_FLAG (UINT)1
#define CMSG_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG (UINT)2
#define CERT_VERIFY_INHIBIT_CTL_UPDATE_FLAG (UINT)1
#define CERT_VERIFY_TRUSTED_SIGNERS_FLAG (UINT)2
#define CERT_VERIFY_NO_TIME_CHECK_FLAG (UINT)4
#define CERT_VERIFY_ALLOW_MORE_USAGE_FLAG (UINT)8
#define CERT_VERIFY_UPDATED_CTL_FLAG (UINT)1
#define CERT_CONTEXT_REVOCATION_TYPE (UINT)1
#define CERT_VERIFY_REV_CHAIN_FLAG (UINT)1
#define CERT_VERIFY_CACHE_ONLY_BASED_REVOCATION (UINT)2
#define CERT_VERIFY_REV_ACCUMULATIVE_TIMEOUT_FLAG (UINT)4
#define CERT_VERIFY_REV_SERVER_OCSP_FLAG (UINT)8
#define CERT_VERIFY_REV_NO_OCSP_FAILOVER_TO_CRL_FLAG (UINT)16
#define CERT_VERIFY_REV_SERVER_OCSP_WIRE_ONLY_FLAG (UINT)32
#define CERT_UNICODE_IS_RDN_ATTRS_FLAG (UINT)1
#define CERT_CASE_INSENSITIVE_IS_RDN_ATTRS_FLAG (UINT)2
#define CRYPT_VERIFY_CERT_SIGN_SUBJECT_BLOB (UINT)1
#define CRYPT_VERIFY_CERT_SIGN_SUBJECT_CERT (UINT)2
#define CRYPT_VERIFY_CERT_SIGN_SUBJECT_CRL (UINT)3
#define CRYPT_VERIFY_CERT_SIGN_SUBJECT_OCSP_BASIC_SIGNED_RESPONSE (UINT)4
#define CRYPT_VERIFY_CERT_SIGN_ISSUER_PUBKEY (UINT)1
#define CRYPT_VERIFY_CERT_SIGN_ISSUER_CERT (UINT)2
#define CRYPT_VERIFY_CERT_SIGN_ISSUER_CHAIN (UINT)3
#define CRYPT_VERIFY_CERT_SIGN_ISSUER_NULL (UINT)4
#define CRYPT_VERIFY_CERT_SIGN_CHECK_WEAK_HASH_FLAG (UINT)8
#define CRYPT_ACQUIRE_WINDOW_HANDLE_FLAG (UINT)128
#define CRYPT_ACQUIRE_NCRYPT_KEY_FLAGS_MASK (UINT)458752
#define CRYPT_ACQUIRE_ALLOW_NCRYPT_KEY_FLAG (UINT)65536
#define CRYPT_ACQUIRE_PREFER_NCRYPT_KEY_FLAG (UINT)131072
#define CRYPT_ACQUIRE_ONLY_NCRYPT_KEY_FLAG (UINT)262144
#define CERT_XML_NAME_STR (UINT)4
#define CERT_NAME_STR_SEMICOLON_FLAG (UINT)1073741824
#define CERT_NAME_STR_NO_PLUS_FLAG (UINT)536870912
#define CERT_NAME_STR_NO_QUOTING_FLAG (UINT)268435456
#define CERT_NAME_STR_CRLF_FLAG (UINT)134217728
#define CERT_NAME_STR_COMMA_FLAG (UINT)67108864
#define CERT_NAME_STR_REVERSE_FLAG (UINT)33554432
#define CERT_NAME_STR_FORWARD_FLAG (UINT)16777216
#define CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG (UINT)65536
#define CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG (UINT)131072
#define CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG (UINT)262144
#define CERT_NAME_STR_FORCE_UTF8_DIR_STR_FLAG (UINT)524288
#define CERT_NAME_STR_DISABLE_UTF8_DIR_STR_FLAG (UINT)1048576
#define CERT_NAME_STR_ENABLE_PUNYCODE_FLAG (UINT)2097152
#define CERT_NAME_EMAIL_TYPE (UINT)1
#define CERT_NAME_RDN_TYPE (UINT)2
#define CERT_NAME_ATTR_TYPE (UINT)3
#define CERT_NAME_SIMPLE_DISPLAY_TYPE (UINT)4
#define CERT_NAME_FRIENDLY_DISPLAY_TYPE (UINT)5
#define CERT_NAME_DNS_TYPE (UINT)6
#define CERT_NAME_URL_TYPE (UINT)7
#define CERT_NAME_UPN_TYPE (UINT)8
#define CERT_NAME_ISSUER_FLAG (UINT)1
#define CERT_NAME_DISABLE_IE4_UTF8_FLAG (UINT)65536
#define CERT_NAME_SEARCH_ALL_NAMES_FLAG (UINT)2
#define CRYPT_MESSAGE_BARE_CONTENT_OUT_FLAG (UINT)1
#define CRYPT_MESSAGE_ENCAPSULATED_CONTENT_OUT_FLAG (UINT)2
#define CRYPT_MESSAGE_KEYID_SIGNER_FLAG (UINT)4
#define CRYPT_MESSAGE_SILENT_KEYSET_FLAG (UINT)64
#define CRYPT_MESSAGE_KEYID_RECIPIENT_FLAG (UINT)4
#define CRYPT_RETRIEVE_MULTIPLE_OBJECTS (UINT)1
#define CRYPT_CACHE_ONLY_RETRIEVAL (UINT)2
#define CRYPT_WIRE_ONLY_RETRIEVAL (UINT)4
#define CRYPT_DONT_CACHE_RESULT (UINT)8
#define CRYPT_ASYNC_RETRIEVAL (UINT)16
#define CRYPT_STICKY_CACHE_RETRIEVAL (UINT)4096
#define CRYPT_LDAP_SCOPE_BASE_ONLY_RETRIEVAL (UINT)8192
#define CRYPT_OFFLINE_CHECK_RETRIEVAL (UINT)16384
#define CRYPT_LDAP_INSERT_ENTRY_ATTRIBUTE (UINT)32768
#define CRYPT_LDAP_SIGN_RETRIEVAL (UINT)65536
#define CRYPT_NO_AUTH_RETRIEVAL (UINT)131072
#define CRYPT_LDAP_AREC_EXCLUSIVE_RETRIEVAL (UINT)262144
#define CRYPT_AIA_RETRIEVAL (UINT)524288
#define CRYPT_HTTP_POST_RETRIEVAL (UINT)1048576
#define CRYPT_PROXY_CACHE_RETRIEVAL (UINT)2097152
#define CRYPT_NOT_MODIFIED_RETRIEVAL (UINT)4194304
#define CRYPT_ENABLE_SSL_REVOCATION_RETRIEVAL (UINT)8388608
#define CRYPT_RANDOM_QUERY_STRING_RETRIEVAL (UINT)67108864
#define CRYPT_ENABLE_FILE_RETRIEVAL (UINT)134217728
#define CRYPT_CREATE_NEW_FLUSH_ENTRY (UINT)268435456
#define CRYPT_VERIFY_CONTEXT_SIGNATURE (UINT)32
#define CRYPT_VERIFY_DATA_HASH (UINT)64
#define CRYPT_KEEP_TIME_VALID (UINT)128
#define CRYPT_DONT_VERIFY_SIGNATURE (UINT)256
#define CRYPT_DONT_CHECK_TIME_VALIDITY (UINT)512
#define CRYPT_CHECK_FRESHNESS_TIME_VALIDITY (UINT)1024
#define CRYPT_ACCUMULATIVE_TIMEOUT (UINT)2048
#define CRYPT_OCSP_ONLY_RETRIEVAL (UINT)16777216
#define CRYPT_NO_OCSP_FAILOVER_TO_CRL_RETRIEVAL (UINT)33554432
#define CRYPTNET_URL_CACHE_PRE_FETCH_NONE (UINT)0
#define CRYPTNET_URL_CACHE_PRE_FETCH_BLOB (UINT)1
#define CRYPTNET_URL_CACHE_PRE_FETCH_CRL (UINT)2
#define CRYPTNET_URL_CACHE_PRE_FETCH_OCSP (UINT)3
#define CRYPTNET_URL_CACHE_PRE_FETCH_AUTOROOT_CAB (UINT)5
#define CRYPTNET_URL_CACHE_PRE_FETCH_DISALLOWED_CERT_CAB (UINT)6
#define CRYPTNET_URL_CACHE_PRE_FETCH_PIN_RULES_CAB (UINT)7
#define CRYPTNET_URL_CACHE_DEFAULT_FLUSH (UINT)0
#define CRYPTNET_URL_CACHE_DISABLE_FLUSH (UINT)4294967295
#define CRYPTNET_URL_CACHE_RESPONSE_NONE (UINT)0
#define CRYPTNET_URL_CACHE_RESPONSE_HTTP (UINT)1
#define CRYPTNET_URL_CACHE_RESPONSE_VALIDATED (UINT)32768
#define CRYPT_RETRIEVE_MAX_ERROR_CONTENT_LENGTH (UINT)4096
#define CRYPT_KEYID_MACHINE_FLAG (UINT)32
#define CRYPT_KEYID_ALLOC_FLAG (UINT)32768
#define CRYPT_KEYID_DELETE_FLAG (UINT)16
#define CRYPT_KEYID_SET_NEW_FLAG (UINT)8192
#define CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_DEFAULT (UINT)5
#define CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_DEFAULT (UINT)3
#define CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_DEFAULT (UINT)100000
#define CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_DEFAULT (UINT)10
#define CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DEFAULT (UINT)5
#define CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DISABLE (UINT)4294967295
#define CERT_CHAIN_ENABLE_MD2_MD4_FLAG (UINT)1
#define CERT_CHAIN_ENABLE_WEAK_RSA_ROOT_FLAG (UINT)2
#define CERT_CHAIN_ENABLE_WEAK_LOGGING_FLAG (UINT)4
#define CERT_CHAIN_ENABLE_ONLY_WEAK_LOGGING_FLAG (UINT)8
#define CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DEFAULT (UINT)1023
#define CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DISABLE (UINT)4294967295
#define CERT_CHAIN_MIN_PUB_KEY_BIT_LENGTH_DISABLE (UINT)4294967295
#define CERT_CHAIN_ENABLE_WEAK_SETTINGS_FLAG (UINT)2147483648
#define CERT_CHAIN_DISABLE_ALL_EKU_WEAK_FLAG (UINT)65536
#define CERT_CHAIN_ENABLE_ALL_EKU_HYGIENE_FLAG (UINT)131072
#define CERT_CHAIN_DISABLE_OPT_IN_SERVER_AUTH_WEAK_FLAG (UINT)262144
#define CERT_CHAIN_DISABLE_SERVER_AUTH_WEAK_FLAG (UINT)1048576
#define CERT_CHAIN_ENABLE_SERVER_AUTH_HYGIENE_FLAG (UINT)2097152
#define CERT_CHAIN_DISABLE_CODE_SIGNING_WEAK_FLAG (UINT)4194304
#define CERT_CHAIN_DISABLE_MOTW_CODE_SIGNING_WEAK_FLAG (UINT)8388608
#define CERT_CHAIN_ENABLE_CODE_SIGNING_HYGIENE_FLAG (UINT)16777216
#define CERT_CHAIN_ENABLE_MOTW_CODE_SIGNING_HYGIENE_FLAG (UINT)33554432
#define CERT_CHAIN_DISABLE_TIMESTAMP_WEAK_FLAG (UINT)67108864
#define CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_WEAK_FLAG (UINT)134217728
#define CERT_CHAIN_ENABLE_TIMESTAMP_HYGIENE_FLAG (UINT)268435456
#define CERT_CHAIN_ENABLE_MOTW_TIMESTAMP_HYGIENE_FLAG (UINT)536870912
#define CERT_CHAIN_MOTW_IGNORE_AFTER_TIME_WEAK_FLAG (UINT)1073741824
#define CERT_CHAIN_DISABLE_FILE_HASH_WEAK_FLAG (UINT)4096
#define CERT_CHAIN_DISABLE_MOTW_FILE_HASH_WEAK_FLAG (UINT)8192
#define CERT_CHAIN_DISABLE_TIMESTAMP_HASH_WEAK_FLAG (UINT)16384
#define CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_HASH_WEAK_FLAG (UINT)32768
#define CERT_CHAIN_AUTO_CURRENT_USER (UINT)1
#define CERT_CHAIN_AUTO_LOCAL_MACHINE (UINT)2
#define CERT_CHAIN_AUTO_IMPERSONATED (UINT)3
#define CERT_CHAIN_AUTO_PROCESS_INFO (UINT)4
#define CERT_CHAIN_AUTO_PINRULE_INFO (UINT)5
#define CERT_CHAIN_AUTO_NETWORK_INFO (UINT)6
#define CERT_CHAIN_AUTO_SERIAL_LOCAL_MACHINE (UINT)7
#define CERT_CHAIN_AUTO_HPKP_RULE_INFO (UINT)8
#define CERT_CHAIN_AUTO_FLUSH_DISABLE_FLAG (UINT)1
#define CERT_CHAIN_AUTO_LOG_CREATE_FLAG (UINT)2
#define CERT_CHAIN_AUTO_LOG_FREE_FLAG (UINT)4
#define CERT_CHAIN_AUTO_LOG_FLUSH_FLAG (UINT)8
#define CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_DEFAULT (UINT)5
#define CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_DEFAULT (UINT)500
#define CRYPTNET_OCSP_AFTER_CRL_DISABLE (UINT)4294967295
#define CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_DEFAULT (UINT)10
#define CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT (UINT)20
#define CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT (UINT)10
#define CRYPTNET_PRE_FETCH_TRIGGER_DISABLE (UINT)4294967295
#define CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_DEFAULT (UINT)60
#define CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_DEFAULT (UINT)50
#define CRYPTNET_CRL_BEFORE_OCSP_ENABLE (UINT)4294967295
#define CERT_CHAIN_OPTION_DISABLE_AIA_URL_RETRIEVAL (UINT)2
#define CERT_CHAIN_OPTION_ENABLE_SIA_URL_RETRIEVAL (UINT)4
#define CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_DEFAULT (UINT)12
#define CERT_CHAIN_CACHE_END_CERT (UINT)1
#define CERT_CHAIN_THREAD_STORE_SYNC (UINT)2
#define CERT_CHAIN_CACHE_ONLY_URL_RETRIEVAL (UINT)4
#define CERT_CHAIN_USE_LOCAL_MACHINE_STORE (UINT)8
#define CERT_CHAIN_ENABLE_CACHE_AUTO_UPDATE (UINT)16
#define CERT_CHAIN_ENABLE_SHARE_STORE (UINT)32
#define CERT_CHAIN_EXCLUSIVE_ENABLE_CA_FLAG (UINT)1
#define CERT_TRUST_NO_ERROR (UINT)0
#define CERT_TRUST_IS_NOT_TIME_VALID (UINT)1
#define CERT_TRUST_IS_NOT_TIME_NESTED (UINT)2
#define CERT_TRUST_IS_REVOKED (UINT)4
#define CERT_TRUST_IS_NOT_SIGNATURE_VALID (UINT)8
#define CERT_TRUST_IS_NOT_VALID_FOR_USAGE (UINT)16
#define CERT_TRUST_IS_UNTRUSTED_ROOT (UINT)32
#define CERT_TRUST_REVOCATION_STATUS_UNKNOWN (UINT)64
#define CERT_TRUST_IS_CYCLIC (UINT)128
#define CERT_TRUST_INVALID_EXTENSION (UINT)256
#define CERT_TRUST_INVALID_POLICY_CONSTRAINTS (UINT)512
#define CERT_TRUST_INVALID_BASIC_CONSTRAINTS (UINT)1024
#define CERT_TRUST_INVALID_NAME_CONSTRAINTS (UINT)2048
#define CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT (UINT)4096
#define CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT (UINT)8192
#define CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT (UINT)16384
#define CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT (UINT)32768
#define CERT_TRUST_IS_OFFLINE_REVOCATION (UINT)16777216
#define CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY (UINT)33554432
#define CERT_TRUST_IS_EXPLICIT_DISTRUST (UINT)67108864
#define CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT (UINT)134217728
#define CERT_TRUST_HAS_WEAK_SIGNATURE (UINT)1048576
#define CERT_TRUST_HAS_WEAK_HYGIENE (UINT)2097152
#define CERT_TRUST_IS_PARTIAL_CHAIN (UINT)65536
#define CERT_TRUST_CTL_IS_NOT_TIME_VALID (UINT)131072
#define CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID (UINT)262144
#define CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE (UINT)524288
#define CERT_TRUST_HAS_EXACT_MATCH_ISSUER (UINT)1
#define CERT_TRUST_HAS_KEY_MATCH_ISSUER (UINT)2
#define CERT_TRUST_HAS_NAME_MATCH_ISSUER (UINT)4
#define CERT_TRUST_IS_SELF_SIGNED (UINT)8
#define CERT_TRUST_AUTO_UPDATE_CA_REVOCATION (UINT)16
#define CERT_TRUST_AUTO_UPDATE_END_REVOCATION (UINT)32
#define CERT_TRUST_NO_OCSP_FAILOVER_TO_CRL (UINT)64
#define CERT_TRUST_IS_KEY_ROLLOVER (UINT)128
#define CERT_TRUST_SSL_HANDSHAKE_OCSP (UINT)262144
#define CERT_TRUST_SSL_TIME_VALID_OCSP (UINT)524288
#define CERT_TRUST_SSL_RECONNECT_OCSP (UINT)1048576
#define CERT_TRUST_HAS_PREFERRED_ISSUER (UINT)256
#define CERT_TRUST_HAS_ISSUANCE_CHAIN_POLICY (UINT)512
#define CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS (UINT)1024
#define CERT_TRUST_IS_PEER_TRUSTED (UINT)2048
#define CERT_TRUST_HAS_CRL_VALIDITY_EXTENDED (UINT)4096
#define CERT_TRUST_IS_FROM_EXCLUSIVE_TRUST_STORE (UINT)8192
#define CERT_TRUST_IS_CA_TRUSTED (UINT)16384
#define CERT_TRUST_HAS_AUTO_UPDATE_WEAK_SIGNATURE (UINT)32768
#define CERT_TRUST_HAS_ALLOW_WEAK_SIGNATURE (UINT)131072
#define CERT_TRUST_IS_COMPLEX_CHAIN (UINT)65536
#define CERT_TRUST_SSL_TIME_VALID (UINT)16777216
#define CERT_TRUST_NO_TIME_CHECK (UINT)33554432
#define USAGE_MATCH_TYPE_AND (UINT)0
#define USAGE_MATCH_TYPE_OR (UINT)1
#define CERT_CHAIN_STRONG_SIGN_DISABLE_END_CHECK_FLAG (UINT)1
#define CERT_CHAIN_REVOCATION_CHECK_END_CERT (UINT)268435456
#define CERT_CHAIN_REVOCATION_CHECK_CHAIN (UINT)536870912
#define CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT (UINT)1073741824
#define CERT_CHAIN_REVOCATION_CHECK_CACHE_ONLY (UINT)2147483648
#define CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT (UINT)134217728
#define CERT_CHAIN_REVOCATION_CHECK_OCSP_CERT (UINT)67108864
#define CERT_CHAIN_DISABLE_PASS1_QUALITY_FILTERING (UINT)64
#define CERT_CHAIN_RETURN_LOWER_QUALITY_CONTEXTS (UINT)128
#define CERT_CHAIN_DISABLE_AUTH_ROOT_AUTO_UPDATE (UINT)256
#define CERT_CHAIN_TIMESTAMP_TIME (UINT)512
#define CERT_CHAIN_ENABLE_PEER_TRUST (UINT)1024
#define CERT_CHAIN_DISABLE_MY_PEER_TRUST (UINT)2048
#define CERT_CHAIN_DISABLE_MD2_MD4 (UINT)4096
#define CERT_CHAIN_DISABLE_AIA (UINT)8192
#define CERT_CHAIN_HAS_MOTW (UINT)16384
#define CERT_CHAIN_ONLY_ADDITIONAL_AND_AUTH_ROOT (UINT)32768
#define CERT_CHAIN_OPT_IN_WEAK_SIGNATURE (UINT)65536
#define CERT_CHAIN_FIND_BY_ISSUER (UINT)1
#define CERT_CHAIN_POLICY_IGNORE_WEAK_SIGNATURE_FLAG (UINT)134217728
#define BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_CA_FLAG (UINT)2147483648
#define BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG (UINT)1073741824
#define MICROSOFT_ROOT_CERT_CHAIN_POLICY_ENABLE_TEST_ROOT_FLAG (UINT)65536
#define MICROSOFT_ROOT_CERT_CHAIN_POLICY_CHECK_APPLICATION_ROOT_FLAG (UINT)131072
#define MICROSOFT_ROOT_CERT_CHAIN_POLICY_DISABLE_FLIGHT_ROOT_FLAG (UINT)262144
#define SSL_F12_ERROR_TEXT_LENGTH (UINT)256
#define CERT_CHAIN_POLICY_SSL_F12_SUCCESS_LEVEL (UINT)0
#define CERT_CHAIN_POLICY_SSL_F12_WARNING_LEVEL (UINT)1
#define CERT_CHAIN_POLICY_SSL_F12_ERROR_LEVEL (UINT)2
#define CERT_CHAIN_POLICY_SSL_F12_NONE_CATEGORY (UINT)0
#define CERT_CHAIN_POLICY_SSL_F12_WEAK_CRYPTO_CATEGORY (UINT)1
#define CERT_CHAIN_POLICY_SSL_F12_ROOT_PROGRAM_CATEGORY (UINT)2
#define SSL_HPKP_PKP_HEADER_INDEX (UINT)0
#define SSL_HPKP_PKP_RO_HEADER_INDEX (UINT)1
#define SSL_HPKP_HEADER_COUNT (UINT)2
#define SSL_KEY_PIN_ERROR_TEXT_LENGTH (UINT)512
#define CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_ERROR (INT)-2
#define CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_ERROR (INT)-1
#define CERT_CHAIN_POLICY_SSL_KEY_PIN_SUCCESS (UINT)0
#define CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_WARNING (UINT)1
#define CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_WARNING (UINT)2
#define CRYPT_STRING_BASE64URI (UINT)13
#define CRYPT_STRING_ENCODEMASK (UINT)255
#define CRYPT_STRING_RESERVED100 (UINT)256
#define CRYPT_STRING_RESERVED200 (UINT)512
#define CRYPT_STRING_PERCENTESCAPE (UINT)134217728
#define CRYPT_STRING_HASHDATA (UINT)268435456
#define CRYPT_STRING_NOCRLF (UINT)1073741824
#define CRYPT_STRING_NOCR (UINT)2147483648
#define PKCS12_IMPORT_SILENT (UINT)64
#define PKCS12_ONLY_CERTIFICATES (UINT)1024
#define PKCS12_ONLY_NOT_ENCRYPTED_CERTIFICATES (UINT)2048
#define PKCS12_VIRTUAL_ISOLATION_KEY (UINT)65536
#define PKCS12_IMPORT_RESERVED_MASK (UINT)4294901760
#define PKCS12_ONLY_CERTIFICATES_PROVIDER_TYPE (UINT)0
#define REPORT_NO_PRIVATE_KEY (UINT)1
#define REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY (UINT)2
#define EXPORT_PRIVATE_KEYS (UINT)4
#define PKCS12_PROTECT_TO_DOMAIN_SIDS (UINT)32
#define PKCS12_EXPORT_SILENT (UINT)64
#define PKCS12_EXPORT_PBES2_PARAMS (UINT)128
#define PKCS12_DISABLE_ENCRYPT_CERTIFICATES (UINT)256
#define PKCS12_ENCRYPT_CERTIFICATES (UINT)512
#define PKCS12_EXPORT_ECC_CURVE_PARAMETERS (UINT)4096
#define PKCS12_EXPORT_ECC_CURVE_OID (UINT)8192
#define PKCS12_EXPORT_RESERVED_MASK (UINT)4294901760
#define CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_READ_FLAG (UINT)1
#define CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_WRITE_FLAG (UINT)2
#define CERT_SERVER_OCSP_RESPONSE_ASYNC_FLAG (UINT)1
#define CERT_SELECT_MAX_PARA (UINT)500
#define CERT_SELECT_BY_ISSUER_DISPLAYNAME (UINT)12
#define CERT_SELECT_BY_FRIENDLYNAME (UINT)13
#define CERT_SELECT_BY_THUMBPRINT (UINT)14
#define CERT_SELECT_ALLOW_EXPIRED (UINT)1
#define CERT_SELECT_TRUSTED_ROOT (UINT)2
#define CERT_SELECT_DISALLOW_SELFSIGNED (UINT)4
#define CERT_SELECT_HAS_PRIVATE_KEY (UINT)8
#define CERT_SELECT_HAS_KEY_FOR_SIGNATURE (UINT)16
#define CERT_SELECT_HAS_KEY_FOR_KEY_EXCHANGE (UINT)32
#define CERT_SELECT_HARDWARE_ONLY (UINT)64
#define CERT_SELECT_ALLOW_DUPLICATES (UINT)128
#define CERT_SELECT_IGNORE_AUTOSELECT (UINT)256
#define TIMESTAMP_FAILURE_BAD_ALG (UINT)0
#define TIMESTAMP_FAILURE_BAD_REQUEST (UINT)2
#define TIMESTAMP_FAILURE_BAD_FORMAT (UINT)5
#define TIMESTAMP_FAILURE_TIME_NOT_AVAILABLE (UINT)14
#define TIMESTAMP_FAILURE_POLICY_NOT_SUPPORTED (UINT)15
#define TIMESTAMP_FAILURE_EXTENSION_NOT_SUPPORTED (UINT)16
#define TIMESTAMP_FAILURE_INFO_NOT_AVAILABLE (UINT)17
#define TIMESTAMP_FAILURE_SYSTEM_FAILURE (UINT)25
#define TIMESTAMP_DONT_HASH_DATA (UINT)1
#define TIMESTAMP_VERIFY_CONTEXT_SIGNATURE (UINT)32
#define TIMESTAMP_NO_AUTH_RETRIEVAL (UINT)131072
#define CRYPT_OBJECT_LOCATOR_SPN_NAME_TYPE (UINT)1
#define CRYPT_OBJECT_LOCATOR_LAST_RESERVED_NAME_TYPE (UINT)32
#define CRYPT_OBJECT_LOCATOR_FIRST_RESERVED_USER_NAME_TYPE (UINT)33
#define CRYPT_OBJECT_LOCATOR_LAST_RESERVED_USER_NAME_TYPE (UINT)65535
#define CERT_FILE_HASH_USE_TYPE (UINT)1
#define CERT_TIMESTAMP_HASH_USE_TYPE (UINT)2

//--------------------------------------------------------------------------------
// Section: Types (580)
//--------------------------------------------------------------------------------
typedef enum {
    BCRYPT_CIPHER_OPERATION = 1,
    BCRYPT_HASH_OPERATION = 2,
    BCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION = 4,
    BCRYPT_SECRET_AGREEMENT_OPERATION = 8,
    BCRYPT_SIGNATURE_OPERATION = 16,
    BCRYPT_RNG_OPERATION = 32,
} BCRYPT_OPERATION;

typedef enum {
    NCRYPT_CIPHER_OPERATION = 1,
    NCRYPT_HASH_OPERATION = 2,
    NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION = 4,
    NCRYPT_SECRET_AGREEMENT_OPERATION = 8,
    NCRYPT_SIGNATURE_OPERATION = 16,
} NCRYPT_OPERATION;

typedef enum {
    CERT_FIND_ANY = 0,
    CERT_FIND_CERT_ID = 1048576,
    CERT_FIND_CTL_USAGE = 655360,
    CERT_FIND_ENHKEY_USAGE = 655360,
    CERT_FIND_EXISTING = 851968,
    CERT_FIND_HASH = 65536,
    CERT_FIND_HAS_PRIVATE_KEY = 1376256,
    CERT_FIND_ISSUER_ATTR = 196612,
    CERT_FIND_ISSUER_NAME = 131076,
    CERT_FIND_ISSUER_OF = 786432,
    CERT_FIND_ISSUER_STR = 524292,
    CERT_FIND_KEY_IDENTIFIER = 983040,
    CERT_FIND_KEY_SPEC = 589824,
    CERT_FIND_MD5_HASH = 262144,
    CERT_FIND_PROPERTY = 327680,
    CERT_FIND_PUBLIC_KEY = 393216,
    CERT_FIND_SHA1_HASH = 65536,
    CERT_FIND_SIGNATURE_HASH = 917504,
    CERT_FIND_SUBJECT_ATTR = 196615,
    CERT_FIND_SUBJECT_CERT = 720896,
    CERT_FIND_SUBJECT_NAME = 131079,
    CERT_FIND_SUBJECT_STR = 524295,
    CERT_FIND_CROSS_CERT_DIST_POINTS = 1114112,
    CERT_FIND_PUBKEY_MD5_HASH = 1179648,
    CERT_FIND_SUBJECT_STR_A = 458759,
    CERT_FIND_SUBJECT_STR_W = 524295,
    CERT_FIND_ISSUER_STR_A = 458756,
    CERT_FIND_ISSUER_STR_W = 524292,
    CERT_FIND_SUBJECT_INFO_ACCESS = 1245184,
    CERT_FIND_HASH_STR = 1310720,
    CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG = 1,
    CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG = 2,
    CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG = 4,
    CERT_FIND_NO_ENHKEY_USAGE_FLAG = 8,
    CERT_FIND_OR_ENHKEY_USAGE_FLAG = 16,
    CERT_FIND_VALID_ENHKEY_USAGE_FLAG = 32,
    CERT_FIND_OPTIONAL_CTL_USAGE_FLAG = 1,
    CERT_FIND_EXT_ONLY_CTL_USAGE_FLAG = 2,
    CERT_FIND_PROP_ONLY_CTL_USAGE_FLAG = 4,
    CERT_FIND_NO_CTL_USAGE_FLAG = 8,
    CERT_FIND_OR_CTL_USAGE_FLAG = 16,
    CERT_FIND_VALID_CTL_USAGE_FLAG = 32,
} CERT_FIND_FLAGS;

typedef enum {
    CERT_QUERY_OBJECT_FILE = 1,
    CERT_QUERY_OBJECT_BLOB = 2,
} CERT_QUERY_OBJECT_TYPE;

typedef enum {
    CERT_QUERY_CONTENT_CERT = 1,
    CERT_QUERY_CONTENT_CTL = 2,
    CERT_QUERY_CONTENT_CRL = 3,
    CERT_QUERY_CONTENT_SERIALIZED_STORE = 4,
    CERT_QUERY_CONTENT_SERIALIZED_CERT = 5,
    CERT_QUERY_CONTENT_SERIALIZED_CTL = 6,
    CERT_QUERY_CONTENT_SERIALIZED_CRL = 7,
    CERT_QUERY_CONTENT_PKCS7_SIGNED = 8,
    CERT_QUERY_CONTENT_PKCS7_UNSIGNED = 9,
    CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED = 10,
    CERT_QUERY_CONTENT_PKCS10 = 11,
    CERT_QUERY_CONTENT_PFX = 12,
    CERT_QUERY_CONTENT_CERT_PAIR = 13,
    CERT_QUERY_CONTENT_PFX_AND_LOAD = 14,
} CERT_QUERY_CONTENT_TYPE;

typedef enum {
    CERT_QUERY_CONTENT_FLAG_CERT = 2,
    CERT_QUERY_CONTENT_FLAG_CTL = 4,
    CERT_QUERY_CONTENT_FLAG_CRL = 8,
    CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE = 16,
    CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT = 32,
    CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL = 64,
    CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL = 128,
    CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED = 256,
    CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED = 512,
    CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED = 1024,
    CERT_QUERY_CONTENT_FLAG_PKCS10 = 2048,
    CERT_QUERY_CONTENT_FLAG_PFX = 4096,
    CERT_QUERY_CONTENT_FLAG_CERT_PAIR = 8192,
    CERT_QUERY_CONTENT_FLAG_PFX_AND_LOAD = 16384,
    CERT_QUERY_CONTENT_FLAG_ALL = 16382,
    CERT_QUERY_CONTENT_FLAG_ALL_ISSUER_CERT = 818,
} CERT_QUERY_CONTENT_TYPE_FLAGS;

typedef enum {
    CERT_QUERY_FORMAT_BINARY = 1,
    CERT_QUERY_FORMAT_BASE64_ENCODED = 2,
    CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED = 3,
} CERT_QUERY_FORMAT_TYPE;

typedef enum {
    CERT_QUERY_FORMAT_FLAG_BINARY = 2,
    CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED = 4,
    CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED = 8,
    CERT_QUERY_FORMAT_FLAG_ALL = 14,
} CERT_QUERY_FORMAT_TYPE_FLAGS;

typedef enum {
    X509_ASN_ENCODING = 1,
    PKCS_7_ASN_ENCODING = 65536,
} CERT_QUERY_ENCODING_TYPE;

typedef enum {
    CERT_SIMPLE_NAME_STR = 1,
    CERT_OID_NAME_STR = 2,
    CERT_X500_NAME_STR = 3,
} CERT_STRING_TYPE;

typedef enum {
    CRYPT_LOCAL = 1,
    CRYPT_DOMAIN = 2,
} BCRYPT_TABLE;

typedef enum {
    AT_KEYEXCHANGE = 1,
    AT_SIGNATURE = 2,
    CERT_NCRYPT_KEY_SPEC = 4294967295,
} CERT_KEY_SPEC;

typedef enum {
    BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE = 3,
    BCRYPT_CIPHER_INTERFACE = 1,
    BCRYPT_HASH_INTERFACE = 2,
    BCRYPT_RNG_INTERFACE = 6,
    BCRYPT_SECRET_AGREEMENT_INTERFACE = 4,
    BCRYPT_SIGNATURE_INTERFACE = 5,
    NCRYPT_KEY_STORAGE_INTERFACE = 65537,
    NCRYPT_SCHANNEL_INTERFACE = 65538,
    NCRYPT_SCHANNEL_SIGNATURE_INTERFACE = 65539,
} BCRYPT_INTERFACE;

typedef enum {
    CRYPTUI_WIZ_NO_UI = 1,
    CRYPTUI_WIZ_IGNORE_NO_UI_FLAG_FOR_CSPS = 2,
    CRYPTUI_WIZ_NO_UI_EXCEPT_CSP = 3,
    CRYPTUI_WIZ_IMPORT_ALLOW_CERT = 131072,
    CRYPTUI_WIZ_IMPORT_ALLOW_CRL = 262144,
    CRYPTUI_WIZ_IMPORT_ALLOW_CTL = 524288,
    CRYPTUI_WIZ_IMPORT_NO_CHANGE_DEST_STORE = 65536,
    CRYPTUI_WIZ_IMPORT_TO_LOCALMACHINE = 1048576,
    CRYPTUI_WIZ_IMPORT_TO_CURRENTUSER = 2097152,
    CRYPTUI_WIZ_IMPORT_REMOTE_DEST_STORE = 4194304,
    CRYPTUI_WIZ_EXPORT_PRIVATE_KEY = 256,
    CRYPTUI_WIZ_EXPORT_NO_DELETE_PRIVATE_KEY = 512,
} CRYPTUI_WIZ_FLAGS;

typedef enum {
    BCRYPT_PAD_NONE = 1,
    BCRYPT_PAD_OAEP = 4,
    BCRYPT_PAD_PKCS1 = 2,
    BCRYPT_PAD_PSS = 8,
    NCRYPT_SILENT_FLAG = 64,
    NCRYPT_NO_PADDING_FLAG = 1,
    NCRYPT_PAD_OAEP_FLAG = 4,
    NCRYPT_PAD_PKCS1_FLAG = 2,
    NCRYPT_REGISTER_NOTIFY_FLAG = 1,
    NCRYPT_UNREGISTER_NOTIFY_FLAG = 2,
    NCRYPT_MACHINE_KEY_FLAG = 32,
    NCRYPT_UNPROTECT_NO_DECRYPT = 1,
    NCRYPT_OVERWRITE_KEY_FLAG = 128,
    NCRYPT_NO_KEY_VALIDATION = 8,
    NCRYPT_WRITE_KEY_TO_LEGACY_STORE_FLAG = 512,
    NCRYPT_PAD_PSS_FLAG = 8,
    NCRYPT_PERSIST_FLAG = 2147483648,
    NCRYPT_PERSIST_ONLY_FLAG = 1073741824,
} NCRYPT_FLAGS;

typedef enum {
    CRYPT_STRING_BASE64HEADER = 0,
    CRYPT_STRING_BASE64 = 1,
    CRYPT_STRING_BINARY = 2,
    CRYPT_STRING_BASE64REQUESTHEADER = 3,
    CRYPT_STRING_HEX = 4,
    CRYPT_STRING_HEXASCII = 5,
    CRYPT_STRING_BASE64X509CRLHEADER = 9,
    CRYPT_STRING_HEXADDR = 10,
    CRYPT_STRING_HEXASCIIADDR = 11,
    CRYPT_STRING_HEXRAW = 12,
    CRYPT_STRING_STRICT = 536870912,
    CRYPT_STRING_BASE64_ANY = 6,
    CRYPT_STRING_ANY = 7,
    CRYPT_STRING_HEX_ANY = 8,
} CRYPT_STRING;

typedef enum {
    CRYPT_OID_INFO_PUBKEY_SIGN_KEY_FLAG = 2147483648,
    CRYPT_OID_INFO_PUBKEY_ENCRYPT_KEY_FLAG = 1073741824,
} CRYPT_IMPORT_PUBLIC_KEY_FLAGS;

typedef enum {
    CRYPT_XML_FLAG_DISABLE_EXTENSIONS = 268435456,
    CRYPT_XML_FLAG_NO_SERIALIZE = 2147483648,
    CRYPT_XML_SIGN_ADD_KEYVALUE = 1,
} CRYPT_XML_FLAGS;

typedef enum {
    CRYPT_ENCODE_ALLOC_FLAG = 32768,
    CRYPT_ENCODE_ENABLE_PUNYCODE_FLAG = 131072,
    CRYPT_UNICODE_NAME_ENCODE_DISABLE_CHECK_TYPE_FLAG = 1073741824,
    CRYPT_UNICODE_NAME_ENCODE_ENABLE_T61_UNICODE_FLAG = 2147483648,
    CRYPT_UNICODE_NAME_ENCODE_ENABLE_UTF8_UNICODE_FLAG = 536870912,
} CRYPT_ENCODE_OBJECT_FLAGS;

typedef enum {
    CRYPT_OBJECT_LOCATOR_RELEASE_SYSTEM_SHUTDOWN = 1,
    CRYPT_OBJECT_LOCATOR_RELEASE_SERVICE_STOP = 2,
    CRYPT_OBJECT_LOCATOR_RELEASE_PROCESS_EXIT = 3,
    CRYPT_OBJECT_LOCATOR_RELEASE_DLL_UNLOAD = 4,
} CRYPT_OBJECT_LOCATOR_RELEASE_REASON;

typedef enum {
    CRYPT_ACQUIRE_CACHE_FLAG = 1,
    CRYPT_ACQUIRE_COMPARE_KEY_FLAG = 4,
    CRYPT_ACQUIRE_NO_HEALING = 8,
    CRYPT_ACQUIRE_SILENT_FLAG = 64,
    CRYPT_ACQUIRE_USE_PROV_INFO_FLAG = 2,
} CRYPT_ACQUIRE_FLAGS;

typedef enum {
    CRYPT_GET_URL_FROM_PROPERTY = 1,
    CRYPT_GET_URL_FROM_EXTENSION = 2,
    CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE = 4,
    CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE = 8,
} CRYPT_GET_URL_FLAGS;

typedef enum {
    CERT_STORE_SAVE_AS_PKCS7 = 2,
    CERT_STORE_SAVE_AS_STORE = 1,
} CERT_STORE_SAVE_AS;

typedef enum {
    CRYPT_ANY = 4,
    CRYPT_UM = 1,
    CRYPT_KM = 2,
    CRYPT_MM = 3,
} BCRYPT_QUERY_PROVIDER_MODE;

typedef enum {
    CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG = 1,
    CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG = 2,
    CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG = 32768,
    CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG = 4,
    CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG = 8,
    CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG = 16384,
} CERT_FIND_CHAIN_IN_STORE_FLAGS;

typedef enum {
    CERT_STORE_CTRL_COMMIT_FORCE_FLAG = 1,
    CERT_STORE_CTRL_COMMIT_CLEAR_FLAG = 2,
    CERT_STORE_CTRL_INHIBIT_DUPLICATE_HANDLE_FLAG = 1,
} CERT_CONTROL_STORE_FLAGS;

typedef enum {
    BCRYPT_ALG_HANDLE_HMAC_FLAG = 8,
    BCRYPT_PROV_DISPATCH = 1,
    BCRYPT_HASH_REUSABLE_FLAG = 32,
} BCRYPT_OPEN_ALGORITHM_PROVIDER_FLAGS;

typedef enum {
    CERT_STORE_SAVE_TO_FILE = 1,
    CERT_STORE_SAVE_TO_FILENAME = 4,
    CERT_STORE_SAVE_TO_FILENAME_A = 3,
    CERT_STORE_SAVE_TO_FILENAME_W = 4,
    CERT_STORE_SAVE_TO_MEMORY = 2,
} CERT_STORE_SAVE_TO;

typedef enum {
    PP_CLIENT_HWND = 1,
    PP_DELETEKEY = 24,
    PP_KEYEXCHANGE_ALG = 14,
    PP_KEYEXCHANGE_PIN = 32,
    PP_KEYEXCHANGE_KEYSIZE = 12,
    PP_KEYSET_SEC_DESCR = 8,
    PP_PIN_PROMPT_STRING = 44,
    PP_ROOT_CERTSTORE = 46,
    PP_SIGNATURE_ALG = 15,
    PP_SIGNATURE_PIN = 33,
    PP_SIGNATURE_KEYSIZE = 13,
    PP_UI_PROMPT = 21,
    PP_USE_HARDWARE_RNG = 38,
    PP_USER_CERTSTORE = 42,
    PP_SECURE_KEYEXCHANGE_PIN = 47,
    PP_SECURE_SIGNATURE_PIN = 48,
    PP_SMARTCARD_READER = 43,
} CRYPT_SET_PROV_PARAM_ID;

typedef enum {
    KP_ALGID = 7,
    KP_CERTIFICATE = 26,
    KP_PERMISSIONS = 6,
    KP_SALT = 2,
    KP_SALT_EX = 10,
    KP_BLOCKLEN = 8,
    KP_GET_USE_COUNT = 42,
    KP_KEYLEN = 9,
} CRYPT_KEY_PARAM_ID;

typedef enum {
    CRYPT_EXPORTABLE = 1,
    CRYPT_USER_PROTECTED = 2,
    CRYPT_ARCHIVABLE = 16384,
    CRYPT_CREATE_IV = 512,
    CRYPT_CREATE_SALT = 4,
    CRYPT_DATA_KEY = 2048,
    CRYPT_FORCE_KEY_PROTECTION_HIGH = 32768,
    CRYPT_KEK = 1024,
    CRYPT_INITIATOR = 64,
    CRYPT_NO_SALT = 16,
    CRYPT_ONLINE = 128,
    CRYPT_PREGEN = 64,
    CRYPT_RECIPIENT = 16,
    CRYPT_SF = 256,
    CRYPT_SGCKEY = 8192,
    CRYPT_VOLATILE = 4096,
    CRYPT_MACHINE_KEYSET = 32,
    CRYPT_USER_KEYSET = 4096,
    PKCS12_PREFER_CNG_KSP = 256,
    PKCS12_ALWAYS_CNG_KSP = 512,
    PKCS12_ALLOW_OVERWRITE_KEY = 16384,
    PKCS12_NO_PERSIST_KEY = 32768,
    PKCS12_INCLUDE_EXTENDED_PROPERTIES = 16,
    CRYPT_OAEP = 64,
    CRYPT_BLOB_VER3 = 128,
    CRYPT_DESTROYKEY = 4,
    CRYPT_SSL2_FALLBACK = 2,
    CRYPT_Y_ONLY = 1,
    CRYPT_IPSEC_HMAC_KEY = 256,
    CERT_SET_KEY_PROV_HANDLE_PROP_ID = 1,
    CERT_SET_KEY_CONTEXT_PROP_ID = 1,
} CRYPT_KEY_FLAGS;

typedef enum {
    CMSG_DATA = 1,
    CMSG_SIGNED = 2,
    CMSG_ENVELOPED = 3,
    CMSG_SIGNED_AND_ENVELOPED = 4,
    CMSG_HASHED = 5,
} CRYPT_MSG_TYPE;

typedef enum {
    CERT_STORE_BACKUP_RESTORE_FLAG = 2048,
    CERT_STORE_CREATE_NEW_FLAG = 8192,
    CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG = 4,
    CERT_STORE_DELETE_FLAG = 16,
    CERT_STORE_ENUM_ARCHIVED_FLAG = 512,
    CERT_STORE_MAXIMUM_ALLOWED_FLAG = 4096,
    CERT_STORE_NO_CRYPT_RELEASE_FLAG = 1,
    CERT_STORE_OPEN_EXISTING_FLAG = 16384,
    CERT_STORE_READONLY_FLAG = 32768,
    CERT_STORE_SET_LOCALIZED_NAME_FLAG = 2,
    CERT_STORE_SHARE_CONTEXT_FLAG = 128,
    CERT_STORE_UPDATE_KEYID_FLAG = 1024,
} CERT_OPEN_STORE_FLAGS;

typedef enum {
    CRYPT_DEFAULT_CONTEXT_AUTO_RELEASE_FLAG = 1,
    CRYPT_DEFAULT_CONTEXT_PROCESS_FLAG = 2,
} CRYPT_DEFAULT_CONTEXT_FLAGS;

typedef enum {
    CRYPT_VERIFY_CERT_SIGN_DISABLE_MD2_MD4_FLAG = 1,
    CRYPT_VERIFY_CERT_SIGN_SET_STRONG_PROPERTIES_FLAG = 2,
    CRYPT_VERIFY_CERT_SIGN_RETURN_STRONG_PROPERTIES_FLAG = 4,
} CRYPT_VERIFY_CERT_FLAGS;

typedef enum {
    HP_HMAC_INFO = 5,
    HP_HASHVAL = 2,
} CRYPT_SET_HASH_PARAM;

typedef enum {
    CERT_SYSTEM_STORE_LOCATION_MASK = 16711680,
    CERT_SYSTEM_STORE_RELOCATE_FLAG = 2147483648,
} CERT_SYSTEM_STORE_FLAGS;

typedef enum {
    CERT_CREATE_SELFSIGN_NO_KEY_INFO = 2,
    CERT_CREATE_SELFSIGN_NO_SIGN = 1,
} CERT_CREATE_SELFSIGN_FLAGS;

typedef enum {
    CRYPT_DEFAULT_CONTEXT_CERT_SIGN_OID = 1,
    CRYPT_DEFAULT_CONTEXT_MULTI_CERT_SIGN_OID = 2,
} CRYPT_DEFAULT_CONTEXT_TYPE;

typedef enum {
    CRYPT_ALL_FUNCTIONS = 1,
    CRYPT_ALL_PROVIDERS = 2,
} BCRYPT_RESOLVE_PROVIDERS_FLAGS;

typedef enum {
    CTL_FIND_ANY = 0,
    CTL_FIND_SHA1_HASH = 1,
    CTL_FIND_MD5_HASH = 2,
    CTL_FIND_USAGE = 3,
    CTL_FIND_SAME_USAGE_FLAG = 1,
    CTL_FIND_EXISTING = 5,
    CTL_FIND_SUBJECT = 4,
} CERT_FIND_TYPE;

typedef enum {
    CRYPT_FIND_USER_KEYSET_FLAG = 1,
    CRYPT_FIND_MACHINE_KEYSET_FLAG = 2,
    CRYPT_FIND_SILENT_KEYSET_FLAG = 64,
} CRYPT_FIND_FLAGS;

typedef enum {
    CRYPTUI_HIDE_HIERARCHYPAGE = 1,
    CRYPTUI_HIDE_DETAILPAGE = 2,
    CRYPTUI_DISABLE_EDITPROPERTIES = 4,
    CRYPTUI_ENABLE_EDITPROPERTIES = 8,
    CRYPTUI_DISABLE_ADDTOSTORE = 16,
    CRYPTUI_ENABLE_ADDTOSTORE = 32,
    CRYPTUI_ACCEPT_DECLINE_STYLE = 64,
    CRYPTUI_IGNORE_UNTRUSTED_ROOT = 128,
    CRYPTUI_DONT_OPEN_STORES = 256,
    CRYPTUI_ONLY_OPEN_ROOT_STORE = 512,
    CRYPTUI_WARN_UNTRUSTED_ROOT = 1024,
    CRYPTUI_ENABLE_REVOCATION_CHECKING = 2048,
    CRYPTUI_WARN_REMOTE_TRUST = 4096,
    CRYPTUI_DISABLE_EXPORT = 8192,
    CRYPTUI_ENABLE_REVOCATION_CHECK_END_CERT = 16384,
    CRYPTUI_ENABLE_REVOCATION_CHECK_CHAIN = 32768,
    CRYPTUI_ENABLE_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT = 2048,
    CRYPTUI_DISABLE_HTMLLINK = 65536,
    CRYPTUI_DISABLE_ISSUERSTATEMENT = 131072,
    CRYPTUI_CACHE_ONLY_URL_RETRIEVAL = 262144,
} CRYPTUI_VIEWCERTIFICATE_FLAGS;

typedef enum {
    CRYPT_MIN_DEPENDENCIES = 1,
    CRYPT_PROCESS_ISOLATE = 65536,
} CRYPT_IMAGE_REF_FLAGS;

typedef enum {
    CRL_REASON_UNSPECIFIED = 0,
    CRL_REASON_KEY_COMPROMISE = 1,
    CRL_REASON_CA_COMPROMISE = 2,
    CRL_REASON_AFFILIATION_CHANGED = 3,
    CRL_REASON_SUPERSEDED = 4,
    CRL_REASON_CESSATION_OF_OPERATION = 5,
    CRL_REASON_CERTIFICATE_HOLD = 6,
    CRL_REASON_REMOVE_FROM_CRL = 8,
} CERT_REVOCATION_STATUS_REASON;

typedef enum {
    CERT_ROOT_PROGRAM_FLAG_LSC = 64,
    CERT_ROOT_PROGRAM_FLAG_ORG = 128,
    CERT_ROOT_PROGRAM_FLAG_SUBJECT_LOGO = 32,
} CERT_ROOT_PROGRAM_FLAGS;

typedef enum {
    CRYPT_XML_KEY_VALUE_TYPE_DSA = 1,
    CRYPT_XML_KEY_VALUE_TYPE_RSA = 2,
    CRYPT_XML_KEY_VALUE_TYPE_ECDSA = 3,
    CRYPT_XML_KEY_VALUE_TYPE_CUSTOM = 4,
} CRYPT_XML_KEY_VALUE_TYPE;

typedef enum {
    CERT_LOGOTYPE_NO_IMAGE_RESOLUTION_CHOICE = 0,
    CERT_LOGOTYPE_BITS_IMAGE_RESOLUTION_CHOICE = 1,
    CERT_LOGOTYPE_TABLE_SIZE_IMAGE_RESOLUTION_CHOICE = 2,
} CERT_LOGOTYPE_CHOICE;

typedef enum {
    CSS_HIDE_PROPERTIES = 1,
    CSS_ENABLEHOOK = 2,
    CSS_ALLOWMULTISELECT = 4,
    CSS_SHOW_HELP = 16,
    CSS_ENABLETEMPLATE = 32,
    CSS_ENABLETEMPLATEHANDLE = 64,
} CERT_SELECT_STRUCT_FLAGS;

typedef enum {
    CMSG_KEY_AGREE_EPHEMERAL_KEY_CHOICE = 1,
    CMSG_KEY_AGREE_STATIC_KEY_CHOICE = 2,
} CMSG_KEY_AGREE_OPTION;

typedef enum {
    CRYPTUI_WIZ_IMPORT_SUBJECT_FILE = 1,
    CRYPTUI_WIZ_IMPORT_SUBJECT_CERT_CONTEXT = 2,
    CRYPTUI_WIZ_IMPORT_SUBJECT_CTL_CONTEXT = 3,
    CRYPTUI_WIZ_IMPORT_SUBJECT_CRL_CONTEXT = 4,
    CRYPTUI_WIZ_IMPORT_SUBJECT_CERT_STORE = 5,
} CRYPTUI_WIZ_IMPORT_SUBJECT_OPTION;

typedef enum {
    CERT_LOGOTYPE_DIRECT_INFO_CHOICE = 1,
    CERT_LOGOTYPE_INDIRECT_INFO_CHOICE = 2,
} CERT_LOGOTYPE_OPTION;

typedef enum {
    CERT_STORE_PROV_EXTERNAL_FLAG = 1,
    CERT_STORE_PROV_DELETED_FLAG = 2,
    CERT_STORE_PROV_NO_PERSIST_FLAG = 4,
    CERT_STORE_PROV_SYSTEM_STORE_FLAG = 8,
    CERT_STORE_PROV_LM_SYSTEM_STORE_FLAG = 16,
} CERT_STORE_PROV_FLAGS;

typedef enum {
    CMSG_KEY_AGREE_ORIGINATOR_CERT = 1,
    CMSG_KEY_AGREE_ORIGINATOR_PUBLIC_KEY = 2,
} CMSG_KEY_AGREE_ORIGINATOR;

typedef enum {
    CRYPTUI_WIZ_DIGITAL_SIGN_SUBJECT_BLOB = 2,
    CRYPTUI_WIZ_DIGITAL_SIGN_SUBJECT_FILE = 1,
    CRYPTUI_WIZ_DIGITAL_SIGN_SUBJECT_NONE = 0,
} CRYPTUI_WIZ_DIGITAL_SIGN_SUBJECT;

typedef enum {
    CRYPT_EXCLUSIVE = 1,
    CRYPT_OVERRIDE = 65536,
} CRYPT_CONTEXT_CONFIG_FLAGS;

typedef enum {
    BCRYPT_DSA_PUBLIC_MAGIC = 1112560452,
    BCRYPT_DSA_PRIVATE_MAGIC = 1448104772,
} BCRYPT_DSA_MAGIC;

typedef enum {
    CRYPTUI_WIZ_DIGITAL_SIGN_CERT = 1,
    CRYPTUI_WIZ_DIGITAL_SIGN_STORE = 2,
    CRYPTUI_WIZ_DIGITAL_SIGN_PVK = 3,
    CRYPTUI_WIZ_DIGITAL_SIGN_NONE = 0,
} CRYPTUI_WIZ_DIGITAL_SIGN;

typedef enum {
    CRYPT_XML_X509DATA_TYPE_ISSUER_SERIAL = 1,
    CRYPT_XML_X509DATA_TYPE_SKI = 2,
    CRYPT_XML_X509DATA_TYPE_SUBJECT_NAME = 3,
    CRYPT_XML_X509DATA_TYPE_CERTIFICATE = 4,
    CRYPT_XML_X509DATA_TYPE_CRL = 5,
    CRYPT_XML_X509DATA_TYPE_CUSTOM = 6,
} CRYPT_XML_X509DATA_TYPE;

typedef enum {
    CERT_BIOMETRIC_PREDEFINED_DATA_CHOICE = 1,
    CERT_BIOMETRIC_OID_DATA_CHOICE = 2,
} CERT_BIOMETRIC_DATA_TYPE;

typedef enum {
    CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG = 1,
    CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG = 2,
    CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG = 4,
    CERT_CHAIN_POLICY_IGNORE_ALL_NOT_TIME_VALID_FLAGS = 7,
    CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG = 8,
    CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG = 16,
    CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG = 32,
    CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG = 64,
    CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG = 128,
    CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG = 256,
    CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG = 512,
    CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG = 1024,
    CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG = 2048,
    CERT_CHAIN_POLICY_IGNORE_ALL_REV_UNKNOWN_FLAGS = 3840,
    CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG = 32768,
    CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG = 16384,
    CERT_CHAIN_POLICY_IGNORE_NOT_SUPPORTED_CRITICAL_EXT_FLAG = 8192,
    CERT_CHAIN_POLICY_IGNORE_PEER_TRUST_FLAG = 4096,
} CERT_CHAIN_POLICY_FLAGS;

typedef enum {
    CERT_STRONG_SIGN_ENABLE_CRL_CHECK = 1,
    CERT_STRONG_SIGN_ENABLE_OCSP_CHECK = 2,
} CERT_STRONG_SIGN_FLAGS;

typedef enum {
    CERT_LOGOTYPE_GRAY_SCALE_IMAGE_INFO_CHOICE = 1,
    CERT_LOGOTYPE_COLOR_IMAGE_INFO_CHOICE = 2,
} CERT_LOGOTYPE_IMAGE_INFO_TYPE;

typedef enum {
    CRYPT_XML_STATUS_INTERNAL_REFERENCE = 1,
    CRYPT_XML_STATUS_KEY_AVAILABLE = 2,
    CRYPT_XML_STATUS_DIGESTING = 4,
    CRYPT_XML_STATUS_DIGEST_VALID = 8,
    CRYPT_XML_STATUS_SIGNATURE_VALID = 65536,
    CRYPT_XML_STATUS_OPENED_TO_ENCODE = 2147483648,
} CRYPT_XML_STATUS_INFO_STATUS;

typedef enum {
    CRYPT_XML_TRANSFORM_ON_STREAM = 1,
    CRYPT_XML_TRANSFORM_ON_NODESET = 2,
    CRYPT_XML_TRANSFORM_URI_QUERY_STRING = 3,
} CRYPT_XML_TRANSFORM_FLAGS;

typedef enum {
    CRYPT_XML_GROUP_ID_HASH_________ = 1,
    CRYPT_XML_GROUP_ID_SIGN_________ = 2,
} CRYPT_XML_GROUP_ID;

typedef enum {
    CRYPTUI_WIZ_EXPORT_CERT_CONTEXT = 1,
    CRYPTUI_WIZ_EXPORT_CTL_CONTEXT = 2,
    CRYPTUI_WIZ_EXPORT_CRL_CONTEXT = 3,
    CRYPTUI_WIZ_EXPORT_CERT_STORE = 4,
    CRYPTUI_WIZ_EXPORT_CERT_STORE_CERTIFICATES_ONLY = 5,
} CRYPTUI_WIZ_EXPORT_SUBJECT;

typedef enum {
    CERT_SELECT_BY_ENHKEY_USAGE = 1,
    CERT_SELECT_BY_KEY_USAGE = 2,
    CERT_SELECT_BY_POLICY_OID = 3,
    CERT_SELECT_BY_PROV_NAME = 4,
    CERT_SELECT_BY_EXTENSION = 5,
    CERT_SELECT_BY_SUBJECT_HOST_NAME = 6,
    CERT_SELECT_BY_ISSUER_ATTR = 7,
    CERT_SELECT_BY_SUBJECT_ATTR = 8,
    CERT_SELECT_BY_ISSUER_NAME = 9,
    CERT_SELECT_BY_PUBLIC_KEY = 10,
    CERT_SELECT_BY_TLS_SIGNATURES = 11,
} CERT_SELECT_CRITERIA_TYPE;

typedef enum {
    CRYPTUI_WIZ_DIGITAL_SIGN_COMMERCIAL = 1,
    CRYPTUI_WIZ_DIGITAL_SIGN_INDIVIDUAL = 2,
} CRYPTUI_WIZ_DIGITAL_SIGN_SIG_TYPE;

typedef enum {
    BCRYPT_RSAPUBLIC_MAGIC = 826364754,
    BCRYPT_RSAPRIVATE_MAGIC = 843141970,
    BCRYPT_RSAFULLPRIVATE_MAGIC = 859919186,
} BCRYPT_RSAKEY_BLOB_MAGIC;

typedef enum {
    CRYPT_XML_KEYINFO_TYPE_KEYNAME = 1,
    CRYPT_XML_KEYINFO_TYPE_KEYVALUE = 2,
    CRYPT_XML_KEYINFO_TYPE_RETRIEVAL = 3,
    CRYPT_XML_KEYINFO_TYPE_X509DATA = 4,
    CRYPT_XML_KEYINFO_TYPE_CUSTOM = 5,
} CRYPT_XML_KEYINFO_TYPE;

typedef enum {
    TIMESTAMP_VERSION = 1,
} CRYPT_TIMESTAMP_VERSION;

typedef enum {
    CRYPTUI_WIZ_DIGITAL_SIGN_PVK_FILE = 1,
    CRYPTUI_WIZ_DIGITAL_SIGN_PVK_PROV = 2,
} CRYPTUI_WIZ_DIGITAL_SIGN_PVK_OPTION;

typedef enum {
    CERT_ID_ISSUER_SERIAL_NUMBER = 1,
    CERT_ID_KEY_IDENTIFIER = 2,
    CERT_ID_SHA1_HASH = 3,
} CERT_ID_OPTION;

typedef enum {
    AUTHTYPE_CLIENT = 1,
    AUTHTYPE_SERVER = 2,
} HTTPSPOLICY_CALLBACK_DATA_AUTH_TYPE;

typedef enum {
    CRYPTUI_WIZ_EXPORT_FORMAT_DER = 1,
    CRYPTUI_WIZ_EXPORT_FORMAT_PFX = 2,
    CRYPTUI_WIZ_EXPORT_FORMAT_PKCS7 = 3,
    CRYPTUI_WIZ_EXPORT_FORMAT_BASE64 = 4,
    CRYPTUI_WIZ_EXPORT_FORMAT_CRL = 6,
    CRYPTUI_WIZ_EXPORT_FORMAT_CTL = 7,
} CRYPTUI_WIZ_EXPORT_FORMAT;

typedef enum {
    BCRYPT_DH_PUBLIC_MAGIC = 1112557636,
    BCRYPT_DH_PRIVATE_MAGIC = 1448101956,
} BCRYPT_DH_KEY_BLOB_MAGIC;

typedef enum {
    CRYPTUI_WIZ_DIGITAL_SIGN_ADD_CHAIN = 1,
    CRYPTUI_WIZ_DIGITAL_SIGN_ADD_CHAIN_NO_ROOT = 2,
    CRYPTUI_WIZ_DIGITAL_SIGN_ADD_NONE = 0,
} CRYPTUI_WIZ_DIGITAL_ADDITIONAL_CERT_CHOICE;

typedef enum {
    CRYPT_XML_STATUS_ERROR_NOT_RESOLVED = 1,
    CRYPT_XML_STATUS_ERROR_DIGEST_INVALID = 2,
    CRYPT_XML_STATUS_ERROR_NOT_SUPPORTED_ALGORITHM = 5,
    CRYPT_XML_STATUS_ERROR_NOT_SUPPORTED_TRANSFORM = 8,
    CRYPT_XML_STATUS_ERROR_SIGNATURE_INVALID = 65536,
    CRYPT_XML_STATUS_ERROR_KEYINFO_NOT_PARSED = 131072,
} CRYPT_XML_STATUS_ERROR_STATUS;

typedef enum {
    TIMESTAMP_STATUS_GRANTED = 0,
    TIMESTAMP_STATUS_GRANTED_WITH_MODS = 1,
    TIMESTAMP_STATUS_REJECTED = 2,
    TIMESTAMP_STATUS_WAITING = 3,
    TIMESTAMP_STATUS_REVOCATION_WARNING = 4,
    TIMESTAMP_STATUS_REVOKED = 5,
} CRYPT_TIMESTAMP_RESPONSE_STATUS;

typedef enum {
    NCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE = 3,
    NCRYPT_SECRET_AGREEMENT_INTERFACE = 4,
    NCRYPT_SIGNATURE_INTERFACE = 5,
} NCRYPT_ALGORITHM_NAME_CLASS;

typedef enum {
    CTL_MODIFY_REQUEST_ADD_TRUSTED = 3,
    CTL_MODIFY_REQUEST_ADD_NOT_TRUSTED = 1,
    CTL_MODIFY_REQUEST_REMOVE = 2,
} CTL_MODIFY_REQUEST_OPERATION;

typedef int HCRYPTASYNC;

typedef int HCERTCHAINENGINE;

typedef int BCRYPT_ALG_HANDLE;

typedef int BCRYPT_KEY_HANDLE;

typedef int CMS_KEY_INFO;

typedef int HMAC_Info;

typedef int SCHANNEL_ALG;

typedef int PROV_ENUMALGS;

typedef int PROV_ENUMALGS_EX;

typedef int PUBLICKEYSTRUC;

typedef int RSAPUBKEY;

typedef int PUBKEY;

typedef int DSSSEED;

typedef int PUBKEYVER3;

typedef int PRIVKEYVER3;

typedef int KEY_TYPE_SUBTYPE;

typedef int CERT_FORTEZZA_DATA_PROP;

typedef int CRYPT_RC4_KEY_STATE;

typedef int CRYPT_DES_KEY_STATE;

typedef int CRYPT_3DES_KEY_STATE;

typedef int CRYPT_AES_128_KEY_STATE;

typedef int CRYPT_AES_256_KEY_STATE;

typedef int CRYPTOAPI_BLOB;

typedef int CMS_DH_KEY_INFO;

typedef int BCRYPT_KEY_LENGTHS_STRUCT;

typedef int BCRYPT_OID;

typedef int BCRYPT_OID_LIST;

typedef int BCRYPT_PKCS1_PADDING_INFO;

typedef int BCRYPT_PSS_PADDING_INFO;

typedef int BCRYPT_OAEP_PADDING_INFO;

typedef int BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO;

typedef int BCryptBuffer;

typedef int BCryptBufferDesc;

typedef int BCRYPT_KEY_BLOB;

typedef int BCRYPT_RSAKEY_BLOB;

typedef int BCRYPT_ECCKEY_BLOB;

typedef int SSL_ECCKEY_BLOB;

typedef enum {
    BCRYPT_ECC_PRIME_SHORT_WEIERSTRASS_CURVE = 1,
    BCRYPT_ECC_PRIME_TWISTED_EDWARDS_CURVE = 2,
    BCRYPT_ECC_PRIME_MONTGOMERY_CURVE = 3,
} ECC_CURVE_TYPE_ENUM;

typedef enum {
    BCRYPT_NO_CURVE_GENERATION_ALG_ID = 0,
} ECC_CURVE_ALG_ID_ENUM;

typedef int BCRYPT_ECCFULLKEY_BLOB;

typedef int BCRYPT_DH_KEY_BLOB;

typedef int BCRYPT_DH_PARAMETER_HEADER;

typedef int BCRYPT_DSA_KEY_BLOB;

typedef enum {
    DSA_HASH_ALGORITHM_SHA1 = 0,
    DSA_HASH_ALGORITHM_SHA256 = 1,
    DSA_HASH_ALGORITHM_SHA512 = 2,
} HASHALGORITHM_ENUM;

typedef enum {
    DSA_FIPS186_2 = 0,
    DSA_FIPS186_3 = 1,
} DSAFIPSVERSION_ENUM;

typedef int BCRYPT_DSA_KEY_BLOB_V2;

typedef int BCRYPT_KEY_DATA_BLOB_HEADER;

typedef int BCRYPT_DSA_PARAMETER_HEADER;

typedef int BCRYPT_DSA_PARAMETER_HEADER_V2;

typedef int BCRYPT_ECC_CURVE_NAMES;

typedef enum {
    BCRYPT_HASH_OPERATION_HASH_DATA = 1,
    BCRYPT_HASH_OPERATION_FINISH_HASH = 2,
} BCRYPT_HASH_OPERATION_TYPE;

typedef int BCRYPT_MULTI_HASH_OPERATION;

typedef enum {
    BCRYPT_OPERATION_TYPE_HASH = 1,
} BCRYPT_MULTI_OPERATION_TYPE;

typedef int BCRYPT_MULTI_OBJECT_LENGTH_STRUCT;

typedef int BCRYPT_ALGORITHM_IDENTIFIER;

typedef int BCRYPT_PROVIDER_NAME;

typedef int BCRYPT_INTERFACE_VERSION;

typedef int CRYPT_INTERFACE_REG;

typedef int CRYPT_IMAGE_REG;

typedef int CRYPT_PROVIDER_REG;

typedef int CRYPT_PROVIDERS;

typedef int CRYPT_CONTEXT_CONFIG;

typedef int CRYPT_CONTEXT_FUNCTION_CONFIG;

typedef int CRYPT_CONTEXTS;

typedef int CRYPT_CONTEXT_FUNCTIONS;

typedef int CRYPT_CONTEXT_FUNCTION_PROVIDERS;

typedef int CRYPT_PROPERTY_REF;

typedef int CRYPT_IMAGE_REF;

typedef int CRYPT_PROVIDER_REF;

typedef int CRYPT_PROVIDER_REFS;

typedef int PFN_NCRYPT_ALLOC;

typedef int PFN_NCRYPT_FREE;

typedef int NCRYPT_ALLOC_PARA;

typedef int NCRYPT_CIPHER_PADDING_INFO;

typedef int NCRYPT_PLATFORM_ATTEST_PADDING_INFO;

typedef int NCRYPT_KEY_ATTEST_PADDING_INFO;

typedef int NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES;

typedef int NCRYPT_VSM_KEY_ATTESTATION_STATEMENT;

typedef int NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS;

typedef int NCRYPT_EXPORTED_ISOLATED_KEY_HEADER;

typedef int NCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE;

typedef int __NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT;

typedef int NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT;

typedef int NCryptAlgorithmName;

typedef int NCryptKeyName;

typedef int NCryptProviderName;

typedef int NCRYPT_UI_POLICY;

typedef int NCRYPT_KEY_ACCESS_POLICY_BLOB;

typedef int NCRYPT_SUPPORTED_LENGTHS;

typedef int NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO;

typedef int NCRYPT_PCP_TPM_FW_VERSION_INFO;

typedef int NCRYPT_PCP_RAW_POLICYDIGEST;

typedef int NCRYPT_KEY_BLOB_HEADER;

typedef int NCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER;

typedef int CRYPT_BIT_BLOB;

typedef int CRYPT_ALGORITHM_IDENTIFIER;

typedef int CRYPT_OBJID_TABLE;

typedef int CRYPT_HASH_INFO;

typedef int CERT_EXTENSION;

typedef int CRYPT_ATTRIBUTE_TYPE_VALUE;

typedef int CRYPT_ATTRIBUTE;

typedef int CRYPT_ATTRIBUTES;

typedef int CERT_RDN_ATTR;

typedef int CERT_RDN;

typedef int CERT_NAME_INFO;

typedef int CERT_NAME_VALUE;

typedef int CERT_PUBLIC_KEY_INFO;

typedef int CRYPT_ECC_PRIVATE_KEY_INFO;

typedef int CRYPT_PRIVATE_KEY_INFO;

typedef int CRYPT_ENCRYPTED_PRIVATE_KEY_INFO;

typedef int PCRYPT_DECRYPT_PRIVATE_KEY_FUNC;

typedef int PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC;

typedef int PCRYPT_RESOLVE_HCRYPTPROV_FUNC;

typedef int CRYPT_PKCS8_IMPORT_PARAMS;

typedef int CRYPT_PKCS8_EXPORT_PARAMS;

typedef int CERT_INFO;

typedef int CRL_ENTRY;

typedef int CRL_INFO;

typedef int CERT_OR_CRL_BLOB;

typedef int CERT_OR_CRL_BUNDLE;

typedef int CERT_REQUEST_INFO;

typedef int CERT_KEYGEN_REQUEST_INFO;

typedef int CERT_SIGNED_CONTENT_INFO;

typedef int CTL_USAGE;

typedef int CTL_ENTRY;

typedef int CTL_INFO;

typedef int CRYPT_TIME_STAMP_REQUEST_INFO;

typedef int CRYPT_ENROLLMENT_NAME_VALUE_PAIR;

typedef int CRYPT_CSP_PROVIDER;

typedef int PFN_CRYPT_ALLOC;

typedef int PFN_CRYPT_FREE;

typedef int CRYPT_ENCODE_PARA;

typedef int CRYPT_DECODE_PARA;

typedef int CERT_EXTENSIONS;

typedef int CERT_AUTHORITY_KEY_ID_INFO;

typedef int CERT_PRIVATE_KEY_VALIDITY;

typedef int CERT_KEY_ATTRIBUTES_INFO;

typedef int CERT_POLICY_ID;

typedef int CERT_KEY_USAGE_RESTRICTION_INFO;

typedef int CERT_OTHER_NAME;

typedef int CERT_ALT_NAME_ENTRY;

typedef int CERT_ALT_NAME_INFO;

typedef int CERT_BASIC_CONSTRAINTS_INFO;

typedef int CERT_BASIC_CONSTRAINTS2_INFO;

typedef int CERT_POLICY_QUALIFIER_INFO;

typedef int CERT_POLICY_INFO;

typedef int CERT_POLICIES_INFO;

typedef int CERT_POLICY_QUALIFIER_NOTICE_REFERENCE;

typedef int CERT_POLICY_QUALIFIER_USER_NOTICE;

typedef int CPS_URLS;

typedef int CERT_POLICY95_QUALIFIER1;

typedef int CERT_POLICY_MAPPING;

typedef int CERT_POLICY_MAPPINGS_INFO;

typedef int CERT_POLICY_CONSTRAINTS_INFO;

typedef int CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;

typedef int CRYPT_CONTENT_INFO;

typedef int CRYPT_SEQUENCE_OF_ANY;

typedef int CERT_AUTHORITY_KEY_ID2_INFO;

typedef int CERT_ACCESS_DESCRIPTION;

typedef int CERT_AUTHORITY_INFO_ACCESS;

typedef int CRL_DIST_POINT_NAME;

typedef int CRL_DIST_POINT;

typedef int CRL_DIST_POINTS_INFO;

typedef int CROSS_CERT_DIST_POINTS_INFO;

typedef int CERT_PAIR;

typedef int CRL_ISSUING_DIST_POINT;

typedef int CERT_GENERAL_SUBTREE;

typedef int CERT_NAME_CONSTRAINTS_INFO;

typedef int CERT_DSS_PARAMETERS;

typedef int CERT_DH_PARAMETERS;

typedef int CERT_ECC_SIGNATURE;

typedef int CERT_X942_DH_VALIDATION_PARAMS;

typedef int CERT_X942_DH_PARAMETERS;

typedef int CRYPT_X942_OTHER_INFO;

typedef int CRYPT_ECC_CMS_SHARED_INFO;

typedef int CRYPT_RC2_CBC_PARAMETERS;

typedef int CRYPT_SMIME_CAPABILITY;

typedef int CRYPT_SMIME_CAPABILITIES;

typedef int CERT_QC_STATEMENT;

typedef int CERT_QC_STATEMENTS_EXT_INFO;

typedef int CRYPT_MASK_GEN_ALGORITHM;

typedef int CRYPT_RSA_SSA_PSS_PARAMETERS;

typedef int CRYPT_PSOURCE_ALGORITHM;

typedef int CRYPT_RSAES_OAEP_PARAMETERS;

typedef int CMC_TAGGED_ATTRIBUTE;

typedef int CMC_TAGGED_CERT_REQUEST;

typedef int CMC_TAGGED_REQUEST;

typedef int CMC_TAGGED_CONTENT_INFO;

typedef int CMC_TAGGED_OTHER_MSG;

typedef int CMC_DATA_INFO;

typedef int CMC_RESPONSE_INFO;

typedef int CMC_PEND_INFO;

typedef int CMC_STATUS_INFO;

typedef int CMC_ADD_EXTENSIONS_INFO;

typedef int CMC_ADD_ATTRIBUTES_INFO;

typedef int CERT_TEMPLATE_EXT;

typedef int CERT_HASHED_URL;

typedef int CERT_LOGOTYPE_DETAILS;

typedef int CERT_LOGOTYPE_REFERENCE;

typedef int CERT_LOGOTYPE_IMAGE_INFO;

typedef int CERT_LOGOTYPE_IMAGE;

typedef int CERT_LOGOTYPE_AUDIO_INFO;

typedef int CERT_LOGOTYPE_AUDIO;

typedef int CERT_LOGOTYPE_DATA;

typedef int CERT_LOGOTYPE_INFO;

typedef int CERT_OTHER_LOGOTYPE_INFO;

typedef int CERT_LOGOTYPE_EXT_INFO;

typedef int CERT_BIOMETRIC_DATA;

typedef int CERT_BIOMETRIC_EXT_INFO;

typedef int OCSP_SIGNATURE_INFO;

typedef int OCSP_SIGNED_REQUEST_INFO;

typedef int OCSP_CERT_ID;

typedef int OCSP_REQUEST_ENTRY;

typedef int OCSP_REQUEST_INFO;

typedef int OCSP_RESPONSE_INFO;

typedef int OCSP_BASIC_SIGNED_RESPONSE_INFO;

typedef int OCSP_BASIC_REVOKED_INFO;

typedef int OCSP_BASIC_RESPONSE_ENTRY;

typedef int OCSP_BASIC_RESPONSE_INFO;

typedef int CERT_SUPPORTED_ALGORITHM_INFO;

typedef int CERT_TPM_SPECIFICATION_INFO;

typedef int CRYPT_OID_FUNC_ENTRY;

typedef int PFN_CRYPT_ENUM_OID_FUNC;

typedef int CRYPT_OID_INFO;

typedef int PFN_CRYPT_ENUM_OID_INFO;

typedef int CERT_STRONG_SIGN_SERIALIZED_INFO;

typedef int CERT_STRONG_SIGN_PARA;

typedef int CERT_ISSUER_SERIAL_NUMBER;

typedef int CERT_ID;

typedef int CMSG_SIGNER_ENCODE_INFO;

typedef int CMSG_SIGNED_ENCODE_INFO;

typedef int CMSG_ENVELOPED_ENCODE_INFO;

typedef int CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;

typedef int CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;

typedef int CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;

typedef int CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;

typedef int CMSG_RECIPIENT_ENCODE_INFO;

typedef int CMSG_RC2_AUX_INFO;

typedef int CMSG_SP3_COMPATIBLE_AUX_INFO;

typedef int CMSG_RC4_AUX_INFO;

typedef int CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;

typedef int CMSG_HASHED_ENCODE_INFO;

typedef int CMSG_ENCRYPTED_ENCODE_INFO;

typedef int PFN_CMSG_STREAM_OUTPUT;

typedef int CMSG_STREAM_INFO;

typedef int CMSG_SIGNER_INFO;

typedef int CMSG_CMS_SIGNER_INFO;

typedef int CMSG_KEY_TRANS_RECIPIENT_INFO;

typedef int CMSG_RECIPIENT_ENCRYPTED_KEY_INFO;

typedef int CMSG_KEY_AGREE_RECIPIENT_INFO;

typedef int CMSG_MAIL_LIST_RECIPIENT_INFO;

typedef int CMSG_CMS_RECIPIENT_INFO;

typedef int CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;

typedef int CMSG_CTRL_DECRYPT_PARA;

typedef int CMSG_CTRL_KEY_TRANS_DECRYPT_PARA;

typedef int CMSG_CTRL_KEY_AGREE_DECRYPT_PARA;

typedef int CMSG_CTRL_MAIL_LIST_DECRYPT_PARA;

typedef int CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;

typedef int CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;

typedef int PFN_CMSG_ALLOC;

typedef int PFN_CMSG_FREE;

typedef int PFN_CMSG_GEN_ENCRYPT_KEY;

typedef int PFN_CMSG_EXPORT_ENCRYPT_KEY;

typedef int PFN_CMSG_IMPORT_ENCRYPT_KEY;

typedef int CMSG_CONTENT_ENCRYPT_INFO;

typedef int PFN_CMSG_GEN_CONTENT_ENCRYPT_KEY;

typedef int CMSG_KEY_TRANS_ENCRYPT_INFO;

typedef int PFN_CMSG_EXPORT_KEY_TRANS;

typedef int CMSG_KEY_AGREE_KEY_ENCRYPT_INFO;

typedef int CMSG_KEY_AGREE_ENCRYPT_INFO;

typedef int PFN_CMSG_EXPORT_KEY_AGREE;

typedef int CMSG_MAIL_LIST_ENCRYPT_INFO;

typedef int PFN_CMSG_EXPORT_MAIL_LIST;

typedef int PFN_CMSG_IMPORT_KEY_TRANS;

typedef int PFN_CMSG_IMPORT_KEY_AGREE;

typedef int PFN_CMSG_IMPORT_MAIL_LIST;

typedef int CMSG_CNG_CONTENT_DECRYPT_INFO;

typedef int PFN_CMSG_CNG_IMPORT_KEY_TRANS;

typedef int PFN_CMSG_CNG_IMPORT_KEY_AGREE;

typedef int PFN_CMSG_CNG_IMPORT_CONTENT_ENCRYPT_KEY;

typedef int CERT_CONTEXT;

typedef int CRL_CONTEXT;

typedef int CTL_CONTEXT;

typedef enum {
    KeyTypeOther = 0,
    KeyTypeVirtualSmartCard = 1,
    KeyTypePhysicalSmartCard = 2,
    KeyTypePassport = 3,
    KeyTypePassportRemote = 4,
    KeyTypePassportSmartCard = 5,
    KeyTypeHardware = 6,
    KeyTypeSoftware = 7,
    KeyTypeSelfSigned = 8,
} CertKeyType;

typedef int CRYPT_KEY_PROV_PARAM;

typedef int CRYPT_KEY_PROV_INFO;

typedef int CERT_KEY_CONTEXT;

typedef int ROOT_INFO_LUID;

typedef int CRYPT_SMART_CARD_ROOT_INFO;

typedef int CERT_SYSTEM_STORE_RELOCATE_PARA;

typedef int CERT_REGISTRY_STORE_CLIENT_GPT_PARA;

typedef int CERT_REGISTRY_STORE_ROAMING_PARA;

typedef int CERT_LDAP_STORE_OPENED_PARA;

typedef int CERT_STORE_PROV_INFO;

typedef int PFN_CERT_DLL_OPEN_STORE_PROV_FUNC;

typedef int PFN_CERT_STORE_PROV_CLOSE;

typedef int PFN_CERT_STORE_PROV_READ_CERT;

typedef int PFN_CERT_STORE_PROV_WRITE_CERT;

typedef int PFN_CERT_STORE_PROV_DELETE_CERT;

typedef int PFN_CERT_STORE_PROV_SET_CERT_PROPERTY;

typedef int PFN_CERT_STORE_PROV_READ_CRL;

typedef int PFN_CERT_STORE_PROV_WRITE_CRL;

typedef int PFN_CERT_STORE_PROV_DELETE_CRL;

typedef int PFN_CERT_STORE_PROV_SET_CRL_PROPERTY;

typedef int PFN_CERT_STORE_PROV_READ_CTL;

typedef int PFN_CERT_STORE_PROV_WRITE_CTL;

typedef int PFN_CERT_STORE_PROV_DELETE_CTL;

typedef int PFN_CERT_STORE_PROV_SET_CTL_PROPERTY;

typedef int PFN_CERT_STORE_PROV_CONTROL;

typedef int CERT_STORE_PROV_FIND_INFO;

typedef int PFN_CERT_STORE_PROV_FIND_CERT;

typedef int PFN_CERT_STORE_PROV_FREE_FIND_CERT;

typedef int PFN_CERT_STORE_PROV_GET_CERT_PROPERTY;

typedef int PFN_CERT_STORE_PROV_FIND_CRL;

typedef int PFN_CERT_STORE_PROV_FREE_FIND_CRL;

typedef int PFN_CERT_STORE_PROV_GET_CRL_PROPERTY;

typedef int PFN_CERT_STORE_PROV_FIND_CTL;

typedef int PFN_CERT_STORE_PROV_FREE_FIND_CTL;

typedef int PFN_CERT_STORE_PROV_GET_CTL_PROPERTY;

typedef int CRL_FIND_ISSUED_FOR_PARA;

typedef int CTL_ANY_SUBJECT_INFO;

typedef int CTL_FIND_USAGE_PARA;

typedef int CTL_FIND_SUBJECT_PARA;

typedef int PFN_CERT_CREATE_CONTEXT_SORT_FUNC;

typedef int CERT_CREATE_CONTEXT_PARA;

typedef int CERT_SYSTEM_STORE_INFO;

typedef int CERT_PHYSICAL_STORE_INFO;

typedef int PFN_CERT_ENUM_SYSTEM_STORE_LOCATION;

typedef int PFN_CERT_ENUM_SYSTEM_STORE;

typedef int PFN_CERT_ENUM_PHYSICAL_STORE;

typedef int CTL_VERIFY_USAGE_PARA;

typedef int CTL_VERIFY_USAGE_STATUS;

typedef int CERT_REVOCATION_CRL_INFO;

typedef int CERT_REVOCATION_PARA;

typedef int CERT_REVOCATION_STATUS;

typedef int CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO;

typedef int CRYPT_VERIFY_CERT_SIGN_WEAK_HASH_INFO;

typedef int PFN_CRYPT_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC;

typedef int PFN_CRYPT_SIGN_AND_ENCODE_HASH_FUNC;

typedef int PFN_CRYPT_VERIFY_ENCODED_SIGNATURE_FUNC;

typedef int CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;

typedef int PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC;

typedef int PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_FROM_BCRYPT_HANDLE_FUNC;

typedef int PFN_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC;

typedef int PFN_IMPORT_PRIV_KEY_FUNC;

typedef int PFN_EXPORT_PRIV_KEY_FUNC;

typedef int PFN_CRYPT_GET_SIGNER_CERTIFICATE;

typedef int CRYPT_SIGN_MESSAGE_PARA;

typedef int CRYPT_VERIFY_MESSAGE_PARA;

typedef int CRYPT_ENCRYPT_MESSAGE_PARA;

typedef int CRYPT_DECRYPT_MESSAGE_PARA;

typedef int CRYPT_HASH_MESSAGE_PARA;

typedef int CRYPT_KEY_SIGN_MESSAGE_PARA;

typedef int CRYPT_KEY_VERIFY_MESSAGE_PARA;

typedef int CERT_CHAIN;

typedef int PFN_CRYPT_ASYNC_PARAM_FREE_FUNC;

typedef int CRYPT_BLOB_ARRAY;

typedef int CRYPT_CREDENTIALS;

typedef int CRYPT_PASSWORD_CREDENTIALSA;

typedef int CRYPT_PASSWORD_CREDENTIALSW;

typedef int PFN_FREE_ENCODED_OBJECT_FUNC;

typedef int CRYPTNET_URL_CACHE_PRE_FETCH_INFO;

typedef int CRYPTNET_URL_CACHE_FLUSH_INFO;

typedef int CRYPTNET_URL_CACHE_RESPONSE_INFO;

typedef int CRYPT_RETRIEVE_AUX_INFO;

typedef int PFN_CRYPT_CANCEL_RETRIEVAL;

typedef int PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC;

typedef int CRYPT_ASYNC_RETRIEVAL_COMPLETION;

typedef int PFN_CANCEL_ASYNC_RETRIEVAL_FUNC;

typedef int CRYPT_URL_ARRAY;

typedef int CRYPT_URL_INFO;

typedef int CERT_CRL_CONTEXT_PAIR;

typedef int CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO;

typedef int PFN_CRYPT_ENUM_KEYID_PROP;

typedef int CERT_CHAIN_ENGINE_CONFIG;

typedef int CERT_TRUST_STATUS;

typedef int CERT_REVOCATION_INFO;

typedef int CERT_TRUST_LIST_INFO;

typedef int CERT_CHAIN_ELEMENT;

typedef int CERT_SIMPLE_CHAIN;

typedef int CERT_CHAIN_CONTEXT;

typedef int CERT_USAGE_MATCH;

typedef int CTL_USAGE_MATCH;

typedef int CERT_CHAIN_PARA;

typedef int CERT_REVOCATION_CHAIN_PARA;

typedef int CRL_REVOCATION_INFO;

typedef int PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK;

typedef int CERT_CHAIN_FIND_BY_ISSUER_PARA;

typedef int CERT_CHAIN_POLICY_PARA;

typedef int CERT_CHAIN_POLICY_STATUS;

typedef int AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef int AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;

typedef int AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef int HTTPSPolicyCallbackData;

typedef int EV_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef int EV_EXTRA_CERT_CHAIN_POLICY_STATUS;

typedef int SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS;

typedef int SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef int SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef int SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS;

typedef int CRYPT_PKCS12_PBE_PARAMS;

typedef int PKCS12_PBES2_EXPORT_PARAMS;

typedef int CERT_SERVER_OCSP_RESPONSE_CONTEXT;

typedef int PFN_CERT_SERVER_OCSP_RESPONSE_UPDATE_CALLBACK;

typedef int CERT_SERVER_OCSP_RESPONSE_OPEN_PARA;

typedef int CERT_SELECT_CHAIN_PARA;

typedef int CERT_SELECT_CRITERIA;

typedef int CRYPT_TIMESTAMP_REQUEST;

typedef int CRYPT_TIMESTAMP_RESPONSE;

typedef int CRYPT_TIMESTAMP_ACCURACY;

typedef int CRYPT_TIMESTAMP_INFO;

typedef int CRYPT_TIMESTAMP_CONTEXT;

typedef int CRYPT_TIMESTAMP_PARA;

typedef int PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH;

typedef int PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET;

typedef int PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_RELEASE;

typedef int PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_PASSWORD;

typedef int PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE;

typedef int PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_IDENTIFIER;

typedef int CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE;

typedef int PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_INITIALIZE;

typedef int PFN_CERT_IS_WEAK_HASH;

typedef int PFNCryptStreamOutputCallback;

typedef int NCRYPT_PROTECT_STREAM_INFO;

typedef int PFNCryptStreamOutputCallbackEx;

typedef int NCRYPT_PROTECT_STREAM_INFO_EX;

typedef enum {
    CRYPT_XML_CHARSET_AUTO = 0,
    CRYPT_XML_CHARSET_UTF8 = 1,
    CRYPT_XML_CHARSET_UTF16LE = 2,
    CRYPT_XML_CHARSET_UTF16BE = 3,
} CRYPT_XML_CHARSET;

typedef int CRYPT_XML_BLOB;

typedef int CRYPT_XML_DATA_BLOB;

typedef enum {
    CRYPT_XML_PROPERTY_MAX_HEAP_SIZE = 1,
    CRYPT_XML_PROPERTY_SIGNATURE_LOCATION = 2,
    CRYPT_XML_PROPERTY_MAX_SIGNATURES = 3,
    CRYPT_XML_PROPERTY_DOC_DECLARATION = 4,
    CRYPT_XML_PROPERTY_XML_OUTPUT_CHARSET = 5,
} CRYPT_XML_PROPERTY_ID;

typedef int CRYPT_XML_PROPERTY;

typedef int PFN_CRYPT_XML_WRITE_CALLBACK;

typedef int PFN_CRYPT_XML_DATA_PROVIDER_READ;

typedef int PFN_CRYPT_XML_DATA_PROVIDER_CLOSE;

typedef int CRYPT_XML_DATA_PROVIDER;

typedef int PFN_CRYPT_XML_CREATE_TRANSFORM;

typedef int CRYPT_XML_STATUS;

typedef int CRYPT_XML_ALGORITHM;

typedef int CRYPT_XML_TRANSFORM_INFO;

typedef int CRYPT_XML_TRANSFORM_CHAIN_CONFIG;

typedef int CRYPT_XML_KEY_DSA_KEY_VALUE;

typedef int CRYPT_XML_KEY_ECDSA_KEY_VALUE;

typedef int CRYPT_XML_KEY_RSA_KEY_VALUE;

typedef int CRYPT_XML_KEY_VALUE;

typedef int CRYPT_XML_ISSUER_SERIAL;

typedef int CRYPT_XML_X509DATA_ITEM;

typedef int CRYPT_XML_X509DATA;

typedef int CRYPT_XML_KEY_INFO_ITEM;

typedef int CRYPT_XML_KEY_INFO;

typedef int CRYPT_XML_REFERENCE;

typedef int CRYPT_XML_REFERENCES;

typedef int CRYPT_XML_SIGNED_INFO;

typedef int CRYPT_XML_OBJECT;

typedef int CRYPT_XML_SIGNATURE;

typedef int CRYPT_XML_DOC_CTXT;

typedef int CRYPT_XML_KEYINFO_PARAM;

typedef enum {
    CRYPT_XML_KEYINFO_SPEC_NONE = 0,
    CRYPT_XML_KEYINFO_SPEC_ENCODED = 1,
    CRYPT_XML_KEYINFO_SPEC_PARAM = 2,
} CRYPT_XML_KEYINFO_SPEC;

typedef int CRYPT_XML_ALGORITHM_INFO;

typedef int PFN_CRYPT_XML_ENUM_ALG_INFO;

typedef int CryptXmlDllGetInterface;

typedef int CryptXmlDllEncodeAlgorithm;

typedef int CryptXmlDllCreateDigest;

typedef int CryptXmlDllDigestData;

typedef int CryptXmlDllFinalizeDigest;

typedef int CryptXmlDllCloseDigest;

typedef int CryptXmlDllSignData;

typedef int CryptXmlDllVerifySignature;

typedef int CryptXmlDllGetAlgorithmInfo;

typedef int CRYPT_XML_CRYPTOGRAPHIC_INTERFACE;

typedef int CryptXmlDllEncodeKeyValue;

typedef int CryptXmlDllCreateKey;

typedef int PFNCMFILTERPROC;

typedef int PFNCMHOOKPROC;

typedef int CERT_SELECT_STRUCT_A;

typedef int CERT_SELECT_STRUCT_W;

typedef int CERT_VIEWPROPERTIES_STRUCT_A;

typedef int CERT_VIEWPROPERTIES_STRUCT_W;

typedef int CMOID;

typedef int CMFLTR;

typedef int PFNTRUSTHELPER;

typedef int CERT_VERIFY_CERTIFICATE_TRUST;

typedef int CTL_MODIFY_REQUEST;

typedef int PFNCFILTERPROC;

typedef int CERT_SELECTUI_INPUT;

typedef int CRYPTUI_CERT_MGR_STRUCT;

typedef int CRYPTUI_WIZ_DIGITAL_SIGN_BLOB_INFO;

typedef int CRYPTUI_WIZ_DIGITAL_SIGN_STORE_INFO;

typedef int CRYPTUI_WIZ_DIGITAL_SIGN_PVK_FILE_INFO;

typedef int CRYPTUI_WIZ_DIGITAL_SIGN_CERT_PVK_INFO;

typedef int CRYPTUI_WIZ_DIGITAL_SIGN_EXTENDED_INFO;

typedef int CRYPTUI_WIZ_DIGITAL_SIGN_INFO;

typedef int CRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT;

typedef int CRYPTUI_INITDIALOG_STRUCT;

typedef int CRYPTUI_VIEWCERTIFICATE_STRUCTW;

typedef int CRYPTUI_VIEWCERTIFICATE_STRUCTA;

typedef int CRYPTUI_WIZ_EXPORT_INFO;

typedef int CRYPTUI_WIZ_EXPORT_CERTCONTEXT_INFO;

typedef int CRYPTUI_WIZ_IMPORT_SRC_INFO;


//--------------------------------------------------------------------------------
// Section: Functions (385)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptAcquireContextA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptAcquireContextW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptReleaseContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptGenKey();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptDeriveKey();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptDestroyKey();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSetKeyParam();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptGetKeyParam();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSetHashParam();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptGetHashParam();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSetProvParam();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptGetProvParam();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptGenRandom();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptGetUserKey();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptExportKey();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptImportKey();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptEncrypt();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptDecrypt();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptCreateHash();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptHashData();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptHashSessionKey();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptDestroyHash();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSignHashA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSignHashW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptVerifySignatureA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptVerifySignatureW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSetProviderA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSetProviderW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSetProviderExA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSetProviderExW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptGetDefaultProviderA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptGetDefaultProviderW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptEnumProviderTypesA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptEnumProviderTypesW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptEnumProvidersA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptEnumProvidersW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptContextAddRef();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptDuplicateKey();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptDuplicateHash();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptOpenAlgorithmProvider();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptEnumAlgorithms();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptEnumProviders();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptGetProperty();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptSetProperty();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptCloseAlgorithmProvider();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void BCryptFreeBuffer();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptGenerateSymmetricKey();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptGenerateKeyPair();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptEncrypt();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptDecrypt();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptExportKey();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptImportKey();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptImportKeyPair();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptDuplicateKey();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptFinalizeKeyPair();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptDestroyKey();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptDestroySecret();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptSignHash();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptVerifySignature();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptSecretAgreement();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptDeriveKey();

// TODO: this type is limited to platform 'windows8.0'
/*NTSTATUS*/void BCryptKeyDerivation();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptCreateHash();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptHashData();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptFinishHash();

// TODO: this type is limited to platform 'windows8.1'
/*NTSTATUS*/void BCryptCreateMultiHash();

// TODO: this type is limited to platform 'windows8.1'
/*NTSTATUS*/void BCryptProcessMultiOperations();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptDuplicateHash();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptDestroyHash();

// TODO: this type is limited to platform 'windows10.0.10240'
/*NTSTATUS*/void BCryptHash();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptGenRandom();

// TODO: this type is limited to platform 'windows6.1'
/*NTSTATUS*/void BCryptDeriveKeyCapi();

// TODO: this type is limited to platform 'windows6.1'
/*NTSTATUS*/void BCryptDeriveKeyPBKDF2();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptQueryProviderRegistration();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptEnumRegisteredProviders();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptCreateContext();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptDeleteContext();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptEnumContexts();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptConfigureContext();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptQueryContextConfiguration();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptAddContextFunction();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptRemoveContextFunction();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptEnumContextFunctions();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptConfigureContextFunction();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptQueryContextFunctionConfiguration();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptEnumContextFunctionProviders();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptSetContextFunctionProperty();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptQueryContextFunctionProperty();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptRegisterConfigChangeNotify();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptUnregisterConfigChangeNotify();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptResolveProviders();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NTSTATUS*/void BCryptGetFipsAlgorithmMode();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptOpenStorageProvider();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptEnumAlgorithms();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptIsAlgSupported();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptEnumKeys();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptEnumStorageProviders();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptFreeBuffer();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptOpenKey();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptCreatePersistedKey();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptGetProperty();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptSetProperty();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptFinalizeKey();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptEncrypt();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptDecrypt();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptImportKey();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptExportKey();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptSignHash();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptVerifySignature();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptDeleteKey();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptFreeObject();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void NCryptIsKeyHandle();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptTranslateHandle();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptNotifyChangeKey();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptSecretAgreement();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NCryptDeriveKey();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void NCryptKeyDerivation();

// TODO: this type is limited to platform 'windows10.0.10240'
/*i32*/void NCryptCreateClaim();

// TODO: this type is limited to platform 'windows10.0.10240'
/*i32*/void NCryptVerifyClaim();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptFormatObject();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptEncodeObjectEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptEncodeObject();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptDecodeObjectEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptDecodeObject();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptInstallOIDFunctionAddress();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void CryptInitOIDFunctionSet();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptGetOIDFunctionAddress();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptGetDefaultOIDDllList();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptGetDefaultOIDFunctionAddress();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptFreeOIDFunctionAddress();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptRegisterOIDFunction();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptUnregisterOIDFunction();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptRegisterDefaultOIDFunction();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptUnregisterDefaultOIDFunction();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSetOIDFunctionValue();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptGetOIDFunctionValue();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptEnumOIDFunction();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRYPT_OID_INFO*/void CryptFindOIDInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptRegisterOIDInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptUnregisterOIDInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptEnumOIDInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*PWSTR*/void CryptFindLocalizedName();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void CryptMsgOpenToEncode();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void CryptMsgCalculateEncodedLength();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void CryptMsgOpenToDecode();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void CryptMsgDuplicate();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptMsgClose();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptMsgUpdate();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptMsgGetParam();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptMsgControl();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptMsgVerifyCountersignatureEncoded();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptMsgVerifyCountersignatureEncodedEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptMsgCountersign();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptMsgCountersignEncoded();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void CertOpenStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void CertDuplicateStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertSaveStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertCloseStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CERT_CONTEXT*/void CertGetSubjectCertificateFromStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CERT_CONTEXT*/void CertEnumCertificatesInStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CERT_CONTEXT*/void CertFindCertificateInStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CERT_CONTEXT*/void CertGetIssuerCertificateFromStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertVerifySubjectCertificateContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CERT_CONTEXT*/void CertDuplicateCertificateContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CERT_CONTEXT*/void CertCreateCertificateContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertFreeCertificateContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertSetCertificateContextProperty();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertGetCertificateContextProperty();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void CertEnumCertificateContextProperties();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertCreateCTLEntryFromCertificateContextProperties();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertSetCertificateContextPropertiesFromCTLEntry();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRL_CONTEXT*/void CertGetCRLFromStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRL_CONTEXT*/void CertEnumCRLsInStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRL_CONTEXT*/void CertFindCRLInStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRL_CONTEXT*/void CertDuplicateCRLContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRL_CONTEXT*/void CertCreateCRLContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertFreeCRLContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertSetCRLContextProperty();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertGetCRLContextProperty();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void CertEnumCRLContextProperties();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertFindCertificateInCRL();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertIsValidCRLForCertificate();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertAddEncodedCertificateToStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertAddCertificateContextToStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertAddSerializedElementToStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertDeleteCertificateFromStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertAddEncodedCRLToStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertAddCRLContextToStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertDeleteCRLFromStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertSerializeCertificateStoreElement();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertSerializeCRLStoreElement();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CTL_CONTEXT*/void CertDuplicateCTLContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CTL_CONTEXT*/void CertCreateCTLContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertFreeCTLContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertSetCTLContextProperty();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertGetCTLContextProperty();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void CertEnumCTLContextProperties();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CTL_CONTEXT*/void CertEnumCTLsInStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CTL_ENTRY*/void CertFindSubjectInCTL();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CTL_CONTEXT*/void CertFindCTLInStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertAddEncodedCTLToStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertAddCTLContextToStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertSerializeCTLStoreElement();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertDeleteCTLFromStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertAddCertificateLinkToStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertAddCRLLinkToStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertAddCTLLinkToStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertAddStoreToCollection();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void CertRemoveStoreFromCollection();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertControlStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertSetStoreProperty();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertGetStoreProperty();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void CertCreateContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertRegisterSystemStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertRegisterPhysicalStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertUnregisterSystemStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertUnregisterPhysicalStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertEnumSystemStoreLocation();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertEnumSystemStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertEnumPhysicalStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertGetEnhancedKeyUsage();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertSetEnhancedKeyUsage();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertAddEnhancedKeyUsageIdentifier();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertRemoveEnhancedKeyUsageIdentifier();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertGetValidUsages();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptMsgGetAndVerifySigner();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptMsgSignCTL();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptMsgEncodeAndSignCTL();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertFindSubjectInSortedCTL();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertEnumSubjectInSortedCTL();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertVerifyCTLUsage();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertVerifyRevocation();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertCompareIntegerBlob();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertCompareCertificate();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertCompareCertificateName();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertIsRDNAttrsInCertificateName();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertComparePublicKeyInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void CertGetPublicKeyLength();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptVerifyCertificateSignature();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptVerifyCertificateSignatureEx();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void CertIsStrongHashToSign();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptHashToBeSigned();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptHashCertificate();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void CryptHashCertificate2();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSignCertificate();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSignAndEncodeCertificate();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void CertVerifyTimeValidity();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void CertVerifyCRLTimeValidity();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertVerifyValidityNesting();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertVerifyCRLRevocation();

// TODO: this type is limited to platform 'windows5.1.2600'
/*PSTR*/void CertAlgIdToOID();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void CertOIDToAlgId();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CERT_EXTENSION*/void CertFindExtension();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRYPT_ATTRIBUTE*/void CertFindAttribute();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CERT_RDN_ATTR*/void CertFindRDNAttr();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertGetIntendedKeyUsage();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptInstallDefaultContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptUninstallDefaultContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptExportPublicKeyInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptExportPublicKeyInfoEx();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void CryptExportPublicKeyInfoFromBCryptKeyHandle();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptImportPublicKeyInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptImportPublicKeyInfoEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void CryptImportPublicKeyInfoEx2();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptAcquireCertificatePrivateKey();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptFindCertificateKeyProvInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptImportPKCS8();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptExportPKCS8();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptHashPublicKeyInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void CertRDNValueToStrA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void CertRDNValueToStrW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void CertNameToStrA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void CertNameToStrW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertStrToNameA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertStrToNameW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void CertGetNameStringA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void CertGetNameStringW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSignMessage();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptVerifyMessageSignature();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void CryptGetMessageSignerCount();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void CryptGetMessageCertificates();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptVerifyDetachedMessageSignature();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptEncryptMessage();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptDecryptMessage();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSignAndEncryptMessage();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptDecryptAndVerifyMessageSignature();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptDecodeMessage();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptHashMessage();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptVerifyMessageHash();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptVerifyDetachedMessageHash();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSignMessageWithKey();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptVerifyMessageSignatureWithKey();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void CertOpenSystemStoreA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void CertOpenSystemStoreW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertAddEncodedCertificateToSystemStoreA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertAddEncodedCertificateToSystemStoreW();

/*HRESULT*/void FindCertsByIssuer();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptQueryObject();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void CryptMemAlloc();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void CryptMemRealloc();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void CryptMemFree();

/*BOOL*/void CryptCreateAsyncHandle();

/*BOOL*/void CryptSetAsyncParam();

/*BOOL*/void CryptGetAsyncParam();

/*BOOL*/void CryptCloseAsyncHandle();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptRetrieveObjectByUrlA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptRetrieveObjectByUrlW();

/*BOOL*/void CryptInstallCancelRetrieval();

/*BOOL*/void CryptUninstallCancelRetrieval();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptGetObjectUrl();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CERT_CONTEXT*/void CertCreateSelfSignCertificate();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptGetKeyIdentifierProperty();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSetKeyIdentifierProperty();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptEnumKeyIdentifierProperties();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptCreateKeyIdentifierFromCSP();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertCreateCertificateChainEngine();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void CertFreeCertificateChainEngine();

// TODO: this type is limited to platform 'windows10.0.10240'
/*BOOL*/void CertResyncCertificateChainEngine();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertGetCertificateChain();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void CertFreeCertificateChain();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CERT_CHAIN_CONTEXT*/void CertDuplicateCertificateChain();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CERT_CHAIN_CONTEXT*/void CertFindChainInStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CertVerifyCertificateChainPolicy();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptStringToBinaryA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptStringToBinaryW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptBinaryToStringA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptBinaryToStringW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void PFXImportCertStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void PFXIsPFXBlob();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void PFXVerifyPassword();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void PFXExportCertStoreEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void PFXExportCertStore();

// TODO: this type is limited to platform 'windows6.0.6000'
/*?*c_void*/void CertOpenServerOcspResponse();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void CertAddRefServerOcspResponse();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void CertCloseServerOcspResponse();

// TODO: this type is limited to platform 'windows6.0.6000'
/*?*CERT_SERVER_OCSP_RESPONSE_CONTEXT*/void CertGetServerOcspResponseContext();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void CertAddRefServerOcspResponseContext();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void CertFreeServerOcspResponseContext();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void CertRetrieveLogoOrBiometricInfo();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void CertSelectCertificateChains();

// TODO: this type is limited to platform 'windows6.1'
/*void*/void CertFreeCertificateChainList();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void CryptRetrieveTimeStamp();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void CryptVerifyTimeStampSignature();

/*BOOL*/void CertIsWeakHash();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void NCryptRegisterProtectionDescriptorName();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void NCryptQueryProtectionDescriptorName();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void NCryptCreateProtectionDescriptor();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void NCryptCloseProtectionDescriptor();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void NCryptGetProtectionDescriptorInfo();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void NCryptProtectSecret();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void NCryptUnprotectSecret();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void NCryptStreamOpenToProtect();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void NCryptStreamOpenToUnprotect();

/*i32*/void NCryptStreamOpenToUnprotectEx();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void NCryptStreamUpdate();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void NCryptStreamClose();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CryptXmlClose();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CryptXmlGetTransforms();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CryptXmlOpenToEncode();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CryptXmlOpenToDecode();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CryptXmlAddObject();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CryptXmlCreateReference();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CryptXmlDigestReference();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CryptXmlSetHMACSecret();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CryptXmlSign();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CryptXmlImportPublicKey();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CryptXmlVerifySignature();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CryptXmlGetDocContext();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CryptXmlGetSignature();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CryptXmlGetReference();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CryptXmlGetStatus();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CryptXmlEncode();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CryptXmlGetAlgorithmInfo();

/*?*CRYPT_XML_ALGORITHM_INFO*/void CryptXmlFindAlgorithmInfo();

/*HRESULT*/void CryptXmlEnumAlgorithmInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptUIDlgViewContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CERT_CONTEXT*/void CryptUIDlgSelectCertificateFromStore();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CertSelectionGetSerializedBlob();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptUIDlgCertMgr();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptUIWizDigitalSign();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptUIWizFreeDigitalSignContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptUIDlgViewCertificateW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptUIDlgViewCertificateA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptUIWizExport();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptUIWizImport();

