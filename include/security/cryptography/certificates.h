// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (390)
//--------------------------------------------------------------------------------
#define CA_DISP_INCOMPLETE (UINT)0
#define CA_DISP_ERROR (UINT)1
#define CA_DISP_REVOKED (UINT)2
#define CA_DISP_VALID (UINT)3
#define CA_DISP_INVALID (UINT)4
#define CA_DISP_UNDER_SUBMISSION (UINT)5
#define KRA_DISP_EXPIRED (UINT)0
#define KRA_DISP_NOTFOUND (UINT)1
#define KRA_DISP_REVOKED (UINT)2
#define KRA_DISP_VALID (UINT)3
#define KRA_DISP_INVALID (UINT)4
#define KRA_DISP_UNTRUSTED (UINT)5
#define KRA_DISP_NOTLOADED (UINT)6
#define CA_ACCESS_MASKROLES (UINT)255
#define CA_CRL_BASE (UINT)1
#define CA_CRL_DELTA (UINT)2
#define CA_CRL_REPUBLISH (UINT)16
#define ICF_ALLOWFOREIGN (UINT)65536
#define ICF_EXISTINGROW (UINT)131072
#define IKF_OVERWRITE (UINT)65536
#define CSBACKUP_TYPE_MASK (UINT)3
#define CSRESTORE_TYPE_FULL (UINT)1
#define CSRESTORE_TYPE_ONLINE (UINT)2
#define CSRESTORE_TYPE_CATCHUP (UINT)4
#define CSRESTORE_TYPE_MASK (UINT)5
#define CSBACKUP_DISABLE_INCREMENTAL (UINT)4294967295
#define CSBFT_DIRECTORY (UINT)128
#define CSBFT_DATABASE_DIRECTORY (UINT)64
#define CSBFT_LOG_DIRECTORY (UINT)32
#define CSCONTROL_SHUTDOWN (UINT64)1
#define CSCONTROL_SUSPEND (UINT64)2
#define CSCONTROL_RESTART (UINT64)3
#define CAIF_DSENTRY (UINT)1
#define CAIF_SHAREDFOLDERENTRY (UINT)2
#define CAIF_REGISTRY (UINT)4
#define CAIF_LOCAL (UINT)8
#define CAIF_REGISTRYPARENT (UINT)16
#define CR_IN_ENCODEANY (UINT)255
#define CR_IN_ENCODEMASK (UINT)255
#define CR_IN_FORMATANY (UINT)0
#define CR_IN_PKCS10 (UINT)256
#define CR_IN_KEYGEN (UINT)512
#define CR_IN_PKCS7 (UINT)768
#define CR_IN_CMC (UINT)1024
#define CR_IN_CHALLENGERESPONSE (UINT)1280
#define CR_IN_SIGNEDCERTIFICATETIMESTAMPLIST (UINT)1536
#define CR_IN_FORMATMASK (UINT)65280
#define CR_IN_SCEP (UINT)65536
#define CR_IN_RPC (UINT)131072
#define CR_IN_HTTP (UINT)196608
#define CR_IN_FULLRESPONSE (UINT)262144
#define CR_IN_CRLS (UINT)524288
#define CR_IN_MACHINE (UINT)1048576
#define CR_IN_ROBO (UINT)2097152
#define CR_IN_CLIENTIDNONE (UINT)4194304
#define CR_IN_CONNECTONLY (UINT)8388608
#define CR_IN_RETURNCHALLENGE (UINT)16777216
#define CR_IN_SCEPPOST (UINT)33554432
#define CR_IN_CERTIFICATETRANSPARENCY (UINT)67108864
#define CC_UIPICKCONFIGSKIPLOCALCA (UINT)5
#define CR_DISP_REVOKED (UINT)6
#define CR_OUT_BASE64REQUESTHEADER (UINT)3
#define CR_OUT_HEX (UINT)4
#define CR_OUT_HEXASCII (UINT)5
#define CR_OUT_BASE64X509CRLHEADER (UINT)9
#define CR_OUT_HEXADDR (UINT)10
#define CR_OUT_HEXASCIIADDR (UINT)11
#define CR_OUT_HEXRAW (UINT)12
#define CR_OUT_ENCODEMASK (UINT)255
#define CR_OUT_CHAIN (UINT)256
#define CR_OUT_CRLS (UINT)512
#define CR_OUT_NOCRLF (UINT)1073741824
#define CR_OUT_NOCR (UINT)2147483648
#define CR_GEMT_DEFAULT (UINT)0
#define CR_GEMT_HRESULT_STRING (UINT)1
#define CR_GEMT_HTTP_ERROR (UINT)2
#define CR_PROP_NONE (UINT)0
#define CR_PROP_FILEVERSION (UINT)1
#define CR_PROP_PRODUCTVERSION (UINT)2
#define CR_PROP_EXITCOUNT (UINT)3
#define CR_PROP_EXITDESCRIPTION (UINT)4
#define CR_PROP_POLICYDESCRIPTION (UINT)5
#define CR_PROP_CANAME (UINT)6
#define CR_PROP_SANITIZEDCANAME (UINT)7
#define CR_PROP_SHAREDFOLDER (UINT)8
#define CR_PROP_PARENTCA (UINT)9
#define CR_PROP_CATYPE (UINT)10
#define CR_PROP_CASIGCERTCOUNT (UINT)11
#define CR_PROP_CASIGCERT (UINT)12
#define CR_PROP_CASIGCERTCHAIN (UINT)13
#define CR_PROP_CAXCHGCERTCOUNT (UINT)14
#define CR_PROP_CAXCHGCERT (UINT)15
#define CR_PROP_CAXCHGCERTCHAIN (UINT)16
#define CR_PROP_BASECRL (UINT)17
#define CR_PROP_DELTACRL (UINT)18
#define CR_PROP_CACERTSTATE (UINT)19
#define CR_PROP_CRLSTATE (UINT)20
#define CR_PROP_CAPROPIDMAX (UINT)21
#define CR_PROP_DNSNAME (UINT)22
#define CR_PROP_ROLESEPARATIONENABLED (UINT)23
#define CR_PROP_KRACERTUSEDCOUNT (UINT)24
#define CR_PROP_KRACERTCOUNT (UINT)25
#define CR_PROP_KRACERT (UINT)26
#define CR_PROP_KRACERTSTATE (UINT)27
#define CR_PROP_ADVANCEDSERVER (UINT)28
#define CR_PROP_TEMPLATES (UINT)29
#define CR_PROP_BASECRLPUBLISHSTATUS (UINT)30
#define CR_PROP_DELTACRLPUBLISHSTATUS (UINT)31
#define CR_PROP_CASIGCERTCRLCHAIN (UINT)32
#define CR_PROP_CAXCHGCERTCRLCHAIN (UINT)33
#define CR_PROP_CACERTSTATUSCODE (UINT)34
#define CR_PROP_CAFORWARDCROSSCERT (UINT)35
#define CR_PROP_CABACKWARDCROSSCERT (UINT)36
#define CR_PROP_CAFORWARDCROSSCERTSTATE (UINT)37
#define CR_PROP_CABACKWARDCROSSCERTSTATE (UINT)38
#define CR_PROP_CACERTVERSION (UINT)39
#define CR_PROP_SANITIZEDCASHORTNAME (UINT)40
#define CR_PROP_CERTCDPURLS (UINT)41
#define CR_PROP_CERTAIAURLS (UINT)42
#define CR_PROP_CERTAIAOCSPURLS (UINT)43
#define CR_PROP_LOCALENAME (UINT)44
#define CR_PROP_SUBJECTTEMPLATE_OIDS (UINT)45
#define CR_PROP_SCEPSERVERCERTS (UINT)1000
#define CR_PROP_SCEPSERVERCAPABILITIES (UINT)1001
#define CR_PROP_SCEPSERVERCERTSCHAIN (UINT)1002
#define FR_PROP_CLAIMCHALLENGE (UINT)22
#define EAN_NAMEOBJECTID (UINT)2147483648
#define EANR_SUPPRESS_IA5CONVERSION (UINT)2147483648
#define CERTENROLL_INDEX_BASE (UINT)0
#define EXITEVENT_INVALID (UINT)0
#define EXITEVENT_STARTUP (UINT)128
#define EXITEVENT_CERTIMPORTED (UINT)512
#define ENUMEXT_OBJECTID (UINT)1
#define CMM_REFRESHONLY (UINT)1
#define CMM_READONLY (UINT)2
#define DBSESSIONCOUNTDEFAULT (UINT)100
#define DBFLAGS_READONLY (UINT)1
#define DBFLAGS_CREATEIFNEEDED (UINT)2
#define DBFLAGS_CIRCULARLOGGING (UINT)4
#define DBFLAGS_LAZYFLUSH (UINT)8
#define DBFLAGS_MAXCACHESIZEX100 (UINT)16
#define DBFLAGS_CHECKPOINTDEPTH60MB (UINT)32
#define DBFLAGS_LOGBUFFERSLARGE (UINT)64
#define DBFLAGS_LOGBUFFERSHUGE (UINT)128
#define DBFLAGS_LOGFILESIZE16MB (UINT)256
#define DBFLAGS_MULTITHREADTRANSACTIONS (UINT)512
#define DBFLAGS_DISABLESNAPSHOTBACKUP (UINT)1024
#define DBFLAGS_ENABLEVOLATILEREQUESTS (UINT)2048
#define LDAPF_SSLENABLE (UINT)1
#define LDAPF_SIGNDISABLE (UINT)2
#define CSVER_MAJOR_WIN2K (UINT)1
#define CSVER_MINOR_WIN2K (UINT)1
#define CSVER_MAJOR_WHISTLER (UINT)2
#define CSVER_MINOR_WHISTLER_BETA2 (UINT)1
#define CSVER_MINOR_WHISTLER_BETA3 (UINT)2
#define CSVER_MAJOR_LONGHORN (UINT)3
#define CSVER_MINOR_LONGHORN_BETA1 (UINT)1
#define CSVER_MAJOR_WIN7 (UINT)4
#define CSVER_MINOR_WIN7 (UINT)1
#define CSVER_MAJOR_WIN8 (UINT)5
#define CSVER_MINOR_WIN8 (UINT)1
#define CSVER_MAJOR_WINBLUE (UINT)6
#define CSVER_MINOR_WINBLUE (UINT)1
#define CSVER_MAJOR_THRESHOLD (UINT)7
#define CSVER_MINOR_THRESHOLD (UINT)1
#define CCLOCKSKEWMINUTESDEFAULT (UINT)10
#define CVIEWAGEMINUTESDEFAULT (UINT)16
#define SETUP_SERVER_FLAG (UINT)1
#define SETUP_CLIENT_FLAG (UINT)2
#define SETUP_SUSPEND_FLAG (UINT)4
#define SETUP_REQUEST_FLAG (UINT)8
#define SETUP_ONLINE_FLAG (UINT)16
#define SETUP_DENIED_FLAG (UINT)32
#define SETUP_CREATEDB_FLAG (UINT)64
#define SETUP_ATTEMPT_VROOT_CREATE (UINT)128
#define SETUP_FORCECRL_FLAG (UINT)256
#define SETUP_UPDATE_CAOBJECT_SVRTYPE (UINT)512
#define SETUP_SERVER_UPGRADED_FLAG (UINT)1024
#define SETUP_W2K_SECURITY_NOT_UPGRADED_FLAG (UINT)2048
#define SETUP_SECURITY_CHANGED (UINT)4096
#define SETUP_DCOM_SECURITY_UPDATED_FLAG (UINT)8192
#define SETUP_SERVER_IS_UP_TO_DATE_FLAG (UINT)16384
#define CRLF_DELTA_USE_OLDEST_UNEXPIRED_BASE (UINT)1
#define CRLF_DELETE_EXPIRED_CRLS (UINT)2
#define CRLF_CRLNUMBER_CRITICAL (UINT)4
#define CRLF_REVCHECK_IGNORE_OFFLINE (UINT)8
#define CRLF_IGNORE_INVALID_POLICIES (UINT)16
#define CRLF_REBUILD_MODIFIED_SUBJECT_ONLY (UINT)32
#define CRLF_SAVE_FAILED_CERTS (UINT)64
#define CRLF_IGNORE_UNKNOWN_CMC_ATTRIBUTES (UINT)128
#define CRLF_IGNORE_CROSS_CERT_TRUST_ERROR (UINT)256
#define CRLF_PUBLISH_EXPIRED_CERT_CRLS (UINT)512
#define CRLF_ENFORCE_ENROLLMENT_AGENT (UINT)1024
#define CRLF_DISABLE_RDN_REORDER (UINT)2048
#define CRLF_DISABLE_ROOT_CROSS_CERTS (UINT)4096
#define CRLF_LOG_FULL_RESPONSE (UINT)8192
#define CRLF_USE_XCHG_CERT_TEMPLATE (UINT)16384
#define CRLF_USE_CROSS_CERT_TEMPLATE (UINT)32768
#define CRLF_ALLOW_REQUEST_ATTRIBUTE_SUBJECT (UINT)65536
#define CRLF_REVCHECK_IGNORE_NOREVCHECK (UINT)131072
#define CRLF_PRESERVE_EXPIRED_CA_CERTS (UINT)262144
#define CRLF_PRESERVE_REVOKED_CA_CERTS (UINT)524288
#define CRLF_DISABLE_CHAIN_VERIFICATION (UINT)1048576
#define CRLF_BUILD_ROOTCA_CRLENTRIES_BASEDONKEY (UINT)2097152
#define KRAF_ENABLEFOREIGN (UINT)1
#define KRAF_SAVEBADREQUESTKEY (UINT)2
#define KRAF_ENABLEARCHIVEALL (UINT)4
#define KRAF_DISABLEUSEDEFAULTPROVIDER (UINT)8
#define IF_LOCKICERTREQUEST (UINT)1
#define IF_NOREMOTEICERTREQUEST (UINT)2
#define IF_NOLOCALICERTREQUEST (UINT)4
#define IF_NORPCICERTREQUEST (UINT)8
#define IF_NOREMOTEICERTADMIN (UINT)16
#define IF_NOLOCALICERTADMIN (UINT)32
#define IF_NOREMOTEICERTADMINBACKUP (UINT)64
#define IF_NOLOCALICERTADMINBACKUP (UINT)128
#define IF_NOSNAPSHOTBACKUP (UINT)256
#define IF_ENFORCEENCRYPTICERTREQUEST (UINT)512
#define IF_ENFORCEENCRYPTICERTADMIN (UINT)1024
#define IF_ENABLEEXITKEYRETRIEVAL (UINT)2048
#define IF_ENABLEADMINASAUDITOR (UINT)4096
#define PROCFLG_NONE (UINT)0
#define PROCFLG_ENFORCEGOODKEYS (UINT)1
#define CSURL_SERVERPUBLISH (UINT)1
#define CSURL_ADDTOCERTCDP (UINT)2
#define CSURL_ADDTOFRESHESTCRL (UINT)4
#define CSURL_ADDTOCRLCDP (UINT)8
#define CSURL_PUBLISHRETRY (UINT)16
#define CSURL_ADDTOCERTOCSP (UINT)32
#define CSURL_SERVERPUBLISHDELTA (UINT)64
#define CSURL_ADDTOIDP (UINT)128
#define CAPATHLENGTH_INFINITE (UINT)4294967295
#define REQDISP_PENDING (UINT)0
#define REQDISP_ISSUE (UINT)1
#define REQDISP_DENY (UINT)2
#define REQDISP_USEREQUESTATTRIBUTE (UINT)3
#define REQDISP_MASK (UINT)255
#define REQDISP_PENDINGFIRST (UINT)256
#define REVEXT_CDPLDAPURL_OLD (UINT)1
#define REVEXT_CDPHTTPURL_OLD (UINT)2
#define REVEXT_CDPFTPURL_OLD (UINT)4
#define REVEXT_CDPFILEURL_OLD (UINT)8
#define REVEXT_CDPURLMASK_OLD (UINT)255
#define REVEXT_CDPENABLE (UINT)256
#define REVEXT_ASPENABLE (UINT)512
#define ISSCERT_LDAPURL_OLD (UINT)1
#define ISSCERT_HTTPURL_OLD (UINT)2
#define ISSCERT_FTPURL_OLD (UINT)4
#define ISSCERT_FILEURL_OLD (UINT)8
#define ISSCERT_URLMASK_OLD (UINT)255
#define ISSCERT_ENABLE (UINT)256
#define EDITF_ENABLEREQUESTEXTENSIONS (UINT)1
#define EDITF_REQUESTEXTENSIONLIST (UINT)2
#define EDITF_DISABLEEXTENSIONLIST (UINT)4
#define EDITF_ADDOLDKEYUSAGE (UINT)8
#define EDITF_ADDOLDCERTTYPE (UINT)16
#define EDITF_ATTRIBUTEENDDATE (UINT)32
#define EDITF_BASICCONSTRAINTSCRITICAL (UINT)64
#define EDITF_BASICCONSTRAINTSCA (UINT)128
#define EDITF_ENABLEAKIKEYID (UINT)256
#define EDITF_ATTRIBUTECA (UINT)512
#define EDITF_IGNOREREQUESTERGROUP (UINT)1024
#define EDITF_ENABLEAKIISSUERNAME (UINT)2048
#define EDITF_ENABLEAKIISSUERSERIAL (UINT)4096
#define EDITF_ENABLEAKICRITICAL (UINT)8192
#define EDITF_SERVERUPGRADED (UINT)16384
#define EDITF_ATTRIBUTEEKU (UINT)32768
#define EDITF_ENABLEDEFAULTSMIME (UINT)65536
#define EDITF_EMAILOPTIONAL (UINT)131072
#define EDITF_ATTRIBUTESUBJECTALTNAME2 (UINT)262144
#define EDITF_ENABLELDAPREFERRALS (UINT)524288
#define EDITF_ENABLECHASECLIENTDC (UINT)1048576
#define EDITF_AUDITCERTTEMPLATELOAD (UINT)2097152
#define EDITF_DISABLEOLDOSCNUPN (UINT)4194304
#define EDITF_DISABLELDAPPACKAGELIST (UINT)8388608
#define EDITF_ENABLEUPNMAP (UINT)16777216
#define EDITF_ENABLEOCSPREVNOCHECK (UINT)33554432
#define EDITF_ENABLERENEWONBEHALFOF (UINT)67108864
#define EDITF_ENABLEKEYENCIPHERMENTCACERT (UINT)134217728
#define EXITPUB_FILE (UINT)1
#define EXITPUB_ACTIVEDIRECTORY (UINT)2
#define EXITPUB_REMOVEOLDCERTS (UINT)16
#define TP_MACHINEPOLICY (UINT)1
#define KR_ENABLE_MACHINE (UINT)1
#define KR_ENABLE_USER (UINT)2
#define EXTENSION_CRITICAL_FLAG (UINT)1
#define EXTENSION_DISABLE_FLAG (UINT)2
#define EXTENSION_DELETE_FLAG (UINT)4
#define EXTENSION_POLICY_MASK (UINT)65535
#define EXTENSION_ORIGIN_REQUEST (UINT)65536
#define EXTENSION_ORIGIN_POLICY (UINT)131072
#define EXTENSION_ORIGIN_ADMIN (UINT)196608
#define EXTENSION_ORIGIN_SERVER (UINT)262144
#define EXTENSION_ORIGIN_RENEWALCERT (UINT)327680
#define EXTENSION_ORIGIN_IMPORTEDCERT (UINT)393216
#define EXTENSION_ORIGIN_PKCS7 (UINT)458752
#define EXTENSION_ORIGIN_CMC (UINT)524288
#define EXTENSION_ORIGIN_CACERT (UINT)589824
#define EXTENSION_ORIGIN_MASK (UINT)983040
#define CPF_BASE (UINT)1
#define CPF_DELTA (UINT)2
#define CPF_COMPLETE (UINT)4
#define CPF_SHADOW (UINT)8
#define CPF_CASTORE_ERROR (UINT)16
#define CPF_BADURL_ERROR (UINT)32
#define CPF_MANUAL (UINT)64
#define CPF_SIGNATURE_ERROR (UINT)128
#define CPF_LDAP_ERROR (UINT)256
#define CPF_FILE_ERROR (UINT)512
#define CPF_FTP_ERROR (UINT)1024
#define CPF_HTTP_ERROR (UINT)2048
#define CPF_POSTPONED_BASE_LDAP_ERROR (UINT)4096
#define CPF_POSTPONED_BASE_FILE_ERROR (UINT)8192
#define PROPTYPE_MASK (UINT)255
#define PROPCALLER_SERVER (UINT)256
#define PROPCALLER_POLICY (UINT)512
#define PROPCALLER_EXIT (UINT)768
#define PROPCALLER_ADMIN (UINT)1024
#define PROPCALLER_REQUEST (UINT)1280
#define PROPCALLER_MASK (UINT)3840
#define PROPFLAGS_INDEXED (UINT)65536
#define CR_FLG_FORCETELETEX (UINT)1
#define CR_FLG_RENEWAL (UINT)2
#define CR_FLG_FORCEUTF8 (UINT)4
#define CR_FLG_CAXCHGCERT (UINT)8
#define CR_FLG_ENROLLONBEHALFOF (UINT)16
#define CR_FLG_SUBJECTUNMODIFIED (UINT)32
#define CR_FLG_VALIDENCRYPTEDKEYHASH (UINT)64
#define CR_FLG_CACROSSCERT (UINT)128
#define CR_FLG_ENFORCEUTF8 (UINT)256
#define CR_FLG_DEFINEDCACERT (UINT)512
#define CR_FLG_CHALLENGEPENDING (UINT)1024
#define CR_FLG_CHALLENGESATISFIED (UINT)2048
#define CR_FLG_TRUSTONUSE (UINT)4096
#define CR_FLG_TRUSTEKCERT (UINT)8192
#define CR_FLG_TRUSTEKKEY (UINT)16384
#define CR_FLG_PUBLISHERROR (UINT)2147483648
#define DB_DISP_ACTIVE (UINT)8
#define DB_DISP_PENDING (UINT)9
#define DB_DISP_QUEUE_MAX (UINT)9
#define DB_DISP_FOREIGN (UINT)12
#define DB_DISP_CA_CERT (UINT)15
#define DB_DISP_CA_CERT_CHAIN (UINT)16
#define DB_DISP_KRA_CERT (UINT)17
#define DB_DISP_LOG_MIN (UINT)20
#define DB_DISP_ISSUED (UINT)20
#define DB_DISP_REVOKED (UINT)21
#define DB_DISP_LOG_FAILED_MIN (UINT)30
#define DB_DISP_ERROR (UINT)30
#define DB_DISP_DENIED (UINT)31
#define VR_PENDING (UINT)0
#define VR_INSTANT_OK (UINT)1
#define VR_INSTANT_BAD (UINT)2
#define CV_OUT_HEXRAW (UINT)12
#define CV_OUT_ENCODEMASK (UINT)255
#define CV_OUT_NOCRLF (UINT)1073741824
#define CV_OUT_NOCR (UINT)2147483648
#define CVR_SEEK_NONE (UINT)0
#define CVR_SEEK_MASK (UINT)255
#define CVR_SEEK_NODELTA (UINT)4096
#define CVR_SORT_NONE (UINT)0
#define CVR_SORT_ASCEND (UINT)1
#define CVR_SORT_DESCEND (UINT)2
#define CV_COLUMN_EXTENSION_DEFAULT (INT)-4
#define CV_COLUMN_ATTRIBUTE_DEFAULT (INT)-5
#define CV_COLUMN_CRL_DEFAULT (INT)-6
#define CV_COLUMN_LOG_REVOKED_DEFAULT (INT)-7
#define CVRC_TABLE_MASK (UINT)61440
#define CVRC_TABLE_SHIFT (UINT)12
#define CRYPT_ENUM_ALL_PROVIDERS (UINT)1
#define XEPR_ENUM_FIRST (INT)-1
#define XEPR_DATE (UINT)5
#define XEPR_TEMPLATENAME (UINT)6
#define XEPR_VERSION (UINT)7
#define XEPR_V1TEMPLATENAME (UINT)9
#define XEPR_V2TEMPLATEOID (UINT)16
#define XEKL_KEYSIZE_DEFAULT (UINT)4
#define XECP_STRING_PROPERTY (UINT)1
#define XECI_DISABLE (UINT)0
#define XECI_XENROLL (UINT)1
#define XECI_AUTOENROLL (UINT)2
#define XECI_REQWIZARD (UINT)3
#define XECI_CERTREQ (UINT)4
#define wszCMM_PROP_NAME "Name"
#define wszCMM_PROP_DESCRIPTION "Description"
#define wszCMM_PROP_COPYRIGHT "Copyright"
#define wszCMM_PROP_FILEVER "File Version"
#define wszCMM_PROP_PRODUCTVER "Product Version"
#define wszCMM_PROP_DISPLAY_HWND "HWND"
#define wszCMM_PROP_ISMULTITHREADED "IsMultiThreaded"

//--------------------------------------------------------------------------------
// Section: Types (343)
//--------------------------------------------------------------------------------
typedef enum {
    CERT_RDN_ANY_TYPE = 0,
    CERT_RDN_NUMERIC_STRING = 3,
    CERT_RDN_PRINTABLE_STRING = 4,
    CERT_RDN_T61_STRING = 5,
    CERT_RDN_VIDEOTEX_STRING = 6,
    CERT_RDN_IA5_STRING = 7,
    CERT_RDN_GRAPHIC_STRING = 8,
    CERT_RDN_ISO646_STRING = 9,
    CERT_RDN_GENERAL_STRING = 10,
    CERT_RDN_INT4_STRING = 11,
    CERT_RDN_UNICODE_STRING = 12,
    CERT_RDN_BMP_STRING = 12,
    CERT_RDN_ENCODED_BLOB = 1,
    CERT_RDN_OCTET_STRING = 2,
    CERT_RDN_TELETEX_STRING = 5,
    CERT_RDN_UNIVERSAL_STRING = 11,
    CERT_RDN_UTF8_STRING = 13,
    CERT_RDN_VISIBLE_STRING = 9,
} CERT_RDN_ATTR_VALUE_TYPE;

typedef enum {
    CV_COLUMN_LOG_DEFAULT = -2,
    CV_COLUMN_LOG_FAILED_DEFAULT = -3,
    CV_COLUMN_QUEUE_DEFAULT = -1,
} CERT_VIEW_COLUMN_INDEX;

typedef enum {
    CDR_EXPIRED = 1,
    CDR_REQUEST_LAST_CHANGED = 2,
} CERT_DELETE_ROW_FLAGS;

typedef enum {
    FR_PROP_NONE = 0,
    FR_PROP_FULLRESPONSE = 1,
    FR_PROP_STATUSINFOCOUNT = 2,
    FR_PROP_BODYPARTSTRING = 3,
    FR_PROP_STATUS = 4,
    FR_PROP_STATUSSTRING = 5,
    FR_PROP_OTHERINFOCHOICE = 6,
    FR_PROP_FAILINFO = 7,
    FR_PROP_PENDINFOTOKEN = 8,
    FR_PROP_PENDINFOTIME = 9,
    FR_PROP_ISSUEDCERTIFICATEHASH = 10,
    FR_PROP_ISSUEDCERTIFICATE = 11,
    FR_PROP_ISSUEDCERTIFICATECHAIN = 12,
    FR_PROP_ISSUEDCERTIFICATECRLCHAIN = 13,
    FR_PROP_ENCRYPTEDKEYHASH = 14,
    FR_PROP_FULLRESPONSENOPKCS7 = 15,
    FR_PROP_CAEXCHANGECERTIFICATEHASH = 16,
    FR_PROP_CAEXCHANGECERTIFICATE = 17,
    FR_PROP_CAEXCHANGECERTIFICATECHAIN = 18,
    FR_PROP_CAEXCHANGECERTIFICATECRLCHAIN = 19,
    FR_PROP_ATTESTATIONCHALLENGE = 20,
    FR_PROP_ATTESTATIONPROVIDERNAME = 21,
} FULL_RESPONSE_PROPERTY_ID;

typedef enum {
    CVRC_COLUMN_SCHEMA = 0,
    CVRC_COLUMN_RESULT = 1,
    CVRC_COLUMN_VALUE = 2,
    CVRC_COLUMN_MASK = 4095,
} CVRC_COLUMN;

typedef enum {
    CR_IN_BASE64HEADER = 0,
    CR_IN_BASE64 = 1,
    CR_IN_BINARY = 2,
} CERT_IMPORT_FLAGS;

typedef enum {
    CC_DEFAULTCONFIG = 0,
    CC_FIRSTCONFIG = 2,
    CC_LOCALACTIVECONFIG = 4,
    CC_LOCALCONFIG = 3,
    CC_UIPICKCONFIG = 1,
    CC_UIPICKCONFIGSKIPLOCALCA_ = 5,
} CERT_GET_CONFIG_FLAGS;

typedef enum {
    CV_OUT_BASE64 = 1,
    CV_OUT_BASE64HEADER = 0,
    CV_OUT_BASE64REQUESTHEADER = 3,
    CV_OUT_BASE64X509CRLHEADER = 9,
    CV_OUT_BINARY = 2,
    CV_OUT_HEX = 4,
    CV_OUT_HEXADDR = 10,
    CV_OUT_HEXASCII = 5,
    CV_OUT_HEXASCIIADDR = 11,
} ENUM_CERT_COLUMN_VALUE_FLAGS;

typedef enum {
    XEPR_CADNS = 1,
    XEPR_CAFRIENDLYNAME = 3,
    XEPR_CANAME = 2,
    XEPR_HASH = 8,
    XEPR_REQUESTID = 4,
} PENDING_REQUEST_DESIRED_PROPERTY;

typedef enum {
    CA_ACCESS_ADMIN = 1,
    CA_ACCESS_AUDITOR = 4,
    CA_ACCESS_ENROLL = 512,
    CA_ACCESS_OFFICER = 2,
    CA_ACCESS_OPERATOR = 8,
    CA_ACCESS_READ = 256,
} CERTADMIN_GET_ROLES_FLAGS;

typedef enum {
    CR_DISP_DENIED = 2,
    CR_DISP_ERROR = 1,
    CR_DISP_INCOMPLETE = 0,
    CR_DISP_ISSUED = 3,
    CR_DISP_ISSUED_OUT_OF_BAND = 4,
    CR_DISP_UNDER_SUBMISSION = 5,
} CR_DISP;

typedef enum {
    XEKL_KEYSIZE_MIN = 1,
    XEKL_KEYSIZE_MAX = 2,
    XEKL_KEYSIZE_INC = 3,
} XEKL_KEYSIZE;

typedef enum {
    XECR_CMC = 3,
    XECR_PKCS10_V1_5 = 4,
    XECR_PKCS10_V2_0 = 1,
    XECR_PKCS7 = 2,
} CERT_CREATE_REQUEST_FLAGS;

typedef enum {
    EXITEVENT_CERTDENIED = 4,
    EXITEVENT_CERTISSUED = 1,
    EXITEVENT_CERTPENDING = 2,
    EXITEVENT_CERTRETRIEVEPENDING = 16,
    EXITEVENT_CERTREVOKED = 8,
    EXITEVENT_CRLISSUED = 32,
    EXITEVENT_SHUTDOWN = 64,
} CERT_EXIT_EVENT_MASK;

typedef enum {
    XECT_EXTENSION_V1 = 1,
    XECT_EXTENSION_V2 = 2,
} ADDED_CERT_TYPE;

typedef enum {
    CVRC_TABLE_ATTRIBUTES = 16384,
    CVRC_TABLE_CRL = 20480,
    CVRC_TABLE_EXTENSIONS = 12288,
    CVRC_TABLE_REQCERT = 0,
} CVRC_TABLE;

typedef enum {
    PROPTYPE_BINARY = 3,
    PROPTYPE_DATE = 2,
    PROPTYPE_LONG = 1,
    PROPTYPE_STRING = 4,
} CERT_PROPERTY_TYPE;

typedef enum {
    CERT_ALT_NAME_RFC822_NAME = 2,
    CERT_ALT_NAME_DNS_NAME = 3,
    CERT_ALT_NAME_URL = 7,
    CERT_ALT_NAME_REGISTERED_ID = 9,
    CERT_ALT_NAME_DIRECTORY_NAME = 5,
    CERT_ALT_NAME_IP_ADDRESS = 8,
    CERT_ALT_NAME_OTHER_NAME = 1,
} CERT_ALT_NAME;

typedef enum {
    CSBACKUP_TYPE_FULL = 1,
    CSBACKUP_TYPE_LOGS_ONLY = 2,
} CSBACKUP_TYPE;

typedef enum {
    XEKL_KEYSPEC_KEYX = 1,
    XEKL_KEYSPEC_SIG = 2,
} XEKL_KEYSPEC;

typedef enum {
    CR_OUT_BASE64HEADER = 0,
    CR_OUT_BASE64 = 1,
    CR_OUT_BINARY = 2,
} CERT_REQUEST_OUT_TYPE;

typedef enum {
    CVR_SEEK_EQ = 1,
    CVR_SEEK_LE = 4,
    CVR_SEEK_LT = 2,
    CVR_SEEK_GE = 8,
    CVR_SEEK_GT = 16,
} CERT_VIEW_SEEK_OPERATOR_FLAGS;

typedef int CCertAdmin;

typedef int CCertView;

typedef int OCSPPropertyCollection;

typedef int OCSPAdmin;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IEnumCERTVIEWCOLUMN;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IEnumCERTVIEWATTRIBUTE;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IEnumCERTVIEWEXTENSION;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IEnumCERTVIEWROW;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertView;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertView2;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertAdmin;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertAdmin2;

// TODO: this type is limited to platform 'windowsServer2008'
typedef int IOCSPProperty;

// TODO: this type is limited to platform 'windowsServer2008'
typedef int IOCSPPropertyCollection;

// TODO: this type is limited to platform 'windowsServer2008'
typedef int IOCSPCAConfiguration;

// TODO: this type is limited to platform 'windowsServer2008'
typedef int IOCSPCAConfigurationCollection;

// TODO: this type is limited to platform 'windowsServer2008'
typedef int IOCSPAdmin;

typedef enum {
    OCSP_SF_SILENT = 1,
    OCSP_SF_USE_CACERT = 2,
    OCSP_SF_ALLOW_SIGNINGCERT_AUTORENEWAL = 4,
    OCSP_SF_FORCE_SIGNINGCERT_ISSUER_ISCA = 8,
    OCSP_SF_AUTODISCOVER_SIGNINGCERT = 16,
    OCSP_SF_MANUAL_ASSIGN_SIGNINGCERT = 32,
    OCSP_SF_RESPONDER_ID_KEYHASH = 64,
    OCSP_SF_RESPONDER_ID_NAME = 128,
    OCSP_SF_ALLOW_NONCE_EXTENSION = 256,
    OCSP_SF_ALLOW_SIGNINGCERT_AUTOENROLLMENT = 512,
} OCSPSigningFlag;

typedef enum {
    OCSP_RF_REJECT_SIGNED_REQUESTS = 1,
} OCSPRequestFlag;

typedef int CSEDB_RSTMAPW;

typedef int FNCERTSRVISSERVERONLINEW;

typedef int FNCERTSRVBACKUPGETDYNAMICFILELISTW;

typedef int FNCERTSRVBACKUPPREPAREW;

typedef int FNCERTSRVBACKUPGETDATABASENAMESW;

typedef int FNCERTSRVBACKUPOPENFILEW;

typedef int FNCERTSRVBACKUPREAD;

typedef int FNCERTSRVBACKUPCLOSE;

typedef int FNCERTSRVBACKUPGETBACKUPLOGSW;

typedef int FNCERTSRVBACKUPTRUNCATELOGS;

typedef int FNCERTSRVBACKUPEND;

typedef int FNCERTSRVBACKUPFREE;

typedef int FNCERTSRVRESTOREGETDATABASELOCATIONSW;

typedef int FNCERTSRVRESTOREPREPAREW;

typedef int FNCERTSRVRESTOREREGISTERW;

typedef int FNCERTSRVRESTOREREGISTERCOMPLETE;

typedef int FNCERTSRVRESTOREEND;

typedef int FNCERTSRVSERVERCONTROLW;

typedef int CCertGetConfig;

typedef int CCertConfig;

typedef int CCertRequest;

typedef int CCertServerPolicy;

typedef int CCertServerExit;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertServerPolicy;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertServerExit;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertGetConfig;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertConfig;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertConfig2;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ICertRequest;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ICertRequest2;

typedef enum {
    X509AuthNone = 0,
    X509AuthAnonymous = 1,
    X509AuthKerberos = 2,
    X509AuthUsername = 4,
    X509AuthCertificate = 8,
} X509EnrollmentAuthFlags;

// TODO: this type is limited to platform 'windows6.1'
typedef int ICertRequest3;

typedef int CCertEncodeStringArray;

typedef int CCertEncodeLongArray;

typedef int CCertEncodeDateArray;

typedef int CCertEncodeCRLDistInfo;

typedef int CCertEncodeAltName;

typedef int CCertEncodeBitString;

typedef int CObjectId;

typedef int CObjectIds;

typedef int CBinaryConverter;

typedef int CX500DistinguishedName;

typedef int CCspInformation;

typedef int CCspInformations;

typedef int CCspStatus;

typedef int CX509PublicKey;

typedef int CX509PrivateKey;

typedef int CX509EndorsementKey;

typedef int CX509Extension;

typedef int CX509Extensions;

typedef int CX509ExtensionKeyUsage;

typedef int CX509ExtensionEnhancedKeyUsage;

typedef int CX509ExtensionTemplateName;

typedef int CX509ExtensionTemplate;

typedef int CAlternativeName;

typedef int CAlternativeNames;

typedef int CX509ExtensionAlternativeNames;

typedef int CX509ExtensionBasicConstraints;

typedef int CX509ExtensionSubjectKeyIdentifier;

typedef int CX509ExtensionAuthorityKeyIdentifier;

typedef int CSmimeCapability;

typedef int CSmimeCapabilities;

typedef int CX509ExtensionSmimeCapabilities;

typedef int CPolicyQualifier;

typedef int CPolicyQualifiers;

typedef int CCertificatePolicy;

typedef int CCertificatePolicies;

typedef int CX509ExtensionCertificatePolicies;

typedef int CX509ExtensionMSApplicationPolicies;

typedef int CX509Attribute;

typedef int CX509Attributes;

typedef int CX509AttributeExtensions;

typedef int CX509AttributeClientId;

typedef int CX509AttributeRenewalCertificate;

typedef int CX509AttributeArchiveKey;

typedef int CX509AttributeArchiveKeyHash;

typedef int CX509AttributeOSVersion;

typedef int CX509AttributeCspProvider;

typedef int CCryptAttribute;

typedef int CCryptAttributes;

typedef int CCertProperty;

typedef int CCertProperties;

typedef int CCertPropertyFriendlyName;

typedef int CCertPropertyDescription;

typedef int CCertPropertyAutoEnroll;

typedef int CCertPropertyRequestOriginator;

typedef int CCertPropertySHA1Hash;

typedef int CCertPropertyKeyProvInfo;

typedef int CCertPropertyArchived;

typedef int CCertPropertyBackedUp;

typedef int CCertPropertyEnrollment;

typedef int CCertPropertyRenewal;

typedef int CCertPropertyArchivedKeyHash;

typedef int CCertPropertyEnrollmentPolicyServer;

typedef int CSignerCertificate;

typedef int CX509NameValuePair;

typedef int CCertificateAttestationChallenge;

typedef int CX509CertificateRequestPkcs10;

typedef int CX509CertificateRequestCertificate;

typedef int CX509CertificateRequestPkcs7;

typedef int CX509CertificateRequestCmc;

typedef int CX509Enrollment;

typedef int CX509EnrollmentWebClassFactory;

typedef int CX509EnrollmentHelper;

typedef int CX509MachineEnrollmentFactory;

typedef int CX509EnrollmentPolicyActiveDirectory;

typedef int CX509EnrollmentPolicyWebService;

typedef int CX509PolicyServerListManager;

typedef int CX509PolicyServerUrl;

typedef int CX509CertificateTemplateADWritable;

typedef int CX509CertificateRevocationListEntry;

typedef int CX509CertificateRevocationListEntries;

typedef int CX509CertificateRevocationList;

typedef int CX509SCEPEnrollment;

typedef int CX509SCEPEnrollmentHelper;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertManageModule;

typedef int CERTTRANSBLOB;

typedef int CERTVIEWRESTRICTION;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertPolicy;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertPolicy2;

typedef enum {
    SCEPMessageUnknown = -1,
    SCEPMessageCertResponse = 3,
    SCEPMessagePKCSRequest = 19,
    SCEPMessageGetCertInitial = 20,
    SCEPMessageGetCert = 21,
    SCEPMessageGetCRL = 22,
    SCEPMessageClaimChallengeAnswer = 41,
} X509SCEPMessageType;

typedef enum {
    SCEPDispositionUnknown = -1,
    SCEPDispositionSuccess = 0,
    SCEPDispositionFailure = 2,
    SCEPDispositionPending = 3,
    SCEPDispositionPendingChallenge = 11,
} X509SCEPDisposition;

typedef enum {
    SCEPFailUnknown = -1,
    SCEPFailBadAlgorithm = 0,
    SCEPFailBadMessageCheck = 1,
    SCEPFailBadRequest = 2,
    SCEPFailBadTime = 3,
    SCEPFailBadCertId = 4,
} X509SCEPFailInfo;

typedef int INDESPolicy;

typedef enum {
    XCN_OID_NONE = 0,
    XCN_OID_RSA = 1,
    XCN_OID_PKCS = 2,
    XCN_OID_RSA_HASH = 3,
    XCN_OID_RSA_ENCRYPT = 4,
    XCN_OID_PKCS_1 = 5,
    XCN_OID_PKCS_2 = 6,
    XCN_OID_PKCS_3 = 7,
    XCN_OID_PKCS_4 = 8,
    XCN_OID_PKCS_5 = 9,
    XCN_OID_PKCS_6 = 10,
    XCN_OID_PKCS_7 = 11,
    XCN_OID_PKCS_8 = 12,
    XCN_OID_PKCS_9 = 13,
    XCN_OID_PKCS_10 = 14,
    XCN_OID_PKCS_12 = 15,
    XCN_OID_RSA_RSA = 16,
    XCN_OID_RSA_MD2RSA = 17,
    XCN_OID_RSA_MD4RSA = 18,
    XCN_OID_RSA_MD5RSA = 19,
    XCN_OID_RSA_SHA1RSA = 20,
    XCN_OID_RSA_SETOAEP_RSA = 21,
    XCN_OID_RSA_DH = 22,
    XCN_OID_RSA_data = 23,
    XCN_OID_RSA_signedData = 24,
    XCN_OID_RSA_envelopedData = 25,
    XCN_OID_RSA_signEnvData = 26,
    XCN_OID_RSA_digestedData = 27,
    XCN_OID_RSA_hashedData = 28,
    XCN_OID_RSA_encryptedData = 29,
    XCN_OID_RSA_emailAddr = 30,
    XCN_OID_RSA_unstructName = 31,
    XCN_OID_RSA_contentType = 32,
    XCN_OID_RSA_messageDigest = 33,
    XCN_OID_RSA_signingTime = 34,
    XCN_OID_RSA_counterSign = 35,
    XCN_OID_RSA_challengePwd = 36,
    XCN_OID_RSA_unstructAddr = 37,
    XCN_OID_RSA_extCertAttrs = 38,
    XCN_OID_RSA_certExtensions = 39,
    XCN_OID_RSA_SMIMECapabilities = 40,
    XCN_OID_RSA_preferSignedData = 41,
    XCN_OID_RSA_SMIMEalg = 42,
    XCN_OID_RSA_SMIMEalgESDH = 43,
    XCN_OID_RSA_SMIMEalgCMS3DESwrap = 44,
    XCN_OID_RSA_SMIMEalgCMSRC2wrap = 45,
    XCN_OID_RSA_MD2 = 46,
    XCN_OID_RSA_MD4 = 47,
    XCN_OID_RSA_MD5 = 48,
    XCN_OID_RSA_RC2CBC = 49,
    XCN_OID_RSA_RC4 = 50,
    XCN_OID_RSA_DES_EDE3_CBC = 51,
    XCN_OID_RSA_RC5_CBCPad = 52,
    XCN_OID_ANSI_X942 = 53,
    XCN_OID_ANSI_X942_DH = 54,
    XCN_OID_X957 = 55,
    XCN_OID_X957_DSA = 56,
    XCN_OID_X957_SHA1DSA = 57,
    XCN_OID_DS = 58,
    XCN_OID_DSALG = 59,
    XCN_OID_DSALG_CRPT = 60,
    XCN_OID_DSALG_HASH = 61,
    XCN_OID_DSALG_SIGN = 62,
    XCN_OID_DSALG_RSA = 63,
    XCN_OID_OIW = 64,
    XCN_OID_OIWSEC = 65,
    XCN_OID_OIWSEC_md4RSA = 66,
    XCN_OID_OIWSEC_md5RSA = 67,
    XCN_OID_OIWSEC_md4RSA2 = 68,
    XCN_OID_OIWSEC_desECB = 69,
    XCN_OID_OIWSEC_desCBC = 70,
    XCN_OID_OIWSEC_desOFB = 71,
    XCN_OID_OIWSEC_desCFB = 72,
    XCN_OID_OIWSEC_desMAC = 73,
    XCN_OID_OIWSEC_rsaSign = 74,
    XCN_OID_OIWSEC_dsa = 75,
    XCN_OID_OIWSEC_shaDSA = 76,
    XCN_OID_OIWSEC_mdc2RSA = 77,
    XCN_OID_OIWSEC_shaRSA = 78,
    XCN_OID_OIWSEC_dhCommMod = 79,
    XCN_OID_OIWSEC_desEDE = 80,
    XCN_OID_OIWSEC_sha = 81,
    XCN_OID_OIWSEC_mdc2 = 82,
    XCN_OID_OIWSEC_dsaComm = 83,
    XCN_OID_OIWSEC_dsaCommSHA = 84,
    XCN_OID_OIWSEC_rsaXchg = 85,
    XCN_OID_OIWSEC_keyHashSeal = 86,
    XCN_OID_OIWSEC_md2RSASign = 87,
    XCN_OID_OIWSEC_md5RSASign = 88,
    XCN_OID_OIWSEC_sha1 = 89,
    XCN_OID_OIWSEC_dsaSHA1 = 90,
    XCN_OID_OIWSEC_dsaCommSHA1 = 91,
    XCN_OID_OIWSEC_sha1RSASign = 92,
    XCN_OID_OIWDIR = 93,
    XCN_OID_OIWDIR_CRPT = 94,
    XCN_OID_OIWDIR_HASH = 95,
    XCN_OID_OIWDIR_SIGN = 96,
    XCN_OID_OIWDIR_md2 = 97,
    XCN_OID_OIWDIR_md2RSA = 98,
    XCN_OID_INFOSEC = 99,
    XCN_OID_INFOSEC_sdnsSignature = 100,
    XCN_OID_INFOSEC_mosaicSignature = 101,
    XCN_OID_INFOSEC_sdnsConfidentiality = 102,
    XCN_OID_INFOSEC_mosaicConfidentiality = 103,
    XCN_OID_INFOSEC_sdnsIntegrity = 104,
    XCN_OID_INFOSEC_mosaicIntegrity = 105,
    XCN_OID_INFOSEC_sdnsTokenProtection = 106,
    XCN_OID_INFOSEC_mosaicTokenProtection = 107,
    XCN_OID_INFOSEC_sdnsKeyManagement = 108,
    XCN_OID_INFOSEC_mosaicKeyManagement = 109,
    XCN_OID_INFOSEC_sdnsKMandSig = 110,
    XCN_OID_INFOSEC_mosaicKMandSig = 111,
    XCN_OID_INFOSEC_SuiteASignature = 112,
    XCN_OID_INFOSEC_SuiteAConfidentiality = 113,
    XCN_OID_INFOSEC_SuiteAIntegrity = 114,
    XCN_OID_INFOSEC_SuiteATokenProtection = 115,
    XCN_OID_INFOSEC_SuiteAKeyManagement = 116,
    XCN_OID_INFOSEC_SuiteAKMandSig = 117,
    XCN_OID_INFOSEC_mosaicUpdatedSig = 118,
    XCN_OID_INFOSEC_mosaicKMandUpdSig = 119,
    XCN_OID_INFOSEC_mosaicUpdatedInteg = 120,
    XCN_OID_COMMON_NAME = 121,
    XCN_OID_SUR_NAME = 122,
    XCN_OID_DEVICE_SERIAL_NUMBER = 123,
    XCN_OID_COUNTRY_NAME = 124,
    XCN_OID_LOCALITY_NAME = 125,
    XCN_OID_STATE_OR_PROVINCE_NAME = 126,
    XCN_OID_STREET_ADDRESS = 127,
    XCN_OID_ORGANIZATION_NAME = 128,
    XCN_OID_ORGANIZATIONAL_UNIT_NAME = 129,
    XCN_OID_TITLE = 130,
    XCN_OID_DESCRIPTION = 131,
    XCN_OID_SEARCH_GUIDE = 132,
    XCN_OID_BUSINESS_CATEGORY = 133,
    XCN_OID_POSTAL_ADDRESS = 134,
    XCN_OID_POSTAL_CODE = 135,
    XCN_OID_POST_OFFICE_BOX = 136,
    XCN_OID_PHYSICAL_DELIVERY_OFFICE_NAME = 137,
    XCN_OID_TELEPHONE_NUMBER = 138,
    XCN_OID_TELEX_NUMBER = 139,
    XCN_OID_TELETEXT_TERMINAL_IDENTIFIER = 140,
    XCN_OID_FACSIMILE_TELEPHONE_NUMBER = 141,
    XCN_OID_X21_ADDRESS = 142,
    XCN_OID_INTERNATIONAL_ISDN_NUMBER = 143,
    XCN_OID_REGISTERED_ADDRESS = 144,
    XCN_OID_DESTINATION_INDICATOR = 145,
    XCN_OID_PREFERRED_DELIVERY_METHOD = 146,
    XCN_OID_PRESENTATION_ADDRESS = 147,
    XCN_OID_SUPPORTED_APPLICATION_CONTEXT = 148,
    XCN_OID_MEMBER = 149,
    XCN_OID_OWNER = 150,
    XCN_OID_ROLE_OCCUPANT = 151,
    XCN_OID_SEE_ALSO = 152,
    XCN_OID_USER_PASSWORD = 153,
    XCN_OID_USER_CERTIFICATE = 154,
    XCN_OID_CA_CERTIFICATE = 155,
    XCN_OID_AUTHORITY_REVOCATION_LIST = 156,
    XCN_OID_CERTIFICATE_REVOCATION_LIST = 157,
    XCN_OID_CROSS_CERTIFICATE_PAIR = 158,
    XCN_OID_GIVEN_NAME = 159,
    XCN_OID_INITIALS = 160,
    XCN_OID_DN_QUALIFIER = 161,
    XCN_OID_DOMAIN_COMPONENT = 162,
    XCN_OID_PKCS_12_FRIENDLY_NAME_ATTR = 163,
    XCN_OID_PKCS_12_LOCAL_KEY_ID = 164,
    XCN_OID_PKCS_12_KEY_PROVIDER_NAME_ATTR = 165,
    XCN_OID_LOCAL_MACHINE_KEYSET = 166,
    XCN_OID_PKCS_12_EXTENDED_ATTRIBUTES = 167,
    XCN_OID_KEYID_RDN = 168,
    XCN_OID_AUTHORITY_KEY_IDENTIFIER = 169,
    XCN_OID_KEY_ATTRIBUTES = 170,
    XCN_OID_CERT_POLICIES_95 = 171,
    XCN_OID_KEY_USAGE_RESTRICTION = 172,
    XCN_OID_SUBJECT_ALT_NAME = 173,
    XCN_OID_ISSUER_ALT_NAME = 174,
    XCN_OID_BASIC_CONSTRAINTS = 175,
    XCN_OID_KEY_USAGE = 176,
    XCN_OID_PRIVATEKEY_USAGE_PERIOD = 177,
    XCN_OID_BASIC_CONSTRAINTS2 = 178,
    XCN_OID_CERT_POLICIES = 179,
    XCN_OID_ANY_CERT_POLICY = 180,
    XCN_OID_AUTHORITY_KEY_IDENTIFIER2 = 181,
    XCN_OID_SUBJECT_KEY_IDENTIFIER = 182,
    XCN_OID_SUBJECT_ALT_NAME2 = 183,
    XCN_OID_ISSUER_ALT_NAME2 = 184,
    XCN_OID_CRL_REASON_CODE = 185,
    XCN_OID_REASON_CODE_HOLD = 186,
    XCN_OID_CRL_DIST_POINTS = 187,
    XCN_OID_ENHANCED_KEY_USAGE = 188,
    XCN_OID_CRL_NUMBER = 189,
    XCN_OID_DELTA_CRL_INDICATOR = 190,
    XCN_OID_ISSUING_DIST_POINT = 191,
    XCN_OID_FRESHEST_CRL = 192,
    XCN_OID_NAME_CONSTRAINTS = 193,
    XCN_OID_POLICY_MAPPINGS = 194,
    XCN_OID_LEGACY_POLICY_MAPPINGS = 195,
    XCN_OID_POLICY_CONSTRAINTS = 196,
    XCN_OID_RENEWAL_CERTIFICATE = 197,
    XCN_OID_ENROLLMENT_NAME_VALUE_PAIR = 198,
    XCN_OID_ENROLLMENT_CSP_PROVIDER = 199,
    XCN_OID_OS_VERSION = 200,
    XCN_OID_ENROLLMENT_AGENT = 201,
    XCN_OID_PKIX = 202,
    XCN_OID_PKIX_PE = 203,
    XCN_OID_AUTHORITY_INFO_ACCESS = 204,
    XCN_OID_BIOMETRIC_EXT = 205,
    XCN_OID_LOGOTYPE_EXT = 206,
    XCN_OID_CERT_EXTENSIONS = 207,
    XCN_OID_NEXT_UPDATE_LOCATION = 208,
    XCN_OID_REMOVE_CERTIFICATE = 209,
    XCN_OID_CROSS_CERT_DIST_POINTS = 210,
    XCN_OID_CTL = 211,
    XCN_OID_SORTED_CTL = 212,
    XCN_OID_SERIALIZED = 213,
    XCN_OID_NT_PRINCIPAL_NAME = 214,
    XCN_OID_PRODUCT_UPDATE = 215,
    XCN_OID_ANY_APPLICATION_POLICY = 216,
    XCN_OID_AUTO_ENROLL_CTL_USAGE = 217,
    XCN_OID_ENROLL_CERTTYPE_EXTENSION = 218,
    XCN_OID_CERT_MANIFOLD = 219,
    XCN_OID_CERTSRV_CA_VERSION = 220,
    XCN_OID_CERTSRV_PREVIOUS_CERT_HASH = 221,
    XCN_OID_CRL_VIRTUAL_BASE = 222,
    XCN_OID_CRL_NEXT_PUBLISH = 223,
    XCN_OID_KP_CA_EXCHANGE = 224,
    XCN_OID_KP_KEY_RECOVERY_AGENT = 225,
    XCN_OID_CERTIFICATE_TEMPLATE = 226,
    XCN_OID_ENTERPRISE_OID_ROOT = 227,
    XCN_OID_RDN_DUMMY_SIGNER = 228,
    XCN_OID_APPLICATION_CERT_POLICIES = 229,
    XCN_OID_APPLICATION_POLICY_MAPPINGS = 230,
    XCN_OID_APPLICATION_POLICY_CONSTRAINTS = 231,
    XCN_OID_ARCHIVED_KEY_ATTR = 232,
    XCN_OID_CRL_SELF_CDP = 233,
    XCN_OID_REQUIRE_CERT_CHAIN_POLICY = 234,
    XCN_OID_ARCHIVED_KEY_CERT_HASH = 235,
    XCN_OID_ISSUED_CERT_HASH = 236,
    XCN_OID_DS_EMAIL_REPLICATION = 237,
    XCN_OID_REQUEST_CLIENT_INFO = 238,
    XCN_OID_ENCRYPTED_KEY_HASH = 239,
    XCN_OID_CERTSRV_CROSSCA_VERSION = 240,
    XCN_OID_NTDS_REPLICATION = 241,
    XCN_OID_SUBJECT_DIR_ATTRS = 242,
    XCN_OID_PKIX_KP = 243,
    XCN_OID_PKIX_KP_SERVER_AUTH = 244,
    XCN_OID_PKIX_KP_CLIENT_AUTH = 245,
    XCN_OID_PKIX_KP_CODE_SIGNING = 246,
    XCN_OID_PKIX_KP_EMAIL_PROTECTION = 247,
    XCN_OID_PKIX_KP_IPSEC_END_SYSTEM = 248,
    XCN_OID_PKIX_KP_IPSEC_TUNNEL = 249,
    XCN_OID_PKIX_KP_IPSEC_USER = 250,
    XCN_OID_PKIX_KP_TIMESTAMP_SIGNING = 251,
    XCN_OID_PKIX_KP_OCSP_SIGNING = 252,
    XCN_OID_PKIX_OCSP_NOCHECK = 253,
    XCN_OID_IPSEC_KP_IKE_INTERMEDIATE = 254,
    XCN_OID_KP_CTL_USAGE_SIGNING = 255,
    XCN_OID_KP_TIME_STAMP_SIGNING = 256,
    XCN_OID_SERVER_GATED_CRYPTO = 257,
    XCN_OID_SGC_NETSCAPE = 258,
    XCN_OID_KP_EFS = 259,
    XCN_OID_EFS_RECOVERY = 260,
    XCN_OID_WHQL_CRYPTO = 261,
    XCN_OID_NT5_CRYPTO = 262,
    XCN_OID_OEM_WHQL_CRYPTO = 263,
    XCN_OID_EMBEDDED_NT_CRYPTO = 264,
    XCN_OID_ROOT_LIST_SIGNER = 265,
    XCN_OID_KP_QUALIFIED_SUBORDINATION = 266,
    XCN_OID_KP_KEY_RECOVERY = 267,
    XCN_OID_KP_DOCUMENT_SIGNING = 268,
    XCN_OID_KP_LIFETIME_SIGNING = 269,
    XCN_OID_KP_MOBILE_DEVICE_SOFTWARE = 270,
    XCN_OID_KP_SMART_DISPLAY = 271,
    XCN_OID_KP_CSP_SIGNATURE = 272,
    XCN_OID_DRM = 273,
    XCN_OID_DRM_INDIVIDUALIZATION = 274,
    XCN_OID_LICENSES = 275,
    XCN_OID_LICENSE_SERVER = 276,
    XCN_OID_KP_SMARTCARD_LOGON = 277,
    XCN_OID_YESNO_TRUST_ATTR = 278,
    XCN_OID_PKIX_POLICY_QUALIFIER_CPS = 279,
    XCN_OID_PKIX_POLICY_QUALIFIER_USERNOTICE = 280,
    XCN_OID_CERT_POLICIES_95_QUALIFIER1 = 281,
    XCN_OID_PKIX_ACC_DESCR = 282,
    XCN_OID_PKIX_OCSP = 283,
    XCN_OID_PKIX_CA_ISSUERS = 284,
    XCN_OID_VERISIGN_PRIVATE_6_9 = 285,
    XCN_OID_VERISIGN_ONSITE_JURISDICTION_HASH = 286,
    XCN_OID_VERISIGN_BITSTRING_6_13 = 287,
    XCN_OID_VERISIGN_ISS_STRONG_CRYPTO = 288,
    XCN_OID_NETSCAPE = 289,
    XCN_OID_NETSCAPE_CERT_EXTENSION = 290,
    XCN_OID_NETSCAPE_CERT_TYPE = 291,
    XCN_OID_NETSCAPE_BASE_URL = 292,
    XCN_OID_NETSCAPE_REVOCATION_URL = 293,
    XCN_OID_NETSCAPE_CA_REVOCATION_URL = 294,
    XCN_OID_NETSCAPE_CERT_RENEWAL_URL = 295,
    XCN_OID_NETSCAPE_CA_POLICY_URL = 296,
    XCN_OID_NETSCAPE_SSL_SERVER_NAME = 297,
    XCN_OID_NETSCAPE_COMMENT = 298,
    XCN_OID_NETSCAPE_DATA_TYPE = 299,
    XCN_OID_NETSCAPE_CERT_SEQUENCE = 300,
    XCN_OID_CT_PKI_DATA = 301,
    XCN_OID_CT_PKI_RESPONSE = 302,
    XCN_OID_PKIX_NO_SIGNATURE = 303,
    XCN_OID_CMC = 304,
    XCN_OID_CMC_STATUS_INFO = 305,
    XCN_OID_CMC_IDENTIFICATION = 306,
    XCN_OID_CMC_IDENTITY_PROOF = 307,
    XCN_OID_CMC_DATA_RETURN = 308,
    XCN_OID_CMC_TRANSACTION_ID = 309,
    XCN_OID_CMC_SENDER_NONCE = 310,
    XCN_OID_CMC_RECIPIENT_NONCE = 311,
    XCN_OID_CMC_ADD_EXTENSIONS = 312,
    XCN_OID_CMC_ENCRYPTED_POP = 313,
    XCN_OID_CMC_DECRYPTED_POP = 314,
    XCN_OID_CMC_LRA_POP_WITNESS = 315,
    XCN_OID_CMC_GET_CERT = 316,
    XCN_OID_CMC_GET_CRL = 317,
    XCN_OID_CMC_REVOKE_REQUEST = 318,
    XCN_OID_CMC_REG_INFO = 319,
    XCN_OID_CMC_RESPONSE_INFO = 320,
    XCN_OID_CMC_QUERY_PENDING = 321,
    XCN_OID_CMC_ID_POP_LINK_RANDOM = 322,
    XCN_OID_CMC_ID_POP_LINK_WITNESS = 323,
    XCN_OID_CMC_ID_CONFIRM_CERT_ACCEPTANCE = 324,
    XCN_OID_CMC_ADD_ATTRIBUTES = 325,
    XCN_OID_LOYALTY_OTHER_LOGOTYPE = 326,
    XCN_OID_BACKGROUND_OTHER_LOGOTYPE = 327,
    XCN_OID_PKIX_OCSP_BASIC_SIGNED_RESPONSE = 328,
    XCN_OID_PKCS_7_DATA = 329,
    XCN_OID_PKCS_7_SIGNED = 330,
    XCN_OID_PKCS_7_ENVELOPED = 331,
    XCN_OID_PKCS_7_SIGNEDANDENVELOPED = 332,
    XCN_OID_PKCS_7_DIGESTED = 333,
    XCN_OID_PKCS_7_ENCRYPTED = 334,
    XCN_OID_PKCS_9_CONTENT_TYPE = 335,
    XCN_OID_PKCS_9_MESSAGE_DIGEST = 336,
    XCN_OID_CERT_PROP_ID_PREFIX = 337,
    XCN_OID_CERT_KEY_IDENTIFIER_PROP_ID = 338,
    XCN_OID_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID = 339,
    XCN_OID_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID = 340,
    XCN_OID_CERT_MD5_HASH_PROP_ID = 341,
    XCN_OID_RSA_SHA256RSA = 342,
    XCN_OID_RSA_SHA384RSA = 343,
    XCN_OID_RSA_SHA512RSA = 344,
    XCN_OID_NIST_sha256 = 345,
    XCN_OID_NIST_sha384 = 346,
    XCN_OID_NIST_sha512 = 347,
    XCN_OID_RSA_MGF1 = 348,
    XCN_OID_ECC_PUBLIC_KEY = 349,
    XCN_OID_ECDSA_SHA1 = 350,
    XCN_OID_ECDSA_SPECIFIED = 351,
    XCN_OID_ANY_ENHANCED_KEY_USAGE = 352,
    XCN_OID_RSA_SSA_PSS = 353,
    XCN_OID_ATTR_SUPPORTED_ALGORITHMS = 355,
    XCN_OID_ATTR_TPM_SECURITY_ASSERTIONS = 356,
    XCN_OID_ATTR_TPM_SPECIFICATION = 357,
    XCN_OID_CERT_DISALLOWED_FILETIME_PROP_ID = 358,
    XCN_OID_CERT_SIGNATURE_HASH_PROP_ID = 359,
    XCN_OID_CERT_STRONG_KEY_OS_1 = 360,
    XCN_OID_CERT_STRONG_KEY_OS_CURRENT = 361,
    XCN_OID_CERT_STRONG_KEY_OS_PREFIX = 362,
    XCN_OID_CERT_STRONG_SIGN_OS_1 = 363,
    XCN_OID_CERT_STRONG_SIGN_OS_CURRENT = 364,
    XCN_OID_CERT_STRONG_SIGN_OS_PREFIX = 365,
    XCN_OID_DH_SINGLE_PASS_STDDH_SHA1_KDF = 366,
    XCN_OID_DH_SINGLE_PASS_STDDH_SHA256_KDF = 367,
    XCN_OID_DH_SINGLE_PASS_STDDH_SHA384_KDF = 368,
    XCN_OID_DISALLOWED_HASH = 369,
    XCN_OID_DISALLOWED_LIST = 370,
    XCN_OID_ECC_CURVE_P256 = 371,
    XCN_OID_ECC_CURVE_P384 = 372,
    XCN_OID_ECC_CURVE_P521 = 373,
    XCN_OID_ECDSA_SHA256 = 374,
    XCN_OID_ECDSA_SHA384 = 375,
    XCN_OID_ECDSA_SHA512 = 376,
    XCN_OID_ENROLL_CAXCHGCERT_HASH = 377,
    XCN_OID_ENROLL_EK_INFO = 378,
    XCN_OID_ENROLL_EKPUB_CHALLENGE = 379,
    XCN_OID_ENROLL_EKVERIFYCERT = 380,
    XCN_OID_ENROLL_EKVERIFYCREDS = 381,
    XCN_OID_ENROLL_EKVERIFYKEY = 382,
    XCN_OID_EV_RDN_COUNTRY = 383,
    XCN_OID_EV_RDN_LOCALE = 384,
    XCN_OID_EV_RDN_STATE_OR_PROVINCE = 385,
    XCN_OID_INHIBIT_ANY_POLICY = 386,
    XCN_OID_INTERNATIONALIZED_EMAIL_ADDRESS = 387,
    XCN_OID_KP_KERNEL_MODE_CODE_SIGNING = 388,
    XCN_OID_KP_KERNEL_MODE_HAL_EXTENSION_SIGNING = 389,
    XCN_OID_KP_KERNEL_MODE_TRUSTED_BOOT_SIGNING = 390,
    XCN_OID_KP_TPM_AIK_CERTIFICATE = 391,
    XCN_OID_KP_TPM_EK_CERTIFICATE = 392,
    XCN_OID_KP_TPM_PLATFORM_CERTIFICATE = 393,
    XCN_OID_NIST_AES128_CBC = 394,
    XCN_OID_NIST_AES128_WRAP = 395,
    XCN_OID_NIST_AES192_CBC = 396,
    XCN_OID_NIST_AES192_WRAP = 397,
    XCN_OID_NIST_AES256_CBC = 398,
    XCN_OID_NIST_AES256_WRAP = 399,
    XCN_OID_PKCS_12_PbeIds = 400,
    XCN_OID_PKCS_12_pbeWithSHA1And128BitRC2 = 401,
    XCN_OID_PKCS_12_pbeWithSHA1And128BitRC4 = 402,
    XCN_OID_PKCS_12_pbeWithSHA1And2KeyTripleDES = 403,
    XCN_OID_PKCS_12_pbeWithSHA1And3KeyTripleDES = 404,
    XCN_OID_PKCS_12_pbeWithSHA1And40BitRC2 = 405,
    XCN_OID_PKCS_12_pbeWithSHA1And40BitRC4 = 406,
    XCN_OID_PKCS_12_PROTECTED_PASSWORD_SECRET_BAG_TYPE_ID = 407,
    XCN_OID_PKINIT_KP_KDC = 408,
    XCN_OID_PKIX_CA_REPOSITORY = 409,
    XCN_OID_PKIX_OCSP_NONCE = 410,
    XCN_OID_PKIX_TIME_STAMPING = 411,
    XCN_OID_QC_EU_COMPLIANCE = 412,
    XCN_OID_QC_SSCD = 413,
    XCN_OID_QC_STATEMENTS_EXT = 414,
    XCN_OID_RDN_TPM_MANUFACTURER = 415,
    XCN_OID_RDN_TPM_MODEL = 416,
    XCN_OID_RDN_TPM_VERSION = 417,
    XCN_OID_REVOKED_LIST_SIGNER = 418,
    XCN_OID_RFC3161_counterSign = 419,
    XCN_OID_ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION = 420,
    XCN_OID_ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION = 421,
    XCN_OID_ROOT_PROGRAM_FLAGS = 422,
    XCN_OID_ROOT_PROGRAM_NO_OCSP_FAILOVER_TO_CRL = 423,
    XCN_OID_RSA_PSPECIFIED = 424,
    XCN_OID_RSAES_OAEP = 425,
    XCN_OID_SUBJECT_INFO_ACCESS = 426,
    XCN_OID_TIMESTAMP_TOKEN = 427,
    XCN_OID_ENROLL_SCEP_ERROR = 428,
    XCN_OIDVerisign_MessageType = 429,
    XCN_OIDVerisign_PkiStatus = 430,
    XCN_OIDVerisign_FailInfo = 431,
    XCN_OIDVerisign_SenderNonce = 432,
    XCN_OIDVerisign_RecipientNonce = 433,
    XCN_OIDVerisign_TransactionID = 434,
    XCN_OID_ENROLL_ATTESTATION_CHALLENGE = 435,
    XCN_OID_ENROLL_ATTESTATION_STATEMENT = 436,
    XCN_OID_ENROLL_ENCRYPTION_ALGORITHM = 437,
    XCN_OID_ENROLL_KSP_NAME = 438,
} CERTENROLL_OBJECTID;

typedef enum {
    LevelUnsafe = 0,
    LevelSafe = 1,
} WebSecurityLevel;

typedef enum {
    XCN_CRYPT_STRING_BASE64HEADER = 0,
    XCN_CRYPT_STRING_BASE64 = 1,
    XCN_CRYPT_STRING_BINARY = 2,
    XCN_CRYPT_STRING_BASE64REQUESTHEADER = 3,
    XCN_CRYPT_STRING_HEX = 4,
    XCN_CRYPT_STRING_HEXASCII = 5,
    XCN_CRYPT_STRING_BASE64_ANY = 6,
    XCN_CRYPT_STRING_ANY = 7,
    XCN_CRYPT_STRING_HEX_ANY = 8,
    XCN_CRYPT_STRING_BASE64X509CRLHEADER = 9,
    XCN_CRYPT_STRING_HEXADDR = 10,
    XCN_CRYPT_STRING_HEXASCIIADDR = 11,
    XCN_CRYPT_STRING_HEXRAW = 12,
    XCN_CRYPT_STRING_BASE64URI = 13,
    XCN_CRYPT_STRING_ENCODEMASK = 255,
    XCN_CRYPT_STRING_CHAIN = 256,
    XCN_CRYPT_STRING_TEXT = 512,
    XCN_CRYPT_STRING_PERCENTESCAPE = 134217728,
    XCN_CRYPT_STRING_HASHDATA = 268435456,
    XCN_CRYPT_STRING_STRICT = 536870912,
    XCN_CRYPT_STRING_NOCRLF = 1073741824,
    XCN_CRYPT_STRING_NOCR = -2147483648,
} EncodingType;

typedef enum {
    PFXExportEEOnly = 0,
    PFXExportChainNoRoot = 1,
    PFXExportChainWithRoot = 2,
} PFXExportOptions;

typedef enum {
    XCN_CRYPT_ANY_GROUP_ID = 0,
    XCN_CRYPT_HASH_ALG_OID_GROUP_ID = 1,
    XCN_CRYPT_ENCRYPT_ALG_OID_GROUP_ID = 2,
    XCN_CRYPT_PUBKEY_ALG_OID_GROUP_ID = 3,
    XCN_CRYPT_SIGN_ALG_OID_GROUP_ID = 4,
    XCN_CRYPT_RDN_ATTR_OID_GROUP_ID = 5,
    XCN_CRYPT_EXT_OR_ATTR_OID_GROUP_ID = 6,
    XCN_CRYPT_ENHKEY_USAGE_OID_GROUP_ID = 7,
    XCN_CRYPT_POLICY_OID_GROUP_ID = 8,
    XCN_CRYPT_TEMPLATE_OID_GROUP_ID = 9,
    XCN_CRYPT_KDF_OID_GROUP_ID = 10,
    XCN_CRYPT_LAST_OID_GROUP_ID = 10,
    XCN_CRYPT_FIRST_ALG_OID_GROUP_ID = 1,
    XCN_CRYPT_LAST_ALG_OID_GROUP_ID = 4,
    XCN_CRYPT_GROUP_ID_MASK = 65535,
    XCN_CRYPT_OID_PREFER_CNG_ALGID_FLAG = 1073741824,
    XCN_CRYPT_OID_DISABLE_SEARCH_DS_FLAG = -2147483648,
    XCN_CRYPT_OID_INFO_OID_GROUP_BIT_LEN_MASK = 268369920,
    XCN_CRYPT_OID_INFO_OID_GROUP_BIT_LEN_SHIFT = 16,
    XCN_CRYPT_KEY_LENGTH_MASK = 268369920,
} ObjectIdGroupId;

typedef enum {
    XCN_CRYPT_OID_INFO_PUBKEY_ANY = 0,
    XCN_CRYPT_OID_INFO_PUBKEY_SIGN_KEY_FLAG = -2147483648,
    XCN_CRYPT_OID_INFO_PUBKEY_ENCRYPT_KEY_FLAG = 1073741824,
} ObjectIdPublicKeyFlags;

typedef enum {
    AlgorithmFlagsNone = 0,
    AlgorithmFlagsWrap = 1,
} AlgorithmFlags;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IObjectId;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IObjectIds;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IBinaryConverter;

typedef int IBinaryConverter2;

typedef enum {
    XCN_CERT_NAME_STR_NONE = 0,
    XCN_CERT_SIMPLE_NAME_STR = 1,
    XCN_CERT_OID_NAME_STR = 2,
    XCN_CERT_X500_NAME_STR = 3,
    XCN_CERT_XML_NAME_STR = 4,
    XCN_CERT_NAME_STR_SEMICOLON_FLAG = 1073741824,
    XCN_CERT_NAME_STR_NO_PLUS_FLAG = 536870912,
    XCN_CERT_NAME_STR_NO_QUOTING_FLAG = 268435456,
    XCN_CERT_NAME_STR_CRLF_FLAG = 134217728,
    XCN_CERT_NAME_STR_COMMA_FLAG = 67108864,
    XCN_CERT_NAME_STR_REVERSE_FLAG = 33554432,
    XCN_CERT_NAME_STR_FORWARD_FLAG = 16777216,
    XCN_CERT_NAME_STR_AMBIGUOUS_SEPARATOR_FLAGS = 1275068416,
    XCN_CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG = 65536,
    XCN_CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG = 131072,
    XCN_CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG = 262144,
    XCN_CERT_NAME_STR_FORCE_UTF8_DIR_STR_FLAG = 524288,
    XCN_CERT_NAME_STR_DISABLE_UTF8_DIR_STR_FLAG = 1048576,
    XCN_CERT_NAME_STR_ENABLE_PUNYCODE_FLAG = 2097152,
    XCN_CERT_NAME_STR_DS_ESCAPED = 8388608,
} X500NameFlags;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX500DistinguishedName;

typedef enum {
    ContextNone = 0,
    ContextUser = 1,
    ContextMachine = 2,
    ContextAdministratorForceMachine = 3,
} X509CertificateEnrollmentContext;

typedef enum {
    Enrolled = 1,
    EnrollPended = 2,
    EnrollUIDeferredEnrollmentRequired = 4,
    EnrollError = 16,
    EnrollUnknown = 32,
    EnrollSkipped = 64,
    EnrollDenied = 256,
} EnrollmentEnrollStatus;

typedef enum {
    SelectedNo = 0,
    SelectedYes = 1,
} EnrollmentSelectionStatus;

typedef enum {
    DisplayNo = 0,
    DisplayYes = 1,
} EnrollmentDisplayStatus;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509EnrollmentStatus;

typedef enum {
    XCN_PROV_NONE = 0,
    XCN_PROV_RSA_FULL = 1,
    XCN_PROV_RSA_SIG = 2,
    XCN_PROV_DSS = 3,
    XCN_PROV_FORTEZZA = 4,
    XCN_PROV_MS_EXCHANGE = 5,
    XCN_PROV_SSL = 6,
    XCN_PROV_RSA_SCHANNEL = 12,
    XCN_PROV_DSS_DH = 13,
    XCN_PROV_EC_ECDSA_SIG = 14,
    XCN_PROV_EC_ECNRA_SIG = 15,
    XCN_PROV_EC_ECDSA_FULL = 16,
    XCN_PROV_EC_ECNRA_FULL = 17,
    XCN_PROV_DH_SCHANNEL = 18,
    XCN_PROV_SPYRUS_LYNKS = 20,
    XCN_PROV_RNG = 21,
    XCN_PROV_INTEL_SEC = 22,
    XCN_PROV_REPLACE_OWF = 23,
    XCN_PROV_RSA_AES = 24,
} X509ProviderType;

typedef enum {
    XCN_BCRYPT_UNKNOWN_INTERFACE = 0,
    XCN_BCRYPT_CIPHER_INTERFACE = 1,
    XCN_BCRYPT_HASH_INTERFACE = 2,
    XCN_BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE = 3,
    XCN_BCRYPT_SIGNATURE_INTERFACE = 5,
    XCN_BCRYPT_SECRET_AGREEMENT_INTERFACE = 4,
    XCN_BCRYPT_RNG_INTERFACE = 6,
    XCN_BCRYPT_KEY_DERIVATION_INTERFACE = 7,
} AlgorithmType;

typedef enum {
    XCN_NCRYPT_NO_OPERATION = 0,
    XCN_NCRYPT_CIPHER_OPERATION = 1,
    XCN_NCRYPT_HASH_OPERATION = 2,
    XCN_NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION = 4,
    XCN_NCRYPT_SECRET_AGREEMENT_OPERATION = 8,
    XCN_NCRYPT_SIGNATURE_OPERATION = 16,
    XCN_NCRYPT_RNG_OPERATION = 32,
    XCN_NCRYPT_KEY_DERIVATION_OPERATION = 64,
    XCN_NCRYPT_ANY_ASYMMETRIC_OPERATION = 28,
    XCN_NCRYPT_PREFER_SIGNATURE_ONLY_OPERATION = 2097152,
    XCN_NCRYPT_PREFER_NON_SIGNATURE_OPERATION = 4194304,
    XCN_NCRYPT_EXACT_MATCH_OPERATION = 8388608,
    XCN_NCRYPT_PREFERENCE_MASK_OPERATION = 14680064,
} AlgorithmOperationFlags;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICspAlgorithm;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICspAlgorithms;

typedef enum {
    XCN_AT_NONE = 0,
    XCN_AT_KEYEXCHANGE = 1,
    XCN_AT_SIGNATURE = 2,
} X509KeySpec;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICspInformation;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICspInformations;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICspStatus;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICspStatuses;

typedef enum {
    SKIHashDefault = 0,
    SKIHashSha1 = 1,
    SKIHashCapiSha1 = 2,
    SKIHashSha256 = 3,
    SKIHashHPKP = 5,
} KeyIdentifierHashAlgorithm;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509PublicKey;

typedef enum {
    XCN_NCRYPT_ALLOW_EXPORT_NONE = 0,
    XCN_NCRYPT_ALLOW_EXPORT_FLAG = 1,
    XCN_NCRYPT_ALLOW_PLAINTEXT_EXPORT_FLAG = 2,
    XCN_NCRYPT_ALLOW_ARCHIVING_FLAG = 4,
    XCN_NCRYPT_ALLOW_PLAINTEXT_ARCHIVING_FLAG = 8,
} X509PrivateKeyExportFlags;

typedef enum {
    XCN_NCRYPT_ALLOW_USAGES_NONE = 0,
    XCN_NCRYPT_ALLOW_DECRYPT_FLAG = 1,
    XCN_NCRYPT_ALLOW_SIGNING_FLAG = 2,
    XCN_NCRYPT_ALLOW_KEY_AGREEMENT_FLAG = 4,
    XCN_NCRYPT_ALLOW_KEY_IMPORT_FLAG = 8,
    XCN_NCRYPT_ALLOW_ALL_USAGES = 16777215,
} X509PrivateKeyUsageFlags;

typedef enum {
    XCN_NCRYPT_UI_NO_PROTECTION_FLAG = 0,
    XCN_NCRYPT_UI_PROTECT_KEY_FLAG = 1,
    XCN_NCRYPT_UI_FORCE_HIGH_PROTECTION_FLAG = 2,
    XCN_NCRYPT_UI_FINGERPRINT_PROTECTION_FLAG = 4,
    XCN_NCRYPT_UI_APPCONTAINER_ACCESS_MEDIUM_FLAG = 8,
} X509PrivateKeyProtection;

typedef enum {
    VerifyNone = 0,
    VerifySilent = 1,
    VerifySmartCardNone = 2,
    VerifySmartCardSilent = 3,
    VerifyAllowUI = 4,
} X509PrivateKeyVerify;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509PrivateKey;

typedef enum {
    XCN_NCRYPT_PCP_NONE = 0,
    XCN_NCRYPT_TPM12_PROVIDER = 65536,
    XCN_NCRYPT_PCP_SIGNATURE_KEY = 1,
    XCN_NCRYPT_PCP_ENCRYPTION_KEY = 2,
    XCN_NCRYPT_PCP_GENERIC_KEY = 3,
    XCN_NCRYPT_PCP_STORAGE_KEY = 4,
    XCN_NCRYPT_PCP_IDENTITY_KEY = 8,
} X509HardwareKeyUsageFlags;

typedef enum {
    XCN_CRYPT_OID_USE_CURVE_NONE = 0,
    XCN_CRYPT_OID_USE_CURVE_NAME_FOR_ENCODE_FLAG = 536870912,
    XCN_CRYPT_OID_USE_CURVE_PARAMETERS_FOR_ENCODE_FLAG = 268435456,
} X509KeyParametersExportType;

typedef int IX509PrivateKey2;

typedef int IX509EndorsementKey;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509Extension;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509Extensions;

typedef enum {
    XCN_CERT_NO_KEY_USAGE = 0,
    XCN_CERT_DIGITAL_SIGNATURE_KEY_USAGE = 128,
    XCN_CERT_NON_REPUDIATION_KEY_USAGE = 64,
    XCN_CERT_KEY_ENCIPHERMENT_KEY_USAGE = 32,
    XCN_CERT_DATA_ENCIPHERMENT_KEY_USAGE = 16,
    XCN_CERT_KEY_AGREEMENT_KEY_USAGE = 8,
    XCN_CERT_KEY_CERT_SIGN_KEY_USAGE = 4,
    XCN_CERT_OFFLINE_CRL_SIGN_KEY_USAGE = 2,
    XCN_CERT_CRL_SIGN_KEY_USAGE = 2,
    XCN_CERT_ENCIPHER_ONLY_KEY_USAGE = 1,
    XCN_CERT_DECIPHER_ONLY_KEY_USAGE = 32768,
} X509KeyUsageFlags;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509ExtensionKeyUsage;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509ExtensionEnhancedKeyUsage;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509ExtensionTemplateName;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509ExtensionTemplate;

typedef enum {
    XCN_CERT_ALT_NAME_UNKNOWN = 0,
    XCN_CERT_ALT_NAME_OTHER_NAME = 1,
    XCN_CERT_ALT_NAME_RFC822_NAME = 2,
    XCN_CERT_ALT_NAME_DNS_NAME = 3,
    XCN_CERT_ALT_NAME_X400_ADDRESS = 4,
    XCN_CERT_ALT_NAME_DIRECTORY_NAME = 5,
    XCN_CERT_ALT_NAME_EDI_PARTY_NAME = 6,
    XCN_CERT_ALT_NAME_URL = 7,
    XCN_CERT_ALT_NAME_IP_ADDRESS = 8,
    XCN_CERT_ALT_NAME_REGISTERED_ID = 9,
    XCN_CERT_ALT_NAME_GUID = 10,
    XCN_CERT_ALT_NAME_USER_PRINCIPLE_NAME = 11,
} AlternativeNameType;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IAlternativeName;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IAlternativeNames;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509ExtensionAlternativeNames;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509ExtensionBasicConstraints;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509ExtensionSubjectKeyIdentifier;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509ExtensionAuthorityKeyIdentifier;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ISmimeCapability;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ISmimeCapabilities;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509ExtensionSmimeCapabilities;

typedef enum {
    PolicyQualifierTypeUnknown = 0,
    PolicyQualifierTypeUrl = 1,
    PolicyQualifierTypeUserNotice = 2,
    PolicyQualifierTypeFlags = 3,
} PolicyQualifierType;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IPolicyQualifier;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IPolicyQualifiers;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICertificatePolicy;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICertificatePolicies;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509ExtensionCertificatePolicies;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509ExtensionMSApplicationPolicies;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509Attribute;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509Attributes;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509AttributeExtensions;

typedef enum {
    ClientIdNone = 0,
    ClientIdXEnroll2003 = 1,
    ClientIdAutoEnroll2003 = 2,
    ClientIdWizard2003 = 3,
    ClientIdCertReq2003 = 4,
    ClientIdDefaultRequest = 5,
    ClientIdAutoEnroll = 6,
    ClientIdRequestWizard = 7,
    ClientIdEOBO = 8,
    ClientIdCertReq = 9,
    ClientIdTest = 10,
    ClientIdWinRT = 11,
    ClientIdUserStart = 1000,
} RequestClientInfoClientId;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509AttributeClientId;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509AttributeRenewalCertificate;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509AttributeArchiveKey;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509AttributeArchiveKeyHash;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509AttributeOSVersion;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509AttributeCspProvider;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICryptAttribute;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICryptAttributes;

typedef enum {
    XCN_PROPERTYID_NONE = 0,
    XCN_CERT_KEY_PROV_HANDLE_PROP_ID = 1,
    XCN_CERT_KEY_PROV_INFO_PROP_ID = 2,
    XCN_CERT_SHA1_HASH_PROP_ID = 3,
    XCN_CERT_MD5_HASH_PROP_ID = 4,
    XCN_CERT_HASH_PROP_ID = 3,
    XCN_CERT_KEY_CONTEXT_PROP_ID = 5,
    XCN_CERT_KEY_SPEC_PROP_ID = 6,
    XCN_CERT_IE30_RESERVED_PROP_ID = 7,
    XCN_CERT_PUBKEY_HASH_RESERVED_PROP_ID = 8,
    XCN_CERT_ENHKEY_USAGE_PROP_ID = 9,
    XCN_CERT_CTL_USAGE_PROP_ID = 9,
    XCN_CERT_NEXT_UPDATE_LOCATION_PROP_ID = 10,
    XCN_CERT_FRIENDLY_NAME_PROP_ID = 11,
    XCN_CERT_PVK_FILE_PROP_ID = 12,
    XCN_CERT_DESCRIPTION_PROP_ID = 13,
    XCN_CERT_ACCESS_STATE_PROP_ID = 14,
    XCN_CERT_SIGNATURE_HASH_PROP_ID = 15,
    XCN_CERT_SMART_CARD_DATA_PROP_ID = 16,
    XCN_CERT_EFS_PROP_ID = 17,
    XCN_CERT_FORTEZZA_DATA_PROP_ID = 18,
    XCN_CERT_ARCHIVED_PROP_ID = 19,
    XCN_CERT_KEY_IDENTIFIER_PROP_ID = 20,
    XCN_CERT_AUTO_ENROLL_PROP_ID = 21,
    XCN_CERT_PUBKEY_ALG_PARA_PROP_ID = 22,
    XCN_CERT_CROSS_CERT_DIST_POINTS_PROP_ID = 23,
    XCN_CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID = 24,
    XCN_CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID = 25,
    XCN_CERT_ENROLLMENT_PROP_ID = 26,
    XCN_CERT_DATE_STAMP_PROP_ID = 27,
    XCN_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID = 28,
    XCN_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID = 29,
    XCN_CERT_EXTENDED_ERROR_INFO_PROP_ID = 30,
    XCN_CERT_RENEWAL_PROP_ID = 64,
    XCN_CERT_ARCHIVED_KEY_HASH_PROP_ID = 65,
    XCN_CERT_AUTO_ENROLL_RETRY_PROP_ID = 66,
    XCN_CERT_AIA_URL_RETRIEVED_PROP_ID = 67,
    XCN_CERT_AUTHORITY_INFO_ACCESS_PROP_ID = 68,
    XCN_CERT_BACKED_UP_PROP_ID = 69,
    XCN_CERT_OCSP_RESPONSE_PROP_ID = 70,
    XCN_CERT_REQUEST_ORIGINATOR_PROP_ID = 71,
    XCN_CERT_SOURCE_LOCATION_PROP_ID = 72,
    XCN_CERT_SOURCE_URL_PROP_ID = 73,
    XCN_CERT_NEW_KEY_PROP_ID = 74,
    XCN_CERT_OCSP_CACHE_PREFIX_PROP_ID = 75,
    XCN_CERT_SMART_CARD_ROOT_INFO_PROP_ID = 76,
    XCN_CERT_NO_AUTO_EXPIRE_CHECK_PROP_ID = 77,
    XCN_CERT_NCRYPT_KEY_HANDLE_PROP_ID = 78,
    XCN_CERT_HCRYPTPROV_OR_NCRYPT_KEY_HANDLE_PROP_ID = 79,
    XCN_CERT_SUBJECT_INFO_ACCESS_PROP_ID = 80,
    XCN_CERT_CA_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID = 81,
    XCN_CERT_CA_DISABLE_CRL_PROP_ID = 82,
    XCN_CERT_ROOT_PROGRAM_CERT_POLICIES_PROP_ID = 83,
    XCN_CERT_ROOT_PROGRAM_NAME_CONSTRAINTS_PROP_ID = 84,
    XCN_CERT_SUBJECT_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID = 85,
    XCN_CERT_SUBJECT_DISABLE_CRL_PROP_ID = 86,
    XCN_CERT_CEP_PROP_ID = 87,
    XCN_CERT_SIGN_HASH_CNG_ALG_PROP_ID = 89,
    XCN_CERT_SCARD_PIN_ID_PROP_ID = 90,
    XCN_CERT_SCARD_PIN_INFO_PROP_ID = 91,
    XCN_CERT_SUBJECT_PUB_KEY_BIT_LENGTH_PROP_ID = 92,
    XCN_CERT_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID = 93,
    XCN_CERT_ISSUER_PUB_KEY_BIT_LENGTH_PROP_ID = 94,
    XCN_CERT_ISSUER_CHAIN_SIGN_HASH_CNG_ALG_PROP_ID = 95,
    XCN_CERT_ISSUER_CHAIN_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID = 96,
    XCN_CERT_NO_EXPIRE_NOTIFICATION_PROP_ID = 97,
    XCN_CERT_AUTH_ROOT_SHA256_HASH_PROP_ID = 98,
    XCN_CERT_NCRYPT_KEY_HANDLE_TRANSFER_PROP_ID = 99,
    XCN_CERT_HCRYPTPROV_TRANSFER_PROP_ID = 100,
    XCN_CERT_SMART_CARD_READER_PROP_ID = 101,
    XCN_CERT_SEND_AS_TRUSTED_ISSUER_PROP_ID = 102,
    XCN_CERT_KEY_REPAIR_ATTEMPTED_PROP_ID = 103,
    XCN_CERT_DISALLOWED_FILETIME_PROP_ID = 104,
    XCN_CERT_ROOT_PROGRAM_CHAIN_POLICIES_PROP_ID = 105,
    XCN_CERT_SMART_CARD_READER_NON_REMOVABLE_PROP_ID = 106,
    XCN_CERT_SHA256_HASH_PROP_ID = 107,
    XCN_CERT_SCEP_SERVER_CERTS_PROP_ID = 108,
    XCN_CERT_SCEP_RA_SIGNATURE_CERT_PROP_ID = 109,
    XCN_CERT_SCEP_RA_ENCRYPTION_CERT_PROP_ID = 110,
    XCN_CERT_SCEP_CA_CERT_PROP_ID = 111,
    XCN_CERT_SCEP_SIGNER_CERT_PROP_ID = 112,
    XCN_CERT_SCEP_NONCE_PROP_ID = 113,
    XCN_CERT_SCEP_ENCRYPT_HASH_CNG_ALG_PROP_ID = 114,
    XCN_CERT_SCEP_FLAGS_PROP_ID = 115,
    XCN_CERT_SCEP_GUID_PROP_ID = 116,
    XCN_CERT_SERIALIZABLE_KEY_CONTEXT_PROP_ID = 117,
    XCN_CERT_ISOLATED_KEY_PROP_ID = 118,
    XCN_CERT_SERIAL_CHAIN_PROP_ID = 119,
    XCN_CERT_KEY_CLASSIFICATION_PROP_ID = 120,
    XCN_CERT_DISALLOWED_ENHKEY_USAGE_PROP_ID = 122,
    XCN_CERT_NONCOMPLIANT_ROOT_URL_PROP_ID = 123,
    XCN_CERT_PIN_SHA256_HASH_PROP_ID = 124,
    XCN_CERT_CLR_DELETE_KEY_PROP_ID = 125,
    XCN_CERT_NOT_BEFORE_FILETIME_PROP_ID = 126,
    XCN_CERT_CERT_NOT_BEFORE_ENHKEY_USAGE_PROP_ID = 127,
    XCN_CERT_FIRST_RESERVED_PROP_ID = 128,
    XCN_CERT_LAST_RESERVED_PROP_ID = 32767,
    XCN_CERT_FIRST_USER_PROP_ID = 32768,
    XCN_CERT_LAST_USER_PROP_ID = 65535,
    XCN_CERT_STORE_LOCALIZED_NAME_PROP_ID = 4096,
} CERTENROLL_PROPERTYID;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICertProperty;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICertProperties;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICertPropertyFriendlyName;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICertPropertyDescription;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICertPropertyAutoEnroll;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICertPropertyRequestOriginator;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICertPropertySHA1Hash;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICertPropertyKeyProvInfo;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICertPropertyArchived;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICertPropertyBackedUp;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICertPropertyEnrollment;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICertPropertyRenewal;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ICertPropertyArchivedKeyHash;

typedef enum {
    DefaultNone = 0,
    DefaultPolicyServer = 1,
} EnrollmentPolicyServerPropertyFlags;

typedef enum {
    PsfNone = 0,
    PsfLocationGroupPolicy = 1,
    PsfLocationRegistry = 2,
    PsfUseClientId = 4,
    PsfAutoEnrollmentEnabled = 16,
    PsfAllowUnTrustedCA = 32,
} PolicyServerUrlFlags;

// TODO: this type is limited to platform 'windows6.1'
typedef int ICertPropertyEnrollmentPolicyServer;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509SignatureInformation;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ISignerCertificate;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ISignerCertificates;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509NameValuePair;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509NameValuePairs;

typedef enum {
    TemplatePropCommonName = 1,
    TemplatePropFriendlyName = 2,
    TemplatePropEKUs = 3,
    TemplatePropCryptoProviders = 4,
    TemplatePropMajorRevision = 5,
    TemplatePropDescription = 6,
    TemplatePropKeySpec = 7,
    TemplatePropSchemaVersion = 8,
    TemplatePropMinorRevision = 9,
    TemplatePropRASignatureCount = 10,
    TemplatePropMinimumKeySize = 11,
    TemplatePropOID = 12,
    TemplatePropSupersede = 13,
    TemplatePropRACertificatePolicies = 14,
    TemplatePropRAEKUs = 15,
    TemplatePropCertificatePolicies = 16,
    TemplatePropV1ApplicationPolicy = 17,
    TemplatePropAsymmetricAlgorithm = 18,
    TemplatePropKeySecurityDescriptor = 19,
    TemplatePropSymmetricAlgorithm = 20,
    TemplatePropSymmetricKeyLength = 21,
    TemplatePropHashAlgorithm = 22,
    TemplatePropKeyUsage = 23,
    TemplatePropEnrollmentFlags = 24,
    TemplatePropSubjectNameFlags = 25,
    TemplatePropPrivateKeyFlags = 26,
    TemplatePropGeneralFlags = 27,
    TemplatePropSecurityDescriptor = 28,
    TemplatePropExtensions = 29,
    TemplatePropValidityPeriod = 30,
    TemplatePropRenewalPeriod = 31,
} EnrollmentTemplateProperty;

// TODO: this type is limited to platform 'windows6.1'
typedef int IX509CertificateTemplate;

// TODO: this type is limited to platform 'windows6.1'
typedef int IX509CertificateTemplates;

typedef enum {
    CommitFlagSaveTemplateGenerateOID = 1,
    CommitFlagSaveTemplateUseCurrentOID = 2,
    CommitFlagSaveTemplateOverwrite = 3,
    CommitFlagDeleteTemplate = 4,
} CommitTemplateFlags;

// TODO: this type is limited to platform 'windows6.1'
typedef int IX509CertificateTemplateWritable;

typedef enum {
    CAPropCommonName = 1,
    CAPropDistinguishedName = 2,
    CAPropSanitizedName = 3,
    CAPropSanitizedShortName = 4,
    CAPropDNSName = 5,
    CAPropCertificateTypes = 6,
    CAPropCertificate = 7,
    CAPropDescription = 8,
    CAPropWebServers = 9,
    CAPropSiteName = 10,
    CAPropSecurity = 11,
    CAPropRenewalOnly = 12,
} EnrollmentCAProperty;

// TODO: this type is limited to platform 'windows6.1'
typedef int ICertificationAuthority;

// TODO: this type is limited to platform 'windows6.1'
typedef int ICertificationAuthorities;

typedef enum {
    LoadOptionDefault = 0,
    LoadOptionCacheOnly = 1,
    LoadOptionReload = 2,
    LoadOptionRegisterForADChanges = 4,
} X509EnrollmentPolicyLoadOption;

typedef enum {
    DisableGroupPolicyList = 2,
    DisableUserServerList = 4,
} EnrollmentPolicyFlags;

typedef enum {
    PsPolicyID = 0,
    PsFriendlyName = 1,
} PolicyServerUrlPropertyID;

typedef enum {
    ExportTemplates = 1,
    ExportOIDs = 2,
    ExportCAs = 4,
} X509EnrollmentPolicyExportFlags;

// TODO: this type is limited to platform 'windows6.1'
typedef int IX509EnrollmentPolicyServer;

// TODO: this type is limited to platform 'windows6.1'
typedef int IX509PolicyServerUrl;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509PolicyServerListManager;

typedef enum {
    TypeAny = 0,
    TypePkcs10 = 1,
    TypePkcs7 = 2,
    TypeCmc = 3,
    TypeCertificate = 4,
} X509RequestType;

typedef enum {
    InheritDefault = 0,
    InheritNewDefaultKey = 1,
    InheritNewSimilarKey = 2,
    InheritPrivateKey = 3,
    InheritPublicKey = 4,
    InheritKeyMask = 15,
    InheritNone = 16,
    InheritRenewalCertificateFlag = 32,
    InheritTemplateFlag = 64,
    InheritSubjectFlag = 128,
    InheritExtensionsFlag = 256,
    InheritSubjectAltNameFlag = 512,
    InheritValidityPeriodFlag = 1024,
    InheritReserved80000000 = -2147483648,
} X509RequestInheritOptions;

typedef enum {
    LevelInnermost = 0,
    LevelNext = 1,
} InnerRequestLevel;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509CertificateRequest;

typedef enum {
    AllowedKeySignature = 1,
    AllowedNullSignature = 2,
} Pkcs10AllowedSignatureTypes;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509CertificateRequestPkcs10;

// TODO: this type is limited to platform 'windows6.1'
typedef int IX509CertificateRequestPkcs10V2;

typedef int IX509CertificateRequestPkcs10V3;

typedef enum {
    XCN_NCRYPT_CLAIM_NONE = 0,
    XCN_NCRYPT_CLAIM_AUTHORITY_AND_SUBJECT = 3,
    XCN_NCRYPT_CLAIM_AUTHORITY_ONLY = 1,
    XCN_NCRYPT_CLAIM_SUBJECT_ONLY = 2,
    XCN_NCRYPT_CLAIM_UNKNOWN = 4096,
} KeyAttestationClaimType;

typedef int IX509CertificateRequestPkcs10V4;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509CertificateRequestCertificate;

// TODO: this type is limited to platform 'windows6.1'
typedef int IX509CertificateRequestCertificate2;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509CertificateRequestPkcs7;

// TODO: this type is limited to platform 'windows6.1'
typedef int IX509CertificateRequestPkcs7V2;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509CertificateRequestCmc;

// TODO: this type is limited to platform 'windows6.1'
typedef int IX509CertificateRequestCmc2;

typedef enum {
    AllowNone = 0,
    AllowNoOutstandingRequest = 1,
    AllowUntrustedCertificate = 2,
    AllowUntrustedRoot = 4,
} InstallResponseRestrictionFlags;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509Enrollment;

// TODO: this type is limited to platform 'windows6.1'
typedef int IX509Enrollment2;

typedef enum {
    EnrollPrompt = 1,
} WebEnrollmentFlags;

// TODO: this type is limited to platform 'windows6.1'
typedef int IX509EnrollmentHelper;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IX509EnrollmentWebClassFactory;

// TODO: this type is limited to platform 'windows6.1'
typedef int IX509MachineEnrollmentFactory;

typedef enum {
    XCN_CRL_REASON_UNSPECIFIED = 0,
    XCN_CRL_REASON_KEY_COMPROMISE = 1,
    XCN_CRL_REASON_CA_COMPROMISE = 2,
    XCN_CRL_REASON_AFFILIATION_CHANGED = 3,
    XCN_CRL_REASON_SUPERSEDED = 4,
    XCN_CRL_REASON_CESSATION_OF_OPERATION = 5,
    XCN_CRL_REASON_CERTIFICATE_HOLD = 6,
    XCN_CRL_REASON_REMOVE_FROM_CRL = 8,
    XCN_CRL_REASON_PRIVILEGE_WITHDRAWN = 9,
    XCN_CRL_REASON_AA_COMPROMISE = 10,
} CRLRevocationReason;

typedef int IX509CertificateRevocationListEntry;

typedef int IX509CertificateRevocationListEntries;

typedef int IX509CertificateRevocationList;

typedef int ICertificateAttestationChallenge;

typedef int ICertificateAttestationChallenge2;

typedef int IX509SCEPEnrollment;

typedef enum {
    SCEPProcessDefault = 0,
    SCEPProcessSkipCertInstall = 1,
} X509SCEPProcessMessageFlags;

typedef enum {
    DelayRetryUnknown = 0,
    DelayRetryNone = 1,
    DelayRetryShort = 2,
    DelayRetryLong = 3,
    DelayRetrySuccess = 4,
    DelayRetryPastSuccess = 5,
} DelayRetryAction;

typedef int IX509SCEPEnrollment2;

typedef int IX509SCEPEnrollmentHelper;

typedef enum {
    GeneralMachineType = 64,
    GeneralCA = 128,
    GeneralCrossCA = 2048,
    GeneralDefault = 65536,
    GeneralModified = 131072,
    GeneralDonotPersist = 4096,
} X509CertificateTemplateGeneralFlag;

typedef enum {
    EnrollmentIncludeSymmetricAlgorithms = 1,
    EnrollmentPendAllRequests = 2,
    EnrollmentPublishToKRAContainer = 4,
    EnrollmentPublishToDS = 8,
    EnrollmentAutoEnrollmentCheckUserDSCertificate = 16,
    EnrollmentAutoEnrollment = 32,
    EnrollmentDomainAuthenticationNotRequired = 128,
    EnrollmentPreviousApprovalValidateReenrollment = 64,
    EnrollmentUserInteractionRequired = 256,
    EnrollmentAddTemplateName = 512,
    EnrollmentRemoveInvalidCertificateFromPersonalStore = 1024,
    EnrollmentAllowEnrollOnBehalfOf = 2048,
    EnrollmentAddOCSPNoCheck = 4096,
    EnrollmentReuseKeyOnFullSmartCard = 8192,
    EnrollmentNoRevocationInfoInCerts = 16384,
    EnrollmentIncludeBasicConstraintsForEECerts = 32768,
    EnrollmentPreviousApprovalKeyBasedValidateReenrollment = 65536,
    EnrollmentCertificateIssuancePoliciesFromRequest = 131072,
    EnrollmentSkipAutoRenewal = 262144,
} X509CertificateTemplateEnrollmentFlag;

typedef enum {
    SubjectNameEnrolleeSupplies = 1,
    SubjectNameRequireDirectoryPath = -2147483648,
    SubjectNameRequireCommonName = 1073741824,
    SubjectNameRequireEmail = 536870912,
    SubjectNameRequireDNS = 268435456,
    SubjectNameAndAlternativeNameOldCertSupplies = 8,
    SubjectAlternativeNameEnrolleeSupplies = 65536,
    SubjectAlternativeNameRequireDirectoryGUID = 16777216,
    SubjectAlternativeNameRequireUPN = 33554432,
    SubjectAlternativeNameRequireEmail = 67108864,
    SubjectAlternativeNameRequireSPN = 8388608,
    SubjectAlternativeNameRequireDNS = 134217728,
    SubjectAlternativeNameRequireDomainDNS = 4194304,
} X509CertificateTemplateSubjectNameFlag;

typedef enum {
    PrivateKeyRequireArchival = 1,
    PrivateKeyExportable = 16,
    PrivateKeyRequireStrongKeyProtection = 32,
    PrivateKeyRequireAlternateSignatureAlgorithm = 64,
    PrivateKeyRequireSameKeyRenewal = 128,
    PrivateKeyUseLegacyProvider = 256,
    PrivateKeyEKTrustOnUse = 512,
    PrivateKeyEKValidateCert = 1024,
    PrivateKeyEKValidateKey = 2048,
    PrivateKeyAttestNone = 0,
    PrivateKeyAttestPreferred = 4096,
    PrivateKeyAttestRequired = 8192,
    PrivateKeyAttestMask = 12288,
    PrivateKeyAttestWithoutPolicy = 16384,
    PrivateKeyServerVersionMask = 983040,
    PrivateKeyServerVersionShift = 16,
    PrivateKeyHelloKspKey = 1048576,
    PrivateKeyHelloLogonKey = 2097152,
    PrivateKeyClientVersionMask = 251658240,
    PrivateKeyClientVersionShift = 24,
} X509CertificateTemplatePrivateKeyFlag;

typedef enum {
    ImportNone = 0,
    ImportMachineContext = 1,
    ImportForceOverwrite = 2,
    ImportSilent = 4,
    ImportSaveProperties = 8,
    ImportExportable = 16,
    ImportExportableEncrypted = 32,
    ImportNoUserProtected = 64,
    ImportUserProtected = 128,
    ImportUserProtectedHigh = 256,
    ImportInstallCertificate = 512,
    ImportInstallChain = 1024,
    ImportInstallChainAndRoot = 2048,
} ImportPFXFlags;

typedef int FNIMPORTPFXTOPROVIDER;

typedef int FNIMPORTPFXTOPROVIDERFREEDATA;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertEncodeStringArray;

typedef int ICertEncodeStringArray2;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertEncodeLongArray;

typedef int ICertEncodeLongArray2;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertEncodeDateArray;

typedef int ICertEncodeDateArray2;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertEncodeCRLDistInfo;

typedef int ICertEncodeCRLDistInfo2;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertEncodeAltName;

typedef int ICertEncodeAltName2;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertEncodeBitString;

typedef int ICertEncodeBitString2;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertExit;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int ICertExit2;

typedef enum {
    ENUM_ENTERPRISE_ROOTCA = 0,
    ENUM_ENTERPRISE_SUBCA = 1,
    ENUM_STANDALONE_ROOTCA = 3,
    ENUM_STANDALONE_SUBCA = 4,
    ENUM_UNKNOWN_CA = 5,
} ENUM_CATYPES;

typedef int CAINFO;

typedef int CEnroll2;

typedef int CEnroll;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ICEnroll;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ICEnroll2;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ICEnroll3;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ICEnroll4;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IEnroll;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IEnroll2;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IEnroll4;


//--------------------------------------------------------------------------------
// Section: Functions (26)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windowsServer2003'
/*HRESULT*/void CertSrvIsServerOnlineW();

// TODO: this type is limited to platform 'windowsServer2003'
/*HRESULT*/void CertSrvBackupGetDynamicFileListW();

// TODO: this type is limited to platform 'windowsServer2003'
/*HRESULT*/void CertSrvBackupPrepareW();

// TODO: this type is limited to platform 'windowsServer2003'
/*HRESULT*/void CertSrvBackupGetDatabaseNamesW();

// TODO: this type is limited to platform 'windowsServer2003'
/*HRESULT*/void CertSrvBackupOpenFileW();

// TODO: this type is limited to platform 'windowsServer2003'
/*HRESULT*/void CertSrvBackupRead();

// TODO: this type is limited to platform 'windowsServer2003'
/*HRESULT*/void CertSrvBackupClose();

// TODO: this type is limited to platform 'windowsServer2003'
/*HRESULT*/void CertSrvBackupGetBackupLogsW();

// TODO: this type is limited to platform 'windowsServer2003'
/*HRESULT*/void CertSrvBackupTruncateLogs();

// TODO: this type is limited to platform 'windowsServer2003'
/*HRESULT*/void CertSrvBackupEnd();

// TODO: this type is limited to platform 'windowsServer2003'
/*void*/void CertSrvBackupFree();

// TODO: this type is limited to platform 'windowsServer2003'
/*HRESULT*/void CertSrvRestoreGetDatabaseLocationsW();

// TODO: this type is limited to platform 'windowsServer2003'
/*HRESULT*/void CertSrvRestorePrepareW();

// TODO: this type is limited to platform 'windowsServer2003'
/*HRESULT*/void CertSrvRestoreRegisterW();

// TODO: this type is limited to platform 'windowsServer2003'
/*HRESULT*/void CertSrvRestoreRegisterThroughFile();

// TODO: this type is limited to platform 'windowsServer2003'
/*HRESULT*/void CertSrvRestoreRegisterComplete();

// TODO: this type is limited to platform 'windowsServer2003'
/*HRESULT*/void CertSrvRestoreEnd();

// TODO: this type is limited to platform 'windowsServer2003'
/*HRESULT*/void CertSrvServerControlW();

// TODO: this type is limited to platform 'windows6.1'
/*NTSTATUS*/void PstGetTrustAnchors();

/*NTSTATUS*/void PstGetTrustAnchorsEx();

/*NTSTATUS*/void PstGetCertificateChain();

// TODO: this type is limited to platform 'windows6.1'
/*NTSTATUS*/void PstGetCertificates();

// TODO: this type is limited to platform 'windows6.1'
/*NTSTATUS*/void PstAcquirePrivateKey();

// TODO: this type is limited to platform 'windows6.1'
/*NTSTATUS*/void PstValidate();

// TODO: this type is limited to platform 'windows6.1'
/*NTSTATUS*/void PstMapCertificate();

// TODO: this type is limited to platform 'windows6.1'
/*NTSTATUS*/void PstGetUserNameForCertificate();

