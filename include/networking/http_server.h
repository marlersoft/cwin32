// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (90)
//--------------------------------------------------------------------------------
#define HTTP_DEMAND_CBT (UINT)4
#define HTTP_MAX_SERVER_QUEUE_LENGTH (UINT)2147483647
#define HTTP_MIN_SERVER_QUEUE_LENGTH (UINT)1
#define HTTP_AUTH_ENABLE_BASIC (UINT)1
#define HTTP_AUTH_ENABLE_DIGEST (UINT)2
#define HTTP_AUTH_ENABLE_NTLM (UINT)4
#define HTTP_AUTH_ENABLE_NEGOTIATE (UINT)8
#define HTTP_AUTH_ENABLE_KERBEROS (UINT)16
#define HTTP_AUTH_EX_FLAG_ENABLE_KERBEROS_CREDENTIAL_CACHING (UINT)1
#define HTTP_AUTH_EX_FLAG_CAPTURE_CREDENTIAL (UINT)2
#define HTTP_CHANNEL_BIND_PROXY (UINT)1
#define HTTP_CHANNEL_BIND_PROXY_COHOSTING (UINT)32
#define HTTP_CHANNEL_BIND_NO_SERVICE_NAME_CHECK (UINT)2
#define HTTP_CHANNEL_BIND_DOTLESS_SERVICE (UINT)4
#define HTTP_CHANNEL_BIND_SECURE_CHANNEL_TOKEN (UINT)8
#define HTTP_CHANNEL_BIND_CLIENT_SERVICE (UINT)16
#define HTTP_LOG_FIELD_DATE (UINT)1
#define HTTP_LOG_FIELD_TIME (UINT)2
#define HTTP_LOG_FIELD_CLIENT_IP (UINT)4
#define HTTP_LOG_FIELD_USER_NAME (UINT)8
#define HTTP_LOG_FIELD_SITE_NAME (UINT)16
#define HTTP_LOG_FIELD_COMPUTER_NAME (UINT)32
#define HTTP_LOG_FIELD_SERVER_IP (UINT)64
#define HTTP_LOG_FIELD_METHOD (UINT)128
#define HTTP_LOG_FIELD_URI_STEM (UINT)256
#define HTTP_LOG_FIELD_URI_QUERY (UINT)512
#define HTTP_LOG_FIELD_STATUS (UINT)1024
#define HTTP_LOG_FIELD_WIN32_STATUS (UINT)2048
#define HTTP_LOG_FIELD_BYTES_SENT (UINT)4096
#define HTTP_LOG_FIELD_BYTES_RECV (UINT)8192
#define HTTP_LOG_FIELD_TIME_TAKEN (UINT)16384
#define HTTP_LOG_FIELD_SERVER_PORT (UINT)32768
#define HTTP_LOG_FIELD_USER_AGENT (UINT)65536
#define HTTP_LOG_FIELD_COOKIE (UINT)131072
#define HTTP_LOG_FIELD_REFERER (UINT)262144
#define HTTP_LOG_FIELD_VERSION (UINT)524288
#define HTTP_LOG_FIELD_HOST (UINT)1048576
#define HTTP_LOG_FIELD_SUB_STATUS (UINT)2097152
#define HTTP_LOG_FIELD_STREAM_ID (UINT)134217728
#define HTTP_LOG_FIELD_STREAM_ID_EX (UINT)268435456
#define HTTP_LOG_FIELD_TRANSPORT_TYPE (UINT)536870912
#define HTTP_LOG_FIELD_CLIENT_PORT (UINT)4194304
#define HTTP_LOG_FIELD_URI (UINT)8388608
#define HTTP_LOG_FIELD_SITE_ID (UINT)16777216
#define HTTP_LOG_FIELD_REASON (UINT)33554432
#define HTTP_LOG_FIELD_QUEUE_NAME (UINT)67108864
#define HTTP_LOGGING_FLAG_LOCAL_TIME_ROLLOVER (UINT)1
#define HTTP_LOGGING_FLAG_USE_UTF8_CONVERSION (UINT)2
#define HTTP_LOGGING_FLAG_LOG_ERRORS_ONLY (UINT)4
#define HTTP_LOGGING_FLAG_LOG_SUCCESS_ONLY (UINT)8
#define HTTP_CREATE_REQUEST_QUEUE_FLAG_OPEN_EXISTING (UINT)1
#define HTTP_CREATE_REQUEST_QUEUE_FLAG_CONTROLLER (UINT)2
#define HTTP_RECEIVE_REQUEST_ENTITY_BODY_FLAG_FILL_BUFFER (UINT)1
#define HTTP_SEND_RESPONSE_FLAG_DISCONNECT (UINT)1
#define HTTP_SEND_RESPONSE_FLAG_MORE_DATA (UINT)2
#define HTTP_SEND_RESPONSE_FLAG_BUFFER_DATA (UINT)4
#define HTTP_SEND_RESPONSE_FLAG_ENABLE_NAGLING (UINT)8
#define HTTP_SEND_RESPONSE_FLAG_PROCESS_RANGES (UINT)32
#define HTTP_SEND_RESPONSE_FLAG_OPAQUE (UINT)64
#define HTTP_SEND_RESPONSE_FLAG_GOAWAY (UINT)256
#define HTTP_FLUSH_RESPONSE_FLAG_RECURSIVE (UINT)1
#define HTTP_URL_FLAG_REMOVE_ALL (UINT)1
#define HTTP_RECEIVE_SECURE_CHANNEL_TOKEN (UINT)1
#define HTTP_REQUEST_SIZING_INFO_FLAG_TCP_FAST_OPEN (UINT)1
#define HTTP_REQUEST_SIZING_INFO_FLAG_TLS_SESSION_RESUMPTION (UINT)2
#define HTTP_REQUEST_SIZING_INFO_FLAG_TLS_FALSE_START (UINT)4
#define HTTP_REQUEST_SIZING_INFO_FLAG_FIRST_REQUEST (UINT)8
#define HTTP_REQUEST_AUTH_FLAG_TOKEN_FOR_CACHED_CRED (UINT)1
#define HTTP_REQUEST_FLAG_MORE_ENTITY_BODY_EXISTS (UINT)1
#define HTTP_REQUEST_FLAG_IP_ROUTED (UINT)2
#define HTTP_REQUEST_FLAG_HTTP2 (UINT)4
#define HTTP_RESPONSE_FLAG_MULTIPLE_ENCODINGS_AVAILABLE (UINT)1
#define HTTP_RESPONSE_FLAG_MORE_ENTITY_BODY_EXISTS (UINT)2
#define HTTP_RESPONSE_INFO_FLAGS_PRESERVE_ORDER (UINT)1
#define HTTP_SERVICE_CONFIG_SSL_FLAG_USE_DS_MAPPER (UINT)1
#define HTTP_SERVICE_CONFIG_SSL_FLAG_NEGOTIATE_CLIENT_CERT (UINT)2
#define HTTP_SERVICE_CONFIG_SSL_FLAG_NO_RAW_FILTER (UINT)4
#define HTTP_SERVICE_CONFIG_SSL_FLAG_REJECT (UINT)8
#define HTTP_SERVICE_CONFIG_SSL_FLAG_DISABLE_HTTP2 (UINT)16
#define HTTP_SERVICE_CONFIG_SSL_FLAG_DISABLE_QUIC (UINT)32
#define HTTP_SERVICE_CONFIG_SSL_FLAG_DISABLE_TLS13 (UINT)64
#define HTTP_SERVICE_CONFIG_SSL_FLAG_DISABLE_OCSP_STAPLING (UINT)128
#define HTTP_SERVICE_CONFIG_SSL_FLAG_ENABLE_TOKEN_BINDING (UINT)256
#define HTTP_SERVICE_CONFIG_SSL_FLAG_LOG_EXTENDED_EVENTS (UINT)512
#define HTTP_SERVICE_CONFIG_SSL_FLAG_DISABLE_LEGACY_TLS (UINT)1024
#define HTTP_SERVICE_CONFIG_SSL_FLAG_ENABLE_SESSION_TICKET (UINT)2048
#define HTTP_SERVICE_CONFIG_SSL_FLAG_DISABLE_TLS12 (UINT)4096
#define HTTP_REQUEST_PROPERTY_SNI_HOST_MAX_LENGTH (UINT)255
#define HTTP_REQUEST_PROPERTY_SNI_FLAG_SNI_USED (UINT)1
#define HTTP_REQUEST_PROPERTY_SNI_FLAG_NO_SNI (UINT)2

//--------------------------------------------------------------------------------
// Section: Types (111)
//--------------------------------------------------------------------------------
typedef enum {
    HTTP_RECEIVE_REQUEST_FLAG_COPY_BODY = 1,
    HTTP_RECEIVE_REQUEST_FLAG_FLUSH_BODY = 2,
} HTTP_RECEIVE_HTTP_REQUEST_FLAGS;

typedef enum {
    HTTP_INITIALIZE_CONFIG = 2,
    HTTP_INITIALIZE_SERVER = 1,
} HTTP_INITIALIZE;

typedef enum {
    HttpServerAuthenticationProperty = 0,
    HttpServerLoggingProperty = 1,
    HttpServerQosProperty = 2,
    HttpServerTimeoutsProperty = 3,
    HttpServerQueueLengthProperty = 4,
    HttpServerStateProperty = 5,
    HttpServer503VerbosityProperty = 6,
    HttpServerBindingProperty = 7,
    HttpServerExtendedAuthenticationProperty = 8,
    HttpServerListenEndpointProperty = 9,
    HttpServerChannelBindProperty = 10,
    HttpServerProtectionLevelProperty = 11,
} HTTP_SERVER_PROPERTY;

typedef int HTTP_PROPERTY_FLAGS;

typedef enum {
    HttpEnabledStateActive = 0,
    HttpEnabledStateInactive = 1,
} HTTP_ENABLED_STATE;

typedef int HTTP_STATE_INFO;

typedef enum {
    Http503ResponseVerbosityBasic = 0,
    Http503ResponseVerbosityLimited = 1,
    Http503ResponseVerbosityFull = 2,
} HTTP_503_RESPONSE_VERBOSITY;

typedef enum {
    HttpQosSettingTypeBandwidth = 0,
    HttpQosSettingTypeConnectionLimit = 1,
    HttpQosSettingTypeFlowRate = 2,
} HTTP_QOS_SETTING_TYPE;

typedef int HTTP_QOS_SETTING_INFO;

typedef int HTTP_CONNECTION_LIMIT_INFO;

typedef int HTTP_BANDWIDTH_LIMIT_INFO;

typedef int HTTP_FLOWRATE_INFO;

typedef enum {
    IdleConnectionTimeout = 0,
    HeaderWaitTimeout = 1,
} HTTP_SERVICE_CONFIG_TIMEOUT_KEY;

typedef int HTTP_SERVICE_CONFIG_TIMEOUT_SET;

typedef int HTTP_TIMEOUT_LIMIT_INFO;

typedef enum {
    HttpNone = 0,
    HttpTlsThrottle = 1,
} HTTP_SERVICE_CONFIG_SETTING_KEY;

typedef int HTTP_SERVICE_CONFIG_SETTING_SET;

typedef int HTTP_LISTEN_ENDPOINT_INFO;

typedef int HTTP_SERVER_AUTHENTICATION_DIGEST_PARAMS;

typedef int HTTP_SERVER_AUTHENTICATION_BASIC_PARAMS;

typedef int HTTP_SERVER_AUTHENTICATION_INFO;

typedef enum {
    HttpServiceBindingTypeNone = 0,
    HttpServiceBindingTypeW = 1,
    HttpServiceBindingTypeA = 2,
} HTTP_SERVICE_BINDING_TYPE;

typedef int HTTP_SERVICE_BINDING_BASE;

typedef int HTTP_SERVICE_BINDING_A;

typedef int HTTP_SERVICE_BINDING_W;

typedef enum {
    HttpAuthenticationHardeningLegacy = 0,
    HttpAuthenticationHardeningMedium = 1,
    HttpAuthenticationHardeningStrict = 2,
} HTTP_AUTHENTICATION_HARDENING_LEVELS;

typedef int HTTP_CHANNEL_BIND_INFO;

typedef int HTTP_REQUEST_CHANNEL_BIND_STATUS;

typedef int HTTP_REQUEST_TOKEN_BINDING_INFO;

typedef enum {
    HttpLoggingTypeW3C = 0,
    HttpLoggingTypeIIS = 1,
    HttpLoggingTypeNCSA = 2,
    HttpLoggingTypeRaw = 3,
} HTTP_LOGGING_TYPE;

typedef enum {
    HttpLoggingRolloverSize = 0,
    HttpLoggingRolloverDaily = 1,
    HttpLoggingRolloverWeekly = 2,
    HttpLoggingRolloverMonthly = 3,
    HttpLoggingRolloverHourly = 4,
} HTTP_LOGGING_ROLLOVER_TYPE;

typedef int HTTP_LOGGING_INFO;

typedef int HTTP_BINDING_INFO;

typedef enum {
    HttpProtectionLevelUnrestricted = 0,
    HttpProtectionLevelEdgeRestricted = 1,
    HttpProtectionLevelRestricted = 2,
} HTTP_PROTECTION_LEVEL_TYPE;

typedef int HTTP_PROTECTION_LEVEL_INFO;

typedef int HTTP_BYTE_RANGE;

typedef int HTTP_VERSION;

typedef enum {
    HttpSchemeHttp = 0,
    HttpSchemeHttps = 1,
    HttpSchemeMaximum = 2,
} HTTP_SCHEME;

typedef enum {
    HttpVerbUnparsed = 0,
    HttpVerbUnknown = 1,
    HttpVerbInvalid = 2,
    HttpVerbOPTIONS = 3,
    HttpVerbGET = 4,
    HttpVerbHEAD = 5,
    HttpVerbPOST = 6,
    HttpVerbPUT = 7,
    HttpVerbDELETE = 8,
    HttpVerbTRACE = 9,
    HttpVerbCONNECT = 10,
    HttpVerbTRACK = 11,
    HttpVerbMOVE = 12,
    HttpVerbCOPY = 13,
    HttpVerbPROPFIND = 14,
    HttpVerbPROPPATCH = 15,
    HttpVerbMKCOL = 16,
    HttpVerbLOCK = 17,
    HttpVerbUNLOCK = 18,
    HttpVerbSEARCH = 19,
    HttpVerbMaximum = 20,
} HTTP_VERB;

typedef enum {
    HttpHeaderCacheControl = 0,
    HttpHeaderConnection = 1,
    HttpHeaderDate = 2,
    HttpHeaderKeepAlive = 3,
    HttpHeaderPragma = 4,
    HttpHeaderTrailer = 5,
    HttpHeaderTransferEncoding = 6,
    HttpHeaderUpgrade = 7,
    HttpHeaderVia = 8,
    HttpHeaderWarning = 9,
    HttpHeaderAllow = 10,
    HttpHeaderContentLength = 11,
    HttpHeaderContentType = 12,
    HttpHeaderContentEncoding = 13,
    HttpHeaderContentLanguage = 14,
    HttpHeaderContentLocation = 15,
    HttpHeaderContentMd5 = 16,
    HttpHeaderContentRange = 17,
    HttpHeaderExpires = 18,
    HttpHeaderLastModified = 19,
    HttpHeaderAccept = 20,
    HttpHeaderAcceptCharset = 21,
    HttpHeaderAcceptEncoding = 22,
    HttpHeaderAcceptLanguage = 23,
    HttpHeaderAuthorization = 24,
    HttpHeaderCookie = 25,
    HttpHeaderExpect = 26,
    HttpHeaderFrom = 27,
    HttpHeaderHost = 28,
    HttpHeaderIfMatch = 29,
    HttpHeaderIfModifiedSince = 30,
    HttpHeaderIfNoneMatch = 31,
    HttpHeaderIfRange = 32,
    HttpHeaderIfUnmodifiedSince = 33,
    HttpHeaderMaxForwards = 34,
    HttpHeaderProxyAuthorization = 35,
    HttpHeaderReferer = 36,
    HttpHeaderRange = 37,
    HttpHeaderTe = 38,
    HttpHeaderTranslate = 39,
    HttpHeaderUserAgent = 40,
    HttpHeaderRequestMaximum = 41,
    HttpHeaderAcceptRanges = 20,
    HttpHeaderAge = 21,
    HttpHeaderEtag = 22,
    HttpHeaderLocation = 23,
    HttpHeaderProxyAuthenticate = 24,
    HttpHeaderRetryAfter = 25,
    HttpHeaderServer = 26,
    HttpHeaderSetCookie = 27,
    HttpHeaderVary = 28,
    HttpHeaderWwwAuthenticate = 29,
    HttpHeaderResponseMaximum = 30,
    HttpHeaderMaximum = 41,
} HTTP_HEADER_ID;

typedef int HTTP_KNOWN_HEADER;

typedef int HTTP_UNKNOWN_HEADER;

typedef enum {
    HttpLogDataTypeFields = 0,
} HTTP_LOG_DATA_TYPE;

typedef int HTTP_LOG_DATA;

typedef int HTTP_LOG_FIELDS_DATA;

typedef enum {
    HttpDataChunkFromMemory = 0,
    HttpDataChunkFromFileHandle = 1,
    HttpDataChunkFromFragmentCache = 2,
    HttpDataChunkFromFragmentCacheEx = 3,
    HttpDataChunkMaximum = 4,
} HTTP_DATA_CHUNK_TYPE;

typedef int HTTP_DATA_CHUNK;

typedef int HTTP_REQUEST_HEADERS;

typedef int HTTP_RESPONSE_HEADERS;

typedef enum {
    DelegateRequestReservedProperty = 0,
} HTTP_DELEGATE_REQUEST_PROPERTY_ID;

typedef int HTTP_DELEGATE_REQUEST_PROPERTY_INFO;

typedef int HTTP_TRANSPORT_ADDRESS;

typedef int HTTP_COOKED_URL;

typedef enum {
    HttpAuthStatusSuccess = 0,
    HttpAuthStatusNotAuthenticated = 1,
    HttpAuthStatusFailure = 2,
} HTTP_AUTH_STATUS;

typedef enum {
    HttpRequestAuthTypeNone = 0,
    HttpRequestAuthTypeBasic = 1,
    HttpRequestAuthTypeDigest = 2,
    HttpRequestAuthTypeNTLM = 3,
    HttpRequestAuthTypeNegotiate = 4,
    HttpRequestAuthTypeKerberos = 5,
} HTTP_REQUEST_AUTH_TYPE;

typedef int HTTP_SSL_CLIENT_CERT_INFO;

typedef int HTTP_SSL_INFO;

typedef int HTTP_SSL_PROTOCOL_INFO;

typedef enum {
    HttpRequestSizingTypeTlsHandshakeLeg1ClientData = 0,
    HttpRequestSizingTypeTlsHandshakeLeg1ServerData = 1,
    HttpRequestSizingTypeTlsHandshakeLeg2ClientData = 2,
    HttpRequestSizingTypeTlsHandshakeLeg2ServerData = 3,
    HttpRequestSizingTypeHeaders = 4,
    HttpRequestSizingTypeMax = 5,
} HTTP_REQUEST_SIZING_TYPE;

typedef int HTTP_REQUEST_SIZING_INFO;

typedef enum {
    HttpRequestTimingTypeConnectionStart = 0,
    HttpRequestTimingTypeDataStart = 1,
    HttpRequestTimingTypeTlsCertificateLoadStart = 2,
    HttpRequestTimingTypeTlsCertificateLoadEnd = 3,
    HttpRequestTimingTypeTlsHandshakeLeg1Start = 4,
    HttpRequestTimingTypeTlsHandshakeLeg1End = 5,
    HttpRequestTimingTypeTlsHandshakeLeg2Start = 6,
    HttpRequestTimingTypeTlsHandshakeLeg2End = 7,
    HttpRequestTimingTypeTlsAttributesQueryStart = 8,
    HttpRequestTimingTypeTlsAttributesQueryEnd = 9,
    HttpRequestTimingTypeTlsClientCertQueryStart = 10,
    HttpRequestTimingTypeTlsClientCertQueryEnd = 11,
    HttpRequestTimingTypeHttp2StreamStart = 12,
    HttpRequestTimingTypeHttp2HeaderDecodeStart = 13,
    HttpRequestTimingTypeHttp2HeaderDecodeEnd = 14,
    HttpRequestTimingTypeRequestHeaderParseStart = 15,
    HttpRequestTimingTypeRequestHeaderParseEnd = 16,
    HttpRequestTimingTypeRequestRoutingStart = 17,
    HttpRequestTimingTypeRequestRoutingEnd = 18,
    HttpRequestTimingTypeRequestQueuedForInspection = 19,
    HttpRequestTimingTypeRequestDeliveredForInspection = 20,
    HttpRequestTimingTypeRequestReturnedAfterInspection = 21,
    HttpRequestTimingTypeRequestQueuedForDelegation = 22,
    HttpRequestTimingTypeRequestDeliveredForDelegation = 23,
    HttpRequestTimingTypeRequestReturnedAfterDelegation = 24,
    HttpRequestTimingTypeRequestQueuedForIO = 25,
    HttpRequestTimingTypeRequestDeliveredForIO = 26,
    HttpRequestTimingTypeHttp3StreamStart = 27,
    HttpRequestTimingTypeHttp3HeaderDecodeStart = 28,
    HttpRequestTimingTypeHttp3HeaderDecodeEnd = 29,
    HttpRequestTimingTypeMax = 30,
} HTTP_REQUEST_TIMING_TYPE;

typedef int HTTP_REQUEST_TIMING_INFO;

typedef enum {
    HttpRequestInfoTypeAuth = 0,
    HttpRequestInfoTypeChannelBind = 1,
    HttpRequestInfoTypeSslProtocol = 2,
    HttpRequestInfoTypeSslTokenBindingDraft = 3,
    HttpRequestInfoTypeSslTokenBinding = 4,
    HttpRequestInfoTypeRequestTiming = 5,
    HttpRequestInfoTypeTcpInfoV0 = 6,
    HttpRequestInfoTypeRequestSizing = 7,
    HttpRequestInfoTypeQuicStats = 8,
    HttpRequestInfoTypeTcpInfoV1 = 9,
} HTTP_REQUEST_INFO_TYPE;

typedef int HTTP_REQUEST_INFO;

typedef int HTTP_REQUEST_AUTH_INFO;

typedef int HTTP_REQUEST_V1;

typedef int HTTP_REQUEST_V2;

typedef int HTTP_RESPONSE_V1;

typedef enum {
    HttpResponseInfoTypeMultipleKnownHeaders = 0,
    HttpResponseInfoTypeAuthenticationProperty = 1,
    HttpResponseInfoTypeQoSProperty = 2,
    HttpResponseInfoTypeChannelBind = 3,
} HTTP_RESPONSE_INFO_TYPE;

typedef int HTTP_RESPONSE_INFO;

typedef int HTTP_MULTIPLE_KNOWN_HEADERS;

typedef int HTTP_RESPONSE_V2;

typedef int HTTPAPI_VERSION;

typedef enum {
    HttpCachePolicyNocache = 0,
    HttpCachePolicyUserInvalidates = 1,
    HttpCachePolicyTimeToLive = 2,
    HttpCachePolicyMaximum = 3,
} HTTP_CACHE_POLICY_TYPE;

typedef int HTTP_CACHE_POLICY;

typedef enum {
    HttpServiceConfigIPListenList = 0,
    HttpServiceConfigSSLCertInfo = 1,
    HttpServiceConfigUrlAclInfo = 2,
    HttpServiceConfigTimeout = 3,
    HttpServiceConfigCache = 4,
    HttpServiceConfigSslSniCertInfo = 5,
    HttpServiceConfigSslCcsCertInfo = 6,
    HttpServiceConfigSetting = 7,
    HttpServiceConfigSslCertInfoEx = 8,
    HttpServiceConfigSslSniCertInfoEx = 9,
    HttpServiceConfigSslCcsCertInfoEx = 10,
    HttpServiceConfigSslScopedCcsCertInfo = 11,
    HttpServiceConfigSslScopedCcsCertInfoEx = 12,
    HttpServiceConfigMax = 13,
} HTTP_SERVICE_CONFIG_ID;

typedef enum {
    HttpServiceConfigQueryExact = 0,
    HttpServiceConfigQueryNext = 1,
    HttpServiceConfigQueryMax = 2,
} HTTP_SERVICE_CONFIG_QUERY_TYPE;

typedef int HTTP_SERVICE_CONFIG_SSL_KEY;

typedef int HTTP_SERVICE_CONFIG_SSL_KEY_EX;

typedef int HTTP_SERVICE_CONFIG_SSL_SNI_KEY;

typedef int HTTP_SERVICE_CONFIG_SSL_CCS_KEY;

typedef int HTTP_SERVICE_CONFIG_SSL_PARAM;

typedef enum {
    ExParamTypeHttp2Window = 0,
    ExParamTypeHttp2SettingsLimits = 1,
    ExParamTypeHttpPerformance = 2,
    ExParamTypeMax = 3,
} HTTP_SSL_SERVICE_CONFIG_EX_PARAM_TYPE;

typedef int HTTP2_WINDOW_SIZE_PARAM;

typedef int HTTP2_SETTINGS_LIMITS_PARAM;

typedef int HTTP_PERFORMANCE_PARAM;

typedef int HTTP_SERVICE_CONFIG_SSL_PARAM_EX;

typedef int HTTP_SERVICE_CONFIG_SSL_SET;

typedef int HTTP_SERVICE_CONFIG_SSL_SNI_SET;

typedef int HTTP_SERVICE_CONFIG_SSL_CCS_SET;

typedef int HTTP_SERVICE_CONFIG_SSL_SET_EX;

typedef int HTTP_SERVICE_CONFIG_SSL_SNI_SET_EX;

typedef int HTTP_SERVICE_CONFIG_SSL_CCS_SET_EX;

typedef int HTTP_SERVICE_CONFIG_SSL_QUERY;

typedef int HTTP_SERVICE_CONFIG_SSL_SNI_QUERY;

typedef int HTTP_SERVICE_CONFIG_SSL_CCS_QUERY;

typedef int HTTP_SERVICE_CONFIG_SSL_QUERY_EX;

typedef int HTTP_SERVICE_CONFIG_SSL_SNI_QUERY_EX;

typedef int HTTP_SERVICE_CONFIG_SSL_CCS_QUERY_EX;

typedef int HTTP_SERVICE_CONFIG_IP_LISTEN_PARAM;

typedef int HTTP_SERVICE_CONFIG_IP_LISTEN_QUERY;

typedef int HTTP_SERVICE_CONFIG_URLACL_KEY;

typedef int HTTP_SERVICE_CONFIG_URLACL_PARAM;

typedef int HTTP_SERVICE_CONFIG_URLACL_SET;

typedef int HTTP_SERVICE_CONFIG_URLACL_QUERY;

typedef enum {
    MaxCacheResponseSize = 0,
    CacheRangeChunkSize = 1,
} HTTP_SERVICE_CONFIG_CACHE_KEY;

typedef int HTTP_SERVICE_CONFIG_CACHE_SET;

typedef enum {
    HttpRequestPropertyIsb = 0,
    HttpRequestPropertyTcpInfoV0 = 1,
    HttpRequestPropertyQuicStats = 2,
    HttpRequestPropertyTcpInfoV1 = 3,
    HttpRequestPropertySni = 4,
} HTTP_REQUEST_PROPERTY;

typedef int HTTP_QUERY_REQUEST_QUALIFIER_TCP;

typedef int HTTP_QUERY_REQUEST_QUALIFIER_QUIC;

typedef int HTTP_REQUEST_PROPERTY_SNI;


//--------------------------------------------------------------------------------
// Section: Functions (39)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpInitialize();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpTerminate();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpCreateHttpHandle();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpCreateRequestQueue();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpCloseRequestQueue();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpSetRequestQueueProperty();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpQueryRequestQueueProperty();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpShutdownRequestQueue();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpReceiveClientCertificate();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpCreateServerSession();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpCloseServerSession();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpQueryServerSessionProperty();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpSetServerSessionProperty();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpAddUrl();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpRemoveUrl();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpCreateUrlGroup();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpCloseUrlGroup();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpAddUrlToUrlGroup();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpRemoveUrlFromUrlGroup();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpSetUrlGroupProperty();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpQueryUrlGroupProperty();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void HttpPrepareUrl();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpReceiveHttpRequest();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpReceiveRequestEntityBody();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpSendHttpResponse();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpSendResponseEntityBody();

// TODO: this type is limited to platform 'windows10.0.10240'
/*u32*/void HttpDeclarePush();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpWaitForDisconnect();

/*u32*/void HttpWaitForDisconnectEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpCancelHttpRequest();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpWaitForDemandStart();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpFlushResponseCache();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpAddFragmentToCache();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpReadFragmentFromCache();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void HttpSetServiceConfiguration();

// TODO: this type is limited to platform 'windows10.0.15063'
/*u32*/void HttpUpdateServiceConfiguration();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpDeleteServiceConfiguration();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void HttpQueryServiceConfiguration();

/*u32*/void HttpGetExtension();

