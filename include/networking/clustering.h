// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (204)
//--------------------------------------------------------------------------------
#define CLUSTER_VERSION_FLAG_MIXED_MODE (UINT)1
#define CLUSTER_VERSION_UNKNOWN (UINT)4294967295
#define NT4_MAJOR_VERSION (UINT)1
#define NT4SP4_MAJOR_VERSION (UINT)2
#define NT5_MAJOR_VERSION (UINT)3
#define NT51_MAJOR_VERSION (UINT)4
#define NT6_MAJOR_VERSION (UINT)5
#define NT7_MAJOR_VERSION (UINT)6
#define NT8_MAJOR_VERSION (UINT)7
#define NT9_MAJOR_VERSION (UINT)8
#define NT10_MAJOR_VERSION (UINT)9
#define NT11_MAJOR_VERSION (UINT)10
#define NT12_MAJOR_VERSION (UINT)11
#define WS2016_TP4_UPGRADE_VERSION (UINT)6
#define WS2016_TP5_UPGRADE_VERSION (UINT)7
#define WS2016_RTM_UPGRADE_VERSION (UINT)8
#define RS3_UPGRADE_VERSION (UINT)1
#define RS4_UPGRADE_VERSION (UINT)2
#define RS5_UPGRADE_VERSION (UINT)3
#define NINETEEN_H1_UPGRADE_VERSION (UINT)1
#define NINETEEN_H2_UPGRADE_VERSION (UINT)2
#define CLUSAPI_VERSION_SERVER2008 (UINT)1536
#define CLUSAPI_VERSION_SERVER2008R2 (UINT)1792
#define CLUSAPI_VERSION_WINDOWS8 (UINT)1793
#define CLUSAPI_VERSION_WINDOWSBLUE (UINT)1794
#define CLUSAPI_VERSION_WINTHRESHOLD (UINT)1795
#define CLUSAPI_VERSION_RS3 (UINT)2560
#define CREATE_CLUSTER_MAJOR_VERSION_MASK (UINT)4294967040
#define CLUSTER_INSTALLED (UINT)1
#define CLUSTER_CONFIGURED (UINT)2
#define CLUSTER_RUNNING (UINT)16
#define CLUS_HYBRID_QUORUM (UINT)1024
#define CLUS_NODE_MAJORITY_QUORUM (UINT)0
#define CLUSCTL_RESOURCE_STATE_CHANGE_REASON_VERSION_1 (UINT)1
#define CLUSREG_DATABASE_SYNC_WRITE_TO_ALL_NODES (UINT)1
#define CLUSREG_DATABASE_ISOLATE_READ (UINT)2
#define CLUSTER_ENUM_ITEM_VERSION_1 (UINT)1
#define CLUSTER_CREATE_GROUP_INFO_VERSION_1 (UINT)1
#define GROUPSET_READY_SETTING_DELAY (UINT)1
#define GROUPSET_READY_SETTING_ONLINE (UINT)2
#define GROUPSET_READY_SETTING_OS_HEARTBEAT (UINT)3
#define GROUPSET_READY_SETTING_APPLICATION_READY (UINT)4
#define CLUSAPI_READ_ACCESS (INT)1
#define CLUSAPI_CHANGE_ACCESS (INT)2
#define CLUSAPI_NO_ACCESS (INT)4
#define CLUSTER_SET_ACCESS_TYPE_ALLOWED (UINT)0
#define CLUSTER_SET_ACCESS_TYPE_DENIED (UINT)1
#define CLUSTER_DELETE_ACCESS_CONTROL_ENTRY (UINT)2
#define CLUSGROUPSET_STATUS_GROUPS_PENDING (UINT64)1
#define CLUSGROUPSET_STATUS_GROUPS_ONLINE (UINT64)2
#define CLUSGROUPSET_STATUS_OS_HEARTBEAT (UINT64)4
#define CLUSGROUPSET_STATUS_APPLICATION_READY (UINT64)8
#define CLUSTER_AVAILABILITY_SET_CONFIG_V1 (UINT)1
#define CLUSTER_GROUP_ENUM_ITEM_VERSION_1 (UINT)1
#define CLUSTER_RESOURCE_ENUM_ITEM_VERSION_1 (UINT)1
#define CLUSAPI_NODE_PAUSE_REMAIN_ON_PAUSED_NODE_ON_MOVE_ERROR (UINT)1
#define CLUSAPI_NODE_AVOID_PLACEMENT (UINT)2
#define CLUSAPI_NODE_PAUSE_RETRY_DRAIN_ON_FAILURE (UINT)4
#define CLUSGRP_STATUS_LOCKED_MODE (UINT64)1
#define CLUSGRP_STATUS_PREEMPTED (UINT64)2
#define CLUSGRP_STATUS_WAITING_IN_QUEUE_FOR_MOVE (UINT64)4
#define CLUSGRP_STATUS_PHYSICAL_RESOURCES_LACKING (UINT64)8
#define CLUSGRP_STATUS_WAITING_TO_START (UINT64)16
#define CLUSGRP_STATUS_EMBEDDED_FAILURE (UINT64)32
#define CLUSGRP_STATUS_OFFLINE_DUE_TO_ANTIAFFINITY_CONFLICT (UINT64)64
#define CLUSGRP_STATUS_NETWORK_FAILURE (UINT64)128
#define CLUSGRP_STATUS_UNMONITORED (UINT64)256
#define CLUSGRP_STATUS_OS_HEARTBEAT (UINT64)512
#define CLUSGRP_STATUS_APPLICATION_READY (UINT64)1024
#define CLUSGRP_STATUS_OFFLINE_NOT_LOCAL_DISK_OWNER (UINT64)2048
#define CLUSGRP_STATUS_WAITING_FOR_DEPENDENCIES (UINT64)4096
#define CLUSRES_STATUS_LOCKED_MODE (UINT64)1
#define CLUSRES_STATUS_EMBEDDED_FAILURE (UINT64)2
#define CLUSRES_STATUS_FAILED_DUE_TO_INSUFFICIENT_CPU (UINT64)4
#define CLUSRES_STATUS_FAILED_DUE_TO_INSUFFICIENT_MEMORY (UINT64)8
#define CLUSRES_STATUS_FAILED_DUE_TO_INSUFFICIENT_GENERIC_RESOURCES (UINT64)16
#define CLUSRES_STATUS_NETWORK_FAILURE (UINT64)32
#define CLUSRES_STATUS_UNMONITORED (UINT64)64
#define CLUSRES_STATUS_OS_HEARTBEAT (UINT64)128
#define CLUSRES_STATUS_APPLICATION_READY (UINT64)256
#define CLUSRES_STATUS_OFFLINE_NOT_LOCAL_DISK_OWNER (UINT64)512
#define CLUSAPI_GROUP_ONLINE_IGNORE_RESOURCE_STATUS (UINT)1
#define CLUSAPI_GROUP_ONLINE_SYNCHRONOUS (UINT)2
#define CLUSAPI_GROUP_ONLINE_BEST_POSSIBLE_NODE (UINT)4
#define CLUSAPI_GROUP_OFFLINE_IGNORE_RESOURCE_STATUS (UINT)1
#define CLUSAPI_RESOURCE_ONLINE_IGNORE_RESOURCE_STATUS (UINT)1
#define CLUSAPI_RESOURCE_ONLINE_DO_NOT_UPDATE_PERSISTENT_STATE (UINT)2
#define CLUSAPI_RESOURCE_ONLINE_NECESSARY_FOR_QUORUM (UINT)4
#define CLUSAPI_RESOURCE_ONLINE_BEST_POSSIBLE_NODE (UINT)8
#define CLUSAPI_RESOURCE_OFFLINE_IGNORE_RESOURCE_STATUS (UINT)1
#define CLUSAPI_RESOURCE_OFFLINE_FORCE_WITH_TERMINATION (UINT)2
#define CLUSAPI_RESOURCE_OFFLINE_DO_NOT_UPDATE_PERSISTENT_STATE (UINT)4
#define CLUSAPI_RESOURCE_OFFLINE_REASON_NONE (UINT)0
#define CLUSAPI_RESOURCE_OFFLINE_REASON_UNKNOWN (UINT)1
#define CLUSAPI_RESOURCE_OFFLINE_REASON_MOVING (UINT)2
#define CLUSAPI_RESOURCE_OFFLINE_REASON_USER_REQUESTED (UINT)4
#define CLUSAPI_RESOURCE_OFFLINE_REASON_BEING_DELETED (UINT)8
#define CLUSAPI_RESOURCE_OFFLINE_REASON_BEING_RESTARTED (UINT)16
#define CLUSAPI_RESOURCE_OFFLINE_REASON_PREEMPTED (UINT)32
#define CLUSAPI_RESOURCE_OFFLINE_REASON_SHUTTING_DOWN (UINT)64
#define CLUSAPI_GROUP_MOVE_IGNORE_RESOURCE_STATUS (UINT)1
#define CLUSAPI_GROUP_MOVE_RETURN_TO_SOURCE_NODE_ON_ERROR (UINT)2
#define CLUSAPI_GROUP_MOVE_QUEUE_ENABLED (UINT)4
#define CLUSAPI_GROUP_MOVE_HIGH_PRIORITY_START (UINT)8
#define CLUSAPI_GROUP_MOVE_FAILBACK (UINT)16
#define CLUSAPI_GROUP_MOVE_IGNORE_AFFINITY_RULE (UINT)32
#define CLUSAPI_CHANGE_RESOURCE_GROUP_FORCE_MOVE_TO_CSV (UINT64)1
#define GROUP_FAILURE_INFO_VERSION_1 (UINT)1
#define RESOURCE_FAILURE_INFO_VERSION_1 (UINT)1
#define CLUS_ACCESS_ANY (UINT)0
#define CLUS_ACCESS_READ (UINT)1
#define CLUS_ACCESS_WRITE (UINT)2
#define CLUS_NO_MODIFY (UINT)0
#define CLUS_MODIFY (UINT)1
#define CLUS_NOT_GLOBAL (UINT)0
#define CLUS_GLOBAL (UINT)1
#define CLUSCTL_ACCESS_SHIFT (UINT)0
#define CLUSCTL_FUNCTION_SHIFT (UINT)2
#define CLCTL_INTERNAL_SHIFT (UINT)20
#define CLCTL_USER_SHIFT (UINT)21
#define CLCTL_MODIFY_SHIFT (UINT)22
#define CLCTL_GLOBAL_SHIFT (UINT)23
#define CLUSCTL_OBJECT_SHIFT (UINT)24
#define CLUSCTL_CONTROL_CODE_MASK (UINT)4194303
#define CLUSCTL_OBJECT_MASK (UINT)255
#define CLUSCTL_ACCESS_MODE_MASK (UINT)3
#define CLCTL_CLUSTER_BASE (UINT)0
#define BitLockerEnabled (INT)1
#define BitLockerDecrypted (INT)4
#define BitlockerEncrypted (INT)8
#define BitLockerDecrypting (INT)16
#define BitlockerEncrypting (INT)32
#define BitLockerPaused (INT)64
#define BitLockerStopped (INT)128
#define RedirectedIOReasonUserRequest (UINT64)1
#define RedirectedIOReasonUnsafeFileSystemFilter (UINT64)2
#define RedirectedIOReasonUnsafeVolumeFilter (UINT64)4
#define RedirectedIOReasonFileSystemTiering (UINT64)8
#define RedirectedIOReasonBitLockerInitializing (UINT64)16
#define RedirectedIOReasonReFs (UINT64)32
#define RedirectedIOReasonMax (UINT64)9223372036854775808
#define VolumeRedirectedIOReasonNoDiskConnectivity (UINT64)1
#define VolumeRedirectedIOReasonStorageSpaceNotAttached (UINT64)2
#define VolumeRedirectedIOReasonVolumeReplicationEnabled (UINT64)4
#define VolumeRedirectedIOReasonMax (UINT64)9223372036854775808
#define MAX_OBJECTID (UINT)64
#define MAX_CO_PASSWORD_LENGTH (UINT)16
#define GUID_PRESENT (UINT)1
#define CREATEDC_PRESENT (UINT)2
#define MAX_CO_PASSWORD_LENGTHEX (UINT)127
#define MAX_CO_PASSWORD_STORAGEEX (UINT)128
#define MAX_CREATINGDC_LENGTH (UINT)256
#define DNS_LENGTH (UINT)64
#define MAINTENANCE_MODE_V2_SIG (UINT)2881155087
#define NNLEN (UINT)80
#define SR_REPLICATED_PARTITION_DISALLOW_MULTINODE_IO (UINT)1
#define CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_FLAG_ADD_VOLUME_INFO (UINT)1
#define CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_FLAG_FILTER_BY_POOL (UINT)2
#define CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_FLAG_INCLUDE_NON_SHARED_DISKS (UINT)4
#define CLRES_VERSION_V1_00 (UINT)256
#define CLRES_VERSION_V2_00 (UINT)512
#define CLRES_VERSION_V3_00 (UINT)768
#define CLRES_VERSION_V4_00 (UINT)1024
#define CLUSCTL_GET_OPERATION_CONTEXT_PARAMS_VERSION_1 (UINT)1
#define CLUSRESDLL_STATUS_OFFLINE_BUSY (UINT)1
#define CLUSRESDLL_STATUS_OFFLINE_SOURCE_THROTTLED (UINT)2
#define CLUSRESDLL_STATUS_OFFLINE_DESTINATION_THROTTLED (UINT)4
#define CLUSRESDLL_STATUS_OFFLINE_DESTINATION_REJECTED (UINT)8
#define CLUSRESDLL_STATUS_INSUFFICIENT_MEMORY (UINT)16
#define CLUSRESDLL_STATUS_INSUFFICIENT_PROCESSOR (UINT)32
#define CLUSRESDLL_STATUS_INSUFFICIENT_OTHER_RESOURCES (UINT)64
#define CLUSRESDLL_STATUS_INVALID_PARAMETERS (UINT)128
#define CLUSRESDLL_STATUS_NETWORK_NOT_AVAILABLE (UINT)256
#define CLUS_RESDLL_OPEN_RECOVER_MONITOR_STATE (UINT)1
#define CLUS_RESDLL_ONLINE_RECOVER_MONITOR_STATE (UINT)1
#define CLUS_RESDLL_ONLINE_IGNORE_RESOURCE_STATUS (UINT)2
#define CLUS_RESDLL_ONLINE_RETURN_TO_SOURCE_NODE_ON_ERROR (UINT)4
#define CLUS_RESDLL_ONLINE_RESTORE_ONLINE_STATE (UINT)8
#define CLUS_RESDLL_ONLINE_IGNORE_NETWORK_CONNECTIVITY (UINT)16
#define CLUS_RESDLL_OFFLINE_IGNORE_RESOURCE_STATUS (UINT)1
#define CLUS_RESDLL_OFFLINE_RETURN_TO_SOURCE_NODE_ON_ERROR (UINT)2
#define CLUS_RESDLL_OFFLINE_QUEUE_ENABLED (UINT)4
#define CLUS_RESDLL_OFFLINE_RETURNING_TO_SOURCE_NODE_BECAUSE_OF_ERROR (UINT)8
#define CLUS_RESDLL_OFFLINE_DUE_TO_EMBEDDED_FAILURE (UINT)16
#define CLUS_RESDLL_OFFLINE_IGNORE_NETWORK_CONNECTIVITY (UINT)32
#define CLUS_RESDLL_OFFLINE_DO_NOT_UPDATE_PERSISTENT_STATE (UINT)64
#define CLUS_RESDLL_OPEN_DONT_DELETE_TEMP_DISK (UINT)2
#define RESTYPE_MONITOR_SHUTTING_DOWN_NODE_STOP (UINT)1
#define RESTYPE_MONITOR_SHUTTING_DOWN_CLUSSVC_CRASH (UINT)2
#define RESUTIL_PROPITEM_READ_ONLY (UINT)1
#define RESUTIL_PROPITEM_REQUIRED (UINT)2
#define RESUTIL_PROPITEM_SIGNED (UINT)4
#define RESUTIL_PROPITEM_IN_MEMORY (UINT)8
#define LOCKED_MODE_FLAGS_DONT_REMOVE_FROM_MOVE_QUEUE (UINT)1
#define CLUSTER_HEALTH_FAULT_ARGS (UINT)7
#define CLUSTER_HEALTH_FAULT_ID (UINT)0
#define CLUSTER_HEALTH_FAULT_ERRORTYPE (UINT)1
#define CLUSTER_HEALTH_FAULT_ERRORCODE (UINT)2
#define CLUSTER_HEALTH_FAULT_DESCRIPTION (UINT)3
#define CLUSTER_HEALTH_FAULT_PROVIDER (UINT)4
#define CLUSTER_HEALTH_FAULT_FLAGS (UINT)5
#define CLUSTER_HEALTH_FAULT_RESERVED (UINT)6
#define CLUS_CREATE_CRYPT_CONTAINER_NOT_FOUND (UINT)1
#define SET_APPINSTANCE_CSV_FLAGS_VALID_ONLY_IF_CSV_COORDINATOR (UINT)1

//--------------------------------------------------------------------------------
// Section: Types (684)
//--------------------------------------------------------------------------------
typedef int _HCLUSTER;

typedef int _HNODE;

typedef int _HRESOURCE;

typedef int _HGROUP;

typedef int _HNETWORK;

typedef int _HNETINTERFACE;

typedef int _HCHANGE;

typedef int _HCLUSENUM;

typedef int _HGROUPENUM;

typedef int _HRESENUM;

typedef int _HNETWORKENUM;

typedef int _HNODEENUM;

typedef int _HNETINTERFACEENUM;

typedef int _HRESTYPEENUM;

typedef int _HREGBATCH;

typedef int _HREGBATCHPORT;

typedef int _HREGBATCHNOTIFICATION;

typedef int _HREGREADBATCH;

typedef int _HREGREADBATCHREPLY;

typedef int _HNODEENUMEX;

typedef int _HCLUSENUMEX;

typedef int _HGROUPENUMEX;

typedef int _HRESENUMEX;

typedef int _HGROUPSET;

typedef int _HGROUPSETENUM;

typedef int _HCLUSCRYPTPROVIDER;

typedef enum {
    OperationalQuorum = 0,
    ModifyQuorum = 1,
} CLUSTER_QUORUM_TYPE;

typedef int CLUSTERVERSIONINFO_NT4;

typedef int CLUSTERVERSIONINFO;

typedef int CLUS_STARTING_PARAMS;

typedef enum {
    ClusterStateNotInstalled = 0,
    ClusterStateNotConfigured = 1,
    ClusterStateNotRunning = 3,
    ClusterStateRunning = 19,
} NODE_CLUSTER_STATE;

typedef enum {
    eResourceStateChangeReasonUnknown = 0,
    eResourceStateChangeReasonMove = 1,
    eResourceStateChangeReasonFailover = 2,
    eResourceStateChangeReasonFailedMove = 3,
    eResourceStateChangeReasonShutdown = 4,
    eResourceStateChangeReasonRundown = 5,
} CLUSTER_RESOURCE_STATE_CHANGE_REASON;

typedef enum {
    CLUSREG_COMMAND_NONE = 0,
    CLUSREG_SET_VALUE = 1,
    CLUSREG_CREATE_KEY = 2,
    CLUSREG_DELETE_KEY = 3,
    CLUSREG_DELETE_VALUE = 4,
    CLUSREG_SET_KEY_SECURITY = 5,
    CLUSREG_VALUE_DELETED = 6,
    CLUSREG_READ_KEY = 7,
    CLUSREG_READ_VALUE = 8,
    CLUSREG_READ_ERROR = 9,
    CLUSREG_CONTROL_COMMAND = 10,
    CLUSREG_CONDITION_EXISTS = 11,
    CLUSREG_CONDITION_NOT_EXISTS = 12,
    CLUSREG_CONDITION_IS_EQUAL = 13,
    CLUSREG_CONDITION_IS_NOT_EQUAL = 14,
    CLUSREG_CONDITION_IS_GREATER_THAN = 15,
    CLUSREG_CONDITION_IS_LESS_THAN = 16,
    CLUSREG_CONDITION_KEY_EXISTS = 17,
    CLUSREG_CONDITION_KEY_NOT_EXISTS = 18,
    CLUSREG_LAST_COMMAND = 19,
} CLUSTER_REG_COMMAND;

typedef int CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT;

typedef int CLUSTER_BATCH_COMMAND;

typedef int CLUSTER_READ_BATCH_COMMAND;

typedef int CLUSTER_ENUM_ITEM;

typedef enum {
    ClusGroupTypeCoreCluster = 1,
    ClusGroupTypeAvailableStorage = 2,
    ClusGroupTypeTemporary = 3,
    ClusGroupTypeSharedVolume = 4,
    ClusGroupTypeStoragePool = 5,
    ClusGroupTypeFileServer = 100,
    ClusGroupTypePrintServer = 101,
    ClusGroupTypeDhcpServer = 102,
    ClusGroupTypeDtc = 103,
    ClusGroupTypeMsmq = 104,
    ClusGroupTypeWins = 105,
    ClusGroupTypeStandAloneDfs = 106,
    ClusGroupTypeGenericApplication = 107,
    ClusGroupTypeGenericService = 108,
    ClusGroupTypeGenericScript = 109,
    ClusGroupTypeIScsiNameService = 110,
    ClusGroupTypeVirtualMachine = 111,
    ClusGroupTypeTsSessionBroker = 112,
    ClusGroupTypeIScsiTarget = 113,
    ClusGroupTypeScaleoutFileServer = 114,
    ClusGroupTypeVMReplicaBroker = 115,
    ClusGroupTypeTaskScheduler = 116,
    ClusGroupTypeClusterUpdateAgent = 117,
    ClusGroupTypeScaleoutCluster = 118,
    ClusGroupTypeStorageReplica = 119,
    ClusGroupTypeVMReplicaCoordinator = 120,
    ClusGroupTypeCrossClusterOrchestrator = 121,
    ClusGroupTypeInfrastructureFileServer = 122,
    ClusGroupTypeUnknown = 9999,
} CLUSGROUP_TYPE;

typedef int CLUSTER_CREATE_GROUP_INFO;

typedef enum {
    CLUSTER_MGMT_POINT_TYPE_NONE = 0,
    CLUSTER_MGMT_POINT_TYPE_CNO = 1,
    CLUSTER_MGMT_POINT_TYPE_DNS_ONLY = 2,
    CLUSTER_MGMT_POINT_TYPE_CNO_ONLY = 3,
} CLUSTER_MGMT_POINT_TYPE;

typedef enum {
    CLUSTER_MGMT_POINT_RESTYPE_AUTO = 0,
    CLUSTER_MGMT_POINT_RESTYPE_SNN = 1,
    CLUSTER_MGMT_POINT_RESTYPE_DNN = 2,
} CLUSTER_MGMT_POINT_RESTYPE;

typedef enum {
    CLUSTER_CLOUD_TYPE_NONE = 0,
    CLUSTER_CLOUD_TYPE_AZURE = 1,
    CLUSTER_CLOUD_TYPE_MIXED = 128,
    CLUSTER_CLOUD_TYPE_UNKNOWN = -1,
} CLUSTER_CLOUD_TYPE;

typedef enum {
    CLUS_GROUP_START_ALWAYS = 0,
    CLUS_GROUP_DO_NOT_START = 1,
    CLUS_GROUP_START_ALLOWED = 2,
} CLUS_GROUP_START_SETTING;

typedef enum {
    CLUS_AFFINITY_RULE_NONE = 0,
    CLUS_AFFINITY_RULE_SAME_FAULT_DOMAIN = 1,
    CLUS_AFFINITY_RULE_SAME_NODE = 2,
    CLUS_AFFINITY_RULE_DIFFERENT_FAULT_DOMAIN = 3,
    CLUS_AFFINITY_RULE_DIFFERENT_NODE = 4,
    CLUS_AFFINITY_RULE_MIN = 0,
    CLUS_AFFINITY_RULE_MAX = 4,
} CLUS_AFFINITY_RULE_TYPE;

typedef enum {
    CLUSTER_QUORUM_MAINTAINED = 0,
    CLUSTER_QUORUM_LOST = 1,
} CLUSTER_QUORUM_VALUE;

typedef int CLUSTER_VALIDATE_PATH;

typedef int CLUSTER_VALIDATE_DIRECTORY;

typedef int CLUSTER_VALIDATE_NETNAME;

typedef int CLUSTER_VALIDATE_CSV_FILENAME;

typedef int CLUSTER_SET_PASSWORD_STATUS;

typedef int CLUSTER_IP_ENTRY;

typedef int CREATE_CLUSTER_CONFIG;

typedef int CREATE_CLUSTER_NAME_ACCOUNT;

typedef int PCLUSAPI_GET_NODE_CLUSTER_STATE;

typedef int PCLUSAPI_OPEN_CLUSTER;

typedef int PCLUSAPI_OPEN_CLUSTER_EX;

typedef int PCLUSAPI_CLOSE_CLUSTER;

typedef int PCLUSAPI_SetClusterName;

typedef int PCLUSAPI_GET_CLUSTER_INFORMATION;

typedef int PCLUSAPI_GET_CLUSTER_QUORUM_RESOURCE;

typedef int PCLUSAPI_SET_CLUSTER_QUORUM_RESOURCE;

typedef int PCLUSAPI_BACKUP_CLUSTER_DATABASE;

typedef int PCLUSAPI_RESTORE_CLUSTER_DATABASE;

typedef int PCLUSAPI_SET_CLUSTER_NETWORK_PRIORITY_ORDER;

typedef int PCLUSAPI_SET_CLUSTER_SERVICE_ACCOUNT_PASSWORD;

typedef int PCLUSAPI_CLUSTER_CONTROL;

typedef enum {
    ClusterUpgradePhaseInitialize = 1,
    ClusterUpgradePhaseValidatingUpgrade = 2,
    ClusterUpgradePhaseUpgradingComponents = 3,
    ClusterUpgradePhaseInstallingNewComponents = 4,
    ClusterUpgradePhaseUpgradeComplete = 5,
} CLUSTER_UPGRADE_PHASE;

typedef int PCLUSTER_UPGRADE_PROGRESS_CALLBACK;

typedef int PCLUSAPI_CLUSTER_UPGRADE;

typedef enum {
    CLUSTER_CHANGE_NODE_STATE = 1,
    CLUSTER_CHANGE_NODE_DELETED = 2,
    CLUSTER_CHANGE_NODE_ADDED = 4,
    CLUSTER_CHANGE_NODE_PROPERTY = 8,
    CLUSTER_CHANGE_REGISTRY_NAME = 16,
    CLUSTER_CHANGE_REGISTRY_ATTRIBUTES = 32,
    CLUSTER_CHANGE_REGISTRY_VALUE = 64,
    CLUSTER_CHANGE_REGISTRY_SUBTREE = 128,
    CLUSTER_CHANGE_RESOURCE_STATE = 256,
    CLUSTER_CHANGE_RESOURCE_DELETED = 512,
    CLUSTER_CHANGE_RESOURCE_ADDED = 1024,
    CLUSTER_CHANGE_RESOURCE_PROPERTY = 2048,
    CLUSTER_CHANGE_GROUP_STATE = 4096,
    CLUSTER_CHANGE_GROUP_DELETED = 8192,
    CLUSTER_CHANGE_GROUP_ADDED = 16384,
    CLUSTER_CHANGE_GROUP_PROPERTY = 32768,
    CLUSTER_CHANGE_RESOURCE_TYPE_DELETED = 65536,
    CLUSTER_CHANGE_RESOURCE_TYPE_ADDED = 131072,
    CLUSTER_CHANGE_RESOURCE_TYPE_PROPERTY = 262144,
    CLUSTER_CHANGE_CLUSTER_RECONNECT = 524288,
    CLUSTER_CHANGE_NETWORK_STATE = 1048576,
    CLUSTER_CHANGE_NETWORK_DELETED = 2097152,
    CLUSTER_CHANGE_NETWORK_ADDED = 4194304,
    CLUSTER_CHANGE_NETWORK_PROPERTY = 8388608,
    CLUSTER_CHANGE_NETINTERFACE_STATE = 16777216,
    CLUSTER_CHANGE_NETINTERFACE_DELETED = 33554432,
    CLUSTER_CHANGE_NETINTERFACE_ADDED = 67108864,
    CLUSTER_CHANGE_NETINTERFACE_PROPERTY = 134217728,
    CLUSTER_CHANGE_QUORUM_STATE = 268435456,
    CLUSTER_CHANGE_CLUSTER_STATE = 536870912,
    CLUSTER_CHANGE_CLUSTER_PROPERTY = 1073741824,
    CLUSTER_CHANGE_HANDLE_CLOSE = -2147483648,
    CLUSTER_CHANGE_ALL = -1,
} CLUSTER_CHANGE;

typedef enum {
    CLUSTER_NOTIFICATIONS_V1 = 1,
    CLUSTER_NOTIFICATIONS_V2 = 2,
} CLUSTER_NOTIFICATIONS_VERSION;

typedef enum {
    CLUSTER_CHANGE_CLUSTER_RECONNECT_V2 = 1,
    CLUSTER_CHANGE_CLUSTER_STATE_V2 = 2,
    CLUSTER_CHANGE_CLUSTER_GROUP_ADDED_V2 = 4,
    CLUSTER_CHANGE_CLUSTER_HANDLE_CLOSE_V2 = 8,
    CLUSTER_CHANGE_CLUSTER_NETWORK_ADDED_V2 = 16,
    CLUSTER_CHANGE_CLUSTER_NODE_ADDED_V2 = 32,
    CLUSTER_CHANGE_CLUSTER_RESOURCE_TYPE_ADDED_V2 = 64,
    CLUSTER_CHANGE_CLUSTER_COMMON_PROPERTY_V2 = 128,
    CLUSTER_CHANGE_CLUSTER_PRIVATE_PROPERTY_V2 = 256,
    CLUSTER_CHANGE_CLUSTER_LOST_NOTIFICATIONS_V2 = 512,
    CLUSTER_CHANGE_CLUSTER_RENAME_V2 = 1024,
    CLUSTER_CHANGE_CLUSTER_MEMBERSHIP_V2 = 2048,
    CLUSTER_CHANGE_CLUSTER_UPGRADED_V2 = 4096,
    CLUSTER_CHANGE_CLUSTER_ALL_V2 = 8191,
} CLUSTER_CHANGE_CLUSTER_V2;

typedef enum {
    CLUSTER_CHANGE_GROUP_DELETED_V2 = 1,
    CLUSTER_CHANGE_GROUP_COMMON_PROPERTY_V2 = 2,
    CLUSTER_CHANGE_GROUP_PRIVATE_PROPERTY_V2 = 4,
    CLUSTER_CHANGE_GROUP_STATE_V2 = 8,
    CLUSTER_CHANGE_GROUP_OWNER_NODE_V2 = 16,
    CLUSTER_CHANGE_GROUP_PREFERRED_OWNERS_V2 = 32,
    CLUSTER_CHANGE_GROUP_RESOURCE_ADDED_V2 = 64,
    CLUSTER_CHANGE_GROUP_RESOURCE_GAINED_V2 = 128,
    CLUSTER_CHANGE_GROUP_RESOURCE_LOST_V2 = 256,
    CLUSTER_CHANGE_GROUP_HANDLE_CLOSE_V2 = 512,
    CLUSTER_CHANGE_GROUP_ALL_V2 = 1023,
} CLUSTER_CHANGE_GROUP_V2;

typedef enum {
    CLUSTER_CHANGE_GROUPSET_DELETED_v2 = 1,
    CLUSTER_CHANGE_GROUPSET_COMMON_PROPERTY_V2 = 2,
    CLUSTER_CHANGE_GROUPSET_PRIVATE_PROPERTY_V2 = 4,
    CLUSTER_CHANGE_GROUPSET_STATE_V2 = 8,
    CLUSTER_CHANGE_GROUPSET_GROUP_ADDED = 16,
    CLUSTER_CHANGE_GROUPSET_GROUP_REMOVED = 32,
    CLUSTER_CHANGE_GROUPSET_DEPENDENCIES_V2 = 64,
    CLUSTER_CHANGE_GROUPSET_DEPENDENTS_V2 = 128,
    CLUSTER_CHANGE_GROUPSET_HANDLE_CLOSE_v2 = 256,
    CLUSTER_CHANGE_GROUPSET_ALL_V2 = 511,
} CLUSTER_CHANGE_GROUPSET_V2;

typedef enum {
    CLUSTER_CHANGE_RESOURCE_COMMON_PROPERTY_V2 = 1,
    CLUSTER_CHANGE_RESOURCE_PRIVATE_PROPERTY_V2 = 2,
    CLUSTER_CHANGE_RESOURCE_STATE_V2 = 4,
    CLUSTER_CHANGE_RESOURCE_OWNER_GROUP_V2 = 8,
    CLUSTER_CHANGE_RESOURCE_DEPENDENCIES_V2 = 16,
    CLUSTER_CHANGE_RESOURCE_DEPENDENTS_V2 = 32,
    CLUSTER_CHANGE_RESOURCE_POSSIBLE_OWNERS_V2 = 64,
    CLUSTER_CHANGE_RESOURCE_DELETED_V2 = 128,
    CLUSTER_CHANGE_RESOURCE_DLL_UPGRADED_V2 = 256,
    CLUSTER_CHANGE_RESOURCE_HANDLE_CLOSE_V2 = 512,
    CLUSTER_CHANGE_RESOURCE_TERMINAL_STATE_V2 = 1024,
    CLUSTER_CHANGE_RESOURCE_ALL_V2 = 2047,
} CLUSTER_CHANGE_RESOURCE_V2;

typedef enum {
    CLUSTER_CHANGE_RESOURCE_TYPE_DELETED_V2 = 1,
    CLUSTER_CHANGE_RESOURCE_TYPE_COMMON_PROPERTY_V2 = 2,
    CLUSTER_CHANGE_RESOURCE_TYPE_PRIVATE_PROPERTY_V2 = 4,
    CLUSTER_CHANGE_RESOURCE_TYPE_POSSIBLE_OWNERS_V2 = 8,
    CLUSTER_CHANGE_RESOURCE_TYPE_DLL_UPGRADED_V2 = 16,
    CLUSTER_RESOURCE_TYPE_SPECIFIC_V2 = 32,
    CLUSTER_CHANGE_RESOURCE_TYPE_ALL_V2 = 63,
} CLUSTER_CHANGE_RESOURCE_TYPE_V2;

typedef enum {
    CLUSTER_CHANGE_NETINTERFACE_DELETED_V2 = 1,
    CLUSTER_CHANGE_NETINTERFACE_COMMON_PROPERTY_V2 = 2,
    CLUSTER_CHANGE_NETINTERFACE_PRIVATE_PROPERTY_V2 = 4,
    CLUSTER_CHANGE_NETINTERFACE_STATE_V2 = 8,
    CLUSTER_CHANGE_NETINTERFACE_HANDLE_CLOSE_V2 = 16,
    CLUSTER_CHANGE_NETINTERFACE_ALL_V2 = 31,
} CLUSTER_CHANGE_NETINTERFACE_V2;

typedef enum {
    CLUSTER_CHANGE_NETWORK_DELETED_V2 = 1,
    CLUSTER_CHANGE_NETWORK_COMMON_PROPERTY_V2 = 2,
    CLUSTER_CHANGE_NETWORK_PRIVATE_PROPERTY_V2 = 4,
    CLUSTER_CHANGE_NETWORK_STATE_V2 = 8,
    CLUSTER_CHANGE_NETWORK_HANDLE_CLOSE_V2 = 16,
    CLUSTER_CHANGE_NETWORK_ALL_V2 = 31,
} CLUSTER_CHANGE_NETWORK_V2;

typedef enum {
    CLUSTER_CHANGE_NODE_NETINTERFACE_ADDED_V2 = 1,
    CLUSTER_CHANGE_NODE_DELETED_V2 = 2,
    CLUSTER_CHANGE_NODE_COMMON_PROPERTY_V2 = 4,
    CLUSTER_CHANGE_NODE_PRIVATE_PROPERTY_V2 = 8,
    CLUSTER_CHANGE_NODE_STATE_V2 = 16,
    CLUSTER_CHANGE_NODE_GROUP_GAINED_V2 = 32,
    CLUSTER_CHANGE_NODE_GROUP_LOST_V2 = 64,
    CLUSTER_CHANGE_NODE_HANDLE_CLOSE_V2 = 128,
    CLUSTER_CHANGE_NODE_ALL_V2 = 255,
} CLUSTER_CHANGE_NODE_V2;

typedef enum {
    CLUSTER_CHANGE_REGISTRY_ATTRIBUTES_V2 = 1,
    CLUSTER_CHANGE_REGISTRY_NAME_V2 = 2,
    CLUSTER_CHANGE_REGISTRY_SUBTREE_V2 = 4,
    CLUSTER_CHANGE_REGISTRY_VALUE_V2 = 8,
    CLUSTER_CHANGE_REGISTRY_HANDLE_CLOSE_V2 = 16,
    CLUSTER_CHANGE_REGISTRY_ALL_V2 = 31,
} CLUSTER_CHANGE_REGISTRY_V2;

typedef enum {
    CLUSTER_CHANGE_QUORUM_STATE_V2 = 1,
    CLUSTER_CHANGE_QUORUM_ALL_V2 = 1,
} CLUSTER_CHANGE_QUORUM_V2;

typedef enum {
    CLUSTER_CHANGE_SHARED_VOLUME_STATE_V2 = 1,
    CLUSTER_CHANGE_SHARED_VOLUME_ADDED_V2 = 2,
    CLUSTER_CHANGE_SHARED_VOLUME_REMOVED_V2 = 4,
    CLUSTER_CHANGE_SHARED_VOLUME_ALL_V2 = 7,
} CLUSTER_CHANGE_SHARED_VOLUME_V2;

typedef enum {
    CLUSTER_CHANGE_SPACEPORT_CUSTOM_PNP_V2 = 1,
} CLUSTER_CHANGE_SPACEPORT_V2;

typedef enum {
    CLUSTER_CHANGE_UPGRADE_NODE_PREPARE = 1,
    CLUSTER_CHANGE_UPGRADE_NODE_COMMIT = 2,
    CLUSTER_CHANGE_UPGRADE_NODE_POSTCOMMIT = 4,
    CLUSTER_CHANGE_UPGRADE_ALL = 7,
} CLUSTER_CHANGE_NODE_UPGRADE_PHASE_V2;

typedef enum {
    CLUSTER_OBJECT_TYPE_NONE = 0,
    CLUSTER_OBJECT_TYPE_CLUSTER = 1,
    CLUSTER_OBJECT_TYPE_GROUP = 2,
    CLUSTER_OBJECT_TYPE_RESOURCE = 3,
    CLUSTER_OBJECT_TYPE_RESOURCE_TYPE = 4,
    CLUSTER_OBJECT_TYPE_NETWORK_INTERFACE = 5,
    CLUSTER_OBJECT_TYPE_NETWORK = 6,
    CLUSTER_OBJECT_TYPE_NODE = 7,
    CLUSTER_OBJECT_TYPE_REGISTRY = 8,
    CLUSTER_OBJECT_TYPE_QUORUM = 9,
    CLUSTER_OBJECT_TYPE_SHARED_VOLUME = 10,
    CLUSTER_OBJECT_TYPE_GROUPSET = 13,
    CLUSTER_OBJECT_TYPE_AFFINITYRULE = 16,
} CLUSTER_OBJECT_TYPE;

typedef enum {
    CLUSTERSET_OBJECT_TYPE_NONE = 0,
    CLUSTERSET_OBJECT_TYPE_MEMBER = 1,
    CLUSTERSET_OBJECT_TYPE_WORKLOAD = 2,
    CLUSTERSET_OBJECT_TYPE_DATABASE = 3,
} CLUSTERSET_OBJECT_TYPE;

typedef int NOTIFY_FILTER_AND_TYPE;

typedef int CLUSTER_MEMBERSHIP_INFO;

typedef int PCLUSAPI_CREATE_CLUSTER_NOTIFY_PORT_V2;

typedef int PCLUSAPI_REGISTER_CLUSTER_NOTIFY_V2;

typedef int PCLUSAPI_GET_NOTIFY_EVENT_HANDLE_V2;

typedef int PCLUSAPI_GET_CLUSTER_NOTIFY_V2;

typedef int PCLUSAPI_CREATE_CLUSTER_NOTIFY_PORT;

typedef int PCLUSAPI_REGISTER_CLUSTER_NOTIFY;

typedef int PCLUSAPI_GET_CLUSTER_NOTIFY;

typedef int PCLUSAPI_CLOSE_CLUSTER_NOTIFY_PORT;

typedef enum {
    CLUSTER_ENUM_NODE = 1,
    CLUSTER_ENUM_RESTYPE = 2,
    CLUSTER_ENUM_RESOURCE = 4,
    CLUSTER_ENUM_GROUP = 8,
    CLUSTER_ENUM_NETWORK = 16,
    CLUSTER_ENUM_NETINTERFACE = 32,
    CLUSTER_ENUM_SHARED_VOLUME_GROUP = 536870912,
    CLUSTER_ENUM_SHARED_VOLUME_RESOURCE = 1073741824,
    CLUSTER_ENUM_INTERNAL_NETWORK = -2147483648,
    CLUSTER_ENUM_ALL = 63,
} CLUSTER_ENUM;

typedef int PCLUSAPI_CLUSTER_OPEN_ENUM;

typedef int PCLUSAPI_CLUSTER_GET_ENUM_COUNT;

typedef int PCLUSAPI_CLUSTER_ENUM;

typedef int PCLUSAPI_CLUSTER_CLOSE_ENUM;

typedef int PCLUSAPI_CLUSTER_OPEN_ENUM_EX;

typedef int PCLUSAPI_CLUSTER_GET_ENUM_COUNT_EX;

typedef int PCLUSAPI_CLUSTER_ENUM_EX;

typedef int PCLUSAPI_CLUSTER_CLOSE_ENUM_EX;

typedef int PCLUSAPI_CREATE_CLUSTER_GROUP_GROUPSET;

typedef int PCLUSAPI_OPEN_CLUSTER_GROUP_GROUPSET;

typedef int PCLUSAPI_CLOSE_CLUSTER_GROUP_GROUPSET;

typedef int PCLUSAPI_DELETE_CLUSTER_GROUP_GROUPSET;

typedef int PCLUSAPI_CLUSTER_ADD_GROUP_TO_GROUP_GROUPSET;

typedef int PCLUSAPI_CLUSTER_REMOVE_GROUP_FROM_GROUP_GROUPSET;

typedef int PCLUSAPI_CLUSTER_GROUP_GROUPSET_CONTROL;

typedef int PCLUSAPI_ADD_CLUSTER_GROUP_DEPENDENCY;

typedef int PCLUSAPI_SET_GROUP_DEPENDENCY_EXPRESSION;

typedef int PCLUSAPI_REMOVE_CLUSTER_GROUP_DEPENDENCY;

typedef int PCLUSAPI_ADD_CLUSTER_GROUP_GROUPSET_DEPENDENCY;

typedef int PCLUSAPI_SET_CLUSTER_GROUP_GROUPSET_DEPENDENCY_EXPRESSION;

typedef int PCLUSAPI_REMOVE_CLUSTER_GROUP_GROUPSET_DEPENDENCY;

typedef int PCLUSAPI_ADD_CLUSTER_GROUP_TO_GROUP_GROUPSET_DEPENDENCY;

typedef int PCLUSAPI_REMOVE_CLUSTER_GROUP_TO_GROUP_GROUPSET_DEPENDENCY;

typedef int PCLUSAPI_GET_CLUSTER_FROM_GROUP_GROUPSET;

typedef int PCLUSAPI_ADD_CROSS_CLUSTER_GROUPSET_DEPENDENCY;

typedef int PCLUSAPI_REMOVE_CROSS_CLUSTER_GROUPSET_DEPENDENCY;

typedef int CLUSTER_AVAILABILITY_SET_CONFIG;

typedef int PCLUSAPI_CREATE_CLUSTER_AVAILABILITY_SET;

typedef int PCLUSAPI_CLUSTER_CREATE_AFFINITY_RULE;

typedef int PCLUSAPI_CLUSTER_REMOVE_AFFINITY_RULE;

typedef int PCLUSAPI_CLUSTER_ADD_GROUP_TO_AFFINITY_RULE;

typedef int PCLUSAPI_CLUSTER_REMOVE_GROUP_FROM_AFFINITY_RULE;

typedef int PCLUSAPI_CLUSTER_AFFINITY_RULE_CONTROL;

typedef enum {
    CLUSTER_NODE_ENUM_NETINTERFACES = 1,
    CLUSTER_NODE_ENUM_GROUPS = 2,
    CLUSTER_NODE_ENUM_PREFERRED_GROUPS = 4,
    CLUSTER_NODE_ENUM_ALL = 3,
} CLUSTER_NODE_ENUM;

typedef enum {
    ClusterNodeStateUnknown = -1,
    ClusterNodeUp = 0,
    ClusterNodeDown = 1,
    ClusterNodePaused = 2,
    ClusterNodeJoining = 3,
} CLUSTER_NODE_STATE;

typedef enum {
    ClusterStorageNodeStateUnknown = 0,
    ClusterStorageNodeUp = 1,
    ClusterStorageNodeDown = 2,
    ClusterStorageNodePaused = 3,
    ClusterStorageNodeStarting = 4,
    ClusterStorageNodeStopping = 5,
} CLUSTER_STORAGENODE_STATE;

typedef enum {
    NodeDrainStatusNotInitiated = 0,
    NodeDrainStatusInProgress = 1,
    NodeDrainStatusCompleted = 2,
    NodeDrainStatusFailed = 3,
    ClusterNodeDrainStatusCount = 4,
} CLUSTER_NODE_DRAIN_STATUS;

typedef enum {
    NodeStatusNormal = 0,
    NodeStatusIsolated = 1,
    NodeStatusQuarantined = 2,
    NodeStatusDrainInProgress = 4,
    NodeStatusDrainCompleted = 8,
    NodeStatusDrainFailed = 16,
    NodeStatusAvoidPlacement = 32,
    NodeStatusMax = 51,
} CLUSTER_NODE_STATUS;

typedef int PCLUSAPI_OPEN_CLUSTER_NODE;

typedef int PCLUSAPI_OPEN_CLUSTER_NODE_EX;

typedef int PCLUSAPI_OPEN_NODE_BY_ID;

typedef int PCLUSAPI_CLOSE_CLUSTER_NODE;

typedef int PCLUSAPI_GET_CLUSTER_NODE_STATE;

typedef int PCLUSAPI_GET_CLUSTER_NODE_ID;

typedef int PCLUSAPI_GET_CLUSTER_FROM_NODE;

typedef int PCLUSAPI_PAUSE_CLUSTER_NODE;

typedef int PCLUSAPI_RESUME_CLUSTER_NODE;

typedef int PCLUSAPI_EVICT_CLUSTER_NODE;

typedef int PCLUSAPI_CLUSTER_NODE_OPEN_ENUM;

typedef int PCLUSAPI_CLUSTER_NODE_OPEN_ENUM_EX;

typedef int PCLUSAPI_CLUSTER_NODE_GET_ENUM_COUNT_EX;

typedef int PCLUSAPI_CLUSTER_NODE_ENUM_EX;

typedef int PCLUSAPI_CLUSTER_NODE_CLOSE_ENUM_EX;

typedef int PCLUSAPI_CLUSTER_NODE_GET_ENUM_COUNT;

typedef int PCLUSAPI_CLUSTER_NODE_CLOSE_ENUM;

typedef int PCLUSAPI_CLUSTER_NODE_ENUM;

typedef int PCLUSAPI_EVICT_CLUSTER_NODE_EX;

typedef int PCLUSAPI_GET_CLUSTER_RESOURCE_TYPE_KEY;

typedef enum {
    CLUSTER_GROUP_ENUM_CONTAINS = 1,
    CLUSTER_GROUP_ENUM_NODES = 2,
    CLUSTER_GROUP_ENUM_ALL = 3,
} CLUSTER_GROUP_ENUM;

typedef enum {
    ClusterGroupStateUnknown = -1,
    ClusterGroupOnline = 0,
    ClusterGroupOffline = 1,
    ClusterGroupFailed = 2,
    ClusterGroupPartialOnline = 3,
    ClusterGroupPending = 4,
} CLUSTER_GROUP_STATE;

typedef enum {
    PriorityDisabled = 0,
    PriorityLow = 1000,
    PriorityMedium = 2000,
    PriorityHigh = 3000,
} CLUSTER_GROUP_PRIORITY;

typedef enum {
    ClusterGroupPreventFailback = 0,
    ClusterGroupAllowFailback = 1,
    ClusterGroupFailbackTypeCount = 2,
} CLUSTER_GROUP_AUTOFAILBACK_TYPE;

typedef int CLUSTER_GROUP_ENUM_ITEM;

typedef int CLUSTER_RESOURCE_ENUM_ITEM;

typedef int PCLUSAPI_CREATE_CLUSTER_GROUP;

typedef int PCLUSAPI_OPEN_CLUSTER_GROUP;

typedef int PCLUSAPI_OPEN_CLUSTER_GROUP_EX;

typedef int PCLUSAPI_PAUSE_CLUSTER_NODE_EX;

typedef enum {
    DoNotFailbackGroups = 0,
    FailbackGroupsImmediately = 1,
    FailbackGroupsPerPolicy = 2,
    ClusterNodeResumeFailbackTypeCount = 3,
} CLUSTER_NODE_RESUME_FAILBACK_TYPE;

typedef int PCLUSAPI_RESUME_CLUSTER_NODE_EX;

typedef int PCLUSAPI_CREATE_CLUSTER_GROUPEX;

typedef int PCLUSAPI_CLUSTER_GROUP_OPEN_ENUM_EX;

typedef int PCLUSAPI_CLUSTER_GROUP_GET_ENUM_COUNT_EX;

typedef int PCLUSAPI_CLUSTER_GROUP_ENUM_EX;

typedef int PCLUSAPI_CLUSTER_GROUP_CLOSE_ENUM_EX;

typedef int PCLUSAPI_CLUSTER_RESOURCE_OPEN_ENUM_EX;

typedef int PCLUSAPI_CLUSTER_RESOURCE_GET_ENUM_COUNT_EX;

typedef int PCLUSAPI_CLUSTER_RESOURCE_ENUM_EX;

typedef int PCLUSAPI_CLUSTER_RESOURCE_CLOSE_ENUM_EX;

typedef int PCLUSAPI_RESTART_CLUSTER_RESOURCE;

typedef int PCLUSAPI_CLOSE_CLUSTER_GROUP;

typedef int PCLUSAPI_GET_CLUSTER_FROM_GROUP;

typedef int PCLUSAPI_GET_CLUSTER_GROUP_STATE;

typedef int PCLUSAPI_SET_CLUSTER_GROUP_NAME;

typedef int PCLUSAPI_SET_CLUSTER_GROUP_NODE_LIST;

typedef int PCLUSAPI_ONLINE_CLUSTER_GROUP;

typedef int PCLUSAPI_MOVE_CLUSTER_GROUP;

typedef int PCLUSAPI_OFFLINE_CLUSTER_GROUP;

typedef int PCLUSAPI_DELETE_CLUSTER_GROUP;

typedef int PCLUSAPI_DESTROY_CLUSTER_GROUP;

typedef int PCLUSAPI_CLUSTER_GROUP_OPEN_ENUM;

typedef int PCLUSAPI_CLUSTER_GROUP_GET_ENUM_COUNT;

typedef int PCLUSAPI_CLUSTER_GROUP_ENUM;

typedef int PCLUSAPI_CLUSTER_GROUP_CLOSE_ENUM;

typedef enum {
    ClusterResourceStateUnknown = -1,
    ClusterResourceInherited = 0,
    ClusterResourceInitializing = 1,
    ClusterResourceOnline = 2,
    ClusterResourceOffline = 3,
    ClusterResourceFailed = 4,
    ClusterResourcePending = 128,
    ClusterResourceOnlinePending = 129,
    ClusterResourceOfflinePending = 130,
} CLUSTER_RESOURCE_STATE;

typedef enum {
    ClusterResourceDontRestart = 0,
    ClusterResourceRestartNoNotify = 1,
    ClusterResourceRestartNotify = 2,
    ClusterResourceRestartActionCount = 3,
} CLUSTER_RESOURCE_RESTART_ACTION;

typedef enum {
    ClusterResourceEmbeddedFailureActionNone = 0,
    ClusterResourceEmbeddedFailureActionLogOnly = 1,
    ClusterResourceEmbeddedFailureActionRecover = 2,
} CLUSTER_RESOURCE_EMBEDDED_FAILURE_ACTION;

typedef enum {
    CLUSTER_RESOURCE_DEFAULT_MONITOR = 0,
    CLUSTER_RESOURCE_SEPARATE_MONITOR = 1,
    CLUSTER_RESOURCE_VALID_FLAGS = 1,
} CLUSTER_RESOURCE_CREATE_FLAGS;

typedef enum {
    ClusterSharedVolumeSnapshotStateUnknown = 0,
    ClusterSharedVolumePrepareForHWSnapshot = 1,
    ClusterSharedVolumeHWSnapshotCompleted = 2,
    ClusterSharedVolumePrepareForFreeze = 3,
} CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE;

typedef int PCLUSAPI_CREATE_CLUSTER_RESOURCE;

typedef int PCLUSAPI_OPEN_CLUSTER_RESOURCE;

typedef int PCLUSAPI_OPEN_CLUSTER_RESOURCE_EX;

typedef int PCLUSAPI_CLOSE_CLUSTER_RESOURCE;

typedef int PCLUSAPI_GET_CLUSTER_FROM_RESOURCE;

typedef int PCLUSAPI_DELETE_CLUSTER_RESOURCE;

typedef int PCLUSAPI_GET_CLUSTER_RESOURCE_STATE;

typedef int PCLUSAPI_SET_CLUSTER_RESOURCE_NAME;

typedef int PCLUSAPI_FAIL_CLUSTER_RESOURCE;

typedef int PCLUSAPI_ONLINE_CLUSTER_RESOURCE;

typedef int PCLUSAPI_OFFLINE_CLUSTER_RESOURCE;

typedef int PCLUSAPI_CHANGE_CLUSTER_RESOURCE_GROUP;

typedef int PCLUSAPI_CHANGE_CLUSTER_RESOURCE_GROUP_EX;

typedef int PCLUSAPI_ADD_CLUSTER_RESOURCE_NODE;

typedef int PCLUSAPI_REMOVE_CLUSTER_RESOURCE_NODE;

typedef int PCLUSAPI_ADD_CLUSTER_RESOURCE_DEPENDENCY;

typedef int PCLUSAPI_REMOVE_CLUSTER_RESOURCE_DEPENDENCY;

typedef int PCLUSAPI_SET_CLUSTER_RESOURCE_DEPENDENCY_EXPRESSION;

typedef int PCLUSAPI_GET_CLUSTER_RESOURCE_DEPENDENCY_EXPRESSION;

typedef int PCLUSAPI_ADD_RESOURCE_TO_CLUSTER_SHARED_VOLUMES;

typedef int PCLUSAPI_REMOVE_RESOURCE_FROM_CLUSTER_SHARED_VOLUMES;

typedef int PCLUSAPI_IS_FILE_ON_CLUSTER_SHARED_VOLUME;

typedef int PCLUSAPI_SHARED_VOLUME_SET_SNAPSHOT_STATE;

typedef int PCLUSAPI_CAN_RESOURCE_BE_DEPENDENT;

typedef int PCLUSAPI_CLUSTER_RESOURCE_CONTROL;

typedef int PCLUSAPI_CLUSTER_RESOURCE_TYPE_CONTROL;

typedef int PCLUSAPI_CLUSTER_GROUP_CONTROL;

typedef int PCLUSAPI_CLUSTER_NODE_CONTROL;

typedef int PCLUSAPI_GET_CLUSTER_RESOURCE_NETWORK_NAME;

typedef enum {
    CLUSPROP_TYPE_UNKNOWN = -1,
    CLUSPROP_TYPE_ENDMARK = 0,
    CLUSPROP_TYPE_LIST_VALUE = 1,
    CLUSPROP_TYPE_RESCLASS = 2,
    CLUSPROP_TYPE_RESERVED1 = 3,
    CLUSPROP_TYPE_NAME = 4,
    CLUSPROP_TYPE_SIGNATURE = 5,
    CLUSPROP_TYPE_SCSI_ADDRESS = 6,
    CLUSPROP_TYPE_DISK_NUMBER = 7,
    CLUSPROP_TYPE_PARTITION_INFO = 8,
    CLUSPROP_TYPE_FTSET_INFO = 9,
    CLUSPROP_TYPE_DISK_SERIALNUMBER = 10,
    CLUSPROP_TYPE_DISK_GUID = 11,
    CLUSPROP_TYPE_DISK_SIZE = 12,
    CLUSPROP_TYPE_PARTITION_INFO_EX = 13,
    CLUSPROP_TYPE_PARTITION_INFO_EX2 = 14,
    CLUSPROP_TYPE_STORAGE_DEVICE_ID_DESCRIPTOR = 15,
    CLUSPROP_TYPE_USER = 32768,
} CLUSTER_PROPERTY_TYPE;

typedef enum {
    CLUSPROP_FORMAT_UNKNOWN = 0,
    CLUSPROP_FORMAT_BINARY = 1,
    CLUSPROP_FORMAT_DWORD = 2,
    CLUSPROP_FORMAT_SZ = 3,
    CLUSPROP_FORMAT_EXPAND_SZ = 4,
    CLUSPROP_FORMAT_MULTI_SZ = 5,
    CLUSPROP_FORMAT_ULARGE_INTEGER = 6,
    CLUSPROP_FORMAT_LONG = 7,
    CLUSPROP_FORMAT_EXPANDED_SZ = 8,
    CLUSPROP_FORMAT_SECURITY_DESCRIPTOR = 9,
    CLUSPROP_FORMAT_LARGE_INTEGER = 10,
    CLUSPROP_FORMAT_WORD = 11,
    CLUSPROP_FORMAT_FILETIME = 12,
    CLUSPROP_FORMAT_VALUE_LIST = 13,
    CLUSPROP_FORMAT_PROPERTY_LIST = 14,
    CLUSPROP_FORMAT_USER = 32768,
} CLUSTER_PROPERTY_FORMAT;

typedef enum {
    CLUSPROP_SYNTAX_ENDMARK = 0,
    CLUSPROP_SYNTAX_NAME = 262147,
    CLUSPROP_SYNTAX_RESCLASS = 131074,
    CLUSPROP_SYNTAX_LIST_VALUE_SZ = 65539,
    CLUSPROP_SYNTAX_LIST_VALUE_EXPAND_SZ = 65540,
    CLUSPROP_SYNTAX_LIST_VALUE_DWORD = 65538,
    CLUSPROP_SYNTAX_LIST_VALUE_BINARY = 65537,
    CLUSPROP_SYNTAX_LIST_VALUE_MULTI_SZ = 65541,
    CLUSPROP_SYNTAX_LIST_VALUE_LONG = 65543,
    CLUSPROP_SYNTAX_LIST_VALUE_EXPANDED_SZ = 65544,
    CLUSPROP_SYNTAX_LIST_VALUE_SECURITY_DESCRIPTOR = 65545,
    CLUSPROP_SYNTAX_LIST_VALUE_LARGE_INTEGER = 65546,
    CLUSPROP_SYNTAX_LIST_VALUE_ULARGE_INTEGER = 65542,
    CLUSPROP_SYNTAX_LIST_VALUE_WORD = 65547,
    CLUSPROP_SYNTAX_LIST_VALUE_PROPERTY_LIST = 65550,
    CLUSPROP_SYNTAX_LIST_VALUE_FILETIME = 65548,
    CLUSPROP_SYNTAX_DISK_SIGNATURE = 327682,
    CLUSPROP_SYNTAX_SCSI_ADDRESS = 393218,
    CLUSPROP_SYNTAX_DISK_NUMBER = 458754,
    CLUSPROP_SYNTAX_PARTITION_INFO = 524289,
    CLUSPROP_SYNTAX_FTSET_INFO = 589825,
    CLUSPROP_SYNTAX_DISK_SERIALNUMBER = 655363,
    CLUSPROP_SYNTAX_DISK_GUID = 720899,
    CLUSPROP_SYNTAX_DISK_SIZE = 786438,
    CLUSPROP_SYNTAX_PARTITION_INFO_EX = 851969,
    CLUSPROP_SYNTAX_PARTITION_INFO_EX2 = 917505,
    CLUSPROP_SYNTAX_STORAGE_DEVICE_ID_DESCRIPTOR = 983041,
} CLUSTER_PROPERTY_SYNTAX;

typedef int GROUP_FAILURE_INFO;

typedef int GROUP_FAILURE_INFO_BUFFER;

typedef int RESOURCE_FAILURE_INFO;

typedef int RESOURCE_FAILURE_INFO_BUFFER;

typedef int RESOURCE_TERMINAL_FAILURE_INFO_BUFFER;

typedef enum {
    CLUS_OBJECT_INVALID = 0,
    CLUS_OBJECT_RESOURCE = 1,
    CLUS_OBJECT_RESOURCE_TYPE = 2,
    CLUS_OBJECT_GROUP = 3,
    CLUS_OBJECT_NODE = 4,
    CLUS_OBJECT_NETWORK = 5,
    CLUS_OBJECT_NETINTERFACE = 6,
    CLUS_OBJECT_CLUSTER = 7,
    CLUS_OBJECT_GROUPSET = 8,
    CLUS_OBJECT_AFFINITYRULE = 9,
    CLUS_OBJECT_USER = 128,
} CLUSTER_CONTROL_OBJECT;

typedef enum {
    CLCTL_UNKNOWN = 0,
    CLCTL_GET_CHARACTERISTICS = 5,
    CLCTL_GET_FLAGS = 9,
    CLCTL_GET_CLASS_INFO = 13,
    CLCTL_GET_REQUIRED_DEPENDENCIES = 17,
    CLCTL_GET_ARB_TIMEOUT = 21,
    CLCTL_GET_FAILURE_INFO = 25,
    CLCTL_GET_NAME = 41,
    CLCTL_GET_RESOURCE_TYPE = 45,
    CLCTL_GET_NODE = 49,
    CLCTL_GET_NETWORK = 53,
    CLCTL_GET_ID = 57,
    CLCTL_GET_FQDN = 61,
    CLCTL_GET_CLUSTER_SERVICE_ACCOUNT_NAME = 65,
    CLCTL_CHECK_VOTER_EVICT = 69,
    CLCTL_CHECK_VOTER_DOWN = 73,
    CLCTL_SHUTDOWN = 77,
    CLCTL_ENUM_COMMON_PROPERTIES = 81,
    CLCTL_GET_RO_COMMON_PROPERTIES = 85,
    CLCTL_GET_COMMON_PROPERTIES = 89,
    CLCTL_SET_COMMON_PROPERTIES = 4194398,
    CLCTL_VALIDATE_COMMON_PROPERTIES = 97,
    CLCTL_GET_COMMON_PROPERTY_FMTS = 101,
    CLCTL_GET_COMMON_RESOURCE_PROPERTY_FMTS = 105,
    CLCTL_ENUM_PRIVATE_PROPERTIES = 121,
    CLCTL_GET_RO_PRIVATE_PROPERTIES = 125,
    CLCTL_GET_PRIVATE_PROPERTIES = 129,
    CLCTL_SET_PRIVATE_PROPERTIES = 4194438,
    CLCTL_VALIDATE_PRIVATE_PROPERTIES = 137,
    CLCTL_GET_PRIVATE_PROPERTY_FMTS = 141,
    CLCTL_GET_PRIVATE_RESOURCE_PROPERTY_FMTS = 145,
    CLCTL_ADD_REGISTRY_CHECKPOINT = 4194466,
    CLCTL_DELETE_REGISTRY_CHECKPOINT = 4194470,
    CLCTL_GET_REGISTRY_CHECKPOINTS = 169,
    CLCTL_ADD_CRYPTO_CHECKPOINT = 4194478,
    CLCTL_DELETE_CRYPTO_CHECKPOINT = 4194482,
    CLCTL_GET_CRYPTO_CHECKPOINTS = 181,
    CLCTL_RESOURCE_UPGRADE_DLL = 4194490,
    CLCTL_ADD_REGISTRY_CHECKPOINT_64BIT = 4194494,
    CLCTL_ADD_REGISTRY_CHECKPOINT_32BIT = 4194498,
    CLCTL_GET_LOADBAL_PROCESS_LIST = 201,
    CLCTL_SET_ACCOUNT_ACCESS = 4194546,
    CLCTL_GET_NETWORK_NAME = 361,
    CLCTL_NETNAME_GET_VIRTUAL_SERVER_TOKEN = 365,
    CLCTL_NETNAME_REGISTER_DNS_RECORDS = 370,
    CLCTL_GET_DNS_NAME = 373,
    CLCTL_NETNAME_SET_PWD_INFO = 378,
    CLCTL_NETNAME_DELETE_CO = 382,
    CLCTL_NETNAME_VALIDATE_VCO = 385,
    CLCTL_NETNAME_RESET_VCO = 389,
    CLCTL_NETNAME_REPAIR_VCO = 397,
    CLCTL_STORAGE_GET_DISK_INFO = 401,
    CLCTL_STORAGE_GET_AVAILABLE_DISKS = 405,
    CLCTL_STORAGE_IS_PATH_VALID = 409,
    CLCTL_STORAGE_SYNC_CLUSDISK_DB = 4194718,
    CLCTL_STORAGE_GET_DISK_NUMBER_INFO = 417,
    CLCTL_QUERY_DELETE = 441,
    CLCTL_IPADDRESS_RENEW_LEASE = 4194750,
    CLCTL_IPADDRESS_RELEASE_LEASE = 4194754,
    CLCTL_QUERY_MAINTENANCE_MODE = 481,
    CLCTL_SET_MAINTENANCE_MODE = 4194790,
    CLCTL_STORAGE_SET_DRIVELETTER = 4194794,
    CLCTL_STORAGE_GET_DRIVELETTERS = 493,
    CLCTL_STORAGE_GET_DISK_INFO_EX = 497,
    CLCTL_STORAGE_GET_AVAILABLE_DISKS_EX = 501,
    CLCTL_STORAGE_GET_DISK_INFO_EX2 = 505,
    CLCTL_STORAGE_GET_CLUSPORT_DISK_COUNT = 509,
    CLCTL_STORAGE_REMAP_DRIVELETTER = 513,
    CLCTL_STORAGE_GET_DISKID = 517,
    CLCTL_STORAGE_IS_CLUSTERABLE = 521,
    CLCTL_STORAGE_REMOVE_VM_OWNERSHIP = 4194830,
    CLCTL_STORAGE_GET_MOUNTPOINTS = 529,
    CLCTL_STORAGE_GET_DIRTY = 537,
    CLCTL_STORAGE_GET_SHARED_VOLUME_INFO = 549,
    CLCTL_STORAGE_IS_CSV_FILE = 553,
    CLCTL_STORAGE_GET_RESOURCEID = 557,
    CLCTL_VALIDATE_PATH = 561,
    CLCTL_VALIDATE_NETNAME = 565,
    CLCTL_VALIDATE_DIRECTORY = 569,
    CLCTL_BATCH_BLOCK_KEY = 574,
    CLCTL_BATCH_UNBLOCK_KEY = 577,
    CLCTL_FILESERVER_SHARE_ADD = 4194886,
    CLCTL_FILESERVER_SHARE_DEL = 4194890,
    CLCTL_FILESERVER_SHARE_MODIFY = 4194894,
    CLCTL_FILESERVER_SHARE_REPORT = 593,
    CLCTL_NETNAME_GET_OU_FOR_VCO = 4194926,
    CLCTL_ENABLE_SHARED_VOLUME_DIRECTIO = 4194954,
    CLCTL_DISABLE_SHARED_VOLUME_DIRECTIO = 4194958,
    CLCTL_GET_SHARED_VOLUME_ID = 657,
    CLCTL_SET_CSV_MAINTENANCE_MODE = 4194966,
    CLCTL_SET_SHARED_VOLUME_BACKUP_MODE = 4194970,
    CLCTL_STORAGE_GET_SHARED_VOLUME_PARTITION_NAMES = 669,
    CLCTL_STORAGE_GET_SHARED_VOLUME_STATES = 4194978,
    CLCTL_STORAGE_IS_SHARED_VOLUME = 677,
    CLCTL_GET_CLUSDB_TIMESTAMP = 681,
    CLCTL_RW_MODIFY_NOOP = 4194990,
    CLCTL_IS_QUORUM_BLOCKED = 689,
    CLCTL_POOL_GET_DRIVE_INFO = 693,
    CLCTL_GET_GUM_LOCK_OWNER = 697,
    CLCTL_GET_STUCK_NODES = 701,
    CLCTL_INJECT_GEM_FAULT = 705,
    CLCTL_INTRODUCE_GEM_REPAIR_DELAY = 709,
    CLCTL_SEND_DUMMY_GEM_MESSAGES = 713,
    CLCTL_BLOCK_GEM_SEND_RECV = 717,
    CLCTL_GET_GEMID_VECTOR = 721,
    CLCTL_ADD_CRYPTO_CHECKPOINT_EX = 4195030,
    CLCTL_GROUP_GET_LAST_MOVE_TIME = 729,
    CLCTL_SET_STORAGE_CONFIGURATION = 4195042,
    CLCTL_GET_STORAGE_CONFIGURATION = 741,
    CLCTL_GET_STORAGE_CONFIG_ATTRIBUTES = 745,
    CLCTL_REMOVE_NODE = 4195054,
    CLCTL_IS_FEATURE_INSTALLED = 753,
    CLCTL_IS_S2D_FEATURE_SUPPORTED = 757,
    CLCTL_STORAGE_GET_PHYSICAL_DISK_INFO = 761,
    CLCTL_STORAGE_GET_CLUSBFLT_PATHS = 765,
    CLCTL_STORAGE_GET_CLUSBFLT_PATHINFO = 769,
    CLCTL_CLEAR_NODE_CONNECTION_INFO = 4195078,
    CLCTL_SET_DNS_DOMAIN = 4195082,
    CTCTL_GET_ROUTESTATUS_BASIC = 781,
    CTCTL_GET_ROUTESTATUS_EXTENDED = 785,
    CTCTL_GET_FAULT_DOMAIN_STATE = 789,
    CLCTL_NETNAME_SET_PWD_INFOEX = 794,
    CLCTL_STORAGE_GET_AVAILABLE_DISKS_EX2_INT = 8161,
    CLCTL_CLOUD_WITNESS_RESOURCE_TYPE_VALIDATE_CREDENTIALS = 8417,
    CLCTL_CLOUD_WITNESS_RESOURCE_UPDATE_TOKEN = 4202726,
    CLCTL_RESOURCE_PREPARE_UPGRADE = 4202730,
    CLCTL_RESOURCE_UPGRADE_COMPLETED = 4202734,
    CLCTL_CLOUD_WITNESS_RESOURCE_TYPE_VALIDATE_CREDENTIALS_WITH_KEY = 8433,
    CLCTL_CLOUD_WITNESS_RESOURCE_UPDATE_KEY = 4202742,
    CLCTL_REPLICATION_GET_LOG_INFO = 8517,
    CLCTL_REPLICATION_GET_ELIGIBLE_LOGDISKS = 8521,
    CLCTL_REPLICATION_GET_ELIGIBLE_TARGET_DATADISKS = 8525,
    CLCTL_REPLICATION_GET_ELIGIBLE_SOURCE_DATADISKS = 8529,
    CLCTL_REPLICATION_GET_REPLICATED_DISKS = 8533,
    CLCTL_REPLICATION_GET_REPLICA_VOLUMES = 8537,
    CLCTL_REPLICATION_GET_LOG_VOLUME = 8541,
    CLCTL_REPLICATION_GET_RESOURCE_GROUP = 8545,
    CLCTL_REPLICATION_GET_REPLICATED_PARTITION_INFO = 8549,
    CLCTL_GET_STATE_CHANGE_TIME = 11613,
    CLCTL_SET_CLUSTER_S2D_ENABLED = 4205922,
    CLCTL_SET_CLUSTER_S2D_CACHE_METADATA_RESERVE_BYTES = 4205934,
    CLCTL_GROUPSET_GET_GROUPS = 11633,
    CLCTL_GROUPSET_GET_PROVIDER_GROUPS = 11637,
    CLCTL_GROUPSET_GET_PROVIDER_GROUPSETS = 11641,
    CLCTL_GROUP_GET_PROVIDER_GROUPS = 11645,
    CLCTL_GROUP_GET_PROVIDER_GROUPSETS = 11649,
    CLCTL_GROUP_SET_CCF_FROM_MASTER = 4205958,
    CLCTL_GET_INFRASTRUCTURE_SOFS_BUFFER = 11657,
    CLCTL_SET_INFRASTRUCTURE_SOFS_BUFFER = 4205966,
    CLCTL_NOTIFY_INFRASTRUCTURE_SOFS_CHANGED = 4205970,
    CLCTL_SCALEOUT_COMMAND = 4205974,
    CLCTL_SCALEOUT_CONTROL = 4205978,
    CLCTL_SCALEOUT_GET_CLUSTERS = 4205981,
    CLCTL_RELOAD_AUTOLOGGER_CONFIG = 11730,
    CLCTL_STORAGE_RENAME_SHARED_VOLUME = 11734,
    CLCTL_STORAGE_RENAME_SHARED_VOLUME_GUID = 11738,
    CLCTL_ENUM_AFFINITY_RULE_NAMES = 11741,
    CLCTL_DELETE = 5242886,
    CLCTL_INSTALL_NODE = 5242890,
    CLCTL_EVICT_NODE = 5242894,
    CLCTL_ADD_DEPENDENCY = 5242898,
    CLCTL_REMOVE_DEPENDENCY = 5242902,
    CLCTL_ADD_OWNER = 5242906,
    CLCTL_REMOVE_OWNER = 5242910,
    CLCTL_SET_NAME = 5242918,
    CLCTL_CLUSTER_NAME_CHANGED = 5242922,
    CLCTL_CLUSTER_VERSION_CHANGED = 5242926,
    CLCTL_FIXUP_ON_UPGRADE = 5242930,
    CLCTL_STARTING_PHASE1 = 5242934,
    CLCTL_STARTING_PHASE2 = 5242938,
    CLCTL_HOLD_IO = 5242942,
    CLCTL_RESUME_IO = 5242946,
    CLCTL_FORCE_QUORUM = 5242950,
    CLCTL_INITIALIZE = 5242954,
    CLCTL_STATE_CHANGE_REASON = 5242958,
    CLCTL_PROVIDER_STATE_CHANGE = 5242962,
    CLCTL_LEAVING_GROUP = 5242966,
    CLCTL_JOINING_GROUP = 5242970,
    CLCTL_FSWITNESS_GET_EPOCH_INFO = 1048669,
    CLCTL_FSWITNESS_SET_EPOCH_INFO = 5242978,
    CLCTL_FSWITNESS_RELEASE_LOCK = 5242982,
    CLCTL_NETNAME_CREDS_NOTIFYCAM = 5242986,
    CLCTL_NOTIFY_QUORUM_STATUS = 5243006,
    CLCTL_NOTIFY_MONITOR_SHUTTING_DOWN = 1048705,
    CLCTL_UNDELETE = 5243014,
    CLCTL_GET_OPERATION_CONTEXT = 1057001,
    CLCTL_NOTIFY_OWNER_CHANGE = 5251362,
    CLCTL_VALIDATE_CHANGE_GROUP = 1057061,
    CLCTL_CHECK_DRAIN_VETO = 1057069,
    CLCTL_NOTIFY_DRAIN_COMPLETE = 1057073,
} CLCTL_CODES;

typedef enum {
    CLUSCTL_RESOURCE_UNKNOWN = 16777216,
    CLUSCTL_RESOURCE_GET_CHARACTERISTICS = 16777221,
    CLUSCTL_RESOURCE_GET_FLAGS = 16777225,
    CLUSCTL_RESOURCE_GET_CLASS_INFO = 16777229,
    CLUSCTL_RESOURCE_GET_REQUIRED_DEPENDENCIES = 16777233,
    CLUSCTL_RESOURCE_GET_NAME = 16777257,
    CLUSCTL_RESOURCE_GET_ID = 16777273,
    CLUSCTL_RESOURCE_GET_RESOURCE_TYPE = 16777261,
    CLUSCTL_RESOURCE_ENUM_COMMON_PROPERTIES = 16777297,
    CLUSCTL_RESOURCE_GET_RO_COMMON_PROPERTIES = 16777301,
    CLUSCTL_RESOURCE_GET_COMMON_PROPERTIES = 16777305,
    CLUSCTL_RESOURCE_SET_COMMON_PROPERTIES = 20971614,
    CLUSCTL_RESOURCE_VALIDATE_COMMON_PROPERTIES = 16777313,
    CLUSCTL_RESOURCE_GET_COMMON_PROPERTY_FMTS = 16777317,
    CLUSCTL_RESOURCE_ENUM_PRIVATE_PROPERTIES = 16777337,
    CLUSCTL_RESOURCE_GET_RO_PRIVATE_PROPERTIES = 16777341,
    CLUSCTL_RESOURCE_GET_PRIVATE_PROPERTIES = 16777345,
    CLUSCTL_RESOURCE_SET_PRIVATE_PROPERTIES = 20971654,
    CLUSCTL_RESOURCE_VALIDATE_PRIVATE_PROPERTIES = 16777353,
    CLUSCTL_RESOURCE_GET_PRIVATE_PROPERTY_FMTS = 16777357,
    CLUSCTL_RESOURCE_ADD_REGISTRY_CHECKPOINT = 20971682,
    CLUSCTL_RESOURCE_DELETE_REGISTRY_CHECKPOINT = 20971686,
    CLUSCTL_RESOURCE_GET_REGISTRY_CHECKPOINTS = 16777385,
    CLUSCTL_RESOURCE_ADD_CRYPTO_CHECKPOINT = 20971694,
    CLUSCTL_RESOURCE_DELETE_CRYPTO_CHECKPOINT = 20971698,
    CLUSCTL_RESOURCE_ADD_CRYPTO_CHECKPOINT_EX = 20972246,
    CLUSCTL_RESOURCE_GET_CRYPTO_CHECKPOINTS = 16777397,
    CLUSCTL_RESOURCE_GET_LOADBAL_PROCESS_LIST = 16777417,
    CLUSCTL_RESOURCE_GET_NETWORK_NAME = 16777577,
    CLUSCTL_RESOURCE_NETNAME_GET_VIRTUAL_SERVER_TOKEN = 16777581,
    CLUSCTL_RESOURCE_NETNAME_SET_PWD_INFO = 16777594,
    CLUSCTL_RESOURCE_NETNAME_SET_PWD_INFOEX = 16778010,
    CLUSCTL_RESOURCE_NETNAME_DELETE_CO = 16777598,
    CLUSCTL_RESOURCE_NETNAME_VALIDATE_VCO = 16777601,
    CLUSCTL_RESOURCE_NETNAME_RESET_VCO = 16777605,
    CLUSCTL_RESOURCE_NETNAME_REPAIR_VCO = 16777613,
    CLUSCTL_RESOURCE_NETNAME_REGISTER_DNS_RECORDS = 16777586,
    CLUSCTL_RESOURCE_GET_DNS_NAME = 16777589,
    CLUSCTL_RESOURCE_STORAGE_GET_DISK_INFO = 16777617,
    CLUSCTL_RESOURCE_STORAGE_GET_DISK_NUMBER_INFO = 16777633,
    CLUSCTL_RESOURCE_STORAGE_IS_PATH_VALID = 16777625,
    CLUSCTL_RESOURCE_QUERY_DELETE = 16777657,
    CLUSCTL_RESOURCE_UPGRADE_DLL = 20971706,
    CLUSCTL_RESOURCE_IPADDRESS_RENEW_LEASE = 20971966,
    CLUSCTL_RESOURCE_IPADDRESS_RELEASE_LEASE = 20971970,
    CLUSCTL_RESOURCE_ADD_REGISTRY_CHECKPOINT_64BIT = 20971710,
    CLUSCTL_RESOURCE_ADD_REGISTRY_CHECKPOINT_32BIT = 20971714,
    CLUSCTL_RESOURCE_QUERY_MAINTENANCE_MODE = 16777697,
    CLUSCTL_RESOURCE_SET_MAINTENANCE_MODE = 20972006,
    CLUSCTL_RESOURCE_STORAGE_SET_DRIVELETTER = 20972010,
    CLUSCTL_RESOURCE_STORAGE_GET_DISK_INFO_EX = 16777713,
    CLUSCTL_RESOURCE_STORAGE_GET_DISK_INFO_EX2 = 16777721,
    CLUSCTL_RESOURCE_STORAGE_GET_MOUNTPOINTS = 16777745,
    CLUSCTL_RESOURCE_STORAGE_GET_DIRTY = 16777753,
    CLUSCTL_RESOURCE_STORAGE_GET_SHARED_VOLUME_INFO = 16777765,
    CLUSCTL_RESOURCE_SET_CSV_MAINTENANCE_MODE = 20972182,
    CLUSCTL_RESOURCE_ENABLE_SHARED_VOLUME_DIRECTIO = 20972170,
    CLUSCTL_RESOURCE_DISABLE_SHARED_VOLUME_DIRECTIO = 20972174,
    CLUSCTL_RESOURCE_SET_SHARED_VOLUME_BACKUP_MODE = 20972186,
    CLUSCTL_RESOURCE_STORAGE_GET_SHARED_VOLUME_PARTITION_NAMES = 16777885,
    CLUSCTL_RESOURCE_GET_FAILURE_INFO = 16777241,
    CLUSCTL_RESOURCE_STORAGE_GET_DISKID = 16777733,
    CLUSCTL_RESOURCE_STORAGE_GET_SHARED_VOLUME_STATES = 20972194,
    CLUSCTL_RESOURCE_STORAGE_IS_SHARED_VOLUME = 16777893,
    CLUSCTL_RESOURCE_IS_QUORUM_BLOCKED = 16777905,
    CLUSCTL_RESOURCE_POOL_GET_DRIVE_INFO = 16777909,
    CLUSCTL_RESOURCE_RLUA_GET_VIRTUAL_SERVER_TOKEN = 16777581,
    CLUSCTL_RESOURCE_RLUA_SET_PWD_INFO = 16777594,
    CLUSCTL_RESOURCE_RLUA_SET_PWD_INFOEX = 16778010,
    CLUSCTL_RESOURCE_DELETE = 22020102,
    CLUSCTL_RESOURCE_UNDELETE = 22020230,
    CLUSCTL_RESOURCE_INSTALL_NODE = 22020106,
    CLUSCTL_RESOURCE_EVICT_NODE = 22020110,
    CLUSCTL_RESOURCE_ADD_DEPENDENCY = 22020114,
    CLUSCTL_RESOURCE_REMOVE_DEPENDENCY = 22020118,
    CLUSCTL_RESOURCE_ADD_OWNER = 22020122,
    CLUSCTL_RESOURCE_REMOVE_OWNER = 22020126,
    CLUSCTL_RESOURCE_SET_NAME = 22020134,
    CLUSCTL_RESOURCE_CLUSTER_NAME_CHANGED = 22020138,
    CLUSCTL_RESOURCE_CLUSTER_VERSION_CHANGED = 22020142,
    CLUSCTL_RESOURCE_FORCE_QUORUM = 22020166,
    CLUSCTL_RESOURCE_INITIALIZE = 22020170,
    CLUSCTL_RESOURCE_STATE_CHANGE_REASON = 22020174,
    CLUSCTL_RESOURCE_PROVIDER_STATE_CHANGE = 22020178,
    CLUSCTL_RESOURCE_LEAVING_GROUP = 22020182,
    CLUSCTL_RESOURCE_JOINING_GROUP = 22020186,
    CLUSCTL_RESOURCE_FSWITNESS_GET_EPOCH_INFO = 17825885,
    CLUSCTL_RESOURCE_FSWITNESS_SET_EPOCH_INFO = 22020194,
    CLUSCTL_RESOURCE_FSWITNESS_RELEASE_LOCK = 22020198,
    CLUSCTL_RESOURCE_NETNAME_CREDS_NOTIFYCAM = 22020202,
    CLUSCTL_RESOURCE_GET_OPERATION_CONTEXT = 17834217,
    CLUSCTL_RESOURCE_RW_MODIFY_NOOP = 20972206,
    CLUSCTL_RESOURCE_NOTIFY_QUORUM_STATUS = 22020222,
    CLUSCTL_RESOURCE_NOTIFY_OWNER_CHANGE = 22028578,
    CLUSCTL_RESOURCE_VALIDATE_CHANGE_GROUP = 17834277,
    CLUSCTL_RESOURCE_STORAGE_RENAME_SHARED_VOLUME = 16788950,
    CLUSCTL_RESOURCE_STORAGE_RENAME_SHARED_VOLUME_GUID = 16788954,
    CLUSCTL_CLOUD_WITNESS_RESOURCE_UPDATE_TOKEN = 20979942,
    CLUSCTL_CLOUD_WITNESS_RESOURCE_UPDATE_KEY = 20979958,
    CLUSCTL_RESOURCE_PREPARE_UPGRADE = 20979946,
    CLUSCTL_RESOURCE_UPGRADE_COMPLETED = 20979950,
    CLUSCTL_RESOURCE_GET_STATE_CHANGE_TIME = 16788829,
    CLUSCTL_RESOURCE_GET_INFRASTRUCTURE_SOFS_BUFFER = 16788873,
    CLUSCTL_RESOURCE_SET_INFRASTRUCTURE_SOFS_BUFFER = 20983182,
    CLUSCTL_RESOURCE_SCALEOUT_COMMAND = 20983190,
    CLUSCTL_RESOURCE_SCALEOUT_CONTROL = 20983194,
    CLUSCTL_RESOURCE_SCALEOUT_GET_CLUSTERS = 20983197,
    CLUSCTL_RESOURCE_CHECK_DRAIN_VETO = 17834285,
    CLUSCTL_RESOURCE_NOTIFY_DRAIN_COMPLETE = 17834289,
} CLUSCTL_RESOURCE_CODES;

typedef enum {
    CLUSCTL_RESOURCE_TYPE_UNKNOWN = 33554432,
    CLUSCTL_RESOURCE_TYPE_GET_CHARACTERISTICS = 33554437,
    CLUSCTL_RESOURCE_TYPE_GET_FLAGS = 33554441,
    CLUSCTL_RESOURCE_TYPE_GET_CLASS_INFO = 33554445,
    CLUSCTL_RESOURCE_TYPE_GET_REQUIRED_DEPENDENCIES = 33554449,
    CLUSCTL_RESOURCE_TYPE_GET_ARB_TIMEOUT = 33554453,
    CLUSCTL_RESOURCE_TYPE_ENUM_COMMON_PROPERTIES = 33554513,
    CLUSCTL_RESOURCE_TYPE_GET_RO_COMMON_PROPERTIES = 33554517,
    CLUSCTL_RESOURCE_TYPE_GET_COMMON_PROPERTIES = 33554521,
    CLUSCTL_RESOURCE_TYPE_VALIDATE_COMMON_PROPERTIES = 33554529,
    CLUSCTL_RESOURCE_TYPE_SET_COMMON_PROPERTIES = 37748830,
    CLUSCTL_RESOURCE_TYPE_GET_COMMON_PROPERTY_FMTS = 33554533,
    CLUSCTL_RESOURCE_TYPE_GET_COMMON_RESOURCE_PROPERTY_FMTS = 33554537,
    CLUSCTL_RESOURCE_TYPE_ENUM_PRIVATE_PROPERTIES = 33554553,
    CLUSCTL_RESOURCE_TYPE_GET_RO_PRIVATE_PROPERTIES = 33554557,
    CLUSCTL_RESOURCE_TYPE_GET_PRIVATE_PROPERTIES = 33554561,
    CLUSCTL_RESOURCE_TYPE_SET_PRIVATE_PROPERTIES = 37748870,
    CLUSCTL_RESOURCE_TYPE_VALIDATE_PRIVATE_PROPERTIES = 33554569,
    CLUSCTL_RESOURCE_TYPE_GET_PRIVATE_PROPERTY_FMTS = 33554573,
    CLUSCTL_RESOURCE_TYPE_GET_PRIVATE_RESOURCE_PROPERTY_FMTS = 33554577,
    CLUSCTL_RESOURCE_TYPE_GET_REGISTRY_CHECKPOINTS = 33554601,
    CLUSCTL_RESOURCE_TYPE_GET_CRYPTO_CHECKPOINTS = 33554613,
    CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS = 33554837,
    CLUSCTL_RESOURCE_TYPE_STORAGE_SYNC_CLUSDISK_DB = 37749150,
    CLUSCTL_RESOURCE_TYPE_NETNAME_VALIDATE_NETNAME = 33554997,
    CLUSCTL_RESOURCE_TYPE_NETNAME_GET_OU_FOR_VCO = 37749358,
    CLUSCTL_RESOURCE_TYPE_GEN_APP_VALIDATE_PATH = 33554993,
    CLUSCTL_RESOURCE_TYPE_GEN_APP_VALIDATE_DIRECTORY = 33555001,
    CLUSCTL_RESOURCE_TYPE_GEN_SCRIPT_VALIDATE_PATH = 33554993,
    CLUSCTL_RESOURCE_TYPE_QUERY_DELETE = 33554873,
    CLUSCTL_RESOURCE_TYPE_STORAGE_GET_DRIVELETTERS = 33554925,
    CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX = 33554933,
    CLUSCTL_RESOURCE_TYPE_STORAGE_REMAP_DRIVELETTER = 33554945,
    CLUSCTL_RESOURCE_TYPE_STORAGE_GET_DISKID = 33554949,
    CLUSCTL_RESOURCE_TYPE_STORAGE_GET_RESOURCEID = 33554989,
    CLUSCTL_RESOURCE_TYPE_STORAGE_IS_CLUSTERABLE = 33554953,
    CLUSCTL_RESOURCE_TYPE_STORAGE_REMOVE_VM_OWNERSHIP = 37749262,
    CLUSCTL_RESOURCE_TYPE_STORAGE_IS_CSV_FILE = 16777769,
    CLUSCTL_RESOURCE_TYPE_WITNESS_VALIDATE_PATH = 33554993,
    CLUSCTL_RESOURCE_TYPE_INSTALL_NODE = 38797322,
    CLUSCTL_RESOURCE_TYPE_EVICT_NODE = 38797326,
    CLUSCTL_RESOURCE_TYPE_CLUSTER_VERSION_CHANGED = 38797358,
    CLUSCTL_RESOURCE_TYPE_FIXUP_ON_UPGRADE = 38797362,
    CLUSCTL_RESOURCE_TYPE_STARTING_PHASE1 = 38797366,
    CLUSCTL_RESOURCE_TYPE_STARTING_PHASE2 = 38797370,
    CLUSCTL_RESOURCE_TYPE_HOLD_IO = 38797374,
    CLUSCTL_RESOURCE_TYPE_RESUME_IO = 38797378,
    CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_INT = 33562593,
    CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_ELIGIBLE_LOGDISKS = 33562953,
    CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_ELIGIBLE_TARGET_DATADISKS = 33562957,
    CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_ELIGIBLE_SOURCE_DATADISKS = 33562961,
    CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_REPLICATED_DISKS = 33562965,
    CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_REPLICA_VOLUMES = 33562969,
    CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_LOG_VOLUME = 33562973,
    CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_RESOURCE_GROUP = 33562977,
    CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_REPLICATED_PARTITION_INFO = 33562981,
    CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_LOG_INFO = 33562949,
    CLUSCTL_CLOUD_WITNESS_RESOURCE_TYPE_VALIDATE_CREDENTIALS = 33562849,
    CLUSCTL_CLOUD_WITNESS_RESOURCE_TYPE_VALIDATE_CREDENTIALS_WITH_KEY = 33562865,
    CLUSCTL_RESOURCE_TYPE_PREPARE_UPGRADE = 37757162,
    CLUSCTL_RESOURCE_TYPE_UPGRADE_COMPLETED = 37757166,
    CLUSCTL_RESOURCE_TYPE_NOTIFY_MONITOR_SHUTTING_DOWN = 34603137,
    CLUSCTL_RESOURCE_TYPE_CHECK_DRAIN_VETO = 34611501,
    CLUSCTL_RESOURCE_TYPE_NOTIFY_DRAIN_COMPLETE = 34611505,
} CLUSCTL_RESOURCE_TYPE_CODES;

typedef enum {
    CLUSCTL_GROUP_UNKNOWN = 50331648,
    CLUSCTL_GROUP_GET_CHARACTERISTICS = 50331653,
    CLUSCTL_GROUP_GET_FLAGS = 50331657,
    CLUSCTL_GROUP_GET_NAME = 50331689,
    CLUSCTL_GROUP_GET_ID = 50331705,
    CLUSCTL_GROUP_ENUM_COMMON_PROPERTIES = 50331729,
    CLUSCTL_GROUP_GET_RO_COMMON_PROPERTIES = 50331733,
    CLUSCTL_GROUP_GET_COMMON_PROPERTIES = 50331737,
    CLUSCTL_GROUP_SET_COMMON_PROPERTIES = 54526046,
    CLUSCTL_GROUP_VALIDATE_COMMON_PROPERTIES = 50331745,
    CLUSCTL_GROUP_ENUM_PRIVATE_PROPERTIES = 50331769,
    CLUSCTL_GROUP_GET_RO_PRIVATE_PROPERTIES = 50331773,
    CLUSCTL_GROUP_GET_PRIVATE_PROPERTIES = 50331777,
    CLUSCTL_GROUP_SET_PRIVATE_PROPERTIES = 54526086,
    CLUSCTL_GROUP_VALIDATE_PRIVATE_PROPERTIES = 50331785,
    CLUSCTL_GROUP_QUERY_DELETE = 50332089,
    CLUSCTL_GROUP_GET_COMMON_PROPERTY_FMTS = 50331749,
    CLUSCTL_GROUP_GET_PRIVATE_PROPERTY_FMTS = 50331789,
    CLUSCTL_GROUP_GET_FAILURE_INFO = 50331673,
    CLUSCTL_GROUP_GET_LAST_MOVE_TIME = 50332377,
    CLUSCTL_GROUP_SET_CCF_FROM_MASTER = 54537606,
} CLUSCTL_GROUP_CODES;

typedef enum {
    CLUSCTL_NODE_UNKNOWN = 67108864,
    CLUSCTL_NODE_GET_CHARACTERISTICS = 67108869,
    CLUSCTL_NODE_GET_FLAGS = 67108873,
    CLUSCTL_NODE_GET_NAME = 67108905,
    CLUSCTL_NODE_GET_ID = 67108921,
    CLUSCTL_NODE_ENUM_COMMON_PROPERTIES = 67108945,
    CLUSCTL_NODE_GET_RO_COMMON_PROPERTIES = 67108949,
    CLUSCTL_NODE_GET_COMMON_PROPERTIES = 67108953,
    CLUSCTL_NODE_SET_COMMON_PROPERTIES = 71303262,
    CLUSCTL_NODE_VALIDATE_COMMON_PROPERTIES = 67108961,
    CLUSCTL_NODE_ENUM_PRIVATE_PROPERTIES = 67108985,
    CLUSCTL_NODE_GET_RO_PRIVATE_PROPERTIES = 67108989,
    CLUSCTL_NODE_GET_PRIVATE_PROPERTIES = 67108993,
    CLUSCTL_NODE_SET_PRIVATE_PROPERTIES = 71303302,
    CLUSCTL_NODE_VALIDATE_PRIVATE_PROPERTIES = 67109001,
    CLUSCTL_NODE_GET_COMMON_PROPERTY_FMTS = 67108965,
    CLUSCTL_NODE_GET_PRIVATE_PROPERTY_FMTS = 67109005,
    CLUSCTL_NODE_GET_CLUSTER_SERVICE_ACCOUNT_NAME = 67108929,
    CLUSCTL_NODE_GET_STUCK_NODES = 67109565,
    CLUSCTL_NODE_INJECT_GEM_FAULT = 67109569,
    CLUSCTL_NODE_INTRODUCE_GEM_REPAIR_DELAY = 67109573,
    CLUSCTL_NODE_SEND_DUMMY_GEM_MESSAGES = 67109577,
    CLUSCTL_NODE_BLOCK_GEM_SEND_RECV = 67109581,
    CLUSCTL_NODE_GET_GEMID_VECTOR = 67109585,
} CLUSCTL_NODE_CODES;

typedef enum {
    CLUSCTL_NETWORK_UNKNOWN = 83886080,
    CLUSCTL_NETWORK_GET_CHARACTERISTICS = 83886085,
    CLUSCTL_NETWORK_GET_FLAGS = 83886089,
    CLUSCTL_NETWORK_GET_NAME = 83886121,
    CLUSCTL_NETWORK_GET_ID = 83886137,
    CLUSCTL_NETWORK_ENUM_COMMON_PROPERTIES = 83886161,
    CLUSCTL_NETWORK_GET_RO_COMMON_PROPERTIES = 83886165,
    CLUSCTL_NETWORK_GET_COMMON_PROPERTIES = 83886169,
    CLUSCTL_NETWORK_SET_COMMON_PROPERTIES = 88080478,
    CLUSCTL_NETWORK_VALIDATE_COMMON_PROPERTIES = 83886177,
    CLUSCTL_NETWORK_ENUM_PRIVATE_PROPERTIES = 83886201,
    CLUSCTL_NETWORK_GET_RO_PRIVATE_PROPERTIES = 83886205,
    CLUSCTL_NETWORK_GET_PRIVATE_PROPERTIES = 83886209,
    CLUSCTL_NETWORK_SET_PRIVATE_PROPERTIES = 88080518,
    CLUSCTL_NETWORK_VALIDATE_PRIVATE_PROPERTIES = 83886217,
    CLUSCTL_NETWORK_GET_COMMON_PROPERTY_FMTS = 83886181,
    CLUSCTL_NETWORK_GET_PRIVATE_PROPERTY_FMTS = 83886221,
} CLUSCTL_NETWORK_CODES;

typedef enum {
    CLUSCTL_NETINTERFACE_UNKNOWN = 100663296,
    CLUSCTL_NETINTERFACE_GET_CHARACTERISTICS = 100663301,
    CLUSCTL_NETINTERFACE_GET_FLAGS = 100663305,
    CLUSCTL_NETINTERFACE_GET_NAME = 100663337,
    CLUSCTL_NETINTERFACE_GET_ID = 100663353,
    CLUSCTL_NETINTERFACE_GET_NODE = 100663345,
    CLUSCTL_NETINTERFACE_GET_NETWORK = 100663349,
    CLUSCTL_NETINTERFACE_ENUM_COMMON_PROPERTIES = 100663377,
    CLUSCTL_NETINTERFACE_GET_RO_COMMON_PROPERTIES = 100663381,
    CLUSCTL_NETINTERFACE_GET_COMMON_PROPERTIES = 100663385,
    CLUSCTL_NETINTERFACE_SET_COMMON_PROPERTIES = 104857694,
    CLUSCTL_NETINTERFACE_VALIDATE_COMMON_PROPERTIES = 100663393,
    CLUSCTL_NETINTERFACE_ENUM_PRIVATE_PROPERTIES = 100663417,
    CLUSCTL_NETINTERFACE_GET_RO_PRIVATE_PROPERTIES = 100663421,
    CLUSCTL_NETINTERFACE_GET_PRIVATE_PROPERTIES = 100663425,
    CLUSCTL_NETINTERFACE_SET_PRIVATE_PROPERTIES = 104857734,
    CLUSCTL_NETINTERFACE_VALIDATE_PRIVATE_PROPERTIES = 100663433,
    CLUSCTL_NETINTERFACE_GET_COMMON_PROPERTY_FMTS = 100663397,
    CLUSCTL_NETINTERFACE_GET_PRIVATE_PROPERTY_FMTS = 100663437,
} CLUSCTL_NETINTERFACE_CODES;

typedef enum {
    CLUSCTL_CLUSTER_UNKNOWN = 117440512,
    CLUSCTL_CLUSTER_GET_FQDN = 117440573,
    CLUSCTL_CLUSTER_SET_STORAGE_CONFIGURATION = 121635554,
    CLUSCTL_CLUSTER_GET_STORAGE_CONFIGURATION = 117441253,
    CLUSCTL_CLUSTER_GET_STORAGE_CONFIG_ATTRIBUTES = 117441257,
    CLUSCTL_CLUSTER_ENUM_COMMON_PROPERTIES = 117440593,
    CLUSCTL_CLUSTER_GET_RO_COMMON_PROPERTIES = 117440597,
    CLUSCTL_CLUSTER_GET_COMMON_PROPERTIES = 117440601,
    CLUSCTL_CLUSTER_SET_COMMON_PROPERTIES = 121634910,
    CLUSCTL_CLUSTER_VALIDATE_COMMON_PROPERTIES = 117440609,
    CLUSCTL_CLUSTER_ENUM_PRIVATE_PROPERTIES = 117440633,
    CLUSCTL_CLUSTER_GET_RO_PRIVATE_PROPERTIES = 117440637,
    CLUSCTL_CLUSTER_GET_PRIVATE_PROPERTIES = 117440641,
    CLUSCTL_CLUSTER_SET_PRIVATE_PROPERTIES = 121634950,
    CLUSCTL_CLUSTER_VALIDATE_PRIVATE_PROPERTIES = 117440649,
    CLUSCTL_CLUSTER_GET_COMMON_PROPERTY_FMTS = 117440613,
    CLUSCTL_CLUSTER_GET_PRIVATE_PROPERTY_FMTS = 117440653,
    CLUSCTL_CLUSTER_CHECK_VOTER_EVICT = 117440581,
    CLUSCTL_CLUSTER_CHECK_VOTER_DOWN = 117440585,
    CLUSCTL_CLUSTER_SHUTDOWN = 117440589,
    CLUSCTL_CLUSTER_BATCH_BLOCK_KEY = 117441086,
    CLUSCTL_CLUSTER_BATCH_UNBLOCK_KEY = 117441089,
    CLUSCTL_CLUSTER_GET_SHARED_VOLUME_ID = 117441169,
    CLUSCTL_CLUSTER_GET_CLUSDB_TIMESTAMP = 117441193,
    CLUSCTL_CLUSTER_GET_GUM_LOCK_OWNER = 117441209,
    CLUSCTL_CLUSTER_REMOVE_NODE = 121635566,
    CLUSCTL_CLUSTER_SET_ACCOUNT_ACCESS = 121635058,
    CLUSCTL_CLUSTER_CLEAR_NODE_CONNECTION_INFO = 121635590,
    CLUSCTL_CLUSTER_SET_DNS_DOMAIN = 121635594,
    CLUSCTL_CLUSTER_SET_CLUSTER_S2D_ENABLED = 121646434,
    CLUSCTL_CLUSTER_SET_CLUSTER_S2D_CACHE_METADATA_RESERVE_BYTES = 121646446,
    CLUSCTL_CLUSTER_STORAGE_RENAME_SHARED_VOLUME = 117452246,
    CLUSCTL_CLUSTER_STORAGE_RENAME_SHARED_VOLUME_GUID = 117452250,
    CLUSCTL_CLUSTER_RELOAD_AUTOLOGGER_CONFIG = 117452242,
    CLUSCTL_CLUSTER_ENUM_AFFINITY_RULE_NAMES = 117452253,
} CLUSCTL_CLUSTER_CODES;

typedef enum {
    CLUSCTL_GROUPSET_GET_COMMON_PROPERTIES = 134217817,
    CLUSCTL_GROUPSET_GET_RO_COMMON_PROPERTIES = 134217813,
    CLUSCTL_GROUPSET_SET_COMMON_PROPERTIES = 138412126,
    CLUSCTL_GROUPSET_GET_GROUPS = 134229361,
    CLUSCTL_GROUPSET_GET_PROVIDER_GROUPS = 134229365,
    CLUSCTL_GROUPSET_GET_PROVIDER_GROUPSETS = 134229369,
    CLUSCTL_GROUP_GET_PROVIDER_GROUPS = 134229373,
    CLUSCTL_GROUP_GET_PROVIDER_GROUPSETS = 134229377,
    CLUSCTL_GROUPSET_GET_ID = 134217785,
} CLUSCTL_GROUPSET_CODES;

typedef enum {
    CLUSCTL_AFFINITYRULE_GET_COMMON_PROPERTIES = 150995033,
    CLUSCTL_AFFINITYRULE_GET_RO_COMMON_PROPERTIES = 150995029,
    CLUSCTL_AFFINITYRULE_SET_COMMON_PROPERTIES = 155189342,
    CLUSCTL_AFFINITYRULE_GET_ID = 150995001,
    CLUSCTL_AFFINITYRULE_GET_GROUPNAMES = 151006577,
} CLUSCTL_AFFINITYRULE_CODES;

typedef enum {
    CLUS_RESCLASS_UNKNOWN = 0,
    CLUS_RESCLASS_STORAGE = 1,
    CLUS_RESCLASS_NETWORK = 2,
    CLUS_RESCLASS_USER = 32768,
} CLUSTER_RESOURCE_CLASS;

typedef enum {
    CLUS_RESSUBCLASS_SHARED = -2147483648,
} CLUS_RESSUBCLASS;

typedef enum {
    CLUS_RESSUBCLASS_STORAGE_SHARED_BUS = -2147483648,
    CLUS_RESSUBCLASS_STORAGE_DISK = 1073741824,
    CLUS_RESSUBCLASS_STORAGE_REPLICATION = 268435456,
} CLUS_RESSUBCLASS_STORAGE;

typedef enum {
    CLUS_RESSUBCLASS_NETWORK_INTERNET_PROTOCOL = -2147483648,
} CLUS_RESSUBCLASS_NETWORK;

typedef enum {
    CLUS_CHAR_UNKNOWN = 0,
    CLUS_CHAR_QUORUM = 1,
    CLUS_CHAR_DELETE_REQUIRES_ALL_NODES = 2,
    CLUS_CHAR_LOCAL_QUORUM = 4,
    CLUS_CHAR_LOCAL_QUORUM_DEBUG = 8,
    CLUS_CHAR_REQUIRES_STATE_CHANGE_REASON = 16,
    CLUS_CHAR_BROADCAST_DELETE = 32,
    CLUS_CHAR_SINGLE_CLUSTER_INSTANCE = 64,
    CLUS_CHAR_SINGLE_GROUP_INSTANCE = 128,
    CLUS_CHAR_COEXIST_IN_SHARED_VOLUME_GROUP = 256,
    CLUS_CHAR_PLACEMENT_DATA = 512,
    CLUS_CHAR_MONITOR_DETACH = 1024,
    CLUS_CHAR_MONITOR_REATTACH = 2048,
    CLUS_CHAR_OPERATION_CONTEXT = 4096,
    CLUS_CHAR_CLONES = 8192,
    CLUS_CHAR_NOT_PREEMPTABLE = 16384,
    CLUS_CHAR_NOTIFY_NEW_OWNER = 32768,
    CLUS_CHAR_SUPPORTS_UNMONITORED_STATE = 65536,
    CLUS_CHAR_INFRASTRUCTURE = 131072,
    CLUS_CHAR_VETO_DRAIN = 262144,
} CLUS_CHARACTERISTICS;

typedef enum {
    CLUS_FLAG_CORE = 1,
} CLUS_FLAGS;

typedef int CLUSPROP_SYNTAX;

typedef int CLUSPROP_VALUE;

typedef int CLUSPROP_BINARY;

typedef int CLUSPROP_WORD;

typedef int CLUSPROP_DWORD;

typedef int CLUSPROP_LONG;

typedef int CLUSPROP_SZ;

typedef int CLUSPROP_ULARGE_INTEGER;

typedef int CLUSPROP_LARGE_INTEGER;

typedef int CLUSPROP_SECURITY_DESCRIPTOR;

typedef int CLUSPROP_FILETIME;

typedef int CLUS_RESOURCE_CLASS_INFO;

typedef int CLUSPROP_RESOURCE_CLASS;

typedef int CLUSPROP_RESOURCE_CLASS_INFO;

typedef int CLUSPROP_REQUIRED_DEPENDENCY;

typedef enum {
    CLUSPROP_PIFLAG_STICKY = 1,
    CLUSPROP_PIFLAG_REMOVABLE = 2,
    CLUSPROP_PIFLAG_USABLE = 4,
    CLUSPROP_PIFLAG_DEFAULT_QUORUM = 8,
    CLUSPROP_PIFLAG_USABLE_FOR_CSV = 16,
    CLUSPROP_PIFLAG_ENCRYPTION_ENABLED = 32,
    CLUSPROP_PIFLAG_RAW = 64,
    CLUSPROP_PIFLAG_UNKNOWN = -2147483648,
} CLUSPROP_PIFLAGS;

typedef int CLUS_FORCE_QUORUM_INFO;

typedef int CLUS_PARTITION_INFO;

typedef int CLUS_PARTITION_INFO_EX;

typedef int CLUS_PARTITION_INFO_EX2;

typedef enum {
    VolumeStateNoFaults = 0,
    VolumeStateNoDirectIO = 1,
    VolumeStateNoAccess = 2,
    VolumeStateInMaintenance = 4,
    VolumeStateDismounted = 8,
} CLUSTER_CSV_VOLUME_FAULT_STATE;

typedef enum {
    VolumeBackupNone = 0,
    VolumeBackupInProgress = 1,
} CLUSTER_SHARED_VOLUME_BACKUP_STATE;

typedef int CLUS_CSV_VOLUME_INFO;

typedef int CLUS_CSV_VOLUME_NAME;

typedef enum {
    SharedVolumeStateUnavailable = 0,
    SharedVolumeStatePaused = 1,
    SharedVolumeStateActive = 2,
    SharedVolumeStateActiveRedirected = 3,
    SharedVolumeStateActiveVolumeRedirected = 4,
} CLUSTER_SHARED_VOLUME_STATE;

typedef int CLUSTER_SHARED_VOLUME_STATE_INFO;

typedef int CLUSTER_SHARED_VOLUME_STATE_INFO_EX;

typedef enum {
    ClusterSharedVolumeRenameInputTypeNone = 0,
    ClusterSharedVolumeRenameInputTypeVolumeOffset = 1,
    ClusterSharedVolumeRenameInputTypeVolumeId = 2,
    ClusterSharedVolumeRenameInputTypeVolumeName = 3,
    ClusterSharedVolumeRenameInputTypeVolumeGuid = 4,
} CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE;

typedef int CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME;

typedef int CLUSTER_SHARED_VOLUME_RENAME_INPUT_NAME;

typedef int CLUSTER_SHARED_VOLUME_RENAME_INPUT_GUID_NAME;

typedef int CLUSTER_SHARED_VOLUME_RENAME_INPUT;

typedef int CLUSTER_SHARED_VOLUME_RENAME_GUID_INPUT;

typedef int CLUS_CHKDSK_INFO;

typedef int CLUS_DISK_NUMBER_INFO;

typedef int CLUS_SHARED_VOLUME_BACKUP_MODE;

typedef int CLUSPROP_PARTITION_INFO;

typedef int CLUSPROP_PARTITION_INFO_EX;

typedef int CLUSPROP_PARTITION_INFO_EX2;

typedef int CLUS_FTSET_INFO;

typedef int CLUSPROP_FTSET_INFO;

typedef int CLUS_SCSI_ADDRESS;

typedef int CLUSPROP_SCSI_ADDRESS;

typedef int CLUS_NETNAME_VS_TOKEN_INFO;

typedef int CLUS_NETNAME_PWD_INFO;

typedef int CLUS_NETNAME_PWD_INFOEX;

typedef int CLUS_DNN_LEADER_STATUS;

typedef int CLUS_DNN_SODAFS_CLONE_STATUS;

typedef int CLUS_NETNAME_IP_INFO_ENTRY;

typedef int CLUS_NETNAME_IP_INFO_FOR_MULTICHANNEL;

typedef int CLUS_MAINTENANCE_MODE_INFO;

typedef int CLUS_CSV_MAINTENANCE_MODE_INFO;

typedef enum {
    MaintenanceModeTypeDisableIsAliveCheck = 1,
    MaintenanceModeTypeOfflineResource = 2,
    MaintenanceModeTypeUnclusterResource = 3,
} MAINTENANCE_MODE_TYPE_ENUM;

typedef int CLUS_MAINTENANCE_MODE_INFOEX;

typedef int CLUS_SET_MAINTENANCE_MODE_INPUT;

typedef int CLUS_STORAGE_SET_DRIVELETTER;

typedef int CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS;

typedef int CLUS_STORAGE_REMAP_DRIVELETTER;

typedef int CLUS_PROVIDER_STATE_CHANGE_INFO;

typedef int CLUS_CREATE_INFRASTRUCTURE_FILESERVER_INPUT;

typedef int CLUS_CREATE_INFRASTRUCTURE_FILESERVER_OUTPUT;

typedef int CLUSPROP_LIST;

typedef enum {
    CLUSPROP_IPADDR_ENABLENETBIOS_DISABLED = 0,
    CLUSPROP_IPADDR_ENABLENETBIOS_ENABLED = 1,
    CLUSPROP_IPADDR_ENABLENETBIOS_TRACK_NIC = 2,
} CLUSPROP_IPADDR_ENABLENETBIOS;

typedef enum {
    FILESHARE_CHANGE_NONE = 0,
    FILESHARE_CHANGE_ADD = 1,
    FILESHARE_CHANGE_DEL = 2,
    FILESHARE_CHANGE_MODIFY = 3,
} FILESHARE_CHANGE_ENUM;

typedef int FILESHARE_CHANGE;

typedef int FILESHARE_CHANGE_LIST;

typedef int CLUSCTL_GROUP_GET_LAST_MOVE_TIME_OUTPUT;

typedef int CLUSPROP_BUFFER_HELPER;

typedef enum {
    CLUSTER_RESOURCE_ENUM_DEPENDS = 1,
    CLUSTER_RESOURCE_ENUM_PROVIDES = 2,
    CLUSTER_RESOURCE_ENUM_NODES = 4,
    CLUSTER_RESOURCE_ENUM_ALL = 7,
} CLUSTER_RESOURCE_ENUM;

typedef enum {
    CLUSTER_RESOURCE_TYPE_ENUM_NODES = 1,
    CLUSTER_RESOURCE_TYPE_ENUM_RESOURCES = 2,
    CLUSTER_RESOURCE_TYPE_ENUM_ALL = 3,
} CLUSTER_RESOURCE_TYPE_ENUM;

typedef int PCLUSAPI_CLUSTER_RESOURCE_OPEN_ENUM;

typedef int PCLUSAPI_CLUSTER_RESOURCE_GET_ENUM_COUNT;

typedef int PCLUSAPI_CLUSTER_RESOURCE_ENUM;

typedef int PCLUSAPI_CLUSTER_RESOURCE_CLOSE_ENUM;

typedef int PCLUSAPI_CREATE_CLUSTER_RESOURCE_TYPE;

typedef int PCLUSAPI_DELETE_CLUSTER_RESOURCE_TYPE;

typedef int PCLUSAPI_CLUSTER_RESOURCE_TYPE_OPEN_ENUM;

typedef int PCLUSAPI_CLUSTER_RESOURCE_TYPE_GET_ENUM_COUNT;

typedef int PCLUSAPI_CLUSTER_RESOURCE_TYPE_ENUM;

typedef int PCLUSAPI_CLUSTER_RESOURCE_TYPE_CLOSE_ENUM;

typedef enum {
    CLUSTER_NETWORK_ENUM_NETINTERFACES = 1,
    CLUSTER_NETWORK_ENUM_ALL = 1,
} CLUSTER_NETWORK_ENUM;

typedef enum {
    ClusterNetworkStateUnknown = -1,
    ClusterNetworkUnavailable = 0,
    ClusterNetworkDown = 1,
    ClusterNetworkPartitioned = 2,
    ClusterNetworkUp = 3,
} CLUSTER_NETWORK_STATE;

typedef enum {
    ClusterNetworkRoleNone = 0,
    ClusterNetworkRoleInternalUse = 1,
    ClusterNetworkRoleClientAccess = 2,
    ClusterNetworkRoleInternalAndClient = 3,
} CLUSTER_NETWORK_ROLE;

typedef int PCLUSAPI_OPEN_CLUSTER_NETWORK;

typedef int PCLUSAPI_OPEN_CLUSTER_NETWORK_EX;

typedef int PCLUSAPI_CLOSE_CLUSTER_NETWORK;

typedef int PCLUSAPI_GET_CLUSTER_FROM_NETWORK;

typedef int PCLUSAPI_CLUSTER_NETWORK_OPEN_ENUM;

typedef int PCLUSAPI_CLUSTER_NETWORK_GET_ENUM_COUNT;

typedef int PCLUSAPI_CLUSTER_NETWORK_ENUM;

typedef int PCLUSAPI_CLUSTER_NETWORK_CLOSE_ENUM;

typedef int PCLUSAPI_GET_CLUSTER_NETWORK_STATE;

typedef int PCLUSAPI_SET_CLUSTER_NETWORK_NAME;

typedef int PCLUSAPI_GET_CLUSTER_NETWORK_ID;

typedef int PCLUSAPI_CLUSTER_NETWORK_CONTROL;

typedef enum {
    ClusterNetInterfaceStateUnknown = -1,
    ClusterNetInterfaceUnavailable = 0,
    ClusterNetInterfaceFailed = 1,
    ClusterNetInterfaceUnreachable = 2,
    ClusterNetInterfaceUp = 3,
} CLUSTER_NETINTERFACE_STATE;

typedef int PCLUSAPI_OPEN_CLUSTER_NET_INTERFACE;

typedef int PCLUSAPI_OPEN_CLUSTER_NETINTERFACE_EX;

typedef int PCLUSAPI_GET_CLUSTER_NET_INTERFACE;

typedef int PCLUSAPI_CLOSE_CLUSTER_NET_INTERFACE;

typedef int PCLUSAPI_GET_CLUSTER_FROM_NET_INTERFACE;

typedef int PCLUSAPI_GET_CLUSTER_NET_INTERFACE_STATE;

typedef int PCLUSAPI_CLUSTER_NET_INTERFACE_CONTROL;

typedef int PCLUSAPI_GET_CLUSTER_KEY;

typedef int PCLUSAPI_GET_CLUSTER_GROUP_KEY;

typedef int PCLUSAPI_GET_CLUSTER_RESOURCE_KEY;

typedef int PCLUSAPI_GET_CLUSTER_NODE_KEY;

typedef int PCLUSAPI_GET_CLUSTER_NETWORK_KEY;

typedef int PCLUSAPI_GET_CLUSTER_NET_INTERFACE_KEY;

typedef int PCLUSAPI_CLUSTER_REG_CREATE_KEY;

typedef int PCLUSAPI_CLUSTER_REG_OPEN_KEY;

typedef int PCLUSAPI_CLUSTER_REG_DELETE_KEY;

typedef int PCLUSAPI_CLUSTER_REG_CLOSE_KEY;

typedef int PCLUSAPI_CLUSTER_REG_ENUM_KEY;

typedef int PCLUSAPI_CLUSTER_REG_SET_VALUE;

typedef int PCLUSAPI_CLUSTER_REG_DELETE_VALUE;

typedef int PCLUSAPI_CLUSTER_REG_QUERY_VALUE;

typedef int PCLUSAPI_CLUSTER_REG_ENUM_VALUE;

typedef int PCLUSAPI_CLUSTER_REG_QUERY_INFO_KEY;

typedef int PCLUSAPI_CLUSTER_REG_GET_KEY_SECURITY;

typedef int PCLUSAPI_CLUSTER_REG_SET_KEY_SECURITY;

typedef int PCLUSAPI_CLUSTER_REG_SYNC_DATABASE;

typedef int PCLUSAPI_CLUSTER_REG_CREATE_BATCH;

typedef int PCLUSTER_REG_BATCH_ADD_COMMAND;

typedef int PCLUSTER_REG_CLOSE_BATCH;

typedef int PCLUSTER_REG_BATCH_READ_COMMAND;

typedef int PCLUSTER_REG_BATCH_CLOSE_NOTIFICATION;

typedef int PCLUSTER_REG_CREATE_BATCH_NOTIFY_PORT;

typedef int PCLUSTER_REG_CLOSE_BATCH_NOTIFY_PORT;

typedef int PCLUSTER_REG_GET_BATCH_NOTIFICATION;

typedef int PCLUSTER_REG_CREATE_READ_BATCH;

typedef int PCLUSTER_REG_READ_BATCH_ADD_COMMAND;

typedef int PCLUSTER_REG_CLOSE_READ_BATCH;

typedef int PCLUSTER_REG_CLOSE_READ_BATCH_EX;

typedef int PCLUSTER_REG_READ_BATCH_REPLY_NEXT_COMMAND;

typedef int PCLUSTER_REG_CLOSE_READ_BATCH_REPLY;

typedef int PCLUSTER_SET_ACCOUNT_ACCESS;

typedef enum {
    ClusterSetupPhaseInitialize = 1,
    ClusterSetupPhaseValidateNodeState = 100,
    ClusterSetupPhaseValidateNetft = 102,
    ClusterSetupPhaseValidateClusDisk = 103,
    ClusterSetupPhaseConfigureClusSvc = 104,
    ClusterSetupPhaseStartingClusSvc = 105,
    ClusterSetupPhaseQueryClusterNameAccount = 106,
    ClusterSetupPhaseValidateClusterNameAccount = 107,
    ClusterSetupPhaseCreateClusterAccount = 108,
    ClusterSetupPhaseConfigureClusterAccount = 109,
    ClusterSetupPhaseFormingCluster = 200,
    ClusterSetupPhaseAddClusterProperties = 201,
    ClusterSetupPhaseCreateResourceTypes = 202,
    ClusterSetupPhaseCreateGroups = 203,
    ClusterSetupPhaseCreateIPAddressResources = 204,
    ClusterSetupPhaseCreateNetworkName = 205,
    ClusterSetupPhaseClusterGroupOnline = 206,
    ClusterSetupPhaseGettingCurrentMembership = 300,
    ClusterSetupPhaseAddNodeToCluster = 301,
    ClusterSetupPhaseNodeUp = 302,
    ClusterSetupPhaseMoveGroup = 400,
    ClusterSetupPhaseDeleteGroup = 401,
    ClusterSetupPhaseCleanupCOs = 402,
    ClusterSetupPhaseOfflineGroup = 403,
    ClusterSetupPhaseEvictNode = 404,
    ClusterSetupPhaseCleanupNode = 405,
    ClusterSetupPhaseCoreGroupCleanup = 406,
    ClusterSetupPhaseFailureCleanup = 999,
} CLUSTER_SETUP_PHASE;

typedef enum {
    ClusterSetupPhaseStart = 1,
    ClusterSetupPhaseContinue = 2,
    ClusterSetupPhaseEnd = 3,
    ClusterSetupPhaseReport = 4,
} CLUSTER_SETUP_PHASE_TYPE;

typedef enum {
    ClusterSetupPhaseInformational = 1,
    ClusterSetupPhaseWarning = 2,
    ClusterSetupPhaseFatal = 3,
} CLUSTER_SETUP_PHASE_SEVERITY;

typedef int PCLUSTER_SETUP_PROGRESS_CALLBACK;

typedef int PCLUSAPI_CREATE_CLUSTER;

typedef int PCLUSAPI_CREATE_CLUSTER_CNOLESS;

typedef int PCLUSAPI_CREATE_CLUSTER_NAME_ACCOUNT;

typedef int PCLUSAPI_REMOVE_CLUSTER_NAME_ACCOUNT;

typedef int PCLUSAPI_ADD_CLUSTER_NODE;

typedef int PCLUSAPI_DESTROY_CLUSTER;

typedef enum {
    PLACEMENT_OPTIONS_MIN_VALUE = 0,
    PLACEMENT_OPTIONS_DEFAULT_PLACEMENT_OPTIONS = 0,
    PLACEMENT_OPTIONS_DISABLE_CSV_VM_DEPENDENCY = 1,
    PLACEMENT_OPTIONS_CONSIDER_OFFLINE_VMS = 2,
    PLACEMENT_OPTIONS_DONT_USE_MEMORY = 4,
    PLACEMENT_OPTIONS_DONT_USE_CPU = 8,
    PLACEMENT_OPTIONS_DONT_USE_LOCAL_TEMP_DISK = 16,
    PLACEMENT_OPTIONS_DONT_RESUME_VMS_WITH_EXISTING_TEMP_DISK = 32,
    PLACEMENT_OPTIONS_SAVE_VMS_WITH_LOCAL_DISK_ON_DRAIN_OVERWRITE = 64,
    PLACEMENT_OPTIONS_DONT_RESUME_AVAILABILTY_SET_VMS_WITH_EXISTING_TEMP_DISK = 128,
    PLACEMENT_OPTIONS_SAVE_AVAILABILTY_SET_VMS_WITH_LOCAL_DISK_ON_DRAIN_OVERWRITE = 256,
    PLACEMENT_OPTIONS_AVAILABILITY_SET_DOMAIN_AFFINITY = 512,
    PLACEMENT_OPTIONS_ALL = 1023,
} PLACEMENT_OPTIONS;

typedef enum {
    GRP_PLACEMENT_OPTIONS_MIN_VALUE = 0,
    GRP_PLACEMENT_OPTIONS_DEFAULT = 0,
    GRP_PLACEMENT_OPTIONS_DISABLE_AUTOBALANCING = 1,
    GRP_PLACEMENT_OPTIONS_ALL = 1,
} GRP_PLACEMENT_OPTIONS;

typedef int SR_RESOURCE_TYPE_REPLICATED_PARTITION_INFO;

typedef int SR_RESOURCE_TYPE_REPLICATED_PARTITION_ARRAY;

typedef enum {
    SrReplicatedDiskTypeNone = 0,
    SrReplicatedDiskTypeSource = 1,
    SrReplicatedDiskTypeLogSource = 2,
    SrReplicatedDiskTypeDestination = 3,
    SrReplicatedDiskTypeLogDestination = 4,
    SrReplicatedDiskTypeNotInParthership = 5,
    SrReplicatedDiskTypeLogNotInParthership = 6,
    SrReplicatedDiskTypeOther = 7,
} SR_REPLICATED_DISK_TYPE;

typedef enum {
    SrDiskReplicationEligibleNone = 0,
    SrDiskReplicationEligibleYes = 1,
    SrDiskReplicationEligibleOffline = 2,
    SrDiskReplicationEligibleNotGpt = 3,
    SrDiskReplicationEligiblePartitionLayoutMismatch = 4,
    SrDiskReplicationEligibleInsufficientFreeSpace = 5,
    SrDiskReplicationEligibleNotInSameSite = 6,
    SrDiskReplicationEligibleInSameSite = 7,
    SrDiskReplicationEligibleFileSystemNotSupported = 8,
    SrDiskReplicationEligibleAlreadyInReplication = 9,
    SrDiskReplicationEligibleSameAsSpecifiedDisk = 10,
    SrDiskReplicationEligibleOther = 9999,
} SR_DISK_REPLICATION_ELIGIBLE;

typedef int SR_RESOURCE_TYPE_QUERY_ELIGIBLE_LOGDISKS;

typedef int SR_RESOURCE_TYPE_QUERY_ELIGIBLE_TARGET_DATADISKS;

typedef int SR_RESOURCE_TYPE_QUERY_ELIGIBLE_SOURCE_DATADISKS;

typedef int SR_RESOURCE_TYPE_DISK_INFO;

typedef int SR_RESOURCE_TYPE_ELIGIBLE_DISKS_RESULT;

typedef int SR_RESOURCE_TYPE_REPLICATED_DISK;

typedef int SR_RESOURCE_TYPE_REPLICATED_DISKS_RESULT;

typedef int CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_INPUT;

typedef int RESOURCE_STATUS;

typedef int NodeUtilizationInfoElement;

typedef int ResourceUtilizationInfoElement;

typedef enum {
    VmResdllContextTurnOff = 0,
    VmResdllContextSave = 1,
    VmResdllContextShutdown = 2,
    VmResdllContextShutdownForce = 3,
    VmResdllContextLiveMigration = 4,
} VM_RESDLL_CONTEXT;

typedef enum {
    ResdllContextOperationTypeFailback = 0,
    ResdllContextOperationTypeDrain = 1,
    ResdllContextOperationTypeDrainFailure = 2,
    ResdllContextOperationTypeEmbeddedFailure = 3,
    ResdllContextOperationTypePreemption = 4,
    ResdllContextOperationTypeNetworkDisconnect = 5,
    ResdllContextOperationTypeNetworkDisconnectMoveRetry = 6,
} RESDLL_CONTEXT_OPERATION_TYPE;

typedef int GET_OPERATION_CONTEXT_PARAMS;

typedef int RESOURCE_STATUS_EX;

typedef int PSET_RESOURCE_STATUS_ROUTINE_EX;

typedef int PSET_RESOURCE_STATUS_ROUTINE;

typedef int PQUORUM_RESOURCE_LOST;

typedef enum {
    LOG_INFORMATION = 0,
    LOG_WARNING = 1,
    LOG_ERROR = 2,
    LOG_SEVERE = 3,
} LOG_LEVEL;

typedef int PLOG_EVENT_ROUTINE;

typedef int POPEN_ROUTINE;

typedef int PCLOSE_ROUTINE;

typedef int PONLINE_ROUTINE;

typedef int POFFLINE_ROUTINE;

typedef int PTERMINATE_ROUTINE;

typedef int PIS_ALIVE_ROUTINE;

typedef int PLOOKS_ALIVE_ROUTINE;

typedef int PARBITRATE_ROUTINE;

typedef int PRELEASE_ROUTINE;

typedef int PRESOURCE_CONTROL_ROUTINE;

typedef int PRESOURCE_TYPE_CONTROL_ROUTINE;

typedef int POPEN_V2_ROUTINE;

typedef int PONLINE_V2_ROUTINE;

typedef int POFFLINE_V2_ROUTINE;

typedef int PCANCEL_ROUTINE;

typedef int PBEGIN_RESCALL_ROUTINE;

typedef int PBEGIN_RESTYPECALL_ROUTINE;

typedef enum {
    ResourceExitStateContinue = 0,
    ResourceExitStateTerminate = 1,
    ResourceExitStateMax = 2,
} RESOURCE_EXIT_STATE;

typedef int PBEGIN_RESCALL_AS_USER_ROUTINE;

typedef int PBEGIN_RESTYPECALL_AS_USER_ROUTINE;

typedef int CLRES_V1_FUNCTIONS;

typedef int CLRES_V2_FUNCTIONS;

typedef int CLRES_V3_FUNCTIONS;

typedef int CLRES_V4_FUNCTIONS;

typedef int CLRES_FUNCTION_TABLE;

typedef int RESUTIL_LARGEINT_DATA;

typedef int RESUTIL_ULARGEINT_DATA;

typedef int RESUTIL_FILETIME_DATA;

typedef int RESUTIL_PROPERTY_ITEM;

typedef int PSTARTUP_ROUTINE;

typedef enum {
    FAILURE_TYPE_GENERAL = 0,
    FAILURE_TYPE_EMBEDDED = 1,
    FAILURE_TYPE_NETWORK_LOSS = 2,
} FAILURE_TYPE;

typedef enum {
    ClusterResourceApplicationStateUnknown = 1,
    ClusterResourceApplicationOSHeartBeat = 2,
    ClusterResourceApplicationReady = 3,
} CLUSTER_RESOURCE_APPLICATION_STATE;

typedef int PSET_RESOURCE_LOCKED_MODE_ROUTINE;

typedef int PSIGNAL_FAILURE_ROUTINE;

typedef int PSET_RESOURCE_INMEMORY_NODELOCAL_PROPERTIES_ROUTINE;

typedef int PEND_CONTROL_CALL;

typedef int PEND_TYPE_CONTROL_CALL;

typedef int PEXTEND_RES_CONTROL_CALL;

typedef int PEXTEND_RES_TYPE_CONTROL_CALL;

typedef int PRAISE_RES_TYPE_NOTIFICATION;

typedef int PCHANGE_RESOURCE_PROCESS_FOR_DUMPS;

typedef int PCHANGE_RES_TYPE_PROCESS_FOR_DUMPS;

typedef int PSET_INTERNAL_STATE;

typedef int PSET_RESOURCE_LOCKED_MODE_EX_ROUTINE;

typedef int CLRES_CALLBACK_FUNCTION_TABLE;

typedef int PSTARTUP_EX_ROUTINE;

typedef enum {
    RmonInitializing = 0,
    RmonIdle = 1,
    RmonStartingResource = 2,
    RmonInitializingResource = 3,
    RmonOnlineResource = 4,
    RmonOfflineResource = 5,
    RmonShutdownResource = 6,
    RmonDeletingResource = 7,
    RmonIsAlivePoll = 8,
    RmonLooksAlivePoll = 9,
    RmonArbitrateResource = 10,
    RmonReleaseResource = 11,
    RmonResourceControl = 12,
    RmonResourceTypeControl = 13,
    RmonTerminateResource = 14,
    RmonDeadlocked = 15,
} RESOURCE_MONITOR_STATE;

typedef int MONITOR_STATE;

typedef int POST_UPGRADE_VERSION_INFO;

typedef int CLUSTER_HEALTH_FAULT;

typedef int CLUSTER_HEALTH_FAULT_ARRAY;

typedef int PRESUTIL_START_RESOURCE_SERVICE;

typedef int PRESUTIL_VERIFY_RESOURCE_SERVICE;

typedef int PRESUTIL_STOP_RESOURCE_SERVICE;

typedef int PRESUTIL_VERIFY_SERVICE;

typedef int PRESUTIL_STOP_SERVICE;

typedef int PRESUTIL_CREATE_DIRECTORY_TREE;

typedef int PRESUTIL_IS_PATH_VALID;

typedef int PRESUTIL_ENUM_PROPERTIES;

typedef int PRESUTIL_ENUM_PRIVATE_PROPERTIES;

typedef int PRESUTIL_GET_PROPERTIES;

typedef int PRESUTIL_GET_ALL_PROPERTIES;

typedef int PRESUTIL_GET_PRIVATE_PROPERTIES;

typedef int PRESUTIL_GET_PROPERTY_SIZE;

typedef int PRESUTIL_GET_PROPERTY;

typedef int PRESUTIL_VERIFY_PROPERTY_TABLE;

typedef int PRESUTIL_SET_PROPERTY_TABLE;

typedef int PRESUTIL_SET_PROPERTY_TABLE_EX;

typedef int PRESUTIL_SET_PROPERTY_PARAMETER_BLOCK;

typedef int PRESUTIL_SET_PROPERTY_PARAMETER_BLOCK_EX;

typedef int PRESUTIL_SET_UNKNOWN_PROPERTIES;

typedef int PRESUTIL_GET_PROPERTIES_TO_PARAMETER_BLOCK;

typedef int PRESUTIL_PROPERTY_LIST_FROM_PARAMETER_BLOCK;

typedef int PRESUTIL_DUP_PARAMETER_BLOCK;

typedef int PRESUTIL_FREE_PARAMETER_BLOCK;

typedef int PRESUTIL_ADD_UNKNOWN_PROPERTIES;

typedef int PRESUTIL_SET_PRIVATE_PROPERTY_LIST;

typedef int PRESUTIL_VERIFY_PRIVATE_PROPERTY_LIST;

typedef int PRESUTIL_DUP_STRING;

typedef int PRESUTIL_GET_BINARY_VALUE;

typedef int PRESUTIL_GET_SZ_VALUE;

typedef int PRESUTIL_GET_EXPAND_SZ_VALUE;

typedef int PRESUTIL_GET_DWORD_VALUE;

typedef int PRESUTIL_GET_QWORD_VALUE;

typedef int PRESUTIL_SET_BINARY_VALUE;

typedef int PRESUTIL_SET_SZ_VALUE;

typedef int PRESUTIL_SET_EXPAND_SZ_VALUE;

typedef int PRESUTIL_SET_MULTI_SZ_VALUE;

typedef int PRESUTIL_SET_DWORD_VALUE;

typedef int PRESUTIL_SET_QWORD_VALUE;

typedef int PRESUTIL_GET_BINARY_PROPERTY;

typedef int PRESUTIL_GET_SZ_PROPERTY;

typedef int PRESUTIL_GET_MULTI_SZ_PROPERTY;

typedef int PRESUTIL_GET_DWORD_PROPERTY;

typedef int PRESUTIL_GET_LONG_PROPERTY;

typedef int PRESUTIL_GET_FILETIME_PROPERTY;

typedef int PRESUTIL_GET_ENVIRONMENT_WITH_NET_NAME;

typedef int PRESUTIL_FREE_ENVIRONMENT;

typedef int PRESUTIL_EXPAND_ENVIRONMENT_STRINGS;

typedef int PRESUTIL_SET_RESOURCE_SERVICE_ENVIRONMENT;

typedef int PRESUTIL_REMOVE_RESOURCE_SERVICE_ENVIRONMENT;

typedef int PRESUTIL_SET_RESOURCE_SERVICE_START_PARAMETERS;

typedef int PRESUTIL_FIND_SZ_PROPERTY;

typedef int PRESUTIL_FIND_EXPAND_SZ_PROPERTY;

typedef int PRESUTIL_FIND_EXPANDED_SZ_PROPERTY;

typedef int PRESUTIL_FIND_DWORD_PROPERTY;

typedef int PRESUTIL_FIND_BINARY_PROPERTY;

typedef int PRESUTIL_FIND_MULTI_SZ_PROPERTY;

typedef int PRESUTIL_FIND_LONG_PROPERTY;

typedef int PRESUTIL_FIND_ULARGEINTEGER_PROPERTY;

typedef int PRESUTIL_FIND_FILETIME_PROPERTY;

typedef int CLUS_WORKER;

typedef int PWORKER_START_ROUTINE;

typedef int PCLUSAPI_CLUS_WORKER_CREATE;

typedef int PCLUSAPIClusWorkerCheckTerminate;

typedef int PCLUSAPI_CLUS_WORKER_TERMINATE;

typedef int LPRESOURCE_CALLBACK;

typedef int LPRESOURCE_CALLBACK_EX;

typedef int LPGROUP_CALLBACK_EX;

typedef int LPNODE_CALLBACK;

typedef int PRESUTIL_RESOURCES_EQUAL;

typedef int PRESUTIL_RESOURCE_TYPES_EQUAL;

typedef int PRESUTIL_IS_RESOURCE_CLASS_EQUAL;

typedef int PRESUTIL_ENUM_RESOURCES;

typedef int PRESUTIL_ENUM_RESOURCES_EX;

typedef int PRESUTIL_GET_RESOURCE_DEPENDENCY;

typedef int PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_NAME;

typedef int PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_CLASS;

typedef int PRESUTIL_GET_RESOURCE_NAME_DEPENDENCY;

typedef int PRESUTIL_GET_RESOURCE_DEPENDENTIP_ADDRESS_PROPS;

typedef int PRESUTIL_FIND_DEPENDENT_DISK_RESOURCE_DRIVE_LETTER;

typedef int PRESUTIL_TERMINATE_SERVICE_PROCESS_FROM_RES_DLL;

typedef int PRESUTIL_GET_PROPERTY_FORMATS;

typedef int PRESUTIL_GET_CORE_CLUSTER_RESOURCES;

typedef int PRESUTIL_GET_RESOURCE_NAME;

typedef enum {
    ClusterRoleDHCP = 0,
    ClusterRoleDTC = 1,
    ClusterRoleFileServer = 2,
    ClusterRoleGenericApplication = 3,
    ClusterRoleGenericScript = 4,
    ClusterRoleGenericService = 5,
    ClusterRoleISCSINameServer = 6,
    ClusterRoleMSMQ = 7,
    ClusterRoleNFS = 8,
    ClusterRolePrintServer = 9,
    ClusterRoleStandAloneNamespaceServer = 10,
    ClusterRoleVolumeShadowCopyServiceTask = 11,
    ClusterRoleWINS = 12,
    ClusterRoleTaskScheduler = 13,
    ClusterRoleNetworkFileSystem = 14,
    ClusterRoleDFSReplicatedFolder = 15,
    ClusterRoleDistributedFileSystem = 16,
    ClusterRoleDistributedNetworkName = 17,
    ClusterRoleFileShare = 18,
    ClusterRoleFileShareWitness = 19,
    ClusterRoleHardDisk = 20,
    ClusterRoleIPAddress = 21,
    ClusterRoleIPV6Address = 22,
    ClusterRoleIPV6TunnelAddress = 23,
    ClusterRoleISCSITargetServer = 24,
    ClusterRoleNetworkName = 25,
    ClusterRolePhysicalDisk = 26,
    ClusterRoleSODAFileServer = 27,
    ClusterRoleStoragePool = 28,
    ClusterRoleVirtualMachine = 29,
    ClusterRoleVirtualMachineConfiguration = 30,
    ClusterRoleVirtualMachineReplicaBroker = 31,
} CLUSTER_ROLE;

typedef enum {
    ClusterRoleUnknown = -1,
    ClusterRoleClustered = 0,
    ClusterRoleUnclustered = 1,
} CLUSTER_ROLE_STATE;

typedef int PCLUSTER_IS_PATH_ON_SHARED_VOLUME;

typedef int PCLUSTER_GET_VOLUME_PATH_NAME;

typedef int PCLUSTER_GET_VOLUME_NAME_FOR_VOLUME_MOUNT_POINT;

typedef int PCLUSTER_PREPARE_SHARED_VOLUME_FOR_BACKUP;

typedef int PCLUSTER_CLEAR_BACKUP_STATE_FOR_SHARED_VOLUME;

typedef int PRESUTIL_SET_RESOURCE_SERVICE_START_PARAMETERS_EX;

typedef int PRESUTIL_ENUM_RESOURCES_EX2;

typedef int PRESUTIL_GET_RESOURCE_DEPENDENCY_EX;

typedef int PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_NAME_EX;

typedef int PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_CLASS_EX;

typedef int PRESUTIL_GET_RESOURCE_NAME_DEPENDENCY_EX;

typedef int PRESUTIL_GET_CORE_CLUSTER_RESOURCES_EX;

typedef int POPEN_CLUSTER_CRYPT_PROVIDER;

typedef int POPEN_CLUSTER_CRYPT_PROVIDEREX;

typedef int PCLOSE_CLUSTER_CRYPT_PROVIDER;

typedef int PCLUSTER_ENCRYPT;

typedef int PCLUSTER_DECRYPT;

typedef int PFREE_CLUSTER_CRYPT;

typedef int PaxosTagCStruct;

typedef int WitnessTagUpdateHelper;

typedef int WitnessTagHelper;

typedef int PREGISTER_APPINSTANCE;

typedef int PREGISTER_APPINSTANCE_VERSION;

typedef int PQUERY_APPINSTANCE_VERSION;

typedef int PRESET_ALL_APPINSTANCE_VERSIONS;

typedef int SET_APP_INSTANCE_CSV_FLAGS;

typedef enum {
    CLUADMEX_OT_NONE = 0,
    CLUADMEX_OT_CLUSTER = 1,
    CLUADMEX_OT_NODE = 2,
    CLUADMEX_OT_GROUP = 3,
    CLUADMEX_OT_RESOURCE = 4,
    CLUADMEX_OT_RESOURCETYPE = 5,
    CLUADMEX_OT_NETWORK = 6,
    CLUADMEX_OT_NETINTERFACE = 7,
} CLUADMEX_OBJECT_TYPE;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IGetClusterUIInfo;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IGetClusterDataInfo;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IGetClusterObjectInfo;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IGetClusterNodeInfo;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IGetClusterGroupInfo;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IGetClusterResourceInfo;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IGetClusterNetworkInfo;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IGetClusterNetInterfaceInfo;

// TODO: this type is limited to platform 'windowsServer2008'
typedef int IWCPropertySheetCallback;

// TODO: this type is limited to platform 'windowsServer2008'
typedef int IWEExtendPropertySheet;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IWCWizardCallback;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IWEExtendWizard;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IWCContextMenuCallback;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IWEExtendContextMenu;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IWEInvokeCommand;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IWCWizard97Callback;

// TODO: this type is limited to platform 'windowsServer2003'
typedef int IWEExtendWizard97;

typedef int ClusApplication;

typedef int Cluster;

typedef int ClusVersion;

typedef int ClusResType;

typedef int ClusProperty;

typedef int ClusProperties;

typedef int DomainNames;

typedef int ClusNetwork;

typedef int ClusNetInterface;

typedef int ClusNetInterfaces;

typedef int ClusResDependencies;

typedef int ClusResGroupResources;

typedef int ClusResTypeResources;

typedef int ClusResGroupPreferredOwnerNodes;

typedef int ClusResPossibleOwnerNodes;

typedef int ClusNetworks;

typedef int ClusNetworkNetInterfaces;

typedef int ClusNodeNetInterfaces;

typedef int ClusRefObject;

typedef int ClusterNames;

typedef int ClusNode;

typedef int ClusNodes;

typedef int ClusResGroup;

typedef int ClusResGroups;

typedef int ClusResource;

typedef int ClusResources;

typedef int ClusResTypes;

typedef int ClusResTypePossibleOwnerNodes;

typedef int ClusPropertyValue;

typedef int ClusPropertyValues;

typedef int ClusPropertyValueData;

typedef int ClusPartition;

typedef int ClusPartitionEx;

typedef int ClusPartitions;

typedef int ClusDisk;

typedef int ClusDisks;

typedef int ClusScsiAddress;

typedef int ClusRegistryKeys;

typedef int ClusCryptoKeys;

typedef int ClusResDependents;

typedef int ISClusApplication;

typedef int ISDomainNames;

typedef int ISClusterNames;

typedef int ISClusRefObject;

typedef int ISClusVersion;

typedef int ISCluster;

typedef int ISClusNode;

typedef int ISClusNodes;

typedef int ISClusNetwork;

typedef int ISClusNetworks;

typedef int ISClusNetInterface;

typedef int ISClusNetInterfaces;

typedef int ISClusNodeNetInterfaces;

typedef int ISClusNetworkNetInterfaces;

typedef int ISClusResGroup;

typedef int ISClusResGroups;

typedef int ISClusResource;

typedef int ISClusResDependencies;

typedef int ISClusResGroupResources;

typedef int ISClusResTypeResources;

typedef int ISClusResources;

typedef int ISClusResGroupPreferredOwnerNodes;

typedef int ISClusResPossibleOwnerNodes;

typedef int ISClusResTypePossibleOwnerNodes;

typedef int ISClusResType;

typedef int ISClusResTypes;

typedef int ISClusProperty;

typedef int ISClusPropertyValue;

typedef int ISClusPropertyValues;

typedef int ISClusProperties;

typedef int ISClusPropertyValueData;

typedef int ISClusPartition;

// TODO: this type is limited to platform 'windowsServer2008'
typedef int ISClusPartitionEx;

typedef int ISClusPartitions;

typedef int ISClusDisk;

typedef int ISClusDisks;

typedef int ISClusScsiAddress;

typedef int ISClusRegistryKeys;

typedef int ISClusCryptoKeys;

typedef int ISClusResDependents;


//--------------------------------------------------------------------------------
// Section: Functions (349)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void GetNodeClusterState();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HCLUSTER*/void OpenCluster();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HCLUSTER*/void OpenClusterEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*BOOL*/void CloseCluster();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void SetClusterName();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void GetClusterInformation();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void GetClusterQuorumResource();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void SetClusterQuorumResource();

// TODO: this type is limited to platform 'windowsServer2003'
/*u32*/void BackupClusterDatabase();

// TODO: this type is limited to platform 'windowsServer2003'
/*u32*/void RestoreClusterDatabase();

// TODO: this type is limited to platform 'windowsServer2003'
/*u32*/void SetClusterNetworkPriorityOrder();

// TODO: this type is limited to platform 'windowsServer2003'
/*u32*/void SetClusterServiceAccountPassword();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterControl();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void ClusterUpgradeFunctionalLevel();

// TODO: this type is limited to platform 'windowsServer2012'
/*?*_HCHANGE*/void CreateClusterNotifyPortV2();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void RegisterClusterNotifyV2();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void GetNotifyEventHandle();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void GetClusterNotifyV2();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HCHANGE*/void CreateClusterNotifyPort();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void RegisterClusterNotify();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void GetClusterNotify();

// TODO: this type is limited to platform 'windowsServer2008'
/*BOOL*/void CloseClusterNotifyPort();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HCLUSENUM*/void ClusterOpenEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterGetEnumCount();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterCloseEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HCLUSENUMEX*/void ClusterOpenEnumEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterGetEnumCountEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterEnumEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterCloseEnumEx();

// TODO: this type is limited to platform 'windowsServer2016'
/*?*_HGROUPSET*/void CreateClusterGroupSet();

// TODO: this type is limited to platform 'windowsServer2016'
/*?*_HGROUPSET*/void OpenClusterGroupSet();

// TODO: this type is limited to platform 'windowsServer2016'
/*BOOL*/void CloseClusterGroupSet();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void DeleteClusterGroupSet();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void ClusterAddGroupToGroupSet();

/*u32*/void ClusterAddGroupToGroupSetWithDomains();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void ClusterRemoveGroupFromGroupSet();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void ClusterGroupSetControl();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void AddClusterGroupDependency();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void SetGroupDependencyExpression();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void RemoveClusterGroupDependency();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void AddClusterGroupSetDependency();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void SetClusterGroupSetDependencyExpression();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void RemoveClusterGroupSetDependency();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void AddClusterGroupToGroupSetDependency();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void RemoveClusterGroupToGroupSetDependency();

// TODO: this type is limited to platform 'windowsServer2016'
/*?*_HGROUPSETENUM*/void ClusterGroupSetOpenEnum();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void ClusterGroupSetGetEnumCount();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void ClusterGroupSetEnum();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void ClusterGroupSetCloseEnum();

/*u32*/void AddCrossClusterGroupSetDependency();

/*u32*/void RemoveCrossClusterGroupSetDependency();

/*?*_HGROUPSET*/void CreateClusterAvailabilitySet();

/*u32*/void ClusterNodeReplacement();

/*u32*/void ClusterCreateAffinityRule();

/*u32*/void ClusterRemoveAffinityRule();

/*u32*/void ClusterAddGroupToAffinityRule();

/*u32*/void ClusterRemoveGroupFromAffinityRule();

/*u32*/void ClusterAffinityRuleControl();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HNODE*/void OpenClusterNode();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HNODE*/void OpenClusterNodeEx();

/*?*_HNODE*/void OpenClusterNodeById();

// TODO: this type is limited to platform 'windowsServer2008'
/*BOOL*/void CloseClusterNode();

// TODO: this type is limited to platform 'windowsServer2008'
/*CLUSTER_NODE_STATE*/void GetClusterNodeState();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void GetClusterNodeId();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HCLUSTER*/void GetClusterFromNode();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void PauseClusterNode();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResumeClusterNode();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void EvictClusterNode();

// TODO: this type is limited to platform 'windowsServer2016'
/*?*_HNETINTERFACEENUM*/void ClusterNetInterfaceOpenEnum();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void ClusterNetInterfaceEnum();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void ClusterNetInterfaceCloseEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HNODEENUM*/void ClusterNodeOpenEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HNODEENUMEX*/void ClusterNodeOpenEnumEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterNodeGetEnumCountEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterNodeEnumEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterNodeCloseEnumEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterNodeGetEnumCount();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterNodeCloseEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterNodeEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void EvictClusterNodeEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*HKEY*/void GetClusterResourceTypeKey();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HGROUP*/void CreateClusterGroup();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HGROUP*/void OpenClusterGroup();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HGROUP*/void OpenClusterGroupEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void PauseClusterNodeEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void ResumeClusterNodeEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*?*_HGROUP*/void CreateClusterGroupEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*?*_HGROUPENUMEX*/void ClusterGroupOpenEnumEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void ClusterGroupGetEnumCountEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void ClusterGroupEnumEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void ClusterGroupCloseEnumEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*?*_HRESENUMEX*/void ClusterResourceOpenEnumEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void ClusterResourceGetEnumCountEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void ClusterResourceEnumEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void ClusterResourceCloseEnumEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void OnlineClusterGroupEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void OfflineClusterGroupEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void OnlineClusterResourceEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void OfflineClusterResourceEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void MoveClusterGroupEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void CancelClusterGroupOperation();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void RestartClusterResource();

// TODO: this type is limited to platform 'windowsServer2008'
/*BOOL*/void CloseClusterGroup();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HCLUSTER*/void GetClusterFromGroup();

// TODO: this type is limited to platform 'windowsServer2008'
/*CLUSTER_GROUP_STATE*/void GetClusterGroupState();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void SetClusterGroupName();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void SetClusterGroupNodeList();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void OnlineClusterGroup();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void MoveClusterGroup();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void OfflineClusterGroup();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DeleteClusterGroup();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DestroyClusterGroup();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HGROUPENUM*/void ClusterGroupOpenEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterGroupGetEnumCount();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterGroupEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterGroupCloseEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HRESOURCE*/void CreateClusterResource();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HRESOURCE*/void OpenClusterResource();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HRESOURCE*/void OpenClusterResourceEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*BOOL*/void CloseClusterResource();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HCLUSTER*/void GetClusterFromResource();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DeleteClusterResource();

// TODO: this type is limited to platform 'windowsServer2008'
/*CLUSTER_RESOURCE_STATE*/void GetClusterResourceState();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void SetClusterResourceName();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void FailClusterResource();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void OnlineClusterResource();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void OfflineClusterResource();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ChangeClusterResourceGroup();

/*u32*/void ChangeClusterResourceGroupEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void AddClusterResourceNode();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void RemoveClusterResourceNode();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void AddClusterResourceDependency();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void RemoveClusterResourceDependency();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void SetClusterResourceDependencyExpression();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void GetClusterResourceDependencyExpression();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void AddResourceToClusterSharedVolumes();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void RemoveResourceFromClusterSharedVolumes();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void IsFileOnClusterSharedVolume();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterSharedVolumeSetSnapshotState();

// TODO: this type is limited to platform 'windowsServer2008'
/*BOOL*/void CanResourceBeDependent();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterResourceControl();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void ClusterResourceControlAsUser();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterResourceTypeControl();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void ClusterResourceTypeControlAsUser();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterGroupControl();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterNodeControl();

// TODO: this type is limited to platform 'windowsServer2008'
/*BOOL*/void GetClusterResourceNetworkName();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HRESENUM*/void ClusterResourceOpenEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterResourceGetEnumCount();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterResourceEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterResourceCloseEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void CreateClusterResourceType();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DeleteClusterResourceType();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HRESTYPEENUM*/void ClusterResourceTypeOpenEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterResourceTypeGetEnumCount();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterResourceTypeEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterResourceTypeCloseEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HNETWORK*/void OpenClusterNetwork();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HNETWORK*/void OpenClusterNetworkEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*BOOL*/void CloseClusterNetwork();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HCLUSTER*/void GetClusterFromNetwork();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HNETWORKENUM*/void ClusterNetworkOpenEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterNetworkGetEnumCount();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterNetworkEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterNetworkCloseEnum();

// TODO: this type is limited to platform 'windowsServer2008'
/*CLUSTER_NETWORK_STATE*/void GetClusterNetworkState();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void SetClusterNetworkName();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void GetClusterNetworkId();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterNetworkControl();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HNETINTERFACE*/void OpenClusterNetInterface();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HNETINTERFACE*/void OpenClusterNetInterfaceEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void GetClusterNetInterface();

// TODO: this type is limited to platform 'windowsServer2008'
/*BOOL*/void CloseClusterNetInterface();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HCLUSTER*/void GetClusterFromNetInterface();

// TODO: this type is limited to platform 'windowsServer2008'
/*CLUSTER_NETINTERFACE_STATE*/void GetClusterNetInterfaceState();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterNetInterfaceControl();

// TODO: this type is limited to platform 'windowsServer2008'
/*HKEY*/void GetClusterKey();

// TODO: this type is limited to platform 'windowsServer2008'
/*HKEY*/void GetClusterGroupKey();

// TODO: this type is limited to platform 'windowsServer2008'
/*HKEY*/void GetClusterResourceKey();

// TODO: this type is limited to platform 'windowsServer2008'
/*HKEY*/void GetClusterNodeKey();

// TODO: this type is limited to platform 'windowsServer2008'
/*HKEY*/void GetClusterNetworkKey();

// TODO: this type is limited to platform 'windowsServer2008'
/*HKEY*/void GetClusterNetInterfaceKey();

// TODO: this type is limited to platform 'windowsServer2008'
/*i32*/void ClusterRegCreateKey();

// TODO: this type is limited to platform 'windowsServer2008'
/*i32*/void ClusterRegOpenKey();

// TODO: this type is limited to platform 'windowsServer2008'
/*i32*/void ClusterRegDeleteKey();

// TODO: this type is limited to platform 'windowsServer2008'
/*i32*/void ClusterRegCloseKey();

// TODO: this type is limited to platform 'windowsServer2008'
/*i32*/void ClusterRegEnumKey();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterRegSetValue();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterRegDeleteValue();

// TODO: this type is limited to platform 'windowsServer2008'
/*i32*/void ClusterRegQueryValue();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterRegEnumValue();

// TODO: this type is limited to platform 'windowsServer2008'
/*i32*/void ClusterRegQueryInfoKey();

// TODO: this type is limited to platform 'windowsServer2008'
/*i32*/void ClusterRegGetKeySecurity();

// TODO: this type is limited to platform 'windowsServer2008'
/*i32*/void ClusterRegSetKeySecurity();

// TODO: this type is limited to platform 'windowsServer2012'
/*i32*/void ClusterRegSyncDatabase();

// TODO: this type is limited to platform 'windowsServer2008'
/*i32*/void ClusterRegCreateBatch();

// TODO: this type is limited to platform 'windowsServer2008'
/*i32*/void ClusterRegBatchAddCommand();

// TODO: this type is limited to platform 'windowsServer2008'
/*i32*/void ClusterRegCloseBatch();

// TODO: this type is limited to platform 'windowsServer2012'
/*i32*/void ClusterRegCloseBatchEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*i32*/void ClusterRegBatchReadCommand();

// TODO: this type is limited to platform 'windowsServer2008'
/*i32*/void ClusterRegBatchCloseNotification();

// TODO: this type is limited to platform 'windowsServer2008'
/*i32*/void ClusterRegCreateBatchNotifyPort();

// TODO: this type is limited to platform 'windowsServer2008'
/*i32*/void ClusterRegCloseBatchNotifyPort();

// TODO: this type is limited to platform 'windowsServer2008'
/*i32*/void ClusterRegGetBatchNotification();

// TODO: this type is limited to platform 'windowsServer2012'
/*i32*/void ClusterRegCreateReadBatch();

// TODO: this type is limited to platform 'windowsServer2012'
/*i32*/void ClusterRegReadBatchAddCommand();

// TODO: this type is limited to platform 'windowsServer2012'
/*i32*/void ClusterRegCloseReadBatch();

// TODO: this type is limited to platform 'windowsServer2016'
/*i32*/void ClusterRegCloseReadBatchEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*i32*/void ClusterRegReadBatchReplyNextCommand();

// TODO: this type is limited to platform 'windowsServer2012'
/*i32*/void ClusterRegCloseReadBatchReply();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void ClusterSetAccountAccess();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HCLUSTER*/void CreateCluster();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void CreateClusterNameAccount();

/*u32*/void RemoveClusterNameAccount();

/*u32*/void DetermineCNOResTypeFromNodelist();

/*u32*/void DetermineCNOResTypeFromCluster();

/*u32*/void DetermineClusterCloudTypeFromNodelist();

/*u32*/void DetermineClusterCloudTypeFromCluster();

/*u32*/void GetNodeCloudTypeDW();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void RegisterClusterResourceTypeNotifyV2();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HNODE*/void AddClusterNode();

/*u32*/void AddClusterStorageNode();

/*u32*/void RemoveClusterStorageNode();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DestroyCluster();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void InitializeClusterHealthFault();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void InitializeClusterHealthFaultArray();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void FreeClusterHealthFault();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void FreeClusterHealthFaultArray();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void ClusGetClusterHealthFaults();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void ClusRemoveClusterHealthFault();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void ClusAddClusterHealthFault();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilStartResourceService();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilVerifyResourceService();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilStopResourceService();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilVerifyService();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilStopService();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilCreateDirectoryTree();

// TODO: this type is limited to platform 'windowsServer2008'
/*BOOL*/void ResUtilIsPathValid();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilEnumProperties();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilEnumPrivateProperties();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetProperties();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetAllProperties();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetPrivateProperties();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetPropertySize();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetProperty();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilVerifyPropertyTable();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilSetPropertyTable();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilSetPropertyTableEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilSetPropertyParameterBlock();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilSetPropertyParameterBlockEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilSetUnknownProperties();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetPropertiesToParameterBlock();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilPropertyListFromParameterBlock();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilDupParameterBlock();

// TODO: this type is limited to platform 'windowsServer2008'
/*void*/void ResUtilFreeParameterBlock();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilAddUnknownProperties();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilSetPrivatePropertyList();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilVerifyPrivatePropertyList();

// TODO: this type is limited to platform 'windowsServer2008'
/*PWSTR*/void ResUtilDupString();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetBinaryValue();

// TODO: this type is limited to platform 'windowsServer2008'
/*PWSTR*/void ResUtilGetSzValue();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetDwordValue();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetQwordValue();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilSetBinaryValue();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilSetSzValue();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilSetExpandSzValue();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilSetMultiSzValue();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilSetDwordValue();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilSetQwordValue();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void ResUtilSetValueEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetBinaryProperty();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetSzProperty();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetMultiSzProperty();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetDwordProperty();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetLongProperty();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetFileTimeProperty();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*c_void*/void ResUtilGetEnvironmentWithNetName();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilFreeEnvironment();

// TODO: this type is limited to platform 'windowsServer2008'
/*PWSTR*/void ResUtilExpandEnvironmentStrings();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilSetResourceServiceEnvironment();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilRemoveResourceServiceEnvironment();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilSetResourceServiceStartParameters();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilFindSzProperty();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilFindExpandSzProperty();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilFindExpandedSzProperty();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilFindDwordProperty();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilFindBinaryProperty();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilFindMultiSzProperty();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilFindLongProperty();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void ResUtilFindULargeIntegerProperty();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilFindFileTimeProperty();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusWorkerCreate();

// TODO: this type is limited to platform 'windowsServer2008'
/*BOOL*/void ClusWorkerCheckTerminate();

/*void*/void ClusWorkerTerminate();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void ClusWorkerTerminateEx();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void ClusWorkersTerminate();

// TODO: this type is limited to platform 'windowsServer2008'
/*BOOL*/void ResUtilResourcesEqual();

// TODO: this type is limited to platform 'windowsServer2008'
/*BOOL*/void ResUtilResourceTypesEqual();

// TODO: this type is limited to platform 'windowsServer2008'
/*BOOL*/void ResUtilIsResourceClassEqual();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilEnumResources();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilEnumResourcesEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HRESOURCE*/void ResUtilGetResourceDependency();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HRESOURCE*/void ResUtilGetResourceDependencyByName();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HRESOURCE*/void ResUtilGetResourceDependencyByClass();

// TODO: this type is limited to platform 'windowsServer2008'
/*?*_HRESOURCE*/void ResUtilGetResourceNameDependency();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetResourceDependentIPAddressProps();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilFindDependentDiskResourceDriveLetter();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilTerminateServiceProcessFromResDll();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetPropertyFormats();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetCoreClusterResources();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ResUtilGetResourceName();

// TODO: this type is limited to platform 'windowsServer2008'
/*CLUSTER_ROLE_STATE*/void ResUtilGetClusterRoleState();

// TODO: this type is limited to platform 'windowsServer2008'
/*BOOL*/void ClusterIsPathOnSharedVolume();

// TODO: this type is limited to platform 'windowsServer2008'
/*BOOL*/void ClusterGetVolumePathName();

// TODO: this type is limited to platform 'windowsServer2008'
/*BOOL*/void ClusterGetVolumeNameForVolumeMountPoint();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterPrepareSharedVolumeForBackup();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void ClusterClearBackupStateForSharedVolume();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void ResUtilSetResourceServiceStartParametersEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void ResUtilEnumResourcesEx2();

// TODO: this type is limited to platform 'windowsServer2012'
/*?*_HRESOURCE*/void ResUtilGetResourceDependencyEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*?*_HRESOURCE*/void ResUtilGetResourceDependencyByNameEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*?*_HRESOURCE*/void ResUtilGetResourceDependencyByClassEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*?*_HRESOURCE*/void ResUtilGetResourceNameDependencyEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void ResUtilGetCoreClusterResourcesEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*?*_HCLUSCRYPTPROVIDER*/void OpenClusterCryptProvider();

/*?*_HCLUSCRYPTPROVIDER*/void OpenClusterCryptProviderEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void CloseClusterCryptProvider();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void ClusterEncrypt();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void ClusterDecrypt();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void FreeClusterCrypt();

// TODO: this type is limited to platform 'windowsServer2016'
/*BOOL*/void ResUtilPaxosComparer();

// TODO: this type is limited to platform 'windowsServer2016'
/*BOOL*/void ResUtilLeftPaxosIsLessThanRight();

/*u32*/void ResUtilsDeleteKeyTree();

/*u32*/void ResUtilGroupsEqual();

/*u32*/void ResUtilEnumGroups();

/*u32*/void ResUtilEnumGroupsEx();

/*u32*/void ResUtilDupGroup();

/*u32*/void ResUtilGetClusterGroupType();

/*?*_HGROUP*/void ResUtilGetCoreGroup();

/*u32*/void ResUtilResourceDepEnum();

/*u32*/void ResUtilDupResource();

/*u32*/void ResUtilGetClusterId();

/*u32*/void ResUtilNodeEnum();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void RegisterAppInstance();

/*u32*/void RegisterAppInstanceVersion();

/*u32*/void QueryAppInstanceVersion();

/*u32*/void ResetAllAppInstanceVersions();

// TODO: this type is limited to platform 'windowsServer2016'
/*u32*/void SetAppInstanceCsvFlags();

