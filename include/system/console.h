// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (64)
//--------------------------------------------------------------------------------
#define ATTACH_PARENT_PROCESS (UINT)4294967295
#define CTRL_C_EVENT (UINT)0
#define CTRL_BREAK_EVENT (UINT)1
#define CTRL_CLOSE_EVENT (UINT)2
#define CTRL_LOGOFF_EVENT (UINT)5
#define CTRL_SHUTDOWN_EVENT (UINT)6
#define PSEUDOCONSOLE_INHERIT_CURSOR (UINT)1
#define FOREGROUND_BLUE (UINT)1
#define FOREGROUND_GREEN (UINT)2
#define FOREGROUND_RED (UINT)4
#define FOREGROUND_INTENSITY (UINT)8
#define BACKGROUND_BLUE (UINT)16
#define BACKGROUND_GREEN (UINT)32
#define BACKGROUND_RED (UINT)64
#define BACKGROUND_INTENSITY (UINT)128
#define COMMON_LVB_LEADING_BYTE (UINT)256
#define COMMON_LVB_TRAILING_BYTE (UINT)512
#define COMMON_LVB_GRID_HORIZONTAL (UINT)1024
#define COMMON_LVB_GRID_LVERTICAL (UINT)2048
#define COMMON_LVB_GRID_RVERTICAL (UINT)4096
#define COMMON_LVB_REVERSE_VIDEO (UINT)16384
#define COMMON_LVB_UNDERSCORE (UINT)32768
#define COMMON_LVB_SBCSDBCS (UINT)768
#define CONSOLE_NO_SELECTION (UINT)0
#define CONSOLE_SELECTION_IN_PROGRESS (UINT)1
#define CONSOLE_SELECTION_NOT_EMPTY (UINT)2
#define CONSOLE_MOUSE_SELECTION (UINT)4
#define CONSOLE_MOUSE_DOWN (UINT)8
#define HISTORY_NO_DUP_FLAG (UINT)1
#define CONSOLE_FULLSCREEN (UINT)1
#define CONSOLE_FULLSCREEN_HARDWARE (UINT)2
#define CONSOLE_FULLSCREEN_MODE (UINT)1
#define CONSOLE_WINDOWED_MODE (UINT)2
#define RIGHT_ALT_PRESSED (UINT)1
#define LEFT_ALT_PRESSED (UINT)2
#define RIGHT_CTRL_PRESSED (UINT)4
#define LEFT_CTRL_PRESSED (UINT)8
#define SHIFT_PRESSED (UINT)16
#define NUMLOCK_ON (UINT)32
#define SCROLLLOCK_ON (UINT)64
#define CAPSLOCK_ON (UINT)128
#define ENHANCED_KEY (UINT)256
#define NLS_DBCSCHAR (UINT)65536
#define NLS_ALPHANUMERIC (UINT)0
#define NLS_KATAKANA (UINT)131072
#define NLS_HIRAGANA (UINT)262144
#define NLS_ROMAN (UINT)4194304
#define NLS_IME_CONVERSION (UINT)8388608
#define ALTNUMPAD_BIT (UINT)67108864
#define NLS_IME_DISABLE (UINT)536870912
#define FROM_LEFT_1ST_BUTTON_PRESSED (UINT)1
#define RIGHTMOST_BUTTON_PRESSED (UINT)2
#define FROM_LEFT_2ND_BUTTON_PRESSED (UINT)4
#define FROM_LEFT_3RD_BUTTON_PRESSED (UINT)8
#define FROM_LEFT_4TH_BUTTON_PRESSED (UINT)16
#define MOUSE_MOVED (UINT)1
#define DOUBLE_CLICK (UINT)2
#define MOUSE_WHEELED (UINT)4
#define MOUSE_HWHEELED (UINT)8
#define KEY_EVENT (UINT)1
#define MOUSE_EVENT (UINT)2
#define WINDOW_BUFFER_SIZE_EVENT (UINT)4
#define MENU_EVENT (UINT)8
#define FOCUS_EVENT (UINT)16

//--------------------------------------------------------------------------------
// Section: Types (21)
//--------------------------------------------------------------------------------
typedef enum {
    ENABLE_PROCESSED_INPUT = 1,
    ENABLE_LINE_INPUT = 2,
    ENABLE_ECHO_INPUT = 4,
    ENABLE_WINDOW_INPUT = 8,
    ENABLE_MOUSE_INPUT = 16,
    ENABLE_INSERT_MODE = 32,
    ENABLE_QUICK_EDIT_MODE = 64,
    ENABLE_EXTENDED_FLAGS = 128,
    ENABLE_AUTO_POSITION = 256,
    ENABLE_VIRTUAL_TERMINAL_INPUT = 512,
    ENABLE_PROCESSED_OUTPUT = 1,
    ENABLE_WRAP_AT_EOL_OUTPUT = 2,
    ENABLE_VIRTUAL_TERMINAL_PROCESSING = 4,
    DISABLE_NEWLINE_AUTO_RETURN = 8,
    ENABLE_LVB_GRID_WORLDWIDE = 16,
} CONSOLE_MODE;

typedef enum {
    STD_INPUT_HANDLE = 4294967286,
    STD_OUTPUT_HANDLE = 4294967285,
    STD_ERROR_HANDLE = 4294967284,
} STD_HANDLE;

typedef int HPCON;

typedef int COORD;

typedef int SMALL_RECT;

typedef int KEY_EVENT_RECORD;

typedef int MOUSE_EVENT_RECORD;

typedef int WINDOW_BUFFER_SIZE_RECORD;

typedef int MENU_EVENT_RECORD;

typedef int FOCUS_EVENT_RECORD;

typedef int INPUT_RECORD;

typedef int CHAR_INFO;

typedef int CONSOLE_FONT_INFO;

typedef int CONSOLE_READCONSOLE_CONTROL;

typedef int PHANDLER_ROUTINE;

typedef int CONSOLE_CURSOR_INFO;

typedef int CONSOLE_SCREEN_BUFFER_INFO;

typedef int CONSOLE_SCREEN_BUFFER_INFOEX;

typedef int CONSOLE_FONT_INFOEX;

typedef int CONSOLE_SELECTION_INFO;

typedef int CONSOLE_HISTORY_INFO;


//--------------------------------------------------------------------------------
// Section: Functions (94)
//--------------------------------------------------------------------------------
/*BOOL*/void AllocConsole();

/*BOOL*/void FreeConsole();

/*BOOL*/void AttachConsole();

/*u32*/void GetConsoleCP();

/*u32*/void GetConsoleOutputCP();

/*BOOL*/void GetConsoleMode();

/*BOOL*/void SetConsoleMode();

/*BOOL*/void GetNumberOfConsoleInputEvents();

/*BOOL*/void ReadConsoleInputA();

/*BOOL*/void ReadConsoleInputW();

/*BOOL*/void PeekConsoleInputA();

/*BOOL*/void PeekConsoleInputW();

/*BOOL*/void ReadConsoleA();

/*BOOL*/void ReadConsoleW();

/*BOOL*/void WriteConsoleA();

/*BOOL*/void WriteConsoleW();

/*BOOL*/void SetConsoleCtrlHandler();

/*HRESULT*/void CreatePseudoConsole();

/*HRESULT*/void ResizePseudoConsole();

/*void*/void ClosePseudoConsole();

/*BOOL*/void FillConsoleOutputCharacterA();

/*BOOL*/void FillConsoleOutputCharacterW();

/*BOOL*/void FillConsoleOutputAttribute();

/*BOOL*/void GenerateConsoleCtrlEvent();

/*HANDLE*/void CreateConsoleScreenBuffer();

/*BOOL*/void SetConsoleActiveScreenBuffer();

/*BOOL*/void FlushConsoleInputBuffer();

/*BOOL*/void SetConsoleCP();

/*BOOL*/void SetConsoleOutputCP();

/*BOOL*/void GetConsoleCursorInfo();

/*BOOL*/void SetConsoleCursorInfo();

/*BOOL*/void GetConsoleScreenBufferInfo();

/*BOOL*/void GetConsoleScreenBufferInfoEx();

/*BOOL*/void SetConsoleScreenBufferInfoEx();

/*BOOL*/void SetConsoleScreenBufferSize();

/*BOOL*/void SetConsoleCursorPosition();

/*COORD*/void GetLargestConsoleWindowSize();

/*BOOL*/void SetConsoleTextAttribute();

/*BOOL*/void SetConsoleWindowInfo();

/*BOOL*/void WriteConsoleOutputCharacterA();

/*BOOL*/void WriteConsoleOutputCharacterW();

/*BOOL*/void WriteConsoleOutputAttribute();

/*BOOL*/void ReadConsoleOutputCharacterA();

/*BOOL*/void ReadConsoleOutputCharacterW();

/*BOOL*/void ReadConsoleOutputAttribute();

/*BOOL*/void WriteConsoleInputA();

/*BOOL*/void WriteConsoleInputW();

/*BOOL*/void ScrollConsoleScreenBufferA();

/*BOOL*/void ScrollConsoleScreenBufferW();

/*BOOL*/void WriteConsoleOutputA();

/*BOOL*/void WriteConsoleOutputW();

/*BOOL*/void ReadConsoleOutputA();

/*BOOL*/void ReadConsoleOutputW();

/*u32*/void GetConsoleTitleA();

/*u32*/void GetConsoleTitleW();

/*u32*/void GetConsoleOriginalTitleA();

/*u32*/void GetConsoleOriginalTitleW();

/*BOOL*/void SetConsoleTitleA();

/*BOOL*/void SetConsoleTitleW();

/*BOOL*/void GetNumberOfConsoleMouseButtons();

/*COORD*/void GetConsoleFontSize();

/*BOOL*/void GetCurrentConsoleFont();

/*BOOL*/void GetCurrentConsoleFontEx();

/*BOOL*/void SetCurrentConsoleFontEx();

/*BOOL*/void GetConsoleSelectionInfo();

/*BOOL*/void GetConsoleHistoryInfo();

/*BOOL*/void SetConsoleHistoryInfo();

/*BOOL*/void GetConsoleDisplayMode();

/*BOOL*/void SetConsoleDisplayMode();

/*HWND*/void GetConsoleWindow();

/*BOOL*/void AddConsoleAliasA();

/*BOOL*/void AddConsoleAliasW();

/*u32*/void GetConsoleAliasA();

/*u32*/void GetConsoleAliasW();

/*u32*/void GetConsoleAliasesLengthA();

/*u32*/void GetConsoleAliasesLengthW();

/*u32*/void GetConsoleAliasExesLengthA();

/*u32*/void GetConsoleAliasExesLengthW();

/*u32*/void GetConsoleAliasesA();

/*u32*/void GetConsoleAliasesW();

/*u32*/void GetConsoleAliasExesA();

/*u32*/void GetConsoleAliasExesW();

/*void*/void ExpungeConsoleCommandHistoryA();

/*void*/void ExpungeConsoleCommandHistoryW();

/*BOOL*/void SetConsoleNumberOfCommandsA();

/*BOOL*/void SetConsoleNumberOfCommandsW();

/*u32*/void GetConsoleCommandHistoryLengthA();

/*u32*/void GetConsoleCommandHistoryLengthW();

/*u32*/void GetConsoleCommandHistoryA();

/*u32*/void GetConsoleCommandHistoryW();

/*u32*/void GetConsoleProcessList();

/*HANDLE*/void GetStdHandle();

/*BOOL*/void SetStdHandle();

/*BOOL*/void SetStdHandleEx();

