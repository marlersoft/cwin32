// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (38)
//--------------------------------------------------------------------------------
#define WER_FAULT_REPORTING_NO_UI (UINT)32
#define WER_FAULT_REPORTING_FLAG_NO_HEAP_ON_QUEUE (UINT)64
#define WER_FAULT_REPORTING_DISABLE_SNAPSHOT_CRASH (UINT)128
#define WER_FAULT_REPORTING_DISABLE_SNAPSHOT_HANG (UINT)256
#define WER_FAULT_REPORTING_CRITICAL (UINT)512
#define WER_FAULT_REPORTING_DURABLE (UINT)1024
#define WER_MAX_TOTAL_PARAM_LENGTH (UINT)1720
#define WER_MAX_PREFERRED_MODULES (UINT)128
#define WER_MAX_PREFERRED_MODULES_BUFFER (UINT)256
#define WER_P0 (UINT)0
#define WER_P1 (UINT)1
#define WER_P2 (UINT)2
#define WER_P3 (UINT)3
#define WER_P4 (UINT)4
#define WER_P5 (UINT)5
#define WER_P6 (UINT)6
#define WER_P7 (UINT)7
#define WER_P8 (UINT)8
#define WER_P9 (UINT)9
#define WER_FILE_COMPRESSED (UINT)4
#define WER_SUBMIT_BYPASS_POWER_THROTTLING (UINT)16384
#define WER_SUBMIT_BYPASS_NETWORK_COST_THROTTLING (UINT)32768
#define WER_DUMP_MASK_START (UINT)1
#define WER_DUMP_NOHEAP_ONQUEUE (UINT)1
#define WER_DUMP_AUXILIARY (UINT)2
#define WER_MAX_REGISTERED_ENTRIES (UINT)512
#define WER_MAX_REGISTERED_METADATA (UINT)8
#define WER_MAX_REGISTERED_DUMPCOLLECTION (UINT)4
#define WER_METADATA_KEY_MAX_LENGTH (UINT)64
#define WER_METADATA_VALUE_MAX_LENGTH (UINT)128
#define WER_MAX_SIGNATURE_NAME_LENGTH (UINT)128
#define WER_MAX_EVENT_NAME_LENGTH (UINT)64
#define WER_MAX_PARAM_COUNT (UINT)10
#define WER_MAX_FRIENDLY_EVENT_NAME_LENGTH (UINT)128
#define WER_MAX_APPLICATION_NAME_LENGTH (UINT)128
#define WER_MAX_DESCRIPTION_LENGTH (UINT)512
#define WER_MAX_LOCAL_DUMP_SUBPATH_LENGTH (UINT)64
#define WER_MAX_REGISTERED_RUNTIME_EXCEPTION_MODULES (UINT)16

//--------------------------------------------------------------------------------
// Section: Types (34)
//--------------------------------------------------------------------------------
typedef enum {
    WER_FILE_ANONYMOUS_DATA = 2,
    WER_FILE_DELETE_WHEN_DONE = 1,
} WER_FILE;

typedef enum {
    WER_SUBMIT_ADD_REGISTERED_DATA = 16,
    WER_SUBMIT_HONOR_RECOVERY = 1,
    WER_SUBMIT_HONOR_RESTART = 2,
    WER_SUBMIT_NO_ARCHIVE = 256,
    WER_SUBMIT_NO_CLOSE_UI = 64,
    WER_SUBMIT_NO_QUEUE = 128,
    WER_SUBMIT_OUTOFPROCESS = 32,
    WER_SUBMIT_OUTOFPROCESS_ASYNC = 1024,
    WER_SUBMIT_QUEUE = 4,
    WER_SUBMIT_SHOW_DEBUG = 8,
    WER_SUBMIT_START_MINIMIZED = 512,
    WER_SUBMIT_BYPASS_DATA_THROTTLING = 2048,
    WER_SUBMIT_ARCHIVE_PARAMETERS_ONLY = 4096,
    WER_SUBMIT_REPORT_MACHINE_ID = 8192,
} WER_SUBMIT_FLAGS;

typedef enum {
    WER_FAULT_REPORTING_FLAG_DISABLE_THREAD_SUSPENSION = 4,
    WER_FAULT_REPORTING_FLAG_NOHEAP = 1,
    WER_FAULT_REPORTING_FLAG_QUEUE = 2,
    WER_FAULT_REPORTING_FLAG_QUEUE_UPLOAD = 8,
    WER_FAULT_REPORTING_ALWAYS_SHOW_UI = 16,
} WER_FAULT_REPORTING;

typedef int HREPORT;

typedef int HREPORTSTORE;

typedef enum {
    WerUIAdditionalDataDlgHeader = 1,
    WerUIIconFilePath = 2,
    WerUIConsentDlgHeader = 3,
    WerUIConsentDlgBody = 4,
    WerUIOnlineSolutionCheckText = 5,
    WerUIOfflineSolutionCheckText = 6,
    WerUICloseText = 7,
    WerUICloseDlgHeader = 8,
    WerUICloseDlgBody = 9,
    WerUICloseDlgButtonText = 10,
    WerUIMax = 11,
} WER_REPORT_UI;

typedef enum {
    WerRegFileTypeUserDocument = 1,
    WerRegFileTypeOther = 2,
    WerRegFileTypeMax = 3,
} WER_REGISTER_FILE_TYPE;

typedef enum {
    WerFileTypeMicrodump = 1,
    WerFileTypeMinidump = 2,
    WerFileTypeHeapdump = 3,
    WerFileTypeUserDocument = 4,
    WerFileTypeOther = 5,
    WerFileTypeTriagedump = 6,
    WerFileTypeCustomDump = 7,
    WerFileTypeAuxiliaryDump = 8,
    WerFileTypeEtlTrace = 9,
    WerFileTypeMax = 10,
} WER_FILE_TYPE;

typedef enum {
    WerReportQueued = 1,
    WerReportUploaded = 2,
    WerReportDebug = 3,
    WerReportFailed = 4,
    WerDisabled = 5,
    WerReportCancelled = 6,
    WerDisabledQueue = 7,
    WerReportAsync = 8,
    WerCustomAction = 9,
    WerThrottled = 10,
    WerReportUploadedCab = 11,
    WerStorageLocationNotFound = 12,
    WerSubmitResultMax = 13,
} WER_SUBMIT_RESULT;

typedef enum {
    WerReportNonCritical = 0,
    WerReportCritical = 1,
    WerReportApplicationCrash = 2,
    WerReportApplicationHang = 3,
    WerReportKernel = 4,
    WerReportInvalid = 5,
} WER_REPORT_TYPE;

typedef int WER_REPORT_INFORMATION;

typedef int WER_REPORT_INFORMATION_V3;

typedef int WER_DUMP_CUSTOM_OPTIONS;

typedef int WER_DUMP_CUSTOM_OPTIONS_V2;

typedef int WER_REPORT_INFORMATION_V4;

typedef int WER_REPORT_INFORMATION_V5;

typedef int WER_DUMP_CUSTOM_OPTIONS_V3;

typedef int WER_EXCEPTION_INFORMATION;

typedef enum {
    WerConsentNotAsked = 1,
    WerConsentApproved = 2,
    WerConsentDenied = 3,
    WerConsentAlwaysPrompt = 4,
    WerConsentMax = 5,
} WER_CONSENT;

typedef enum {
    WerDumpTypeNone = 0,
    WerDumpTypeMicroDump = 1,
    WerDumpTypeMiniDump = 2,
    WerDumpTypeHeapDump = 3,
    WerDumpTypeTriageDump = 4,
    WerDumpTypeMax = 5,
} WER_DUMP_TYPE;

typedef int WER_RUNTIME_EXCEPTION_INFORMATION;

typedef int PFN_WER_RUNTIME_EXCEPTION_EVENT;

typedef int PFN_WER_RUNTIME_EXCEPTION_EVENT_SIGNATURE;

typedef int PFN_WER_RUNTIME_EXCEPTION_DEBUGGER_LAUNCH;

typedef enum {
    E_STORE_USER_ARCHIVE = 0,
    E_STORE_USER_QUEUE = 1,
    E_STORE_MACHINE_ARCHIVE = 2,
    E_STORE_MACHINE_QUEUE = 3,
    E_STORE_INVALID = 4,
} REPORT_STORE_TYPES;

typedef int WER_REPORT_PARAMETER;

typedef int WER_REPORT_SIGNATURE;

typedef int WER_REPORT_METADATA_V2;

typedef int WER_REPORT_METADATA_V3;

typedef int WER_REPORT_METADATA_V1;

typedef enum {
    frrvOk = 0,
    frrvOkManifest = 1,
    frrvOkQueued = 2,
    frrvErr = 3,
    frrvErrNoDW = 4,
    frrvErrTimeout = 5,
    frrvLaunchDebugger = 6,
    frrvOkHeadless = 7,
    frrvErrAnotherInstance = 8,
    frrvErrNoMemory = 9,
    frrvErrDoubleFault = 10,
} EFaultRepRetVal;

typedef int pfn_REPORTFAULT;

typedef int pfn_ADDEREXCLUDEDAPPLICATIONA;

typedef int pfn_ADDEREXCLUDEDAPPLICATIONW;


//--------------------------------------------------------------------------------
// Section: Functions (41)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void WerReportCreate();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void WerReportSetParameter();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void WerReportAddFile();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void WerReportSetUIOption();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void WerReportSubmit();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void WerReportAddDump();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void WerReportCloseHandle();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void WerRegisterFile();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void WerUnregisterFile();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void WerRegisterMemoryBlock();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void WerUnregisterMemoryBlock();

// TODO: this type is limited to platform 'windows10.0.15063'
/*HRESULT*/void WerRegisterExcludedMemoryBlock();

// TODO: this type is limited to platform 'windows10.0.15063'
/*HRESULT*/void WerUnregisterExcludedMemoryBlock();

// TODO: this type is limited to platform 'windows10.0.15063'
/*HRESULT*/void WerRegisterCustomMetadata();

// TODO: this type is limited to platform 'windows10.0.15063'
/*HRESULT*/void WerUnregisterCustomMetadata();

// TODO: this type is limited to platform 'windows10.0.15063'
/*HRESULT*/void WerRegisterAdditionalProcess();

// TODO: this type is limited to platform 'windows10.0.15063'
/*HRESULT*/void WerUnregisterAdditionalProcess();

// TODO: this type is limited to platform 'windows10.0.16299'
/*HRESULT*/void WerRegisterAppLocalDump();

// TODO: this type is limited to platform 'windows10.0.16299'
/*HRESULT*/void WerUnregisterAppLocalDump();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void WerSetFlags();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void WerGetFlags();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void WerAddExcludedApplication();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void WerRemoveExcludedApplication();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void WerRegisterRuntimeExceptionModule();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void WerUnregisterRuntimeExceptionModule();

// TODO: this type is limited to platform 'windows10.0.15063'
/*HRESULT*/void WerStoreOpen();

// TODO: this type is limited to platform 'windows10.0.15063'
/*void*/void WerStoreClose();

// TODO: this type is limited to platform 'windows10.0.15063'
/*HRESULT*/void WerStoreGetFirstReportKey();

// TODO: this type is limited to platform 'windows10.0.15063'
/*HRESULT*/void WerStoreGetNextReportKey();

// TODO: this type is limited to platform 'windows10.0.15063'
/*HRESULT*/void WerStoreQueryReportMetadataV2();

/*HRESULT*/void WerStoreQueryReportMetadataV3();

// TODO: this type is limited to platform 'windows10.0.15063'
/*void*/void WerFreeString();

/*HRESULT*/void WerStorePurge();

/*HRESULT*/void WerStoreGetReportCount();

/*HRESULT*/void WerStoreGetSizeOnDisk();

/*HRESULT*/void WerStoreQueryReportMetadataV1();

/*HRESULT*/void WerStoreUploadReport();

// TODO: this type is limited to platform 'windows5.1.2600'
/*EFaultRepRetVal*/void ReportFault();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AddERExcludedApplicationA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AddERExcludedApplicationW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void WerReportHang();

