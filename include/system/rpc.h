// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (218)
//--------------------------------------------------------------------------------
#define RPC_C_BINDING_INFINITE_TIMEOUT (UINT)10
#define RPC_C_BINDING_MIN_TIMEOUT (UINT)0
#define RPC_C_BINDING_DEFAULT_TIMEOUT (UINT)5
#define RPC_C_BINDING_MAX_TIMEOUT (UINT)9
#define RPC_C_CANCEL_INFINITE_TIMEOUT (INT)-1
#define RPC_C_LISTEN_MAX_CALLS_DEFAULT (UINT)1234
#define RPC_C_PROTSEQ_MAX_REQS_DEFAULT (UINT)10
#define RPC_C_BIND_TO_ALL_NICS (UINT)1
#define RPC_C_USE_INTERNET_PORT (UINT)1
#define RPC_C_USE_INTRANET_PORT (UINT)2
#define RPC_C_DONT_FAIL (UINT)4
#define RPC_C_RPCHTTP_USE_LOAD_BALANCE (UINT)8
#define RPC_C_MQ_TEMPORARY (UINT)0
#define RPC_C_MQ_PERMANENT (UINT)1
#define RPC_C_MQ_CLEAR_ON_OPEN (UINT)2
#define RPC_C_MQ_USE_EXISTING_SECURITY (UINT)4
#define RPC_C_MQ_AUTHN_LEVEL_NONE (UINT)0
#define RPC_C_MQ_AUTHN_LEVEL_PKT_INTEGRITY (UINT)8
#define RPC_C_MQ_AUTHN_LEVEL_PKT_PRIVACY (UINT)16
#define RPC_C_MQ_EXPRESS (UINT)0
#define RPC_C_MQ_RECOVERABLE (UINT)1
#define RPC_C_MQ_JOURNAL_NONE (UINT)0
#define RPC_C_MQ_JOURNAL_DEADLETTER (UINT)1
#define RPC_C_MQ_JOURNAL_ALWAYS (UINT)2
#define RPC_C_OPT_MQ_DELIVERY (UINT)1
#define RPC_C_OPT_MQ_PRIORITY (UINT)2
#define RPC_C_OPT_MQ_JOURNAL (UINT)3
#define RPC_C_OPT_MQ_ACKNOWLEDGE (UINT)4
#define RPC_C_OPT_MQ_AUTHN_SERVICE (UINT)5
#define RPC_C_OPT_MQ_AUTHN_LEVEL (UINT)6
#define RPC_C_OPT_MQ_TIME_TO_REACH_QUEUE (UINT)7
#define RPC_C_OPT_MQ_TIME_TO_BE_RECEIVED (UINT)8
#define RPC_C_OPT_BINDING_NONCAUSAL (UINT)9
#define RPC_C_OPT_SECURITY_CALLBACK (UINT)10
#define RPC_C_OPT_UNIQUE_BINDING (UINT)11
#define RPC_C_OPT_MAX_OPTIONS (UINT)12
#define RPC_C_OPT_CALL_TIMEOUT (UINT)12
#define RPC_C_OPT_DONT_LINGER (UINT)13
#define RPC_C_OPT_TRANS_SEND_BUFFER_SIZE (UINT)5
#define RPC_C_OPT_TRUST_PEER (UINT)14
#define RPC_C_OPT_ASYNC_BLOCK (UINT)15
#define RPC_C_OPT_OPTIMIZE_TIME (UINT)16
#define RPC_C_FULL_CERT_CHAIN (UINT)1
#define RPC_C_STATS_CALLS_IN (UINT)0
#define RPC_C_STATS_CALLS_OUT (UINT)1
#define RPC_C_STATS_PKTS_IN (UINT)2
#define RPC_C_STATS_PKTS_OUT (UINT)3
#define RPC_C_AUTHN_NONE (UINT)0
#define RPC_C_AUTHN_DCE_PRIVATE (UINT)1
#define RPC_C_AUTHN_DCE_PUBLIC (UINT)2
#define RPC_C_AUTHN_DEC_PUBLIC (UINT)4
#define RPC_C_AUTHN_GSS_NEGOTIATE (UINT)9
#define RPC_C_AUTHN_WINNT (UINT)10
#define RPC_C_AUTHN_GSS_SCHANNEL (UINT)14
#define RPC_C_AUTHN_GSS_KERBEROS (UINT)16
#define RPC_C_AUTHN_DPA (UINT)17
#define RPC_C_AUTHN_MSN (UINT)18
#define RPC_C_AUTHN_DIGEST (UINT)21
#define RPC_C_AUTHN_KERNEL (UINT)20
#define RPC_C_AUTHN_NEGO_EXTENDER (UINT)30
#define RPC_C_AUTHN_PKU2U (UINT)31
#define RPC_C_AUTHN_LIVE_SSP (UINT)32
#define RPC_C_AUTHN_LIVEXP_SSP (UINT)35
#define RPC_C_AUTHN_CLOUD_AP (UINT)36
#define RPC_C_AUTHN_MSONLINE (UINT)82
#define RPC_C_AUTHN_MQ (UINT)100
#define RPC_C_AUTHN_DEFAULT (INT)-1
#define RPC_C_SECURITY_QOS_VERSION (INT)1
#define RPC_C_SECURITY_QOS_VERSION_1 (INT)1
#define RPC_C_SECURITY_QOS_VERSION_2 (INT)2
#define RPC_C_HTTP_AUTHN_SCHEME_BASIC (UINT)1
#define RPC_C_HTTP_AUTHN_SCHEME_NTLM (UINT)2
#define RPC_C_HTTP_AUTHN_SCHEME_PASSPORT (UINT)4
#define RPC_C_HTTP_AUTHN_SCHEME_DIGEST (UINT)8
#define RPC_C_HTTP_AUTHN_SCHEME_NEGOTIATE (UINT)16
#define RPC_C_HTTP_AUTHN_SCHEME_CERT (UINT)65536
#define RPC_C_SECURITY_QOS_VERSION_3 (INT)3
#define RPC_C_SECURITY_QOS_VERSION_4 (INT)4
#define RPC_C_SECURITY_QOS_VERSION_5 (INT)5
#define RPC_PROTSEQ_TCP (UINT)1
#define RPC_PROTSEQ_NMP (UINT)2
#define RPC_PROTSEQ_LRPC (UINT)3
#define RPC_PROTSEQ_HTTP (UINT)4
#define RPC_BHT_OBJECT_UUID_VALID (UINT)1
#define RPC_BHO_EXCLUSIVE_AND_GUARANTEED (UINT)4
#define RPC_C_AUTHZ_NONE (UINT)0
#define RPC_C_AUTHZ_NAME (UINT)1
#define RPC_C_AUTHZ_DCE (UINT)2
#define RPC_C_AUTHZ_DEFAULT (UINT)4294967295
#define DCE_C_ERROR_STRING_LEN (UINT)256
#define RPC_C_EP_ALL_ELTS (UINT)0
#define RPC_C_EP_MATCH_BY_IF (UINT)1
#define RPC_C_EP_MATCH_BY_OBJ (UINT)2
#define RPC_C_EP_MATCH_BY_BOTH (UINT)3
#define RPC_C_VERS_ALL (UINT)1
#define RPC_C_VERS_COMPATIBLE (UINT)2
#define RPC_C_VERS_EXACT (UINT)3
#define RPC_C_VERS_MAJOR_ONLY (UINT)4
#define RPC_C_VERS_UPTO (UINT)5
#define RPC_C_MGMT_INQ_IF_IDS (UINT)0
#define RPC_C_MGMT_INQ_PRINC_NAME (UINT)1
#define RPC_C_MGMT_INQ_STATS (UINT)2
#define RPC_C_MGMT_IS_SERVER_LISTEN (UINT)3
#define RPC_C_MGMT_STOP_SERVER_LISTEN (UINT)4
#define RPC_C_PARM_MAX_PACKET_LENGTH (UINT)1
#define RPC_C_PARM_BUFFER_LENGTH (UINT)2
#define RPC_IF_AUTOLISTEN (UINT)1
#define RPC_IF_OLE (UINT)2
#define RPC_IF_ALLOW_UNKNOWN_AUTHORITY (UINT)4
#define RPC_IF_ALLOW_SECURE_ONLY (UINT)8
#define RPC_IF_ALLOW_CALLBACKS_WITH_NO_AUTH (UINT)16
#define RPC_IF_ALLOW_LOCAL_ONLY (UINT)32
#define RPC_IF_SEC_NO_CACHE (UINT)64
#define RPC_IF_SEC_CACHE_PER_PROC (UINT)128
#define RPC_IF_ASYNC_CALLBACK (UINT)256
#define RPC_FW_IF_FLAG_DCOM (UINT)1
#define RPC_C_NOTIFY_ON_SEND_COMPLETE (UINT)1
#define MaxNumberOfEEInfoParams (UINT)4
#define RPC_EEINFO_VERSION (UINT)1
#define EEInfoPreviousRecordsMissing (UINT)1
#define EEInfoNextRecordsMissing (UINT)2
#define EEInfoUseFileTime (UINT)4
#define EEInfoGCCOM (UINT)11
#define EEInfoGCFRS (UINT)12
#define RPC_CALL_ATTRIBUTES_VERSION (UINT)2
#define RPC_QUERY_SERVER_PRINCIPAL_NAME (UINT)2
#define RPC_QUERY_CLIENT_PRINCIPAL_NAME (UINT)4
#define RPC_QUERY_CALL_LOCAL_ADDRESS (UINT)8
#define RPC_QUERY_CLIENT_PID (UINT)16
#define RPC_QUERY_IS_CLIENT_LOCAL (UINT)32
#define RPC_QUERY_NO_AUTH_REQUIRED (UINT)64
#define RPC_QUERY_CLIENT_ID (UINT)128
#define RPC_CALL_STATUS_CANCELLED (UINT)1
#define RPC_CALL_STATUS_DISCONNECTED (UINT)2
#define RPC_CONTEXT_HANDLE_DEFAULT_FLAGS (UINT)0
#define RPC_CONTEXT_HANDLE_FLAGS (UINT)805306368
#define RPC_CONTEXT_HANDLE_SERIALIZE (UINT)268435456
#define RPC_CONTEXT_HANDLE_DONT_SERIALIZE (UINT)536870912
#define RPC_TYPE_STRICT_CONTEXT_HANDLE (UINT)1073741824
#define RPC_TYPE_DISCONNECT_EVENT_CONTEXT_HANDLE (UINT)2147483648
#define RPC_NCA_FLAGS_DEFAULT (UINT)0
#define RPC_NCA_FLAGS_IDEMPOTENT (UINT)1
#define RPC_NCA_FLAGS_BROADCAST (UINT)2
#define RPC_NCA_FLAGS_MAYBE (UINT)4
#define RPCFLG_HAS_GUARANTEE (UINT)16
#define RPCFLG_WINRT_REMOTE_ASYNC (UINT)32
#define RPC_BUFFER_COMPLETE (UINT)4096
#define RPC_BUFFER_PARTIAL (UINT)8192
#define RPC_BUFFER_EXTRA (UINT)16384
#define RPC_BUFFER_ASYNC (UINT)32768
#define RPC_BUFFER_NONOTIFY (UINT)65536
#define RPCFLG_MESSAGE (UINT)16777216
#define RPCFLG_AUTO_COMPLETE (UINT)134217728
#define RPCFLG_LOCAL_CALL (UINT)268435456
#define RPCFLG_INPUT_SYNCHRONOUS (UINT)536870912
#define RPCFLG_ASYNCHRONOUS (UINT)1073741824
#define RPCFLG_NON_NDR (UINT)2147483648
#define RPCFLG_HAS_MULTI_SYNTAXES (UINT)33554432
#define RPCFLG_HAS_CALLBACK (UINT)67108864
#define RPCFLG_ACCESSIBILITY_BIT1 (UINT)1048576
#define RPCFLG_ACCESSIBILITY_BIT2 (UINT)2097152
#define RPCFLG_ACCESS_LOCAL (UINT)4194304
#define NDR_CUSTOM_OR_DEFAULT_ALLOCATOR (UINT)268435456
#define NDR_DEFAULT_ALLOCATOR (UINT)536870912
#define RPCFLG_NDR64_CONTAINS_ARM_LAYOUT (UINT)67108864
#define RPCFLG_SENDER_WAITING_FOR_REPLY (UINT)8388608
#define RPC_FLAGS_VALID_BIT (UINT)32768
#define NT351_INTERFACE_SIZE (UINT)64
#define RPC_INTERFACE_HAS_PIPES (UINT)1
#define RPC_SYSTEM_HANDLE_FREE_UNRETRIEVED (UINT)1
#define RPC_SYSTEM_HANDLE_FREE_RETRIEVED (UINT)2
#define RPC_SYSTEM_HANDLE_FREE_ALL (UINT)3
#define RPC_SYSTEM_HANDLE_FREE_ERROR_ON_CLOSE (UINT)4
#define TRANSPORT_TYPE_CN (UINT)1
#define TRANSPORT_TYPE_DG (UINT)2
#define TRANSPORT_TYPE_LPC (UINT)4
#define TRANSPORT_TYPE_WMSG (UINT)8
#define RPC_P_ADDR_FORMAT_TCP_IPV4 (UINT)1
#define RPC_P_ADDR_FORMAT_TCP_IPV6 (UINT)2
#define RPC_C_OPT_SESSION_ID (UINT)6
#define RPC_C_OPT_COOKIE_AUTH (UINT)7
#define RPC_C_OPT_RESOURCE_TYPE_UUID (UINT)8
#define RPC_PROXY_CONNECTION_TYPE_IN_PROXY (UINT)0
#define RPC_PROXY_CONNECTION_TYPE_OUT_PROXY (UINT)1
#define RPC_C_OPT_PRIVATE_SUPPRESS_WAKE (UINT)1
#define RPC_C_OPT_PRIVATE_DO_NOT_DISTURB (UINT)2
#define RPC_C_OPT_PRIVATE_BREAK_ON_SUSPEND (UINT)3
#define RPC_C_PROFILE_DEFAULT_ELT (UINT)0
#define RPC_C_PROFILE_ALL_ELT (UINT)1
#define RPC_C_PROFILE_MATCH_BY_IF (UINT)2
#define RPC_C_PROFILE_MATCH_BY_MBR (UINT)3
#define RPC_C_PROFILE_MATCH_BY_BOTH (UINT)4
#define RPC_C_NS_DEFAULT_EXP_AGE (INT)-1
#define TARGET_IS_NT100_OR_LATER (UINT)1
#define TARGET_IS_NT63_OR_LATER (UINT)1
#define TARGET_IS_NT62_OR_LATER (UINT)1
#define TARGET_IS_NT61_OR_LATER (UINT)1
#define TARGET_IS_NT60_OR_LATER (UINT)1
#define TARGET_IS_NT51_OR_LATER (UINT)1
#define TARGET_IS_NT50_OR_LATER (UINT)1
#define TARGET_IS_NT40_OR_LATER (UINT)1
#define TARGET_IS_NT351_OR_WIN95_OR_LATER (UINT)1
#define USER_CALL_IS_ASYNC (UINT)256
#define USER_CALL_NEW_CORRELATION_DESC (UINT)512
#define USER_MARSHAL_FC_BYTE (UINT)1
#define USER_MARSHAL_FC_CHAR (UINT)2
#define USER_MARSHAL_FC_SMALL (UINT)3
#define USER_MARSHAL_FC_USMALL (UINT)4
#define USER_MARSHAL_FC_WCHAR (UINT)5
#define USER_MARSHAL_FC_SHORT (UINT)6
#define USER_MARSHAL_FC_USHORT (UINT)7
#define USER_MARSHAL_FC_LONG (UINT)8
#define USER_MARSHAL_FC_ULONG (UINT)9
#define USER_MARSHAL_FC_FLOAT (UINT)10
#define USER_MARSHAL_FC_HYPER (UINT)11
#define USER_MARSHAL_FC_DOUBLE (UINT)12
#define MidlInterceptionInfoVersionOne (INT)1
#define MidlWinrtTypeSerializationInfoVersionOne (INT)1

//--------------------------------------------------------------------------------
// Section: Types (171)
//--------------------------------------------------------------------------------
typedef int NDR_SCONTEXT_1;

typedef enum {
    RPC_C_QOS_CAPABILITIES_DEFAULT = 0,
    RPC_C_QOS_CAPABILITIES_MUTUAL_AUTH = 1,
    RPC_C_QOS_CAPABILITIES_MAKE_FULLSIC = 2,
    RPC_C_QOS_CAPABILITIES_ANY_AUTHORITY = 4,
    RPC_C_QOS_CAPABILITIES_IGNORE_DELEGATE_FAILURE = 8,
    RPC_C_QOS_CAPABILITIES_LOCAL_MA_HINT = 16,
    RPC_C_QOS_CAPABILITIES_SCHANNEL_FULL_AUTH_IDENTITY = 32,
} RPC_C_QOS_CAPABILITIES;

typedef enum {
    RPC_C_QOS_IDENTITY_STATIC = 0,
    RPC_C_QOS_IDENTITY_DYNAMIC = 1,
} RPC_C_QOS_IDENTITY;

typedef enum {
    RPC_C_AUTHN_INFO_NONE = 0,
    RPC_C_AUTHN_INFO_TYPE_HTTP = 1,
} RPC_C_AUTHN_INFO_TYPE;

typedef enum {
    RPC_C_HTTP_FLAG_USE_SSL = 1,
    RPC_C_HTTP_FLAG_USE_FIRST_AUTH_SCHEME = 2,
    RPC_C_HTTP_FLAG_IGNORE_CERT_CN_INVALID = 8,
    RPC_C_HTTP_FLAG_ENABLE_CERT_REVOCATION_CHECK = 16,
} RPC_C_HTTP_FLAGS;

typedef enum {
    RPC_C_HTTP_AUTHN_TARGET_SERVER = 1,
    RPC_C_HTTP_AUTHN_TARGET_PROXY = 2,
} RPC_C_HTTP_AUTHN_TARGET;

typedef enum {
    RPC_S_INVALID_STRING_BINDING = 1700,
    RPC_S_WRONG_KIND_OF_BINDING = 1701,
    RPC_S_INVALID_BINDING = 1702,
    RPC_S_PROTSEQ_NOT_SUPPORTED = 1703,
    RPC_S_INVALID_RPC_PROTSEQ = 1704,
    RPC_S_INVALID_STRING_UUID = 1705,
    RPC_S_INVALID_ENDPOINT_FORMAT = 1706,
    RPC_S_INVALID_NET_ADDR = 1707,
    RPC_S_NO_ENDPOINT_FOUND = 1708,
    RPC_S_INVALID_TIMEOUT = 1709,
    RPC_S_OBJECT_NOT_FOUND = 1710,
    RPC_S_ALREADY_REGISTERED = 1711,
    RPC_S_TYPE_ALREADY_REGISTERED = 1712,
    RPC_S_ALREADY_LISTENING = 1713,
    RPC_S_NO_PROTSEQS_REGISTERED = 1714,
    RPC_S_NOT_LISTENING = 1715,
    RPC_S_UNKNOWN_MGR_TYPE = 1716,
    RPC_S_UNKNOWN_IF = 1717,
    RPC_S_NO_BINDINGS = 1718,
    RPC_S_NO_PROTSEQS = 1719,
    RPC_S_CANT_CREATE_ENDPOINT = 1720,
    RPC_S_OUT_OF_RESOURCES = 1721,
    RPC_S_SERVER_UNAVAILABLE = 1722,
    RPC_S_SERVER_TOO_BUSY = 1723,
    RPC_S_INVALID_NETWORK_OPTIONS = 1724,
    RPC_S_NO_CALL_ACTIVE = 1725,
    RPC_S_CALL_FAILED = 1726,
    RPC_S_CALL_FAILED_DNE = 1727,
    RPC_S_PROTOCOL_ERROR = 1728,
    RPC_S_PROXY_ACCESS_DENIED = 1729,
    RPC_S_UNSUPPORTED_TRANS_SYN = 1730,
    RPC_S_UNSUPPORTED_TYPE = 1732,
    RPC_S_INVALID_TAG = 1733,
    RPC_S_INVALID_BOUND = 1734,
    RPC_S_NO_ENTRY_NAME = 1735,
    RPC_S_INVALID_NAME_SYNTAX = 1736,
    RPC_S_UNSUPPORTED_NAME_SYNTAX = 1737,
    RPC_S_UUID_NO_ADDRESS = 1739,
    RPC_S_DUPLICATE_ENDPOINT = 1740,
    RPC_S_UNKNOWN_AUTHN_TYPE = 1741,
    RPC_S_MAX_CALLS_TOO_SMALL = 1742,
    RPC_S_STRING_TOO_LONG = 1743,
    RPC_S_PROTSEQ_NOT_FOUND = 1744,
    RPC_S_PROCNUM_OUT_OF_RANGE = 1745,
    RPC_S_BINDING_HAS_NO_AUTH = 1746,
    RPC_S_UNKNOWN_AUTHN_SERVICE = 1747,
    RPC_S_UNKNOWN_AUTHN_LEVEL = 1748,
    RPC_S_INVALID_AUTH_IDENTITY = 1749,
    RPC_S_UNKNOWN_AUTHZ_SERVICE = 1750,
    EPT_S_INVALID_ENTRY = 1751,
    EPT_S_CANT_PERFORM_OP = 1752,
    EPT_S_NOT_REGISTERED = 1753,
    RPC_S_NOTHING_TO_EXPORT = 1754,
    RPC_S_INCOMPLETE_NAME = 1755,
    RPC_S_INVALID_VERS_OPTION = 1756,
    RPC_S_NO_MORE_MEMBERS = 1757,
    RPC_S_NOT_ALL_OBJS_UNEXPORTED = 1758,
    RPC_S_INTERFACE_NOT_FOUND = 1759,
    RPC_S_ENTRY_ALREADY_EXISTS = 1760,
    RPC_S_ENTRY_NOT_FOUND = 1761,
    RPC_S_NAME_SERVICE_UNAVAILABLE = 1762,
    RPC_S_INVALID_NAF_ID = 1763,
    RPC_S_CANNOT_SUPPORT = 1764,
    RPC_S_NO_CONTEXT_AVAILABLE = 1765,
    RPC_S_INTERNAL_ERROR = 1766,
    RPC_S_ZERO_DIVIDE = 1767,
    RPC_S_ADDRESS_ERROR = 1768,
    RPC_S_FP_DIV_ZERO = 1769,
    RPC_S_FP_UNDERFLOW = 1770,
    RPC_S_FP_OVERFLOW = 1771,
    RPC_S_CALL_IN_PROGRESS = 1791,
    RPC_S_NO_MORE_BINDINGS = 1806,
    RPC_S_NO_INTERFACES = 1817,
    RPC_S_CALL_CANCELLED = 1818,
    RPC_S_BINDING_INCOMPLETE = 1819,
    RPC_S_COMM_FAILURE = 1820,
    RPC_S_UNSUPPORTED_AUTHN_LEVEL = 1821,
    RPC_S_NO_PRINC_NAME = 1822,
    RPC_S_NOT_RPC_ERROR = 1823,
    RPC_S_UUID_LOCAL_ONLY = 1824,
    RPC_S_SEC_PKG_ERROR = 1825,
    RPC_S_NOT_CANCELLED = 1826,
    RPC_S_COOKIE_AUTH_FAILED = 1833,
    RPC_S_DO_NOT_DISTURB = 1834,
    RPC_S_SYSTEM_HANDLE_COUNT_EXCEEDED = 1835,
    RPC_S_SYSTEM_HANDLE_TYPE_MISMATCH = 1836,
    RPC_S_GROUP_MEMBER_NOT_FOUND = 1898,
    EPT_S_CANT_CREATE = 1899,
    RPC_S_INVALID_OBJECT = 1900,
    RPC_S_SEND_INCOMPLETE = 1913,
    RPC_S_INVALID_ASYNC_HANDLE = 1914,
    RPC_S_INVALID_ASYNC_CALL = 1915,
    RPC_S_ENTRY_TYPE_MISMATCH = 1922,
    RPC_S_NOT_ALL_OBJS_EXPORTED = 1923,
    RPC_S_INTERFACE_NOT_EXPORTED = 1924,
    RPC_S_PROFILE_NOT_ADDED = 1925,
    RPC_S_PRF_ELT_NOT_ADDED = 1926,
    RPC_S_PRF_ELT_NOT_REMOVED = 1927,
    RPC_S_GRP_ELT_NOT_ADDED = 1928,
    RPC_S_GRP_ELT_NOT_REMOVED = 1929,
} RPC_STATUS;

typedef enum {
    RPC_C_NS_SYNTAX_DEFAULT = 0,
    RPC_C_NS_SYNTAX_DCE = 3,
} GROUP_NAME_SYNTAX;

typedef enum {
    SEC_WINNT_AUTH_IDENTITY_ANSI = 1,
    SEC_WINNT_AUTH_IDENTITY_UNICODE = 2,
} SEC_WINNT_AUTH_IDENTITY;

typedef enum {
    RPC_BHO_NONCAUSAL = 1,
    RPC_BHO_DONTLINGER = 2,
} RPC_BINDING_HANDLE_OPTIONS_FLAGS;

typedef int _NDR_ASYNC_MESSAGE;

typedef int _NDR_CORRELATION_INFO;

typedef int NDR_ALLOC_ALL_NODES_CONTEXT;

typedef int NDR_POINTER_QUEUE_STATE;

typedef int _NDR_PROC_CONTEXT;

typedef int RPC_BINDING_VECTOR;

typedef int UUID_VECTOR;

typedef int RPC_IF_ID;

typedef int RPC_PROTSEQ_VECTORA;

typedef int RPC_PROTSEQ_VECTORW;

typedef int RPC_POLICY;

typedef int RPC_OBJECT_INQ_FN;

typedef int RPC_IF_CALLBACK_FN;

typedef int RPC_SECURITY_CALLBACK_FN;

typedef int RPC_STATS_VECTOR;

typedef int RPC_IF_ID_VECTOR;

typedef int RPC_SECURITY_QOS;

typedef int SEC_WINNT_AUTH_IDENTITY_W;

typedef int SEC_WINNT_AUTH_IDENTITY_A;

typedef int RPC_HTTP_TRANSPORT_CREDENTIALS_W;

typedef int RPC_HTTP_TRANSPORT_CREDENTIALS_A;

typedef int RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W;

typedef int RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A;

typedef int RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W;

typedef int RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A;

typedef int RPC_SECURITY_QOS_V2_W;

typedef int RPC_SECURITY_QOS_V2_A;

typedef int RPC_SECURITY_QOS_V3_W;

typedef int RPC_SECURITY_QOS_V3_A;

typedef int RPC_SECURITY_QOS_V4_W;

typedef int RPC_SECURITY_QOS_V4_A;

typedef int RPC_SECURITY_QOS_V5_W;

typedef int RPC_SECURITY_QOS_V5_A;

typedef int RPC_BINDING_HANDLE_TEMPLATE_V1_W;

typedef int RPC_BINDING_HANDLE_TEMPLATE_V1_A;

typedef int RPC_BINDING_HANDLE_SECURITY_V1_W;

typedef int RPC_BINDING_HANDLE_SECURITY_V1_A;

typedef int RPC_BINDING_HANDLE_OPTIONS_V1;

typedef enum {
    RPCHTTP_RS_REDIRECT = 1,
    RPCHTTP_RS_ACCESS_1 = 2,
    RPCHTTP_RS_SESSION = 3,
    RPCHTTP_RS_ACCESS_2 = 4,
    RPCHTTP_RS_INTERFACE = 5,
} RPC_HTTP_REDIRECTOR_STAGE;

typedef int RPC_NEW_HTTP_PROXY_CHANNEL;

typedef int RPC_HTTP_PROXY_FREE_STRING;

typedef int RPC_AUTH_KEY_RETRIEVAL_FN;

typedef int RPC_CLIENT_INFORMATION1;

typedef int RPC_MGMT_AUTHORIZATION_FN;

typedef int RPC_ENDPOINT_TEMPLATEW;

typedef int RPC_ENDPOINT_TEMPLATEA;

typedef int RPC_INTERFACE_TEMPLATEA;

typedef int RPC_INTERFACE_TEMPLATEW;

typedef int RPC_INTERFACE_GROUP_IDLE_CALLBACK_FN;

typedef int RPC_VERSION;

typedef int RPC_SYNTAX_IDENTIFIER;

typedef int RPC_MESSAGE;

typedef int RPC_FORWARD_FUNCTION;

typedef enum {
    PROTOCOL_NOT_LOADED = 1,
    PROTOCOL_LOADED = 2,
    PROTOCOL_ADDRESS_CHANGE = 3,
} RPC_ADDRESS_CHANGE_TYPE;

typedef int RPC_ADDRESS_CHANGE_FN;

typedef int RPC_DISPATCH_FUNCTION;

typedef int RPC_DISPATCH_TABLE;

typedef int RPC_PROTSEQ_ENDPOINT;

typedef int RPC_SERVER_INTERFACE;

typedef int RPC_CLIENT_INTERFACE;

typedef enum {
    MarshalDirectionMarshal = 0,
    MarshalDirectionUnmarshal = 1,
} LRPC_SYSTEM_HANDLE_MARSHAL_DIRECTION;

typedef int PRPC_RUNDOWN;

typedef int RPC_SEC_CONTEXT_KEY_INFO;

typedef int RPC_TRANSFER_SYNTAX;

typedef int RPCLT_PDU_FILTER_FUNC;

typedef int RPC_SETFILTER_FUNC;

typedef int RPC_BLOCKING_FN;

typedef int RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR;

typedef int RDR_CALLOUT_STATE;

typedef int I_RpcProxyIsValidMachineFn;

typedef int I_RpcProxyGetClientAddressFn;

typedef int I_RpcProxyGetConnectionTimeoutFn;

typedef int I_RpcPerformCalloutFn;

typedef int I_RpcFreeCalloutStateFn;

typedef int I_RpcProxyGetClientSessionAndResourceUUID;

typedef int I_RpcProxyFilterIfFn;

typedef enum {
    RpcCurrentUniqueUser = 1,
    RpcBackEndConnectionAttempts = 2,
    RpcBackEndConnectionFailed = 3,
    RpcRequestsPerSecond = 4,
    RpcIncomingConnections = 5,
    RpcIncomingBandwidth = 6,
    RpcOutgoingBandwidth = 7,
    RpcAttemptedLbsDecisions = 8,
    RpcFailedLbsDecisions = 9,
    RpcAttemptedLbsMessages = 10,
    RpcFailedLbsMessages = 11,
    RpcLastCounter = 12,
} RpcProxyPerfCounters;

typedef int I_RpcProxyUpdatePerfCounterFn;

typedef int I_RpcProxyUpdatePerfCounterBackendServerFn;

typedef int I_RpcProxyCallbackInterface;

typedef enum {
    RpcNotificationTypeNone = 0,
    RpcNotificationTypeEvent = 1,
    RpcNotificationTypeApc = 2,
    RpcNotificationTypeIoc = 3,
    RpcNotificationTypeHwnd = 4,
    RpcNotificationTypeCallback = 5,
} RPC_NOTIFICATION_TYPES;

typedef enum {
    RpcCallComplete = 0,
    RpcSendComplete = 1,
    RpcReceiveComplete = 2,
    RpcClientDisconnect = 3,
    RpcClientCancel = 4,
} RPC_ASYNC_EVENT;

typedef int PFN_RPCNOTIFICATION_ROUTINE;

typedef int RPC_ASYNC_NOTIFICATION_INFO;

typedef int RPC_ASYNC_STATE;

typedef enum {
    eeptAnsiString = 1,
    eeptUnicodeString = 2,
    eeptLongVal = 3,
    eeptShortVal = 4,
    eeptPointerVal = 5,
    eeptNone = 6,
    eeptBinary = 7,
} ExtendedErrorParamTypes;

typedef int BinaryParam;

typedef int RPC_EE_INFO_PARAM;

typedef int RPC_EXTENDED_ERROR_INFO;

typedef int RPC_ERROR_ENUM_HANDLE;

typedef enum {
    rlafInvalid = 0,
    rlafIPv4 = 1,
    rlafIPv6 = 2,
} RpcLocalAddressFormat;

typedef int RPC_CALL_LOCAL_ADDRESS_V1;

typedef int RPC_CALL_ATTRIBUTES_V1_W;

typedef int RPC_CALL_ATTRIBUTES_V1_A;

typedef enum {
    rctInvalid = 0,
    rctNormal = 1,
    rctTraining = 2,
    rctGuaranteed = 3,
} RpcCallType;

typedef enum {
    rcclInvalid = 0,
    rcclLocal = 1,
    rcclRemote = 2,
    rcclClientUnknownLocality = 3,
} RpcCallClientLocality;

typedef int RPC_CALL_ATTRIBUTES_V2_W;

typedef int RPC_CALL_ATTRIBUTES_V2_A;

typedef int RPC_CALL_ATTRIBUTES_V3_W;

typedef int RPC_CALL_ATTRIBUTES_V3_A;

typedef enum {
    RpcNotificationCallNone = 0,
    RpcNotificationClientDisconnect = 1,
    RpcNotificationCallCancel = 2,
} RPC_NOTIFICATIONS;

typedef int __AnonymousRecord_rpcndr_L275_C9;

typedef int NDR_RUNDOWN;

typedef int NDR_NOTIFY_ROUTINE;

typedef int NDR_NOTIFY2_ROUTINE;

typedef int SCONTEXT_QUEUE;

typedef int EXPR_EVAL;

typedef int ARRAY_INFO;

typedef int MIDL_STUB_MESSAGE;

typedef int GENERIC_BINDING_ROUTINE;

typedef int GENERIC_UNBIND_ROUTINE;

typedef int GENERIC_BINDING_ROUTINE_PAIR;

typedef int GENERIC_BINDING_INFO;

typedef int XMIT_HELPER_ROUTINE;

typedef int XMIT_ROUTINE_QUINTUPLE;

typedef int USER_MARSHAL_SIZING_ROUTINE;

typedef int USER_MARSHAL_MARSHALLING_ROUTINE;

typedef int USER_MARSHAL_UNMARSHALLING_ROUTINE;

typedef int USER_MARSHAL_FREEING_ROUTINE;

typedef int USER_MARSHAL_ROUTINE_QUADRUPLE;

typedef enum {
    USER_MARSHAL_CB_BUFFER_SIZE = 0,
    USER_MARSHAL_CB_MARSHALL = 1,
    USER_MARSHAL_CB_UNMARSHALL = 2,
    USER_MARSHAL_CB_FREE = 3,
} USER_MARSHAL_CB_TYPE;

typedef int USER_MARSHAL_CB;

typedef int MALLOC_FREE_STRUCT;

typedef int COMM_FAULT_OFFSETS;

typedef enum {
    IDL_CS_NO_CONVERT = 0,
    IDL_CS_IN_PLACE_CONVERT = 1,
    IDL_CS_NEW_BUFFER_CONVERT = 2,
} IDL_CS_CONVERT;

typedef int CS_TYPE_NET_SIZE_ROUTINE;

typedef int CS_TYPE_LOCAL_SIZE_ROUTINE;

typedef int CS_TYPE_TO_NETCS_ROUTINE;

typedef int CS_TYPE_FROM_NETCS_ROUTINE;

typedef int CS_TAG_GETTING_ROUTINE;

typedef int NDR_CS_SIZE_CONVERT_ROUTINES;

typedef int NDR_CS_ROUTINES;

typedef int NDR_EXPR_DESC;

typedef int MIDL_STUB_DESC;

typedef int MIDL_FORMAT_STRING;

typedef int STUB_THUNK;

typedef int SERVER_ROUTINE;

typedef int MIDL_METHOD_PROPERTY;

typedef int MIDL_METHOD_PROPERTY_MAP;

typedef int MIDL_INTERFACE_METHOD_PROPERTIES;

typedef int MIDL_SERVER_INFO;

typedef int MIDL_STUBLESS_PROXY_INFO;

typedef int MIDL_SYNTAX_INFO;

typedef int CLIENT_CALL_RETURN;

typedef enum {
    XLAT_SERVER = 1,
    XLAT_CLIENT = 2,
} XLAT_SIDE;

typedef int FULL_PTR_XLAT_TABLES;

typedef enum {
    SYSTEM_HANDLE_FILE = 0,
    SYSTEM_HANDLE_SEMAPHORE = 1,
    SYSTEM_HANDLE_EVENT = 2,
    SYSTEM_HANDLE_MUTEX = 3,
    SYSTEM_HANDLE_PROCESS = 4,
    SYSTEM_HANDLE_TOKEN = 5,
    SYSTEM_HANDLE_SECTION = 6,
    SYSTEM_HANDLE_REG_KEY = 7,
    SYSTEM_HANDLE_THREAD = 8,
    SYSTEM_HANDLE_COMPOSITION_OBJECT = 9,
    SYSTEM_HANDLE_SOCKET = 10,
    SYSTEM_HANDLE_JOB = 11,
    SYSTEM_HANDLE_PIPE = 12,
    SYSTEM_HANDLE_MAX = 12,
    SYSTEM_HANDLE_INVALID = 255,
} system_handle_t;

typedef int MIDL_INTERCEPTION_INFO;

typedef int MIDL_WINRT_TYPE_SERIALIZATION_INFO;

typedef enum {
    STUB_UNMARSHAL = 0,
    STUB_CALL_SERVER = 1,
    STUB_MARSHAL = 2,
    STUB_CALL_SERVER_NO_HRESULT = 3,
} STUB_PHASE;

typedef enum {
    PROXY_CALCSIZE = 0,
    PROXY_GETBUFFER = 1,
    PROXY_MARSHAL = 2,
    PROXY_SENDRECEIVE = 3,
    PROXY_UNMARSHAL = 4,
} PROXY_PHASE;

typedef int RPC_CLIENT_ALLOC;

typedef int RPC_CLIENT_FREE;

typedef int NDR_USER_MARSHAL_INFO_LEVEL1;

typedef int NDR_USER_MARSHAL_INFO;

typedef enum {
    MES_ENCODE = 0,
    MES_DECODE = 1,
    MES_ENCODE_NDR64 = 2,
} MIDL_ES_CODE;

typedef enum {
    MES_INCREMENTAL_HANDLE = 0,
    MES_FIXED_BUFFER_HANDLE = 1,
    MES_DYNAMIC_BUFFER_HANDLE = 2,
} MIDL_ES_HANDLE_STYLE;

typedef int MIDL_ES_ALLOC;

typedef int MIDL_ES_WRITE;

typedef int MIDL_ES_READ;

typedef int MIDL_TYPE_PICKLING_INFO;


//--------------------------------------------------------------------------------
// Section: Functions (503)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void IUnknown_QueryInterface_Proxy();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void IUnknown_AddRef_Proxy();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void IUnknown_Release_Proxy();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingCopy();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingFree();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingSetOption();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingInqOption();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingFromStringBindingA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingFromStringBindingW();

/*RPC_STATUS*/void RpcSsGetContextBinding();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingInqObject();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingReset();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingSetObject();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtInqDefaultProtectLevel();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingToStringBindingA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingToStringBindingW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingVectorFree();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcStringBindingComposeA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcStringBindingComposeW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcStringBindingParseA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcStringBindingParseW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcStringFreeA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcStringFreeW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcIfInqId();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNetworkIsProtseqValidA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNetworkIsProtseqValidW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtInqComTimeout();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtSetComTimeout();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtSetCancelTimeout();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNetworkInqProtseqsA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNetworkInqProtseqsW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcObjectInqType();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcObjectSetInqFn();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcObjectSetType();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcProtseqVectorFreeA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcProtseqVectorFreeW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerInqBindings();

/*RPC_STATUS*/void RpcServerInqBindingsEx();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerInqIf();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerListen();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerRegisterIf();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcServerRegisterIfEx();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerRegisterIf2();

// TODO: this type is limited to platform 'windows8.0'
/*RPC_STATUS*/void RpcServerRegisterIf3();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerUnregisterIf();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcServerUnregisterIfEx();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerUseAllProtseqs();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerUseAllProtseqsEx();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerUseAllProtseqsIf();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcServerUseAllProtseqsIfEx();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerUseProtseqA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerUseProtseqExA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerUseProtseqW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerUseProtseqExW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerUseProtseqEpA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerUseProtseqEpExA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerUseProtseqEpW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerUseProtseqEpExW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerUseProtseqIfA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcServerUseProtseqIfExA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerUseProtseqIfW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcServerUseProtseqIfExW();

/*void*/void RpcServerYield();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtStatsVectorFree();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtInqStats();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtIsServerListening();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtStopServerListening();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtWaitServerListen();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtSetServerStackSize();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void RpcSsDontSerializeContext();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtEnableIdleCleanup();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtInqIfIds();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcIfIdVectorFree();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtInqServerPrincNameA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtInqServerPrincNameW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerInqDefaultPrincNameA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerInqDefaultPrincNameW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcEpResolveBinding();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingInqEntryNameA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingInqEntryNameW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*RPC_STATUS*/void RpcBindingCreateA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*RPC_STATUS*/void RpcBindingCreateW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*RPC_STATUS*/void RpcServerInqBindingHandle();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcImpersonateClient();

/*RPC_STATUS*/void RpcImpersonateClient2();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcRevertToSelfEx();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcRevertToSelf();

// TODO: this type is limited to platform 'windows10.0.10240'
/*RPC_STATUS*/void RpcImpersonateClientContainer();

// TODO: this type is limited to platform 'windows10.0.10240'
/*RPC_STATUS*/void RpcRevertContainerImpersonation();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingInqAuthClientA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingInqAuthClientW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingInqAuthClientExA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingInqAuthClientExW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingInqAuthInfoA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingInqAuthInfoW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingSetAuthInfoA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingSetAuthInfoExA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingSetAuthInfoW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingSetAuthInfoExW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingInqAuthInfoExA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingInqAuthInfoExW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerCompleteSecurityCallback();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerRegisterAuthInfoA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerRegisterAuthInfoW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcBindingServerFromClient();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void RpcRaiseException();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcTestCancel();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcServerTestCancel();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcCancelThread();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcCancelThreadEx();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void UuidCreate();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void UuidCreateSequential();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void UuidToStringA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void UuidFromStringA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void UuidToStringW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void UuidFromStringW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void UuidCompare();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void UuidCreateNil();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void UuidEqual();

// TODO: this type is limited to platform 'windows5.0'
/*u16*/void UuidHash();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void UuidIsNil();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcEpRegisterNoReplaceA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcEpRegisterNoReplaceW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcEpRegisterA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcEpRegisterW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcEpUnregister();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void DceErrorInqTextA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void DceErrorInqTextW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtEpEltInqBegin();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtEpEltInqDone();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtEpEltInqNextA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtEpEltInqNextW();

/*RPC_STATUS*/void RpcMgmtEpUnregister();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcMgmtSetAuthorizationFn();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void RpcExceptionFilter();

// TODO: this type is limited to platform 'windows8.0'
/*RPC_STATUS*/void RpcServerInterfaceGroupCreateW();

// TODO: this type is limited to platform 'windows8.0'
/*RPC_STATUS*/void RpcServerInterfaceGroupCreateA();

// TODO: this type is limited to platform 'windows8.0'
/*RPC_STATUS*/void RpcServerInterfaceGroupClose();

// TODO: this type is limited to platform 'windows8.0'
/*RPC_STATUS*/void RpcServerInterfaceGroupActivate();

// TODO: this type is limited to platform 'windows8.0'
/*RPC_STATUS*/void RpcServerInterfaceGroupDeactivate();

// TODO: this type is limited to platform 'windows8.0'
/*RPC_STATUS*/void RpcServerInterfaceGroupInqBindings();

/*RPC_STATUS*/void I_RpcNegotiateTransferSyntax();

/*RPC_STATUS*/void I_RpcGetBuffer();

/*RPC_STATUS*/void I_RpcGetBufferWithObject();

/*RPC_STATUS*/void I_RpcSendReceive();

/*RPC_STATUS*/void I_RpcFreeBuffer();

/*RPC_STATUS*/void I_RpcSend();

/*RPC_STATUS*/void I_RpcReceive();

/*RPC_STATUS*/void I_RpcFreePipeBuffer();

/*RPC_STATUS*/void I_RpcReallocPipeBuffer();

/*void*/void I_RpcRequestMutex();

/*void*/void I_RpcClearMutex();

/*void*/void I_RpcDeleteMutex();

/*?*c_void*/void I_RpcAllocate();

/*void*/void I_RpcFree();

/*void*/void I_RpcPauseExecution();

/*RPC_STATUS*/void I_RpcGetExtendedError();

/*RPC_STATUS*/void I_RpcSystemHandleTypeSpecificWork();

/*?*c_void*/void I_RpcGetCurrentCallHandle();

/*RPC_STATUS*/void I_RpcNsInterfaceExported();

/*RPC_STATUS*/void I_RpcNsInterfaceUnexported();

/*RPC_STATUS*/void I_RpcBindingToStaticStringBindingW();

/*RPC_STATUS*/void I_RpcBindingInqSecurityContext();

/*RPC_STATUS*/void I_RpcBindingInqSecurityContextKeyInfo();

/*RPC_STATUS*/void I_RpcBindingInqWireIdForSnego();

/*RPC_STATUS*/void I_RpcBindingInqMarshalledTargetInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void I_RpcBindingInqLocalClientPID();

/*RPC_STATUS*/void I_RpcBindingHandleToAsyncHandle();

/*RPC_STATUS*/void I_RpcNsBindingSetEntryNameW();

/*RPC_STATUS*/void I_RpcNsBindingSetEntryNameA();

/*RPC_STATUS*/void I_RpcServerUseProtseqEp2A();

/*RPC_STATUS*/void I_RpcServerUseProtseqEp2W();

/*RPC_STATUS*/void I_RpcServerUseProtseq2W();

/*RPC_STATUS*/void I_RpcServerUseProtseq2A();

/*RPC_STATUS*/void I_RpcServerStartService();

/*RPC_STATUS*/void I_RpcBindingInqDynamicEndpointW();

/*RPC_STATUS*/void I_RpcBindingInqDynamicEndpointA();

/*RPC_STATUS*/void I_RpcServerCheckClientRestriction();

/*RPC_STATUS*/void I_RpcBindingInqTransportType();

/*RPC_STATUS*/void I_RpcIfInqTransferSyntaxes();

/*RPC_STATUS*/void I_UuidCreate();

/*RPC_STATUS*/void I_RpcBindingCopy();

/*RPC_STATUS*/void I_RpcBindingIsClientLocal();

/*RPC_STATUS*/void I_RpcBindingCreateNP();

/*void*/void I_RpcSsDontSerializeContext();

/*RPC_STATUS*/void I_RpcServerRegisterForwardFunction();

/*?*RPC_ADDRESS_CHANGE_FN*/void I_RpcServerInqAddressChangeFn();

/*RPC_STATUS*/void I_RpcServerSetAddressChangeFn();

/*RPC_STATUS*/void I_RpcServerInqLocalConnAddress();

/*RPC_STATUS*/void I_RpcServerInqRemoteConnAddress();

/*void*/void I_RpcSessionStrictContextHandle();

/*RPC_STATUS*/void I_RpcTurnOnEEInfoPropagation();

/*RPC_STATUS*/void I_RpcServerInqTransportType();

/*i32*/void I_RpcMapWin32Status();

/*void*/void I_RpcRecordCalloutFailure();

/*RPC_STATUS*/void I_RpcMgmtEnableDedicatedThreadPool();

/*RPC_STATUS*/void I_RpcGetDefaultSD();

/*RPC_STATUS*/void I_RpcOpenClientProcess();

/*RPC_STATUS*/void I_RpcBindingIsServerLocal();

/*RPC_STATUS*/void I_RpcBindingSetPrivateOption();

/*RPC_STATUS*/void I_RpcServerSubscribeForDisconnectNotification();

/*RPC_STATUS*/void I_RpcServerGetAssociationID();

/*i32*/void I_RpcServerDisableExceptionFilter();

/*RPC_STATUS*/void I_RpcServerSubscribeForDisconnectNotification2();

/*RPC_STATUS*/void I_RpcServerUnsubscribeForDisconnectNotification();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingExportA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingUnexportA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingExportW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingUnexportW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingExportPnPA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingUnexportPnPA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingExportPnPW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingUnexportPnPW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingLookupBeginA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingLookupBeginW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingLookupNext();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingLookupDone();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsGroupDeleteA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsGroupMbrAddA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsGroupMbrRemoveA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsGroupMbrInqBeginA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsGroupMbrInqNextA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsGroupDeleteW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsGroupMbrAddW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsGroupMbrRemoveW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsGroupMbrInqBeginW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsGroupMbrInqNextW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsGroupMbrInqDone();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsProfileDeleteA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsProfileEltAddA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsProfileEltRemoveA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsProfileEltInqBeginA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsProfileEltInqNextA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsProfileDeleteW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsProfileEltAddW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsProfileEltRemoveW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsProfileEltInqBeginW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsProfileEltInqNextW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsProfileEltInqDone();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsEntryObjectInqBeginA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsEntryObjectInqBeginW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsEntryObjectInqNext();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsEntryObjectInqDone();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsEntryExpandNameA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsMgmtBindingUnexportA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsMgmtEntryCreateA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsMgmtEntryDeleteA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsMgmtEntryInqIfIdsA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsMgmtHandleSetExpAge();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsMgmtInqExpAge();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsMgmtSetExpAge();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsEntryExpandNameW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsMgmtBindingUnexportW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsMgmtEntryCreateW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsMgmtEntryDeleteW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsMgmtEntryInqIfIdsW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingImportBeginA();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingImportBeginW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingImportNext();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingImportDone();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcNsBindingSelect();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcAsyncRegisterInfo();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcAsyncInitializeHandle();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcAsyncGetCallStatus();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcAsyncCompleteCall();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcAsyncAbortCall();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcAsyncCancelCall();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcErrorStartEnumeration();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcErrorGetNextRecord();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcErrorEndEnumeration();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcErrorResetEnumeration();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcErrorGetNumberOfRecords();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcErrorSaveErrorInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcErrorLoadErrorInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcErrorAddRecord();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void RpcErrorClearInformation();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcGetAuthorizationContextForClient();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcFreeAuthorizationContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcSsContextLockExclusive();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcSsContextLockShared();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcServerInqCallAttributesW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*RPC_STATUS*/void RpcServerInqCallAttributesA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*RPC_STATUS*/void RpcServerSubscribeForNotification();

// TODO: this type is limited to platform 'windows6.0.6000'
/*RPC_STATUS*/void RpcServerUnsubscribeForNotification();

// TODO: this type is limited to platform 'windows6.0.6000'
/*RPC_STATUS*/void RpcBindingBind();

// TODO: this type is limited to platform 'windows6.0.6000'
/*RPC_STATUS*/void RpcBindingUnbind();

/*RPC_STATUS*/void I_RpcAsyncSetHandle();

/*RPC_STATUS*/void I_RpcAsyncAbortCall();

/*i32*/void I_RpcExceptionFilter();

/*RPC_STATUS*/void I_RpcBindingInqClientTokenAttributes();

/*?*c_void*/void NDRCContextBinding();

/*void*/void NDRCContextMarshall();

/*void*/void NDRCContextUnmarshall();

/*void*/void NDRSContextMarshall();

/*?*NDR_SCONTEXT_1*/void NDRSContextUnmarshall();

/*void*/void NDRSContextMarshallEx();

/*void*/void NDRSContextMarshall2();

/*?*NDR_SCONTEXT_1*/void NDRSContextUnmarshallEx();

/*?*NDR_SCONTEXT_1*/void NDRSContextUnmarshall2();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void RpcSsDestroyClientContext();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void NdrSimpleTypeMarshall();

// TODO: this type is limited to platform 'windows5.0'
/*?*u8*/void NdrPointerMarshall();

// TODO: this type is limited to platform 'windows5.0'
/*?*u8*/void NdrSimpleStructMarshall();

/*?*u8*/void NdrConformantStructMarshall();

/*?*u8*/void NdrConformantVaryingStructMarshall();

// TODO: this type is limited to platform 'windows5.0'
/*?*u8*/void NdrComplexStructMarshall();

/*?*u8*/void NdrFixedArrayMarshall();

/*?*u8*/void NdrConformantArrayMarshall();

/*?*u8*/void NdrConformantVaryingArrayMarshall();

/*?*u8*/void NdrVaryingArrayMarshall();

// TODO: this type is limited to platform 'windows5.0'
/*?*u8*/void NdrComplexArrayMarshall();

/*?*u8*/void NdrNonConformantStringMarshall();

// TODO: this type is limited to platform 'windows5.0'
/*?*u8*/void NdrConformantStringMarshall();

/*?*u8*/void NdrEncapsulatedUnionMarshall();

/*?*u8*/void NdrNonEncapsulatedUnionMarshall();

/*?*u8*/void NdrByteCountPointerMarshall();

/*?*u8*/void NdrXmitOrRepAsMarshall();

// TODO: this type is limited to platform 'windows5.0'
/*?*u8*/void NdrUserMarshalMarshall();

// TODO: this type is limited to platform 'windows5.0'
/*?*u8*/void NdrInterfacePointerMarshall();

/*void*/void NdrClientContextMarshall();

/*void*/void NdrServerContextMarshall();

/*void*/void NdrServerContextNewMarshall();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void NdrSimpleTypeUnmarshall();

/*?*u8*/void NdrRangeUnmarshall();

/*void*/void NdrCorrelationInitialize();

/*void*/void NdrCorrelationPass();

/*void*/void NdrCorrelationFree();

// TODO: this type is limited to platform 'windows5.0'
/*?*u8*/void NdrPointerUnmarshall();

// TODO: this type is limited to platform 'windows5.0'
/*?*u8*/void NdrSimpleStructUnmarshall();

/*?*u8*/void NdrConformantStructUnmarshall();

/*?*u8*/void NdrConformantVaryingStructUnmarshall();

// TODO: this type is limited to platform 'windows5.0'
/*?*u8*/void NdrComplexStructUnmarshall();

/*?*u8*/void NdrFixedArrayUnmarshall();

// TODO: this type is limited to platform 'windows5.0'
/*?*u8*/void NdrConformantArrayUnmarshall();

/*?*u8*/void NdrConformantVaryingArrayUnmarshall();

/*?*u8*/void NdrVaryingArrayUnmarshall();

// TODO: this type is limited to platform 'windows5.0'
/*?*u8*/void NdrComplexArrayUnmarshall();

/*?*u8*/void NdrNonConformantStringUnmarshall();

// TODO: this type is limited to platform 'windows5.0'
/*?*u8*/void NdrConformantStringUnmarshall();

/*?*u8*/void NdrEncapsulatedUnionUnmarshall();

/*?*u8*/void NdrNonEncapsulatedUnionUnmarshall();

/*?*u8*/void NdrByteCountPointerUnmarshall();

/*?*u8*/void NdrXmitOrRepAsUnmarshall();

// TODO: this type is limited to platform 'windows5.0'
/*?*u8*/void NdrUserMarshalUnmarshall();

// TODO: this type is limited to platform 'windows5.0'
/*?*u8*/void NdrInterfacePointerUnmarshall();

/*void*/void NdrClientContextUnmarshall();

/*?*NDR_SCONTEXT_1*/void NdrServerContextUnmarshall();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*NDR_SCONTEXT_1*/void NdrContextHandleInitialize();

/*?*NDR_SCONTEXT_1*/void NdrServerContextNewUnmarshall();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void NdrPointerBufferSize();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void NdrSimpleStructBufferSize();

/*void*/void NdrConformantStructBufferSize();

/*void*/void NdrConformantVaryingStructBufferSize();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void NdrComplexStructBufferSize();

/*void*/void NdrFixedArrayBufferSize();

/*void*/void NdrConformantArrayBufferSize();

/*void*/void NdrConformantVaryingArrayBufferSize();

/*void*/void NdrVaryingArrayBufferSize();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void NdrComplexArrayBufferSize();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void NdrConformantStringBufferSize();

/*void*/void NdrNonConformantStringBufferSize();

/*void*/void NdrEncapsulatedUnionBufferSize();

/*void*/void NdrNonEncapsulatedUnionBufferSize();

/*void*/void NdrByteCountPointerBufferSize();

/*void*/void NdrXmitOrRepAsBufferSize();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void NdrUserMarshalBufferSize();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void NdrInterfacePointerBufferSize();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void NdrContextHandleSize();

/*u32*/void NdrPointerMemorySize();

/*u32*/void NdrSimpleStructMemorySize();

/*u32*/void NdrConformantStructMemorySize();

/*u32*/void NdrConformantVaryingStructMemorySize();

/*u32*/void NdrComplexStructMemorySize();

/*u32*/void NdrFixedArrayMemorySize();

/*u32*/void NdrConformantArrayMemorySize();

/*u32*/void NdrConformantVaryingArrayMemorySize();

/*u32*/void NdrVaryingArrayMemorySize();

/*u32*/void NdrComplexArrayMemorySize();

/*u32*/void NdrConformantStringMemorySize();

/*u32*/void NdrNonConformantStringMemorySize();

/*u32*/void NdrEncapsulatedUnionMemorySize();

/*u32*/void NdrNonEncapsulatedUnionMemorySize();

/*u32*/void NdrXmitOrRepAsMemorySize();

/*u32*/void NdrUserMarshalMemorySize();

/*u32*/void NdrInterfacePointerMemorySize();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void NdrPointerFree();

/*void*/void NdrSimpleStructFree();

/*void*/void NdrConformantStructFree();

/*void*/void NdrConformantVaryingStructFree();

/*void*/void NdrComplexStructFree();

/*void*/void NdrFixedArrayFree();

/*void*/void NdrConformantArrayFree();

/*void*/void NdrConformantVaryingArrayFree();

/*void*/void NdrVaryingArrayFree();

/*void*/void NdrComplexArrayFree();

/*void*/void NdrEncapsulatedUnionFree();

/*void*/void NdrNonEncapsulatedUnionFree();

/*void*/void NdrByteCountPointerFree();

/*void*/void NdrXmitOrRepAsFree();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void NdrUserMarshalFree();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void NdrInterfacePointerFree();

/*void*/void NdrConvert2();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void NdrConvert();

/*?*u8*/void NdrUserMarshalSimpleTypeConvert();

/*void*/void NdrClientInitializeNew();

/*?*u8*/void NdrServerInitializeNew();

/*void*/void NdrServerInitializePartial();

/*void*/void NdrClientInitialize();

/*?*u8*/void NdrServerInitialize();

/*?*u8*/void NdrServerInitializeUnmarshall();

/*void*/void NdrServerInitializeMarshall();

/*?*u8*/void NdrGetBuffer();

/*?*u8*/void NdrNsGetBuffer();

/*?*u8*/void NdrSendReceive();

/*?*u8*/void NdrNsSendReceive();

/*void*/void NdrFreeBuffer();

/*HRESULT*/void NdrGetDcomProtocolVersion();

// TODO: this type is limited to platform 'windows5.0'
/*CLIENT_CALL_RETURN*/void NdrClientCall2();

// TODO: this type is limited to platform 'windows5.0'
/*CLIENT_CALL_RETURN*/void NdrAsyncClientCall();

// TODO: this type is limited to platform 'windows5.0'
/*CLIENT_CALL_RETURN*/void NdrDcomAsyncClientCall();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void NdrAsyncServerCall();

/*i32*/void NdrDcomAsyncStubCall();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void NdrStubCall2();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void NdrServerCall2();

/*RPC_STATUS*/void NdrMapCommAndFaultStatus();

// TODO: this type is limited to platform 'windows5.0'
/*?*c_void*/void RpcSsAllocate();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void RpcSsDisableAllocate();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void RpcSsEnableAllocate();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void RpcSsFree();

// TODO: this type is limited to platform 'windows5.0'
/*?*c_void*/void RpcSsGetThreadHandle();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void RpcSsSetClientAllocFree();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void RpcSsSetThreadHandle();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void RpcSsSwapClientAllocFree();

// TODO: this type is limited to platform 'windows5.0'
/*?*c_void*/void RpcSmAllocate();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcSmClientFree();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcSmDestroyClientContext();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcSmDisableAllocate();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcSmEnableAllocate();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcSmFree();

// TODO: this type is limited to platform 'windows5.0'
/*?*c_void*/void RpcSmGetThreadHandle();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcSmSetClientAllocFree();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcSmSetThreadHandle();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcSmSwapClientAllocFree();

/*void*/void NdrRpcSsEnableAllocate();

/*void*/void NdrRpcSsDisableAllocate();

/*void*/void NdrRpcSmSetClientToOsf();

/*?*c_void*/void NdrRpcSmClientAllocate();

/*void*/void NdrRpcSmClientFree();

/*?*c_void*/void NdrRpcSsDefaultAllocate();

/*void*/void NdrRpcSsDefaultFree();

/*?*FULL_PTR_XLAT_TABLES*/void NdrFullPointerXlatInit();

/*void*/void NdrFullPointerXlatFree();

/*?*c_void*/void NdrAllocate();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void NdrClearOutParameters();

// TODO: this type is limited to platform 'windows5.0'
/*?*c_void*/void NdrOleAllocate();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void NdrOleFree();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void NdrGetUserMarshalInfo();

/*RPC_STATUS*/void NdrCreateServerInterfaceFromStub();

// TODO: this type is limited to platform 'windows5.0'
/*CLIENT_CALL_RETURN*/void NdrClientCall3();

// TODO: this type is limited to platform 'windows5.1.2600'
/*CLIENT_CALL_RETURN*/void Ndr64AsyncClientCall();

/*CLIENT_CALL_RETURN*/void Ndr64DcomAsyncClientCall();

/*void*/void Ndr64AsyncServerCall64();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void Ndr64AsyncServerCallAll();

/*i32*/void Ndr64DcomAsyncStubCall();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void NdrStubCall3();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void NdrServerCallAll();

/*void*/void NdrServerCallNdr64();

/*void*/void NdrPartialIgnoreClientMarshall();

/*void*/void NdrPartialIgnoreServerUnmarshall();

/*void*/void NdrPartialIgnoreClientBufferSize();

/*void*/void NdrPartialIgnoreServerInitialize();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void RpcUserFree();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void MesEncodeIncrementalHandleCreate();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void MesDecodeIncrementalHandleCreate();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void MesIncrementalHandleReset();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void MesEncodeFixedBufferHandleCreate();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void MesEncodeDynBufferHandleCreate();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void MesDecodeBufferHandleCreate();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void MesBufferHandleReset();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void MesHandleFree();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void MesInqProcEncodingId();

/*usize*/void NdrMesSimpleTypeAlignSize();

/*void*/void NdrMesSimpleTypeDecode();

/*void*/void NdrMesSimpleTypeEncode();

/*usize*/void NdrMesTypeAlignSize();

/*void*/void NdrMesTypeEncode();

/*void*/void NdrMesTypeDecode();

/*usize*/void NdrMesTypeAlignSize2();

/*void*/void NdrMesTypeEncode2();

/*void*/void NdrMesTypeDecode2();

/*void*/void NdrMesTypeFree2();

/*void*/void NdrMesProcEncodeDecode();

// TODO: this type is limited to platform 'windows5.0'
/*CLIENT_CALL_RETURN*/void NdrMesProcEncodeDecode2();

/*usize*/void NdrMesTypeAlignSize3();

/*void*/void NdrMesTypeEncode3();

/*void*/void NdrMesTypeDecode3();

/*void*/void NdrMesTypeFree3();

/*CLIENT_CALL_RETURN*/void NdrMesProcEncodeDecode3();

/*void*/void NdrMesSimpleTypeDecodeAll();

/*void*/void NdrMesSimpleTypeEncodeAll();

/*usize*/void NdrMesSimpleTypeAlignSizeAll();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcCertGeneratePrincipalNameW();

// TODO: this type is limited to platform 'windows5.0'
/*RPC_STATUS*/void RpcCertGeneratePrincipalNameA();

