// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (122)
//--------------------------------------------------------------------------------
#define SERVICE_ALL_ACCESS (UINT)983551
#define SC_MANAGER_ALL_ACCESS (UINT)983103
#define SERVICE_NO_CHANGE (UINT)4294967295
#define SERVICE_CONTROL_STOP (UINT)1
#define SERVICE_CONTROL_PAUSE (UINT)2
#define SERVICE_CONTROL_CONTINUE (UINT)3
#define SERVICE_CONTROL_INTERROGATE (UINT)4
#define SERVICE_CONTROL_SHUTDOWN (UINT)5
#define SERVICE_CONTROL_PARAMCHANGE (UINT)6
#define SERVICE_CONTROL_NETBINDADD (UINT)7
#define SERVICE_CONTROL_NETBINDREMOVE (UINT)8
#define SERVICE_CONTROL_NETBINDENABLE (UINT)9
#define SERVICE_CONTROL_NETBINDDISABLE (UINT)10
#define SERVICE_CONTROL_DEVICEEVENT (UINT)11
#define SERVICE_CONTROL_HARDWAREPROFILECHANGE (UINT)12
#define SERVICE_CONTROL_POWEREVENT (UINT)13
#define SERVICE_CONTROL_SESSIONCHANGE (UINT)14
#define SERVICE_CONTROL_PRESHUTDOWN (UINT)15
#define SERVICE_CONTROL_TIMECHANGE (UINT)16
#define SERVICE_CONTROL_TRIGGEREVENT (UINT)32
#define SERVICE_CONTROL_LOWRESOURCES (UINT)96
#define SERVICE_CONTROL_SYSTEMLOWRESOURCES (UINT)97
#define SERVICE_ACCEPT_STOP (UINT)1
#define SERVICE_ACCEPT_PAUSE_CONTINUE (UINT)2
#define SERVICE_ACCEPT_SHUTDOWN (UINT)4
#define SERVICE_ACCEPT_PARAMCHANGE (UINT)8
#define SERVICE_ACCEPT_NETBINDCHANGE (UINT)16
#define SERVICE_ACCEPT_HARDWAREPROFILECHANGE (UINT)32
#define SERVICE_ACCEPT_POWEREVENT (UINT)64
#define SERVICE_ACCEPT_SESSIONCHANGE (UINT)128
#define SERVICE_ACCEPT_PRESHUTDOWN (UINT)256
#define SERVICE_ACCEPT_TIMECHANGE (UINT)512
#define SERVICE_ACCEPT_TRIGGEREVENT (UINT)1024
#define SERVICE_ACCEPT_USER_LOGOFF (UINT)2048
#define SERVICE_ACCEPT_LOWRESOURCES (UINT)8192
#define SERVICE_ACCEPT_SYSTEMLOWRESOURCES (UINT)16384
#define SC_MANAGER_CONNECT (UINT)1
#define SC_MANAGER_CREATE_SERVICE (UINT)2
#define SC_MANAGER_ENUMERATE_SERVICE (UINT)4
#define SC_MANAGER_LOCK (UINT)8
#define SC_MANAGER_QUERY_LOCK_STATUS (UINT)16
#define SC_MANAGER_MODIFY_BOOT_CONFIG (UINT)32
#define SERVICE_QUERY_CONFIG (UINT)1
#define SERVICE_CHANGE_CONFIG (UINT)2
#define SERVICE_QUERY_STATUS (UINT)4
#define SERVICE_ENUMERATE_DEPENDENTS (UINT)8
#define SERVICE_START (UINT)16
#define SERVICE_STOP (UINT)32
#define SERVICE_PAUSE_CONTINUE (UINT)64
#define SERVICE_INTERROGATE (UINT)128
#define SERVICE_USER_DEFINED_CONTROL (UINT)256
#define SERVICE_NOTIFY_STATUS_CHANGE_1 (UINT)1
#define SERVICE_NOTIFY_STATUS_CHANGE_2 (UINT)2
#define SERVICE_STOP_REASON_FLAG_MIN (UINT)0
#define SERVICE_STOP_REASON_FLAG_UNPLANNED (UINT)268435456
#define SERVICE_STOP_REASON_FLAG_CUSTOM (UINT)536870912
#define SERVICE_STOP_REASON_FLAG_PLANNED (UINT)1073741824
#define SERVICE_STOP_REASON_FLAG_MAX (UINT)2147483648
#define SERVICE_STOP_REASON_MAJOR_MIN (UINT)0
#define SERVICE_STOP_REASON_MAJOR_OTHER (UINT)65536
#define SERVICE_STOP_REASON_MAJOR_HARDWARE (UINT)131072
#define SERVICE_STOP_REASON_MAJOR_OPERATINGSYSTEM (UINT)196608
#define SERVICE_STOP_REASON_MAJOR_SOFTWARE (UINT)262144
#define SERVICE_STOP_REASON_MAJOR_APPLICATION (UINT)327680
#define SERVICE_STOP_REASON_MAJOR_NONE (UINT)393216
#define SERVICE_STOP_REASON_MAJOR_MAX (UINT)458752
#define SERVICE_STOP_REASON_MAJOR_MIN_CUSTOM (UINT)4194304
#define SERVICE_STOP_REASON_MAJOR_MAX_CUSTOM (UINT)16711680
#define SERVICE_STOP_REASON_MINOR_MIN (UINT)0
#define SERVICE_STOP_REASON_MINOR_OTHER (UINT)1
#define SERVICE_STOP_REASON_MINOR_MAINTENANCE (UINT)2
#define SERVICE_STOP_REASON_MINOR_INSTALLATION (UINT)3
#define SERVICE_STOP_REASON_MINOR_UPGRADE (UINT)4
#define SERVICE_STOP_REASON_MINOR_RECONFIG (UINT)5
#define SERVICE_STOP_REASON_MINOR_HUNG (UINT)6
#define SERVICE_STOP_REASON_MINOR_UNSTABLE (UINT)7
#define SERVICE_STOP_REASON_MINOR_DISK (UINT)8
#define SERVICE_STOP_REASON_MINOR_NETWORKCARD (UINT)9
#define SERVICE_STOP_REASON_MINOR_ENVIRONMENT (UINT)10
#define SERVICE_STOP_REASON_MINOR_HARDWARE_DRIVER (UINT)11
#define SERVICE_STOP_REASON_MINOR_OTHERDRIVER (UINT)12
#define SERVICE_STOP_REASON_MINOR_SERVICEPACK (UINT)13
#define SERVICE_STOP_REASON_MINOR_SOFTWARE_UPDATE (UINT)14
#define SERVICE_STOP_REASON_MINOR_SECURITYFIX (UINT)15
#define SERVICE_STOP_REASON_MINOR_SECURITY (UINT)16
#define SERVICE_STOP_REASON_MINOR_NETWORK_CONNECTIVITY (UINT)17
#define SERVICE_STOP_REASON_MINOR_WMI (UINT)18
#define SERVICE_STOP_REASON_MINOR_SERVICEPACK_UNINSTALL (UINT)19
#define SERVICE_STOP_REASON_MINOR_SOFTWARE_UPDATE_UNINSTALL (UINT)20
#define SERVICE_STOP_REASON_MINOR_SECURITYFIX_UNINSTALL (UINT)21
#define SERVICE_STOP_REASON_MINOR_MMC (UINT)22
#define SERVICE_STOP_REASON_MINOR_NONE (UINT)23
#define SERVICE_STOP_REASON_MINOR_MEMOTYLIMIT (UINT)24
#define SERVICE_STOP_REASON_MINOR_MAX (UINT)25
#define SERVICE_STOP_REASON_MINOR_MIN_CUSTOM (UINT)256
#define SERVICE_STOP_REASON_MINOR_MAX_CUSTOM (UINT)65535
#define SERVICE_CONTROL_STATUS_REASON_INFO (UINT)1
#define SERVICE_SID_TYPE_NONE (UINT)0
#define SERVICE_SID_TYPE_UNRESTRICTED (UINT)1
#define SERVICE_TRIGGER_TYPE_CUSTOM_SYSTEM_STATE_CHANGE (UINT)7
#define SERVICE_TRIGGER_TYPE_AGGREGATE (UINT)30
#define SERVICE_START_REASON_DEMAND (UINT)1
#define SERVICE_START_REASON_AUTO (UINT)2
#define SERVICE_START_REASON_TRIGGER (UINT)4
#define SERVICE_START_REASON_RESTART_ON_FAILURE (UINT)8
#define SERVICE_START_REASON_DELAYEDAUTO (UINT)16
#define SERVICE_DYNAMIC_INFORMATION_LEVEL_START_REASON (UINT)1
#define SERVICE_LAUNCH_PROTECTED_NONE (UINT)0
#define SERVICE_LAUNCH_PROTECTED_WINDOWS (UINT)1
#define SERVICE_LAUNCH_PROTECTED_WINDOWS_LIGHT (UINT)2
#define SERVICE_LAUNCH_PROTECTED_ANTIMALWARE_LIGHT (UINT)3
#define NETWORK_MANAGER_FIRST_IP_ADDRESS_ARRIVAL_GUID GUID { "4f27f2de-14e2-430b-a549-7cd48cbc8245" }
#define NETWORK_MANAGER_LAST_IP_ADDRESS_REMOVAL_GUID GUID { "cc4ba62a-162e-4648-847a-b6bdf993e335" }
#define DOMAIN_JOIN_GUID GUID { "1ce20aba-9851-4421-9430-1ddeb766e809" }
#define DOMAIN_LEAVE_GUID GUID { "ddaf516e-58c2-4866-9574-c3b615d42ea1" }
#define FIREWALL_PORT_OPEN_GUID GUID { "b7569e07-8421-4ee0-ad10-86915afdad09" }
#define FIREWALL_PORT_CLOSE_GUID GUID { "a144ed38-8e12-4de4-9d96-e64740b1a524" }
#define MACHINE_POLICY_PRESENT_GUID GUID { "659fcae6-5bdb-4da9-b1ff-ca2a178d46e0" }
#define USER_POLICY_PRESENT_GUID GUID { "54fb46c8-f089-464c-b1fd-59d1b62c3b50" }
#define RPC_INTERFACE_EVENT_GUID GUID { "bc90d167-9470-4139-a9ba-be0bbbf5b74d" }
#define NAMED_PIPE_EVENT_GUID GUID { "1f81d131-3fac-4537-9e0c-7e7b0c2f4b55" }
#define CUSTOM_SYSTEM_STATE_CHANGE_EVENT_GUID GUID { "2d7a2816-0c5e-45fc-9ce7-570e5ecde9c9" }

//--------------------------------------------------------------------------------
// Section: Types (66)
//--------------------------------------------------------------------------------
typedef enum {
    SERVICE_ACTIVE = 1,
    SERVICE_INACTIVE = 2,
    SERVICE_STATE_ALL = 3,
} ENUM_SERVICE_STATE;

typedef enum {
    SERVICE_ERROR_CRITICAL = 3,
    SERVICE_ERROR_IGNORE = 0,
    SERVICE_ERROR_NORMAL = 1,
    SERVICE_ERROR_SEVERE = 2,
} SERVICE_ERROR;

typedef enum {
    SERVICE_CONFIG_DELAYED_AUTO_START_INFO = 3,
    SERVICE_CONFIG_DESCRIPTION = 1,
    SERVICE_CONFIG_FAILURE_ACTIONS = 2,
    SERVICE_CONFIG_FAILURE_ACTIONS_FLAG = 4,
    SERVICE_CONFIG_PREFERRED_NODE = 9,
    SERVICE_CONFIG_PRESHUTDOWN_INFO = 7,
    SERVICE_CONFIG_REQUIRED_PRIVILEGES_INFO = 6,
    SERVICE_CONFIG_SERVICE_SID_INFO = 5,
    SERVICE_CONFIG_TRIGGER_INFO = 8,
    SERVICE_CONFIG_LAUNCH_PROTECTED = 12,
} SERVICE_CONFIG;

typedef enum {
    SERVICE_DRIVER = 11,
    SERVICE_FILE_SYSTEM_DRIVER_ = 2,
    SERVICE_KERNEL_DRIVER = 1,
    SERVICE_WIN32 = 48,
    SERVICE_WIN32_OWN_PROCESS_ = 16,
    SERVICE_WIN32_SHARE_PROCESS = 32,
    SERVICE_ADAPTER = 4,
    SERVICE_FILE_SYSTEM_DRIVER = 2,
    SERVICE_RECOGNIZER_DRIVER = 8,
    SERVICE_WIN32_OWN_PROCESS = 16,
    SERVICE_USER_OWN_PROCESS = 80,
    SERVICE_USER_SHARE_PROCESS = 96,
} ENUM_SERVICE_TYPE;

typedef enum {
    SERVICE_AUTO_START = 2,
    SERVICE_BOOT_START = 0,
    SERVICE_DEMAND_START = 3,
    SERVICE_DISABLED = 4,
    SERVICE_SYSTEM_START = 1,
} SERVICE_START_TYPE;

typedef enum {
    SERVICE_NOTIFY_CREATED = 128,
    SERVICE_NOTIFY_CONTINUE_PENDING = 16,
    SERVICE_NOTIFY_DELETE_PENDING = 512,
    SERVICE_NOTIFY_DELETED = 256,
    SERVICE_NOTIFY_PAUSE_PENDING = 32,
    SERVICE_NOTIFY_PAUSED = 64,
    SERVICE_NOTIFY_RUNNING = 8,
    SERVICE_NOTIFY_START_PENDING = 2,
    SERVICE_NOTIFY_STOP_PENDING = 4,
    SERVICE_NOTIFY_STOPPED = 1,
} SERVICE_NOTIFY;

typedef enum {
    SERVICE_RUNS_IN_NON_SYSTEM_OR_NOT_RUNNING = 0,
    SERVICE_RUNS_IN_SYSTEM_PROCESS = 1,
} SERVICE_RUNS_IN_PROCESS;

typedef enum {
    SERVICE_TRIGGER_ACTION_SERVICE_START = 1,
    SERVICE_TRIGGER_ACTION_SERVICE_STOP = 2,
} SERVICE_TRIGGER_ACTION;

typedef enum {
    SERVICE_TRIGGER_TYPE_CUSTOM = 20,
    SERVICE_TRIGGER_TYPE_DEVICE_INTERFACE_ARRIVAL = 1,
    SERVICE_TRIGGER_TYPE_DOMAIN_JOIN = 3,
    SERVICE_TRIGGER_TYPE_FIREWALL_PORT_EVENT = 4,
    SERVICE_TRIGGER_TYPE_GROUP_POLICY = 5,
    SERVICE_TRIGGER_TYPE_IP_ADDRESS_AVAILABILITY = 2,
    SERVICE_TRIGGER_TYPE_NETWORK_ENDPOINT = 6,
} SERVICE_TRIGGER_TYPE;

typedef enum {
    SERVICE_TRIGGER_DATA_TYPE_BINARY = 1,
    SERVICE_TRIGGER_DATA_TYPE_STRING = 2,
    SERVICE_TRIGGER_DATA_TYPE_LEVEL = 3,
    SERVICE_TRIGGER_DATA_TYPE_KEYWORD_ANY = 4,
    SERVICE_TRIGGER_DATA_TYPE_KEYWORD_ALL = 5,
} SERVICE_TRIGGER_SPECIFIC_DATA_ITEM_DATA_TYPE;

typedef enum {
    SERVICE_CONTINUE_PENDING = 5,
    SERVICE_PAUSE_PENDING = 6,
    SERVICE_PAUSED = 7,
    SERVICE_RUNNING = 4,
    SERVICE_START_PENDING = 2,
    SERVICE_STOP_PENDING = 3,
    SERVICE_STOPPED = 1,
} SERVICE_STATUS_CURRENT_STATE;

typedef int _SC_NOTIFICATION_REGISTRATION;

typedef int SERVICE_STATUS_HANDLE;

typedef int SERVICE_TRIGGER_CUSTOM_STATE_ID;

typedef int SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM;

typedef int SERVICE_DESCRIPTIONA;

typedef int SERVICE_DESCRIPTIONW;

typedef enum {
    SC_ACTION_NONE = 0,
    SC_ACTION_RESTART = 1,
    SC_ACTION_REBOOT = 2,
    SC_ACTION_RUN_COMMAND = 3,
    SC_ACTION_OWN_RESTART = 4,
} SC_ACTION_TYPE;

typedef int SC_ACTION;

typedef int SERVICE_FAILURE_ACTIONSA;

typedef int SERVICE_FAILURE_ACTIONSW;

typedef int SERVICE_DELAYED_AUTO_START_INFO;

typedef int SERVICE_FAILURE_ACTIONS_FLAG;

typedef int SERVICE_SID_INFO;

typedef int SERVICE_REQUIRED_PRIVILEGES_INFOA;

typedef int SERVICE_REQUIRED_PRIVILEGES_INFOW;

typedef int SERVICE_PRESHUTDOWN_INFO;

typedef int SERVICE_TRIGGER_SPECIFIC_DATA_ITEM;

typedef int SERVICE_TRIGGER;

typedef int SERVICE_TRIGGER_INFO;

typedef int SERVICE_PREFERRED_NODE_INFO;

typedef int SERVICE_TIMECHANGE_INFO;

typedef int SERVICE_LAUNCH_PROTECTED_INFO;

typedef enum {
    SC_STATUS_PROCESS_INFO = 0,
} SC_STATUS_TYPE;

typedef enum {
    SC_ENUM_PROCESS_INFO = 0,
} SC_ENUM_TYPE;

typedef int SERVICE_STATUS;

typedef int SERVICE_STATUS_PROCESS;

typedef int ENUM_SERVICE_STATUSA;

typedef int ENUM_SERVICE_STATUSW;

typedef int ENUM_SERVICE_STATUS_PROCESSA;

typedef int ENUM_SERVICE_STATUS_PROCESSW;

typedef int QUERY_SERVICE_LOCK_STATUSA;

typedef int QUERY_SERVICE_LOCK_STATUSW;

typedef int QUERY_SERVICE_CONFIGA;

typedef int QUERY_SERVICE_CONFIGW;

typedef int SERVICE_MAIN_FUNCTIONW;

typedef int SERVICE_MAIN_FUNCTIONA;

typedef int LPSERVICE_MAIN_FUNCTIONW;

typedef int LPSERVICE_MAIN_FUNCTIONA;

typedef int SERVICE_TABLE_ENTRYA;

typedef int SERVICE_TABLE_ENTRYW;

typedef int HANDLER_FUNCTION;

typedef int HANDLER_FUNCTION_EX;

typedef int LPHANDLER_FUNCTION;

typedef int LPHANDLER_FUNCTION_EX;

typedef int PFN_SC_NOTIFY_CALLBACK;

typedef int SERVICE_NOTIFY_1;

typedef int SERVICE_NOTIFY_2A;

typedef int SERVICE_NOTIFY_2W;

typedef int SERVICE_CONTROL_STATUS_REASON_PARAMSA;

typedef int SERVICE_CONTROL_STATUS_REASON_PARAMSW;

typedef int SERVICE_START_REASON;

typedef enum {
    SC_EVENT_DATABASE_CHANGE = 0,
    SC_EVENT_PROPERTY_CHANGE = 1,
    SC_EVENT_STATUS_CHANGE = 2,
} SC_EVENT_TYPE;

typedef int PSC_NOTIFICATION_CALLBACK;

typedef enum {
    ServiceRegistryStateParameters = 0,
    ServiceRegistryStatePersistent = 1,
    MaxServiceRegistryStateType = 2,
} SERVICE_REGISTRY_STATE_TYPE;

typedef enum {
    ServiceDirectoryPersistentState = 0,
    ServiceDirectoryTypeMax = 1,
} SERVICE_DIRECTORY_TYPE;


//--------------------------------------------------------------------------------
// Section: Functions (54)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetServiceBits();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ChangeServiceConfigA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ChangeServiceConfigW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ChangeServiceConfig2A();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ChangeServiceConfig2W();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CloseServiceHandle();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ControlService();

// TODO: this type is limited to platform 'windows5.1.2600'
/*SC_HANDLE*/void CreateServiceA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*SC_HANDLE*/void CreateServiceW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void DeleteService();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void EnumDependentServicesA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void EnumDependentServicesW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void EnumServicesStatusA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void EnumServicesStatusW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void EnumServicesStatusExA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void EnumServicesStatusExW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetServiceKeyNameA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetServiceKeyNameW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetServiceDisplayNameA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetServiceDisplayNameW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void LockServiceDatabase();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void NotifyBootConfigStatus();

// TODO: this type is limited to platform 'windows5.1.2600'
/*SC_HANDLE*/void OpenSCManagerA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*SC_HANDLE*/void OpenSCManagerW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*SC_HANDLE*/void OpenServiceA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*SC_HANDLE*/void OpenServiceW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void QueryServiceConfigA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void QueryServiceConfigW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void QueryServiceConfig2A();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void QueryServiceConfig2W();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void QueryServiceLockStatusA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void QueryServiceLockStatusW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void QueryServiceObjectSecurity();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void QueryServiceStatus();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void QueryServiceStatusEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*SERVICE_STATUS_HANDLE*/void RegisterServiceCtrlHandlerA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*SERVICE_STATUS_HANDLE*/void RegisterServiceCtrlHandlerW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*SERVICE_STATUS_HANDLE*/void RegisterServiceCtrlHandlerExA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*SERVICE_STATUS_HANDLE*/void RegisterServiceCtrlHandlerExW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetServiceObjectSecurity();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetServiceStatus();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void StartServiceCtrlDispatcherA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void StartServiceCtrlDispatcherW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void StartServiceA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void StartServiceW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void UnlockServiceDatabase();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void NotifyServiceStatusChangeA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void NotifyServiceStatusChangeW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void ControlServiceExA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void ControlServiceExW();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void QueryServiceDynamicInformation();

/*u32*/void WaitServiceState();

// TODO: this type is limited to platform 'windows10.0.19041'
/*u32*/void GetServiceRegistryStateKey();

// TODO: this type is limited to platform 'windows10.0.19041'
/*u32*/void GetServiceDirectory();

