// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (16)
//--------------------------------------------------------------------------------
#define PRIVATE_NAMESPACE_FLAG_DESTROY (UINT)1
#define PROC_THREAD_ATTRIBUTE_REPLACE_VALUE (UINT)1
#define THREAD_POWER_THROTTLING_CURRENT_VERSION (UINT)1
#define THREAD_POWER_THROTTLING_EXECUTION_SPEED (UINT)1
#define PME_CURRENT_VERSION (UINT)1
#define PME_FAILFAST_ON_COMMIT_FAIL_DISABLE (UINT)0
#define PME_FAILFAST_ON_COMMIT_FAIL_ENABLE (UINT)1
#define PROCESS_POWER_THROTTLING_CURRENT_VERSION (UINT)1
#define PROCESS_POWER_THROTTLING_EXECUTION_SPEED (UINT)1
#define PROCESS_LEAP_SECOND_INFO_FLAG_ENABLE_SIXTY_SECOND (UINT)1
#define CREATE_MUTEX_INITIAL_OWNER (UINT)1
#define CREATE_WAITABLE_TIMER_MANUAL_RESET (UINT)1
#define CREATE_WAITABLE_TIMER_HIGH_RESOLUTION (UINT)2
#define SYNCHRONIZATION_BARRIER_FLAGS_SPIN_ONLY (UINT)1
#define SYNCHRONIZATION_BARRIER_FLAGS_BLOCK_ONLY (UINT)2
#define SYNCHRONIZATION_BARRIER_FLAGS_NO_DELETE (UINT)4

//--------------------------------------------------------------------------------
// Section: Types (49)
//--------------------------------------------------------------------------------
typedef enum {
    THREAD_CREATE_RUN_IMMEDIATELY = 0,
    THREAD_CREATE_SUSPENDED = 4,
    STACK_SIZE_PARAM_IS_A_RESERVATION = 65536,
} THREAD_CREATION_FLAGS;

typedef enum {
    THREAD_MODE_BACKGROUND_BEGIN = 65536,
    THREAD_MODE_BACKGROUND_END = 131072,
    THREAD_PRIORITY_ABOVE_NORMAL = 1,
    THREAD_PRIORITY_BELOW_NORMAL = -1,
    THREAD_PRIORITY_HIGHEST = 2,
    THREAD_PRIORITY_IDLE = -15,
    THREAD_PRIORITY_LOWEST = -2,
    THREAD_PRIORITY_NORMAL = 0,
    THREAD_PRIORITY_TIME_CRITICAL = 15,
} THREAD_PRIORITY;

typedef enum {
    WT_EXECUTEDEFAULT = 0,
    WT_EXECUTEINIOTHREAD = 1,
    WT_EXECUTEINPERSISTENTTHREAD = 128,
    WT_EXECUTEINWAITTHREAD = 4,
    WT_EXECUTELONGFUNCTION = 16,
    WT_EXECUTEONLYONCE = 8,
    WT_TRANSFER_IMPERSONATION = 256,
    WT_EXECUTEINTIMERTHREAD = 32,
} WORKER_THREAD_FLAGS;

typedef enum {
    CREATE_EVENT_INITIAL_SET = 2,
    CREATE_EVENT_MANUAL_RESET = 1,
} CREATE_EVENT;

typedef enum {
    LOGON_WITH_PROFILE = 1,
    LOGON_NETCREDENTIALS_ONLY = 2,
} CREATE_PROCESS_LOGON_FLAGS;

typedef enum {
    MWMO_NONE = 0,
    MWMO_ALERTABLE = 2,
    MWMO_INPUTAVAILABLE = 4,
    MWMO_WAITALL = 1,
} MSG_WAIT_FOR_MULTIPLE_OBJECTS_EX_FLAGS;

typedef enum {
    PROCESS_AFFINITY_DISABLE_AUTO_UPDATE = 0,
    PROCESS_AFFINITY_ENABLE_AUTO_UPDATE = 1,
} PROCESS_AFFINITY_AUTO_UPDATE_FLAGS;

typedef enum {
    PROCESS_DEP_ENABLE = 1,
    PROCESS_DEP_DISABLE_ATL_THUNK_EMULATION = 2,
    PROCESS_DEP_NONE = 0,
} PROCESS_DEP_FLAGS;

typedef enum {
    PROCESS_NAME_WIN32 = 0,
    PROCESS_NAME_NATIVE = 1,
} PROCESS_NAME_FORMAT;

typedef enum {
    PF_ARM_64BIT_LOADSTORE_ATOMIC = 25,
    PF_ARM_DIVIDE_INSTRUCTION_AVAILABLE = 24,
    PF_ARM_EXTERNAL_CACHE_AVAILABLE = 26,
    PF_ARM_FMAC_INSTRUCTIONS_AVAILABLE = 27,
    PF_ARM_VFP_32_REGISTERS_AVAILABLE = 18,
    PF_3DNOW_INSTRUCTIONS_AVAILABLE = 7,
    PF_CHANNELS_ENABLED = 16,
    PF_COMPARE_EXCHANGE_DOUBLE = 2,
    PF_COMPARE_EXCHANGE128 = 14,
    PF_COMPARE64_EXCHANGE128 = 15,
    PF_FASTFAIL_AVAILABLE = 23,
    PF_FLOATING_POINT_EMULATED = 1,
    PF_FLOATING_POINT_PRECISION_ERRATA = 0,
    PF_MMX_INSTRUCTIONS_AVAILABLE = 3,
    PF_NX_ENABLED = 12,
    PF_PAE_ENABLED = 9,
    PF_RDTSC_INSTRUCTION_AVAILABLE = 8,
    PF_RDWRFSGSBASE_AVAILABLE = 22,
    PF_SECOND_LEVEL_ADDRESS_TRANSLATION = 20,
    PF_SSE3_INSTRUCTIONS_AVAILABLE = 13,
    PF_VIRT_FIRMWARE_ENABLED = 21,
    PF_XMMI_INSTRUCTIONS_AVAILABLE = 6,
    PF_XMMI64_INSTRUCTIONS_AVAILABLE = 10,
    PF_XSAVE_ENABLED = 17,
    PF_ARM_V8_INSTRUCTIONS_AVAILABLE = 29,
    PF_ARM_V8_CRYPTO_INSTRUCTIONS_AVAILABLE = 30,
    PF_ARM_V8_CRC32_INSTRUCTIONS_AVAILABLE = 31,
    PF_ARM_V81_ATOMIC_INSTRUCTIONS_AVAILABLE = 34,
} PROCESSOR_FEATURE_ID;

typedef enum {
    GR_GDIOBJECTS = 0,
    GR_GDIOBJECTS_PEAK = 2,
    GR_USEROBJECTS = 1,
    GR_USEROBJECTS_PEAK = 4,
} GET_GUI_RESOURCES_FLAGS;

typedef enum {
    STARTF_FORCEONFEEDBACK = 64,
    STARTF_FORCEOFFFEEDBACK = 128,
    STARTF_PREVENTPINNING = 8192,
    STARTF_RUNFULLSCREEN = 32,
    STARTF_TITLEISAPPID = 4096,
    STARTF_TITLEISLINKNAME = 2048,
    STARTF_UNTRUSTEDSOURCE = 32768,
    STARTF_USECOUNTCHARS = 8,
    STARTF_USEFILLATTRIBUTE = 16,
    STARTF_USEHOTKEY = 512,
    STARTF_USEPOSITION = 4,
    STARTF_USESHOWWINDOW = 1,
    STARTF_USESIZE = 2,
    STARTF_USESTDHANDLES = 256,
} STARTUPINFOW_FLAGS;

typedef enum {
    MEMORY_PRIORITY_VERY_LOW = 1,
    MEMORY_PRIORITY_LOW = 2,
    MEMORY_PRIORITY_MEDIUM = 3,
    MEMORY_PRIORITY_BELOW_NORMAL = 4,
    MEMORY_PRIORITY_NORMAL = 5,
} MEMORY_PRIORITY;

typedef enum {
    PROTECTION_LEVEL_WINTCB_LIGHT = 0,
    PROTECTION_LEVEL_WINDOWS = 1,
    PROTECTION_LEVEL_WINDOWS_LIGHT = 2,
    PROTECTION_LEVEL_ANTIMALWARE_LIGHT = 3,
    PROTECTION_LEVEL_LSA_LIGHT = 4,
    PROTECTION_LEVEL_WINTCB = 5,
    PROTECTION_LEVEL_CODEGEN_LIGHT = 6,
    PROTECTION_LEVEL_AUTHENTICODE = 7,
    PROTECTION_LEVEL_PPL_APP = 8,
    PROTECTION_LEVEL_NONE = 4294967294,
} PROCESS_PROTECTION_LEVEL;

typedef enum {
    THREAD_TERMINATE = 1,
    THREAD_SUSPEND_RESUME = 2,
    THREAD_GET_CONTEXT = 8,
    THREAD_SET_CONTEXT = 16,
    THREAD_SET_INFORMATION = 32,
    THREAD_QUERY_INFORMATION = 64,
    THREAD_SET_THREAD_TOKEN = 128,
    THREAD_IMPERSONATE = 256,
    THREAD_DIRECT_IMPERSONATION = 512,
    THREAD_SET_LIMITED_INFORMATION = 1024,
    THREAD_QUERY_LIMITED_INFORMATION = 2048,
    THREAD_RESUME = 4096,
    THREAD_ALL_ACCESS = 2097151,
    THREAD_DELETE = 65536,
    THREAD_READ_CONTROL = 131072,
    THREAD_WRITE_DAC = 262144,
    THREAD_WRITE_OWNER = 524288,
    THREAD_SYNCHRONIZE = 1048576,
    THREAD_STANDARD_RIGHTS_REQUIRED = 983040,
} THREAD_ACCESS_RIGHTS;

typedef enum {
    DEBUG_PROCESS = 1,
    DEBUG_ONLY_THIS_PROCESS = 2,
    CREATE_SUSPENDED = 4,
    DETACHED_PROCESS = 8,
    CREATE_NEW_CONSOLE = 16,
    NORMAL_PRIORITY_CLASS = 32,
    IDLE_PRIORITY_CLASS = 64,
    HIGH_PRIORITY_CLASS = 128,
    REALTIME_PRIORITY_CLASS = 256,
    CREATE_NEW_PROCESS_GROUP = 512,
    CREATE_UNICODE_ENVIRONMENT = 1024,
    CREATE_SEPARATE_WOW_VDM = 2048,
    CREATE_SHARED_WOW_VDM = 4096,
    CREATE_FORCEDOS = 8192,
    BELOW_NORMAL_PRIORITY_CLASS = 16384,
    ABOVE_NORMAL_PRIORITY_CLASS = 32768,
    INHERIT_PARENT_AFFINITY = 65536,
    INHERIT_CALLER_PRIORITY = 131072,
    CREATE_PROTECTED_PROCESS = 262144,
    EXTENDED_STARTUPINFO_PRESENT = 524288,
    PROCESS_MODE_BACKGROUND_BEGIN = 1048576,
    PROCESS_MODE_BACKGROUND_END = 2097152,
    CREATE_SECURE_PROCESS = 4194304,
    CREATE_BREAKAWAY_FROM_JOB = 16777216,
    CREATE_PRESERVE_CODE_AUTHZ_LEVEL = 33554432,
    CREATE_DEFAULT_ERROR_MODE = 67108864,
    CREATE_NO_WINDOW = 134217728,
    PROFILE_USER = 268435456,
    PROFILE_KERNEL = 536870912,
    PROFILE_SERVER = 1073741824,
    CREATE_IGNORE_SYSTEM_DEFAULT = 2147483648,
} PROCESS_CREATION_FLAGS;

typedef enum {
    PROCESS_TERMINATE = 1,
    PROCESS_CREATE_THREAD = 2,
    PROCESS_SET_SESSIONID = 4,
    PROCESS_VM_OPERATION = 8,
    PROCESS_VM_READ = 16,
    PROCESS_VM_WRITE = 32,
    PROCESS_DUP_HANDLE = 64,
    PROCESS_CREATE_PROCESS = 128,
    PROCESS_SET_QUOTA = 256,
    PROCESS_SET_INFORMATION = 512,
    PROCESS_QUERY_INFORMATION = 1024,
    PROCESS_SUSPEND_RESUME = 2048,
    PROCESS_QUERY_LIMITED_INFORMATION = 4096,
    PROCESS_SET_LIMITED_INFORMATION = 8192,
    PROCESS_ALL_ACCESS = 2097151,
    PROCESS_DELETE = 65536,
    PROCESS_READ_CONTROL = 131072,
    PROCESS_WRITE_DAC = 262144,
    PROCESS_WRITE_OWNER = 524288,
    PROCESS_SYNCHRONIZE = 1048576,
    PROCESS_STANDARD_RIGHTS_REQUIRED = 983040,
} PROCESS_ACCESS_RIGHTS;

typedef enum {
    WAIT_OBJECT_0 = 0,
    WAIT_ABANDONED = 128,
    WAIT_ABANDONED_0 = 128,
    WAIT_IO_COMPLETION = 192,
    WAIT_TIMEOUT = 258,
    WAIT_FAILED = 4294967295,
} WAIT_RETURN_CAUSE;

typedef int TimerQueueHandle;

typedef int PTP_POOL;

typedef int NamespaceHandle;

typedef int BoundaryDescriptorHandle;

typedef int LPPROC_THREAD_ATTRIBUTE_LIST;

typedef int PINIT_ONCE_FN;

typedef int PTIMERAPCROUTINE;

typedef int PROCESS_INFORMATION;

typedef int STARTUPINFOA;

typedef int STARTUPINFOW;

typedef enum {
    ThreadMemoryPriority = 0,
    ThreadAbsoluteCpuPriority = 1,
    ThreadDynamicCodePolicy = 2,
    ThreadPowerThrottling = 3,
    ThreadInformationClassMax = 4,
} THREAD_INFORMATION_CLASS;

typedef int MEMORY_PRIORITY_INFORMATION;

typedef int THREAD_POWER_THROTTLING_STATE;

typedef enum {
    ProcessMemoryPriority = 0,
    ProcessMemoryExhaustionInfo = 1,
    ProcessAppMemoryInfo = 2,
    ProcessInPrivateInfo = 3,
    ProcessPowerThrottling = 4,
    ProcessReservedValue1 = 5,
    ProcessTelemetryCoverageInfo = 6,
    ProcessProtectionLevelInfo = 7,
    ProcessLeapSecondInfo = 8,
    ProcessInformationClassMax = 9,
} PROCESS_INFORMATION_CLASS;

typedef int APP_MEMORY_INFORMATION;

typedef enum {
    PMETypeFailFastOnCommitFailure = 0,
    PMETypeMax = 1,
} PROCESS_MEMORY_EXHAUSTION_TYPE;

typedef int PROCESS_MEMORY_EXHAUSTION_INFO;

typedef int PROCESS_POWER_THROTTLING_STATE;

typedef int PROCESS_PROTECTION_LEVEL_INFORMATION;

typedef int PROCESS_LEAP_SECOND_INFO;

typedef int PTP_WIN32_IO_CALLBACK;

typedef int UMS_SCHEDULER_STARTUP_INFO;

typedef int UMS_SYSTEM_THREAD_INFORMATION;

typedef int STARTUPINFOEXA;

typedef int STARTUPINFOEXW;

typedef int PEB_LDR_DATA;

typedef int RTL_USER_PROCESS_PARAMETERS;

typedef int PEB;

typedef int PROCESS_BASIC_INFORMATION;

typedef enum {
    ProcessBasicInformation = 0,
    ProcessDebugPort = 7,
    ProcessWow64Information = 26,
    ProcessImageFileName = 27,
    ProcessBreakOnTermination = 29,
} PROCESSINFOCLASS;

typedef enum {
    ThreadIsIoPending = 16,
} THREADINFOCLASS;


//--------------------------------------------------------------------------------
// Section: Functions (276)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AttachThreadInput();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void WaitForInputIdle();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void MsgWaitForMultipleObjects();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void MsgWaitForMultipleObjectsEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void GetGuiResources();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void IsImmersiveProcess();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void SetProcessRestrictionExemption();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FlsAlloc();

// TODO: this type is limited to platform 'windows6.0.6000'
/*?*c_void*/void FlsGetValue();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void FlsSetValue();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void FlsFree();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void IsThreadAFiber();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void InitializeSRWLock();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void ReleaseSRWLockExclusive();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void ReleaseSRWLockShared();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void AcquireSRWLockExclusive();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void AcquireSRWLockShared();

// TODO: this type is limited to platform 'windows6.1'
/*BOOLEAN*/void TryAcquireSRWLockExclusive();

// TODO: this type is limited to platform 'windows6.1'
/*BOOLEAN*/void TryAcquireSRWLockShared();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void InitializeCriticalSection();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void EnterCriticalSection();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void LeaveCriticalSection();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void InitializeCriticalSectionAndSpinCount();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void InitializeCriticalSectionEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void SetCriticalSectionSpinCount();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void TryEnterCriticalSection();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void DeleteCriticalSection();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void InitOnceInitialize();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void InitOnceExecuteOnce();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void InitOnceBeginInitialize();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void InitOnceComplete();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void InitializeConditionVariable();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void WakeConditionVariable();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void WakeAllConditionVariable();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void SleepConditionVariableCS();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void SleepConditionVariableSRW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetEvent();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ResetEvent();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ReleaseSemaphore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ReleaseMutex();

// TODO: this type is limited to platform 'windows5.1.2600'
/*WAIT_RETURN_CAUSE*/void WaitForSingleObject();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void SleepEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*WAIT_RETURN_CAUSE*/void WaitForSingleObjectEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*WAIT_RETURN_CAUSE*/void WaitForMultipleObjectsEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void CreateMutexA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void CreateMutexW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void OpenMutexW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void CreateEventA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void CreateEventW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void OpenEventA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void OpenEventW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void OpenSemaphoreW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void OpenWaitableTimerW();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void SetWaitableTimerEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetWaitableTimer();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CancelWaitableTimer();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HANDLE*/void CreateMutexExA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HANDLE*/void CreateMutexExW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HANDLE*/void CreateEventExA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HANDLE*/void CreateEventExW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HANDLE*/void CreateSemaphoreExW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HANDLE*/void CreateWaitableTimerExW();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void EnterSynchronizationBarrier();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void InitializeSynchronizationBarrier();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void DeleteSynchronizationBarrier();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void Sleep();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void WaitOnAddress();

// TODO: this type is limited to platform 'windows8.0'
/*void*/void WakeByAddressSingle();

// TODO: this type is limited to platform 'windows8.0'
/*void*/void WakeByAddressAll();

// TODO: this type is limited to platform 'windows5.1.2600'
/*WAIT_RETURN_CAUSE*/void WaitForMultipleObjects();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void CreateSemaphoreW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void CreateWaitableTimerW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void InitializeSListHead();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*SLIST_ENTRY*/void InterlockedPopEntrySList();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*SLIST_ENTRY*/void InterlockedPushEntrySList();

// TODO: this type is limited to platform 'windows8.0'
/*?*SLIST_ENTRY*/void InterlockedPushListSListEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*SLIST_ENTRY*/void InterlockedFlushSList();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u16*/void QueryDepthSList();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void QueueUserAPC();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetProcessTimes();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void GetCurrentProcess();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void GetCurrentProcessId();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void ExitProcess();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void TerminateProcess();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetExitCodeProcess();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SwitchToThread();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void CreateThread();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void CreateRemoteThread();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void GetCurrentThread();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void GetCurrentThreadId();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void OpenThread();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetThreadPriority();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetThreadPriorityBoost();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetThreadPriorityBoost();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void GetThreadPriority();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void ExitThread();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void TerminateThread();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetExitCodeThread();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void SuspendThread();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ResumeThread();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void TlsAlloc();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void TlsGetValue();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void TlsSetValue();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void TlsFree();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CreateProcessA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CreateProcessW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetProcessShutdownParameters();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void GetProcessVersion();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void GetStartupInfoW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CreateProcessAsUserW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetThreadToken();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void OpenProcessToken();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void OpenThreadToken();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetPriorityClass();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void GetPriorityClass();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void SetThreadStackGuarantee();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void GetProcessId();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void GetThreadId();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void FlushProcessWriteBuffers();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void GetProcessIdOfThread();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void InitializeProcThreadAttributeList();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void DeleteProcThreadAttributeList();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void UpdateProcThreadAttribute();

/*BOOL*/void SetProcessDynamicEHContinuationTargets();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void SetProcessAffinityUpdateMode();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void QueryProcessAffinityUpdateMode();

// TODO: this type is limited to platform 'windows6.1'
/*HANDLE*/void CreateRemoteThreadEx();

// TODO: this type is limited to platform 'windows8.0'
/*void*/void GetCurrentThreadStackLimits();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void GetProcessMitigationPolicy();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void SetProcessMitigationPolicy();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetThreadTimes();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void OpenProcess();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsProcessorFeaturePresent();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetProcessHandleCount();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void GetCurrentProcessorNumber();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void SetThreadIdealProcessorEx();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void GetThreadIdealProcessorEx();

// TODO: this type is limited to platform 'windows6.1'
/*void*/void GetCurrentProcessorNumberEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetProcessPriorityBoost();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetProcessPriorityBoost();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetThreadIOPendingFlag();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetSystemTimes();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void GetThreadInformation();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void SetThreadInformation();

// TODO: this type is limited to platform 'windows8.1'
/*BOOL*/void IsProcessCritical();

// TODO: this type is limited to platform 'windows8.1'
/*BOOL*/void SetProtectedPolicy();

// TODO: this type is limited to platform 'windows8.1'
/*BOOL*/void QueryProtectedPolicy();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void SetThreadIdealProcessor();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void SetProcessInformation();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void GetProcessInformation();

/*BOOL*/void GetSystemCpuSetInformation();

/*BOOL*/void GetProcessDefaultCpuSets();

/*BOOL*/void SetProcessDefaultCpuSets();

/*BOOL*/void GetThreadSelectedCpuSets();

/*BOOL*/void SetThreadSelectedCpuSets();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CreateProcessAsUserA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetProcessShutdownParameters();

// TODO: this type is limited to platform 'windows10.0.14393'
/*HRESULT*/void SetThreadDescription();

// TODO: this type is limited to platform 'windows10.0.14393'
/*HRESULT*/void GetThreadDescription();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void QueueUserWorkItem();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void UnregisterWaitEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void CreateTimerQueue();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CreateTimerQueueTimer();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ChangeTimerQueueTimer();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void DeleteTimerQueueTimer();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void DeleteTimerQueueEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*PTP_POOL*/void CreateThreadpool();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void SetThreadpoolThreadMaximum();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void SetThreadpoolThreadMinimum();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void SetThreadpoolStackInformation();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void QueryThreadpoolStackInformation();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void CloseThreadpool();

// TODO: this type is limited to platform 'windows6.0.6000'
/*isize*/void CreateThreadpoolCleanupGroup();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void CloseThreadpoolCleanupGroupMembers();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void CloseThreadpoolCleanupGroup();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void SetEventWhenCallbackReturns();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void ReleaseSemaphoreWhenCallbackReturns();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void ReleaseMutexWhenCallbackReturns();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void LeaveCriticalSectionWhenCallbackReturns();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void FreeLibraryWhenCallbackReturns();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void CallbackMayRunLong();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void DisassociateCurrentThreadFromCallback();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void TrySubmitThreadpoolCallback();

// TODO: this type is limited to platform 'windows6.0.6000'
/*?*TP_WORK*/void CreateThreadpoolWork();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void SubmitThreadpoolWork();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void WaitForThreadpoolWorkCallbacks();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void CloseThreadpoolWork();

// TODO: this type is limited to platform 'windows6.0.6000'
/*?*TP_TIMER*/void CreateThreadpoolTimer();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void SetThreadpoolTimer();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void IsThreadpoolTimerSet();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void WaitForThreadpoolTimerCallbacks();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void CloseThreadpoolTimer();

// TODO: this type is limited to platform 'windows6.0.6000'
/*?*TP_WAIT*/void CreateThreadpoolWait();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void SetThreadpoolWait();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void WaitForThreadpoolWaitCallbacks();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void CloseThreadpoolWait();

// TODO: this type is limited to platform 'windows6.0.6000'
/*?*TP_IO*/void CreateThreadpoolIo();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void StartThreadpoolIo();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void CancelThreadpoolIo();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void WaitForThreadpoolIoCallbacks();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void CloseThreadpoolIo();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void SetThreadpoolTimerEx();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void SetThreadpoolWaitEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void IsWow64Process();

/*u16*/void Wow64SetThreadDefaultGuestMachine();

// TODO: this type is limited to platform 'windows10.0.10586'
/*BOOL*/void IsWow64Process2();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void Wow64SuspendThread();

/*NamespaceHandle*/void CreatePrivateNamespaceW();

/*NamespaceHandle*/void OpenPrivateNamespaceW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOLEAN*/void ClosePrivateNamespace();

/*BoundaryDescriptorHandle*/void CreateBoundaryDescriptorW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void AddSIDToBoundaryDescriptor();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void DeleteBoundaryDescriptor();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetNumaHighestNodeNumber();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void GetNumaNodeProcessorMaskEx();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void GetNumaProximityNodeEx();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void GetProcessGroupAffinity();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void GetThreadGroupAffinity();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void SetThreadGroupAffinity();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetProcessAffinityMask();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetProcessAffinityMask();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetProcessIoCounters();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetProcessWorkingSetSize();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetProcessWorkingSetSize();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void SwitchToFiber();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void DeleteFiber();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void ConvertFiberToThread();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void CreateFiberEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*?*c_void*/void ConvertThreadToFiberEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void CreateFiber();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void ConvertThreadToFiber();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void CreateUmsCompletionList();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void DequeueUmsCompletionListItems();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void GetUmsCompletionListEvent();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void ExecuteUmsThread();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void UmsThreadYield();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void DeleteUmsCompletionList();

// TODO: this type is limited to platform 'windows6.1'
/*?*c_void*/void GetCurrentUmsThread();

// TODO: this type is limited to platform 'windows6.1'
/*?*c_void*/void GetNextUmsListItem();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void QueryUmsThreadInformation();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void SetUmsThreadInformation();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void DeleteUmsThreadContext();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void CreateUmsThreadContext();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void EnterUmsSchedulingMode();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void GetUmsSystemThreadInformation();

// TODO: this type is limited to platform 'windows5.1.2600'
/*usize*/void SetThreadAffinityMask();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void SetProcessDEPPolicy();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetProcessDEPPolicy();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void PulseEvent();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void WinExec();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void CreateSemaphoreA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HANDLE*/void CreateSemaphoreExA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void QueryFullProcessImageNameA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void QueryFullProcessImageNameW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CreateProcessWithLogonW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void CreateProcessWithTokenW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void RegisterWaitForSingleObject();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void UnregisterWait();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void DeleteTimerQueue();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NamespaceHandle*/void CreatePrivateNamespaceA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*NamespaceHandle*/void OpenPrivateNamespaceA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BoundaryDescriptorHandle*/void CreateBoundaryDescriptorA();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void AddIntegrityLabelToBoundaryDescriptor();

// TODO: this type is limited to platform 'windows6.1'
/*u16*/void GetActiveProcessorGroupCount();

// TODO: this type is limited to platform 'windows6.1'
/*u16*/void GetMaximumProcessorGroupCount();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void GetActiveProcessorCount();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void GetMaximumProcessorCount();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetNumaProcessorNode();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void GetNumaNodeNumberFromHandle();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void GetNumaProcessorNodeEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetNumaNodeProcessorMask();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetNumaAvailableMemoryNode();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void GetNumaAvailableMemoryNodeEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetNumaProximityNode();

/*NTSTATUS*/void NtQueryInformationProcess();

/*NTSTATUS*/void NtQueryInformationThread();

