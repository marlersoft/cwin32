// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (6)
//--------------------------------------------------------------------------------
#define EVT_VARIANT_TYPE_MASK (UINT)127
#define EVT_VARIANT_TYPE_ARRAY (UINT)128
#define EVT_READ_ACCESS (UINT)1
#define EVT_WRITE_ACCESS (UINT)2
#define EVT_CLEAR_ACCESS (UINT)4
#define EVT_ALL_ACCESS (UINT)7

//--------------------------------------------------------------------------------
// Section: Types (32)
//--------------------------------------------------------------------------------
typedef enum {
    EVENTLOG_SUCCESS = 0,
    EVENTLOG_AUDIT_FAILURE = 16,
    EVENTLOG_AUDIT_SUCCESS = 8,
    EVENTLOG_ERROR_TYPE = 1,
    EVENTLOG_INFORMATION_TYPE = 4,
    EVENTLOG_WARNING_TYPE = 2,
} REPORT_EVENT_TYPE;

typedef enum {
    EVENTLOG_SEEK_READ = 2,
    EVENTLOG_SEQUENTIAL_READ = 1,
} READ_EVENT_LOG_READ_FLAGS;

typedef int EventLogHandle;

typedef int EventSourceHandle;

typedef enum {
    EvtVarTypeNull = 0,
    EvtVarTypeString = 1,
    EvtVarTypeAnsiString = 2,
    EvtVarTypeSByte = 3,
    EvtVarTypeByte = 4,
    EvtVarTypeInt16 = 5,
    EvtVarTypeUInt16 = 6,
    EvtVarTypeInt32 = 7,
    EvtVarTypeUInt32 = 8,
    EvtVarTypeInt64 = 9,
    EvtVarTypeUInt64 = 10,
    EvtVarTypeSingle = 11,
    EvtVarTypeDouble = 12,
    EvtVarTypeBoolean = 13,
    EvtVarTypeBinary = 14,
    EvtVarTypeGuid = 15,
    EvtVarTypeSizeT = 16,
    EvtVarTypeFileTime = 17,
    EvtVarTypeSysTime = 18,
    EvtVarTypeSid = 19,
    EvtVarTypeHexInt32 = 20,
    EvtVarTypeHexInt64 = 21,
    EvtVarTypeEvtHandle = 32,
    EvtVarTypeEvtXml = 35,
} EVT_VARIANT_TYPE;

typedef int EVT_VARIANT;

typedef enum {
    EvtRpcLogin = 1,
} EVT_LOGIN_CLASS;

typedef enum {
    EvtRpcLoginAuthDefault = 0,
    EvtRpcLoginAuthNegotiate = 1,
    EvtRpcLoginAuthKerberos = 2,
    EvtRpcLoginAuthNTLM = 3,
} EVT_RPC_LOGIN_FLAGS;

typedef int EVT_RPC_LOGIN;

typedef enum {
    EvtQueryChannelPath = 1,
    EvtQueryFilePath = 2,
    EvtQueryForwardDirection = 256,
    EvtQueryReverseDirection = 512,
    EvtQueryTolerateQueryErrors = 4096,
} EVT_QUERY_FLAGS;

typedef enum {
    EvtSeekRelativeToFirst = 1,
    EvtSeekRelativeToLast = 2,
    EvtSeekRelativeToCurrent = 3,
    EvtSeekRelativeToBookmark = 4,
    EvtSeekOriginMask = 7,
    EvtSeekStrict = 65536,
} EVT_SEEK_FLAGS;

typedef enum {
    EvtSubscribeToFutureEvents = 1,
    EvtSubscribeStartAtOldestRecord = 2,
    EvtSubscribeStartAfterBookmark = 3,
    EvtSubscribeOriginMask = 3,
    EvtSubscribeTolerateQueryErrors = 4096,
    EvtSubscribeStrict = 65536,
} EVT_SUBSCRIBE_FLAGS;

typedef enum {
    EvtSubscribeActionError = 0,
    EvtSubscribeActionDeliver = 1,
} EVT_SUBSCRIBE_NOTIFY_ACTION;

typedef int EVT_SUBSCRIBE_CALLBACK;

typedef enum {
    EvtSystemProviderName = 0,
    EvtSystemProviderGuid = 1,
    EvtSystemEventID = 2,
    EvtSystemQualifiers = 3,
    EvtSystemLevel = 4,
    EvtSystemTask = 5,
    EvtSystemOpcode = 6,
    EvtSystemKeywords = 7,
    EvtSystemTimeCreated = 8,
    EvtSystemEventRecordId = 9,
    EvtSystemActivityID = 10,
    EvtSystemRelatedActivityID = 11,
    EvtSystemProcessID = 12,
    EvtSystemThreadID = 13,
    EvtSystemChannel = 14,
    EvtSystemComputer = 15,
    EvtSystemUserID = 16,
    EvtSystemVersion = 17,
    EvtSystemPropertyIdEND = 18,
} EVT_SYSTEM_PROPERTY_ID;

typedef enum {
    EvtRenderContextValues = 0,
    EvtRenderContextSystem = 1,
    EvtRenderContextUser = 2,
} EVT_RENDER_CONTEXT_FLAGS;

typedef enum {
    EvtRenderEventValues = 0,
    EvtRenderEventXml = 1,
    EvtRenderBookmark = 2,
} EVT_RENDER_FLAGS;

typedef enum {
    EvtFormatMessageEvent = 1,
    EvtFormatMessageLevel = 2,
    EvtFormatMessageTask = 3,
    EvtFormatMessageOpcode = 4,
    EvtFormatMessageKeyword = 5,
    EvtFormatMessageChannel = 6,
    EvtFormatMessageProvider = 7,
    EvtFormatMessageId = 8,
    EvtFormatMessageXml = 9,
} EVT_FORMAT_MESSAGE_FLAGS;

typedef enum {
    EvtOpenChannelPath = 1,
    EvtOpenFilePath = 2,
} EVT_OPEN_LOG_FLAGS;

typedef enum {
    EvtLogCreationTime = 0,
    EvtLogLastAccessTime = 1,
    EvtLogLastWriteTime = 2,
    EvtLogFileSize = 3,
    EvtLogAttributes = 4,
    EvtLogNumberOfLogRecords = 5,
    EvtLogOldestRecordNumber = 6,
    EvtLogFull = 7,
} EVT_LOG_PROPERTY_ID;

typedef enum {
    EvtExportLogChannelPath = 1,
    EvtExportLogFilePath = 2,
    EvtExportLogTolerateQueryErrors = 4096,
    EvtExportLogOverwrite = 8192,
} EVT_EXPORTLOG_FLAGS;

typedef enum {
    EvtChannelConfigEnabled = 0,
    EvtChannelConfigIsolation = 1,
    EvtChannelConfigType = 2,
    EvtChannelConfigOwningPublisher = 3,
    EvtChannelConfigClassicEventlog = 4,
    EvtChannelConfigAccess = 5,
    EvtChannelLoggingConfigRetention = 6,
    EvtChannelLoggingConfigAutoBackup = 7,
    EvtChannelLoggingConfigMaxSize = 8,
    EvtChannelLoggingConfigLogFilePath = 9,
    EvtChannelPublishingConfigLevel = 10,
    EvtChannelPublishingConfigKeywords = 11,
    EvtChannelPublishingConfigControlGuid = 12,
    EvtChannelPublishingConfigBufferSize = 13,
    EvtChannelPublishingConfigMinBuffers = 14,
    EvtChannelPublishingConfigMaxBuffers = 15,
    EvtChannelPublishingConfigLatency = 16,
    EvtChannelPublishingConfigClockType = 17,
    EvtChannelPublishingConfigSidType = 18,
    EvtChannelPublisherList = 19,
    EvtChannelPublishingConfigFileMax = 20,
    EvtChannelConfigPropertyIdEND = 21,
} EVT_CHANNEL_CONFIG_PROPERTY_ID;

typedef enum {
    EvtChannelTypeAdmin = 0,
    EvtChannelTypeOperational = 1,
    EvtChannelTypeAnalytic = 2,
    EvtChannelTypeDebug = 3,
} EVT_CHANNEL_TYPE;

typedef enum {
    EvtChannelIsolationTypeApplication = 0,
    EvtChannelIsolationTypeSystem = 1,
    EvtChannelIsolationTypeCustom = 2,
} EVT_CHANNEL_ISOLATION_TYPE;

typedef enum {
    EvtChannelClockTypeSystemTime = 0,
    EvtChannelClockTypeQPC = 1,
} EVT_CHANNEL_CLOCK_TYPE;

typedef enum {
    EvtChannelSidTypeNone = 0,
    EvtChannelSidTypePublishing = 1,
} EVT_CHANNEL_SID_TYPE;

typedef enum {
    EvtChannelReferenceImported = 1,
} EVT_CHANNEL_REFERENCE_FLAGS;

typedef enum {
    EvtPublisherMetadataPublisherGuid = 0,
    EvtPublisherMetadataResourceFilePath = 1,
    EvtPublisherMetadataParameterFilePath = 2,
    EvtPublisherMetadataMessageFilePath = 3,
    EvtPublisherMetadataHelpLink = 4,
    EvtPublisherMetadataPublisherMessageID = 5,
    EvtPublisherMetadataChannelReferences = 6,
    EvtPublisherMetadataChannelReferencePath = 7,
    EvtPublisherMetadataChannelReferenceIndex = 8,
    EvtPublisherMetadataChannelReferenceID = 9,
    EvtPublisherMetadataChannelReferenceFlags = 10,
    EvtPublisherMetadataChannelReferenceMessageID = 11,
    EvtPublisherMetadataLevels = 12,
    EvtPublisherMetadataLevelName = 13,
    EvtPublisherMetadataLevelValue = 14,
    EvtPublisherMetadataLevelMessageID = 15,
    EvtPublisherMetadataTasks = 16,
    EvtPublisherMetadataTaskName = 17,
    EvtPublisherMetadataTaskEventGuid = 18,
    EvtPublisherMetadataTaskValue = 19,
    EvtPublisherMetadataTaskMessageID = 20,
    EvtPublisherMetadataOpcodes = 21,
    EvtPublisherMetadataOpcodeName = 22,
    EvtPublisherMetadataOpcodeValue = 23,
    EvtPublisherMetadataOpcodeMessageID = 24,
    EvtPublisherMetadataKeywords = 25,
    EvtPublisherMetadataKeywordName = 26,
    EvtPublisherMetadataKeywordValue = 27,
    EvtPublisherMetadataKeywordMessageID = 28,
    EvtPublisherMetadataPropertyIdEND = 29,
} EVT_PUBLISHER_METADATA_PROPERTY_ID;

typedef enum {
    EventMetadataEventID = 0,
    EventMetadataEventVersion = 1,
    EventMetadataEventChannel = 2,
    EventMetadataEventLevel = 3,
    EventMetadataEventOpcode = 4,
    EventMetadataEventTask = 5,
    EventMetadataEventKeyword = 6,
    EventMetadataEventMessageID = 7,
    EventMetadataEventTemplate = 8,
    EvtEventMetadataPropertyIdEND = 9,
} EVT_EVENT_METADATA_PROPERTY_ID;

typedef enum {
    EvtQueryNames = 0,
    EvtQueryStatuses = 1,
    EvtQueryPropertyIdEND = 2,
} EVT_QUERY_PROPERTY_ID;

typedef enum {
    EvtEventQueryIDs = 0,
    EvtEventPath = 1,
    EvtEventPropertyIdEND = 2,
} EVT_EVENT_PROPERTY_ID;

typedef int EVENTLOG_FULL_INFORMATION;


//--------------------------------------------------------------------------------
// Section: Functions (55)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows6.0.6000'
/*isize*/void EvtOpenSession();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtClose();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtCancel();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void EvtGetExtendedStatus();

// TODO: this type is limited to platform 'windows6.0.6000'
/*isize*/void EvtQuery();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtNext();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtSeek();

// TODO: this type is limited to platform 'windows6.0.6000'
/*isize*/void EvtSubscribe();

// TODO: this type is limited to platform 'windows6.0.6000'
/*isize*/void EvtCreateRenderContext();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtRender();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtFormatMessage();

// TODO: this type is limited to platform 'windows6.0.6000'
/*isize*/void EvtOpenLog();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtGetLogInfo();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtClearLog();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtExportLog();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtArchiveExportedLog();

// TODO: this type is limited to platform 'windows6.0.6000'
/*isize*/void EvtOpenChannelEnum();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtNextChannelPath();

// TODO: this type is limited to platform 'windows6.0.6000'
/*isize*/void EvtOpenChannelConfig();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtSaveChannelConfig();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtSetChannelConfigProperty();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtGetChannelConfigProperty();

// TODO: this type is limited to platform 'windows6.0.6000'
/*isize*/void EvtOpenPublisherEnum();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtNextPublisherId();

// TODO: this type is limited to platform 'windows6.0.6000'
/*isize*/void EvtOpenPublisherMetadata();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtGetPublisherMetadataProperty();

// TODO: this type is limited to platform 'windows6.0.6000'
/*isize*/void EvtOpenEventMetadataEnum();

// TODO: this type is limited to platform 'windows6.0.6000'
/*isize*/void EvtNextEventMetadata();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtGetEventMetadataProperty();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtGetObjectArraySize();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtGetObjectArrayProperty();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtGetQueryInfo();

// TODO: this type is limited to platform 'windows6.0.6000'
/*isize*/void EvtCreateBookmark();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtUpdateBookmark();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EvtGetEventInfo();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ClearEventLogA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ClearEventLogW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void BackupEventLogA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void BackupEventLogW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void CloseEventLog();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DeregisterEventSource();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void NotifyChangeEventLog();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetNumberOfEventLogRecords();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetOldestEventLogRecord();

// TODO: this type is limited to platform 'windows5.0'
/*EventLogHandle*/void OpenEventLogA();

// TODO: this type is limited to platform 'windows5.0'
/*EventLogHandle*/void OpenEventLogW();

// TODO: this type is limited to platform 'windows5.0'
/*EventSourceHandle*/void RegisterEventSourceA();

// TODO: this type is limited to platform 'windows5.0'
/*EventSourceHandle*/void RegisterEventSourceW();

// TODO: this type is limited to platform 'windows5.0'
/*EventLogHandle*/void OpenBackupEventLogA();

// TODO: this type is limited to platform 'windows5.0'
/*EventLogHandle*/void OpenBackupEventLogW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ReadEventLogA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ReadEventLogW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ReportEventA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ReportEventW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetEventLogInformation();

