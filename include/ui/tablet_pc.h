// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (122)
//--------------------------------------------------------------------------------
#define MICROSOFT_URL_EXPERIENCE_PROPERTY "Microsoft TIP URL Experience"
#define MICROSOFT_TIP_NO_INSERT_BUTTON_PROPERTY "Microsoft TIP No Insert Option"
#define MICROSOFT_TIP_COMBOBOXLIST_PROPERTY "Microsoft TIP ComboBox List Window Identifier"
#define MICROSOFT_TIP_OPENING_MSG "TabletInputPanelOpening"
#define SAFE_PARTIAL (UINT)1
#define BEST_COMPLETE (UINT)2
#define MAX_VENDORNAME (UINT)32
#define MAX_FRIENDLYNAME (UINT)64
#define MAX_LANGUAGES (UINT)64
#define CAC_FULL (UINT)0
#define CAC_PREFIX (UINT)1
#define CAC_RANDOM (UINT)2
#define ASYNC_RECO_INTERRUPTED (UINT)1
#define ASYNC_RECO_PROCESS_FAILED (UINT)2
#define ASYNC_RECO_ADDSTROKE_FAILED (UINT)4
#define ASYNC_RECO_SETCACMODE_FAILED (UINT)8
#define ASYNC_RECO_RESETCONTEXT_FAILED (UINT)16
#define ASYNC_RECO_SETGUIDE_FAILED (UINT)32
#define ASYNC_RECO_SETFLAGS_FAILED (UINT)64
#define ASYNC_RECO_SETFACTOID_FAILED (UINT)128
#define ASYNC_RECO_SETTEXTCONTEXT_FAILED (UINT)256
#define ASYNC_RECO_SETWORDLIST_FAILED (UINT)512
#define RF_DONTCARE (INT)1
#define RF_OBJECT (INT)2
#define RF_FREE_INPUT (INT)4
#define RF_LINED_INPUT (INT)8
#define RF_BOXED_INPUT (INT)16
#define RF_CAC_INPUT (INT)32
#define RF_RIGHT_AND_DOWN (INT)64
#define RF_LEFT_AND_DOWN (INT)128
#define RF_DOWN_AND_LEFT (INT)256
#define RF_DOWN_AND_RIGHT (INT)512
#define RF_ARBITRARY_ANGLE (INT)1024
#define RF_LATTICE (INT)2048
#define RF_ADVISEINKCHANGE (INT)4096
#define RF_STROKEREORDER (INT)8192
#define RF_PERSONALIZABLE (INT)16384
#define RF_PERFORMSLINEBREAKING (INT)65536
#define RF_REQUIRESSEGMENTATIONBREAKING (INT)131072
#define FLICK_WM_HANDLED_MASK (UINT)1
#define NUM_FLICK_DIRECTIONS (UINT)8
#define WM_TABLET_DEFBASE (UINT)704
#define WM_TABLET_MAXOFFSET (UINT)32
#define WM_TABLET_ADDED (UINT)712
#define WM_TABLET_DELETED (UINT)713
#define WM_TABLET_FLICK (UINT)715
#define WM_TABLET_QUERYSYSTEMGESTURESTATUS (UINT)716
#define TABLET_DISABLE_PRESSANDHOLD (UINT)1
#define TABLET_DISABLE_PENTAPFEEDBACK (UINT)8
#define TABLET_DISABLE_PENBARRELFEEDBACK (UINT)16
#define TABLET_DISABLE_TOUCHUIFORCEON (UINT)256
#define TABLET_DISABLE_TOUCHUIFORCEOFF (UINT)512
#define TABLET_DISABLE_TOUCHSWITCH (UINT)32768
#define TABLET_DISABLE_FLICKS (UINT)65536
#define TABLET_ENABLE_FLICKSONCONTEXT (UINT)131072
#define TABLET_ENABLE_FLICKLEARNINGMODE (UINT)262144
#define TABLET_DISABLE_SMOOTHSCROLLING (UINT)524288
#define TABLET_DISABLE_FLICKFALLBACKKEYS (UINT)1048576
#define TABLET_ENABLE_MULTITOUCHDATA (UINT)16777216
#define MAX_PACKET_PROPERTY_COUNT (UINT)32
#define MAX_PACKET_BUTTON_COUNT (UINT)32
#define IP_CURSOR_DOWN (UINT)1
#define IP_INVERTED (UINT)2
#define IP_MARGIN (UINT)4
#define IEC__BASE (UINT)1536
#define EM_GETINKMODE (UINT)1537
#define EM_SETINKMODE (UINT)1538
#define EM_GETINKINSERTMODE (UINT)1539
#define EM_SETINKINSERTMODE (UINT)1540
#define EM_GETDRAWATTR (UINT)1541
#define EM_SETDRAWATTR (UINT)1542
#define EM_GETRECOTIMEOUT (UINT)1543
#define EM_SETRECOTIMEOUT (UINT)1544
#define EM_GETGESTURESTATUS (UINT)1545
#define EM_SETGESTURESTATUS (UINT)1546
#define EM_GETRECOGNIZER (UINT)1547
#define EM_SETRECOGNIZER (UINT)1548
#define EM_GETFACTOID (UINT)1549
#define EM_SETFACTOID (UINT)1550
#define EM_GETSELINK (UINT)1551
#define EM_SETSELINK (UINT)1552
#define EM_GETMOUSEICON (UINT)1553
#define EM_SETMOUSEICON (UINT)1554
#define EM_GETMOUSEPOINTER (UINT)1555
#define EM_SETMOUSEPOINTER (UINT)1556
#define EM_GETSTATUS (UINT)1557
#define EM_RECOGNIZE (UINT)1558
#define EM_GETUSEMOUSEFORINPUT (UINT)1559
#define EM_SETUSEMOUSEFORINPUT (UINT)1560
#define EM_SETSELINKDISPLAYMODE (UINT)1561
#define EM_GETSELINKDISPLAYMODE (UINT)1562
#define IECN__BASE (UINT)2048
#define IECN_STROKE (UINT)2049
#define IECN_GESTURE (UINT)2050
#define IECN_RECOGNITIONRESULT (UINT)2051
#define GUID_PACKETPROPERTY_GUID_X GUID { "598a6a8f-52c0-4ba0-93af-af357411a561" }
#define GUID_PACKETPROPERTY_GUID_Y GUID { "b53f9f75-04e0-4498-a7ee-c30dbb5a9011" }
#define GUID_PACKETPROPERTY_GUID_Z GUID { "735adb30-0ebb-4788-a0e4-0f316490055d" }
#define GUID_PACKETPROPERTY_GUID_PACKET_STATUS GUID { "6e0e07bf-afe7-4cf7-87d1-af6446208418" }
#define GUID_PACKETPROPERTY_GUID_TIMER_TICK GUID { "436510c5-fed3-45d1-8b76-71d3ea7a829d" }
#define GUID_PACKETPROPERTY_GUID_SERIAL_NUMBER GUID { "78a81b56-0935-4493-baae-00541a8a16c4" }
#define GUID_PACKETPROPERTY_GUID_NORMAL_PRESSURE GUID { "7307502d-f9f4-4e18-b3f2-2ce1b1a3610c" }
#define GUID_PACKETPROPERTY_GUID_TANGENT_PRESSURE GUID { "6da4488b-5244-41ec-905b-32d89ab80809" }
#define GUID_PACKETPROPERTY_GUID_BUTTON_PRESSURE GUID { "8b7fefc4-96aa-4bfe-ac26-8a5f0be07bf5" }
#define GUID_PACKETPROPERTY_GUID_X_TILT_ORIENTATION GUID { "a8d07b3a-8bf0-40b0-95a9-b80a6bb787bf" }
#define GUID_PACKETPROPERTY_GUID_Y_TILT_ORIENTATION GUID { "0e932389-1d77-43af-ac00-5b950d6d4b2d" }
#define GUID_PACKETPROPERTY_GUID_AZIMUTH_ORIENTATION GUID { "029123b4-8828-410b-b250-a0536595e5dc" }
#define GUID_PACKETPROPERTY_GUID_ALTITUDE_ORIENTATION GUID { "82dec5c7-f6ba-4906-894f-66d68dfc456c" }
#define GUID_PACKETPROPERTY_GUID_TWIST_ORIENTATION GUID { "0d324960-13b2-41e4-ace6-7ae9d43d2d3b" }
#define GUID_PACKETPROPERTY_GUID_PITCH_ROTATION GUID { "7f7e57b7-be37-4be1-a356-7a84160e1893" }
#define GUID_PACKETPROPERTY_GUID_ROLL_ROTATION GUID { "5d5d5e56-6ba9-4c5b-9fb0-851c91714e56" }
#define GUID_PACKETPROPERTY_GUID_YAW_ROTATION GUID { "6a849980-7c3a-45b7-aa82-90a262950e89" }
#define GUID_PACKETPROPERTY_GUID_WIDTH GUID { "baabe94d-2712-48f5-be9d-8f8b5ea0711a" }
#define GUID_PACKETPROPERTY_GUID_HEIGHT GUID { "e61858d2-e447-4218-9d3f-18865c203df4" }
#define GUID_PACKETPROPERTY_GUID_FINGERCONTACTCONFIDENCE GUID { "e706c804-57f0-4f00-8a0c-853d57789be9" }
#define GUID_PACKETPROPERTY_GUID_DEVICE_CONTACT_ID GUID { "02585b91-049b-4750-9615-df8948ab3c9c" }
#define InkMinTransparencyValue (INT)0
#define InkMaxTransparencyValue (INT)255
#define InkCollectorClipInkToMargin (INT)0
#define InkCollectorDefaultMargin (INT)-2147483648
#define GUID_GESTURE_DATA GUID { "41e4ec0f-26aa-455a-9aa5-2cd36cf63fb9" }
#define GUID_DYNAMIC_RENDERER_CACHED_DATA GUID { "bf531b92-25bf-4a95-89ad-0e476b34b4f5" }

//--------------------------------------------------------------------------------
// Section: Types (240)
//--------------------------------------------------------------------------------
typedef int PfnRecoCallback;

typedef int HRECOALT;

typedef int HRECOCONTEXT;

typedef int HRECOGNIZER;

typedef int HRECOLATTICE;

typedef int HRECOWORDLIST;

typedef int InkDisp;

typedef int InkOverlay;

typedef int InkPicture;

typedef int InkCollector;

typedef int InkDrawingAttributes;

typedef int InkRectangle;

typedef int InkRenderer;

typedef int InkTransform;

typedef int InkRecognizers;

typedef int InkRecognizerContext;

typedef int InkRecognizerGuide;

typedef int InkTablets;

typedef int InkWordList;

typedef int InkStrokes;

typedef int Ink;

typedef int SketchInk;

typedef enum {
    PROPERTY_UNITS_DEFAULT = 0,
    PROPERTY_UNITS_INCHES = 1,
    PROPERTY_UNITS_CENTIMETERS = 2,
    PROPERTY_UNITS_DEGREES = 3,
    PROPERTY_UNITS_RADIANS = 4,
    PROPERTY_UNITS_SECONDS = 5,
    PROPERTY_UNITS_POUNDS = 6,
    PROPERTY_UNITS_GRAMS = 7,
    PROPERTY_UNITS_SILINEAR = 8,
    PROPERTY_UNITS_SIROTATION = 9,
    PROPERTY_UNITS_ENGLINEAR = 10,
    PROPERTY_UNITS_ENGROTATION = 11,
    PROPERTY_UNITS_SLUGS = 12,
    PROPERTY_UNITS_KELVIN = 13,
    PROPERTY_UNITS_FAHRENHEIT = 14,
    PROPERTY_UNITS_AMPERE = 15,
    PROPERTY_UNITS_CANDELA = 16,
} PROPERTY_UNITS;

typedef int SYSTEM_EVENT_DATA;

typedef int STROKE_RANGE;

typedef int PROPERTY_METRICS;

typedef int PACKET_PROPERTY;

typedef int PACKET_DESCRIPTION;

typedef enum {
    IMF_FONT_SELECTED_IN_HDC = 1,
    IMF_ITALIC = 2,
    IMF_BOLD = 4,
} enumINKMETRIC_FLAGS;

typedef enum {
    TCF_ALLOW_RECOGNITION = 1,
    TCF_FORCE_RECOGNITION = 2,
} enumGetCandidateFlags;

typedef int INKMETRIC;

typedef enum {
    ISC_FirstElement = 0,
    ISC_AllElements = -1,
} InkSelectionConstants;

typedef enum {
    IBBM_Default = 0,
    IBBM_NoCurveFit = 1,
    IBBM_CurveFit = 2,
    IBBM_PointsOnly = 3,
    IBBM_Union = 4,
} InkBoundingBoxMode;

typedef enum {
    IEF_CopyFromOriginal = 0,
    IEF_RemoveFromOriginal = 1,
    IEF_Default = 1,
} InkExtractFlags;

typedef enum {
    IPF_InkSerializedFormat = 0,
    IPF_Base64InkSerializedFormat = 1,
    IPF_GIF = 2,
    IPF_Base64GIF = 3,
} InkPersistenceFormat;

typedef enum {
    IPCM_Default = 0,
    IPCM_MaximumCompression = 1,
    IPCM_NoCompression = 2,
} InkPersistenceCompressionMode;

typedef enum {
    IPT_Ball = 0,
    IPT_Rectangle = 1,
} InkPenTip;

typedef enum {
    IRO_Black = 1,
    IRO_NotMergePen = 2,
    IRO_MaskNotPen = 3,
    IRO_NotCopyPen = 4,
    IRO_MaskPenNot = 5,
    IRO_Not = 6,
    IRO_XOrPen = 7,
    IRO_NotMaskPen = 8,
    IRO_MaskPen = 9,
    IRO_NotXOrPen = 10,
    IRO_NoOperation = 11,
    IRO_MergeNotPen = 12,
    IRO_CopyPen = 13,
    IRO_MergePenNot = 14,
    IRO_MergePen = 15,
    IRO_White = 16,
} InkRasterOperation;

typedef enum {
    IMP_Default = 0,
    IMP_Arrow = 1,
    IMP_Crosshair = 2,
    IMP_Ibeam = 3,
    IMP_SizeNESW = 4,
    IMP_SizeNS = 5,
    IMP_SizeNWSE = 6,
    IMP_SizeWE = 7,
    IMP_UpArrow = 8,
    IMP_Hourglass = 9,
    IMP_NoDrop = 10,
    IMP_ArrowHourglass = 11,
    IMP_ArrowQuestion = 12,
    IMP_SizeAll = 13,
    IMP_Hand = 14,
    IMP_Custom = 99,
} InkMousePointer;

typedef enum {
    ICB_Copy = 0,
    ICB_Cut = 1,
    ICB_ExtractOnly = 48,
    ICB_DelayedCopy = 32,
    ICB_Default = 0,
} InkClipboardModes;

typedef enum {
    ICF_None = 0,
    ICF_InkSerializedFormat = 1,
    ICF_SketchInk = 2,
    ICF_TextInk = 6,
    ICF_EnhancedMetafile = 8,
    ICF_Metafile = 32,
    ICF_Bitmap = 64,
    ICF_PasteMask = 7,
    ICF_CopyMask = 127,
    ICF_Default = 127,
} InkClipboardFormats;

typedef enum {
    SHR_None = 0,
    SHR_NW = 1,
    SHR_SE = 2,
    SHR_NE = 3,
    SHR_SW = 4,
    SHR_E = 5,
    SHR_W = 6,
    SHR_N = 7,
    SHR_S = 8,
    SHR_Selection = 9,
} SelectionHitResult;

typedef enum {
    IRS_NoError = 0,
    IRS_Interrupted = 1,
    IRS_ProcessFailed = 2,
    IRS_InkAddedFailed = 4,
    IRS_SetAutoCompletionModeFailed = 8,
    IRS_SetStrokesFailed = 16,
    IRS_SetGuideFailed = 32,
    IRS_SetFlagsFailed = 64,
    IRS_SetFactoidFailed = 128,
    IRS_SetPrefixSuffixFailed = 256,
    IRS_SetWordListFailed = 512,
} InkRecognitionStatus;

typedef enum {
    DISPID_IRTop = 1,
    DISPID_IRLeft = 2,
    DISPID_IRBottom = 3,
    DISPID_IRRight = 4,
    DISPID_IRGetRectangle = 5,
    DISPID_IRSetRectangle = 6,
    DISPID_IRData = 7,
} DISPID_InkRectangle;

typedef enum {
    DISPID_IEPGuid = 1,
    DISPID_IEPData = 2,
} DISPID_InkExtendedProperty;

typedef enum {
    DISPID_IEPs_NewEnum = -4,
    DISPID_IEPsItem = 0,
    DISPID_IEPsCount = 1,
    DISPID_IEPsAdd = 2,
    DISPID_IEPsRemove = 3,
    DISPID_IEPsClear = 4,
    DISPID_IEPsDoesPropertyExist = 5,
} DISPID_InkExtendedProperties;

typedef enum {
    DISPID_DAHeight = 1,
    DISPID_DAColor = 2,
    DISPID_DAWidth = 3,
    DISPID_DAFitToCurve = 4,
    DISPID_DAIgnorePressure = 5,
    DISPID_DAAntiAliased = 6,
    DISPID_DATransparency = 7,
    DISPID_DARasterOperation = 8,
    DISPID_DAPenTip = 9,
    DISPID_DAClone = 10,
    DISPID_DAExtendedProperties = 11,
} DISPID_InkDrawingAttributes;

typedef enum {
    DISPID_ITReset = 1,
    DISPID_ITTranslate = 2,
    DISPID_ITRotate = 3,
    DISPID_ITReflect = 4,
    DISPID_ITShear = 5,
    DISPID_ITScale = 6,
    DISPID_ITeM11 = 7,
    DISPID_ITeM12 = 8,
    DISPID_ITeM21 = 9,
    DISPID_ITeM22 = 10,
    DISPID_ITeDx = 11,
    DISPID_ITeDy = 12,
    DISPID_ITGetTransform = 13,
    DISPID_ITSetTransform = 14,
    DISPID_ITData = 15,
} DISPID_InkTransform;

typedef enum {
    IAG_AllGestures = 0,
    IAG_NoGesture = 61440,
    IAG_Scratchout = 61441,
    IAG_Triangle = 61442,
    IAG_Square = 61443,
    IAG_Star = 61444,
    IAG_Check = 61445,
    IAG_Curlicue = 61456,
    IAG_DoubleCurlicue = 61457,
    IAG_Circle = 61472,
    IAG_DoubleCircle = 61473,
    IAG_SemiCircleLeft = 61480,
    IAG_SemiCircleRight = 61481,
    IAG_ChevronUp = 61488,
    IAG_ChevronDown = 61489,
    IAG_ChevronLeft = 61490,
    IAG_ChevronRight = 61491,
    IAG_ArrowUp = 61496,
    IAG_ArrowDown = 61497,
    IAG_ArrowLeft = 61498,
    IAG_ArrowRight = 61499,
    IAG_Up = 61528,
    IAG_Down = 61529,
    IAG_Left = 61530,
    IAG_Right = 61531,
    IAG_UpDown = 61536,
    IAG_DownUp = 61537,
    IAG_LeftRight = 61538,
    IAG_RightLeft = 61539,
    IAG_UpLeftLong = 61540,
    IAG_UpRightLong = 61541,
    IAG_DownLeftLong = 61542,
    IAG_DownRightLong = 61543,
    IAG_UpLeft = 61544,
    IAG_UpRight = 61545,
    IAG_DownLeft = 61546,
    IAG_DownRight = 61547,
    IAG_LeftUp = 61548,
    IAG_LeftDown = 61549,
    IAG_RightUp = 61550,
    IAG_RightDown = 61551,
    IAG_Exclamation = 61604,
    IAG_Tap = 61680,
    IAG_DoubleTap = 61681,
} InkApplicationGesture;

typedef enum {
    ISG_Tap = 16,
    ISG_DoubleTap = 17,
    ISG_RightTap = 18,
    ISG_Drag = 19,
    ISG_RightDrag = 20,
    ISG_HoldEnter = 21,
    ISG_HoldLeave = 22,
    ISG_HoverEnter = 23,
    ISG_HoverLeave = 24,
    ISG_Flick = 31,
} InkSystemGesture;

typedef enum {
    IRC_Strong = 0,
    IRC_Intermediate = 1,
    IRC_Poor = 2,
} InkRecognitionConfidence;

typedef enum {
    DISPID_IGId = 0,
    DISPID_IGGetHotPoint = 1,
    DISPID_IGConfidence = 2,
} DISPID_InkGesture;

typedef enum {
    DISPID_ICsrName = 0,
    DISPID_ICsrId = 1,
    DISPID_ICsrDrawingAttributes = 2,
    DISPID_ICsrButtons = 3,
    DISPID_ICsrInverted = 4,
    DISPID_ICsrTablet = 5,
} DISPID_InkCursor;

typedef enum {
    DISPID_ICs_NewEnum = -4,
    DISPID_ICsItem = 0,
    DISPID_ICsCount = 1,
} DISPID_InkCursors;

typedef enum {
    ICBS_Unavailable = 0,
    ICBS_Up = 1,
    ICBS_Down = 2,
} InkCursorButtonState;

typedef enum {
    DISPID_ICBName = 0,
    DISPID_ICBId = 1,
    DISPID_ICBState = 2,
} DISPID_InkCursorButton;

typedef enum {
    DISPID_ICBs_NewEnum = -4,
    DISPID_ICBsItem = 0,
    DISPID_ICBsCount = 1,
} DISPID_InkCursorButtons;

typedef enum {
    THWC_Integrated = 1,
    THWC_CursorMustTouch = 2,
    THWC_HardProximity = 4,
    THWC_CursorsHavePhysicalIds = 8,
} TabletHardwareCapabilities;

typedef enum {
    TPMU_Default = 0,
    TPMU_Inches = 1,
    TPMU_Centimeters = 2,
    TPMU_Degrees = 3,
    TPMU_Radians = 4,
    TPMU_Seconds = 5,
    TPMU_Pounds = 6,
    TPMU_Grams = 7,
} TabletPropertyMetricUnit;

typedef enum {
    DISPID_ITName = 0,
    DISPID_ITPlugAndPlayId = 1,
    DISPID_ITPropertyMetrics = 2,
    DISPID_ITIsPacketPropertySupported = 3,
    DISPID_ITMaximumInputRectangle = 4,
    DISPID_ITHardwareCapabilities = 5,
} DISPID_InkTablet;

typedef enum {
    TDK_Mouse = 0,
    TDK_Pen = 1,
    TDK_Touch = 2,
} TabletDeviceKind;

typedef enum {
    DISPID_IT2DeviceKind = 0,
} DISPID_InkTablet2;

typedef enum {
    DISPID_IT3IsMultiTouch = 0,
    DISPID_IT3MaximumCursors = 1,
} DISPID_InkTablet3;

typedef enum {
    DISPID_ITs_NewEnum = -4,
    DISPID_ITsItem = 0,
    DISPID_ITsDefaultTablet = 1,
    DISPID_ITsCount = 2,
    DISPID_ITsIsPacketPropertySupported = 3,
} DISPID_InkTablets;

typedef enum {
    DISPID_ISDInkIndex = 1,
    DISPID_ISDID = 2,
    DISPID_ISDGetBoundingBox = 3,
    DISPID_ISDDrawingAttributes = 4,
    DISPID_ISDFindIntersections = 5,
    DISPID_ISDGetRectangleIntersections = 6,
    DISPID_ISDClip = 7,
    DISPID_ISDHitTestCircle = 8,
    DISPID_ISDNearestPoint = 9,
    DISPID_ISDSplit = 10,
    DISPID_ISDExtendedProperties = 11,
    DISPID_ISDInk = 12,
    DISPID_ISDBezierPoints = 13,
    DISPID_ISDPolylineCusps = 14,
    DISPID_ISDBezierCusps = 15,
    DISPID_ISDSelfIntersections = 16,
    DISPID_ISDPacketCount = 17,
    DISPID_ISDPacketSize = 18,
    DISPID_ISDPacketDescription = 19,
    DISPID_ISDDeleted = 20,
    DISPID_ISDGetPacketDescriptionPropertyMetrics = 21,
    DISPID_ISDGetPoints = 22,
    DISPID_ISDSetPoints = 23,
    DISPID_ISDGetPacketData = 24,
    DISPID_ISDGetPacketValuesByProperty = 25,
    DISPID_ISDSetPacketValuesByProperty = 26,
    DISPID_ISDGetFlattenedBezierPoints = 27,
    DISPID_ISDScaleToRectangle = 28,
    DISPID_ISDTransform = 29,
    DISPID_ISDMove = 30,
    DISPID_ISDRotate = 31,
    DISPID_ISDShear = 32,
    DISPID_ISDScale = 33,
} DISPID_InkStrokeDisp;

typedef enum {
    DISPID_ISs_NewEnum = -4,
    DISPID_ISsItem = 0,
    DISPID_ISsCount = 1,
    DISPID_ISsValid = 2,
    DISPID_ISsInk = 3,
    DISPID_ISsAdd = 4,
    DISPID_ISsAddStrokes = 5,
    DISPID_ISsRemove = 6,
    DISPID_ISsRemoveStrokes = 7,
    DISPID_ISsToString = 8,
    DISPID_ISsModifyDrawingAttributes = 9,
    DISPID_ISsGetBoundingBox = 10,
    DISPID_ISsScaleToRectangle = 11,
    DISPID_ISsTransform = 12,
    DISPID_ISsMove = 13,
    DISPID_ISsRotate = 14,
    DISPID_ISsShear = 15,
    DISPID_ISsScale = 16,
    DISPID_ISsClip = 17,
    DISPID_ISsRecognitionResult = 18,
    DISPID_ISsRemoveRecognitionResult = 19,
} DISPID_InkStrokes;

typedef enum {
    DISPID_ICSs_NewEnum = -4,
    DISPID_ICSsItem = 0,
    DISPID_ICSsCount = 1,
    DISPID_ICSsAdd = 2,
    DISPID_ICSsRemove = 3,
    DISPID_ICSsClear = 4,
} DISPID_InkCustomStrokes;

typedef enum {
    DISPID_SEStrokesAdded = 1,
    DISPID_SEStrokesRemoved = 2,
} DISPID_StrokeEvent;

typedef enum {
    DISPID_IStrokes = 1,
    DISPID_IExtendedProperties = 2,
    DISPID_IGetBoundingBox = 3,
    DISPID_IDeleteStrokes = 4,
    DISPID_IDeleteStroke = 5,
    DISPID_IExtractStrokes = 6,
    DISPID_IExtractWithRectangle = 7,
    DISPID_IDirty = 8,
    DISPID_ICustomStrokes = 9,
    DISPID_IClone = 10,
    DISPID_IHitTestCircle = 11,
    DISPID_IHitTestWithRectangle = 12,
    DISPID_IHitTestWithLasso = 13,
    DISPID_INearestPoint = 14,
    DISPID_ICreateStrokes = 15,
    DISPID_ICreateStroke = 16,
    DISPID_IAddStrokesAtRectangle = 17,
    DISPID_IClip = 18,
    DISPID_ISave = 19,
    DISPID_ILoad = 20,
    DISPID_ICreateStrokeFromPoints = 21,
    DISPID_IClipboardCopyWithRectangle = 22,
    DISPID_IClipboardCopy = 23,
    DISPID_ICanPaste = 24,
    DISPID_IClipboardPaste = 25,
} DISPID_Ink;

typedef enum {
    DISPID_IEInkAdded = 1,
    DISPID_IEInkDeleted = 2,
} DISPID_InkEvent;

typedef enum {
    DISPID_IRGetViewTransform = 1,
    DISPID_IRSetViewTransform = 2,
    DISPID_IRGetObjectTransform = 3,
    DISPID_IRSetObjectTransform = 4,
    DISPID_IRDraw = 5,
    DISPID_IRDrawStroke = 6,
    DISPID_IRPixelToInkSpace = 7,
    DISPID_IRInkSpaceToPixel = 8,
    DISPID_IRPixelToInkSpaceFromPoints = 9,
    DISPID_IRInkSpaceToPixelFromPoints = 10,
    DISPID_IRMeasure = 11,
    DISPID_IRMeasureStroke = 12,
    DISPID_IRMove = 13,
    DISPID_IRRotate = 14,
    DISPID_IRScale = 15,
} DISPID_InkRenderer;

typedef enum {
    ICEI_DefaultEvents = -1,
    ICEI_CursorDown = 0,
    ICEI_Stroke = 1,
    ICEI_NewPackets = 2,
    ICEI_NewInAirPackets = 3,
    ICEI_CursorButtonDown = 4,
    ICEI_CursorButtonUp = 5,
    ICEI_CursorInRange = 6,
    ICEI_CursorOutOfRange = 7,
    ICEI_SystemGesture = 8,
    ICEI_TabletAdded = 9,
    ICEI_TabletRemoved = 10,
    ICEI_MouseDown = 11,
    ICEI_MouseMove = 12,
    ICEI_MouseUp = 13,
    ICEI_MouseWheel = 14,
    ICEI_DblClick = 15,
    ICEI_AllEvents = 16,
} InkCollectorEventInterest;

typedef enum {
    IMF_Left = 1,
    IMF_Right = 2,
    IMF_Middle = 4,
} InkMouseButton;

typedef enum {
    IKM_Shift = 1,
    IKM_Control = 2,
    IKM_Alt = 4,
} InkShiftKeyModifierFlags;

typedef enum {
    DISPID_ICEStroke = 1,
    DISPID_ICECursorDown = 2,
    DISPID_ICENewPackets = 3,
    DISPID_ICENewInAirPackets = 4,
    DISPID_ICECursorButtonDown = 5,
    DISPID_ICECursorButtonUp = 6,
    DISPID_ICECursorInRange = 7,
    DISPID_ICECursorOutOfRange = 8,
    DISPID_ICESystemGesture = 9,
    DISPID_ICEGesture = 10,
    DISPID_ICETabletAdded = 11,
    DISPID_ICETabletRemoved = 12,
    DISPID_IOEPainting = 13,
    DISPID_IOEPainted = 14,
    DISPID_IOESelectionChanging = 15,
    DISPID_IOESelectionChanged = 16,
    DISPID_IOESelectionMoving = 17,
    DISPID_IOESelectionMoved = 18,
    DISPID_IOESelectionResizing = 19,
    DISPID_IOESelectionResized = 20,
    DISPID_IOEStrokesDeleting = 21,
    DISPID_IOEStrokesDeleted = 22,
    DISPID_IPEChangeUICues = 23,
    DISPID_IPEClick = 24,
    DISPID_IPEDblClick = 25,
    DISPID_IPEInvalidated = 26,
    DISPID_IPEMouseDown = 27,
    DISPID_IPEMouseEnter = 28,
    DISPID_IPEMouseHover = 29,
    DISPID_IPEMouseLeave = 30,
    DISPID_IPEMouseMove = 31,
    DISPID_IPEMouseUp = 32,
    DISPID_IPEMouseWheel = 33,
    DISPID_IPESizeModeChanged = 34,
    DISPID_IPEStyleChanged = 35,
    DISPID_IPESystemColorsChanged = 36,
    DISPID_IPEKeyDown = 37,
    DISPID_IPEKeyPress = 38,
    DISPID_IPEKeyUp = 39,
    DISPID_IPEResize = 40,
    DISPID_IPESizeChanged = 41,
} DISPID_InkCollectorEvent;

typedef enum {
    IOEM_Ink = 0,
    IOEM_Delete = 1,
    IOEM_Select = 2,
} InkOverlayEditingMode;

typedef enum {
    IOAM_Behind = 0,
    IOAM_InFront = 1,
} InkOverlayAttachMode;

typedef enum {
    IPSM_AutoSize = 0,
    IPSM_CenterImage = 1,
    IPSM_Normal = 2,
    IPSM_StretchImage = 3,
} InkPictureSizeMode;

typedef enum {
    IOERM_StrokeErase = 0,
    IOERM_PointErase = 1,
} InkOverlayEraserMode;

typedef enum {
    ICM_InkOnly = 0,
    ICM_GestureOnly = 1,
    ICM_InkAndGesture = 2,
} InkCollectionMode;

typedef enum {
    DISPID_ICEnabled = 1,
    DISPID_ICHwnd = 2,
    DISPID_ICPaint = 3,
    DISPID_ICText = 4,
    DISPID_ICDefaultDrawingAttributes = 5,
    DISPID_ICRenderer = 6,
    DISPID_ICInk = 7,
    DISPID_ICAutoRedraw = 8,
    DISPID_ICCollectingInk = 9,
    DISPID_ICSetEventInterest = 10,
    DISPID_ICGetEventInterest = 11,
    DISPID_IOEditingMode = 12,
    DISPID_IOSelection = 13,
    DISPID_IOAttachMode = 14,
    DISPID_IOHitTestSelection = 15,
    DISPID_IODraw = 16,
    DISPID_IPPicture = 17,
    DISPID_IPSizeMode = 18,
    DISPID_IPBackColor = 19,
    DISPID_ICCursors = 20,
    DISPID_ICMarginX = 21,
    DISPID_ICMarginY = 22,
    DISPID_ICSetWindowInputRectangle = 23,
    DISPID_ICGetWindowInputRectangle = 24,
    DISPID_ICTablet = 25,
    DISPID_ICSetAllTabletsMode = 26,
    DISPID_ICSetSingleTabletIntegratedMode = 27,
    DISPID_ICCollectionMode = 28,
    DISPID_ICSetGestureStatus = 29,
    DISPID_ICGetGestureStatus = 30,
    DISPID_ICDynamicRendering = 31,
    DISPID_ICDesiredPacketDescription = 32,
    DISPID_IOEraserMode = 33,
    DISPID_IOEraserWidth = 34,
    DISPID_ICMouseIcon = 35,
    DISPID_ICMousePointer = 36,
    DISPID_IPInkEnabled = 37,
    DISPID_ICSupportHighContrastInk = 38,
    DISPID_IOSupportHighContrastSelectionUI = 39,
} DISPID_InkCollector;

typedef enum {
    DISPID_RecoClsid = 1,
    DISPID_RecoName = 2,
    DISPID_RecoVendor = 3,
    DISPID_RecoCapabilities = 4,
    DISPID_RecoLanguageID = 5,
    DISPID_RecoPreferredPacketDescription = 6,
    DISPID_RecoCreateRecognizerContext = 7,
    DISPID_RecoSupportedProperties = 8,
} DISPID_InkRecognizer;

typedef enum {
    IRC_DontCare = 1,
    IRC_Object = 2,
    IRC_FreeInput = 4,
    IRC_LinedInput = 8,
    IRC_BoxedInput = 16,
    IRC_CharacterAutoCompletionInput = 32,
    IRC_RightAndDown = 64,
    IRC_LeftAndDown = 128,
    IRC_DownAndLeft = 256,
    IRC_DownAndRight = 512,
    IRC_ArbitraryAngle = 1024,
    IRC_Lattice = 2048,
    IRC_AdviseInkChange = 4096,
    IRC_StrokeReorder = 8192,
    IRC_Personalizable = 16384,
    IRC_PrefersArbitraryAngle = 32768,
    IRC_PrefersParagraphBreaking = 65536,
    IRC_PrefersSegmentation = 131072,
    IRC_Cursive = 262144,
    IRC_TextPrediction = 524288,
    IRC_Alpha = 1048576,
    IRC_Beta = 2097152,
} InkRecognizerCapabilities;

typedef enum {
    DISPID_RecoId = 0,
    DISPID_RecoUnicodeRanges = 1,
} DISPID_InkRecognizer2;

typedef enum {
    DISPID_IRecos_NewEnum = -4,
    DISPID_IRecosItem = 0,
    DISPID_IRecosCount = 1,
    DISPID_IRecosGetDefaultRecognizer = 2,
} DISPID_InkRecognizers;

typedef enum {
    IRCACM_Full = 0,
    IRCACM_Prefix = 1,
    IRCACM_Random = 2,
} InkRecognizerCharacterAutoCompletionMode;

typedef enum {
    IRM_None = 0,
    IRM_WordModeOnly = 1,
    IRM_Coerce = 2,
    IRM_TopInkBreaksOnly = 4,
    IRM_PrefixOk = 8,
    IRM_LineMode = 16,
    IRM_DisablePersonalization = 32,
    IRM_AutoSpace = 64,
    IRM_Max = 128,
} InkRecognitionModes;

typedef enum {
    DISPID_IRERecognitionWithAlternates = 1,
    DISPID_IRERecognition = 2,
} DISPID_InkRecognitionEvent;

typedef enum {
    DISPID_IRecoCtx_Strokes = 1,
    DISPID_IRecoCtx_CharacterAutoCompletionMode = 2,
    DISPID_IRecoCtx_Factoid = 3,
    DISPID_IRecoCtx_WordList = 4,
    DISPID_IRecoCtx_Recognizer = 5,
    DISPID_IRecoCtx_Guide = 6,
    DISPID_IRecoCtx_Flags = 7,
    DISPID_IRecoCtx_PrefixText = 8,
    DISPID_IRecoCtx_SuffixText = 9,
    DISPID_IRecoCtx_StopRecognition = 10,
    DISPID_IRecoCtx_Clone = 11,
    DISPID_IRecoCtx_Recognize = 12,
    DISPID_IRecoCtx_StopBackgroundRecognition = 13,
    DISPID_IRecoCtx_EndInkInput = 14,
    DISPID_IRecoCtx_BackgroundRecognize = 15,
    DISPID_IRecoCtx_BackgroundRecognizeWithAlternates = 16,
    DISPID_IRecoCtx_IsStringSupported = 17,
} DISPID_InkRecoContext;

typedef enum {
    DISPID_IRecoCtx2_EnabledUnicodeRanges = 0,
} DISPID_InkRecoContext2;

typedef enum {
    IRAS_Start = 0,
    IRAS_DefaultCount = 10,
    IRAS_All = -1,
} InkRecognitionAlternatesSelection;

typedef enum {
    DISPID_InkRecognitionResult_TopString = 1,
    DISPID_InkRecognitionResult_TopAlternate = 2,
    DISPID_InkRecognitionResult_Strokes = 3,
    DISPID_InkRecognitionResult_TopConfidence = 4,
    DISPID_InkRecognitionResult_AlternatesFromSelection = 5,
    DISPID_InkRecognitionResult_ModifyTopAlternate = 6,
    DISPID_InkRecognitionResult_SetResultOnStrokes = 7,
} DISPID_InkRecognitionResult;

typedef enum {
    DISPID_InkRecoAlternate_String = 1,
    DISPID_InkRecoAlternate_LineNumber = 2,
    DISPID_InkRecoAlternate_Baseline = 3,
    DISPID_InkRecoAlternate_Midline = 4,
    DISPID_InkRecoAlternate_Ascender = 5,
    DISPID_InkRecoAlternate_Descender = 6,
    DISPID_InkRecoAlternate_Confidence = 7,
    DISPID_InkRecoAlternate_Strokes = 8,
    DISPID_InkRecoAlternate_GetStrokesFromStrokeRanges = 9,
    DISPID_InkRecoAlternate_GetStrokesFromTextRange = 10,
    DISPID_InkRecoAlternate_GetTextRangeFromStrokes = 11,
    DISPID_InkRecoAlternate_GetPropertyValue = 12,
    DISPID_InkRecoAlternate_LineAlternates = 13,
    DISPID_InkRecoAlternate_ConfidenceAlternates = 14,
    DISPID_InkRecoAlternate_AlternatesWithConstantPropertyValues = 15,
} DISPID_InkRecoAlternate;

typedef enum {
    DISPID_InkRecognitionAlternates_NewEnum = -4,
    DISPID_InkRecognitionAlternates_Item = 0,
    DISPID_InkRecognitionAlternates_Count = 1,
    DISPID_InkRecognitionAlternates_Strokes = 2,
} DISPID_InkRecognitionAlternates;

typedef int InkRecoGuide;

typedef enum {
    DISPID_IRGWritingBox = 1,
    DISPID_IRGDrawnBox = 2,
    DISPID_IRGRows = 3,
    DISPID_IRGColumns = 4,
    DISPID_IRGMidline = 5,
    DISPID_IRGGuideData = 6,
} DISPID_InkRecognizerGuide;

typedef enum {
    DISPID_InkWordList_AddWord = 0,
    DISPID_InkWordList_RemoveWord = 1,
    DISPID_InkWordList_Merge = 2,
} DISPID_InkWordList;

typedef enum {
    DISPID_InkWordList2_AddWords = 3,
} DISPID_InkWordList2;

typedef int IInkRectangle;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkExtendedProperty;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkExtendedProperties;

typedef int IInkDrawingAttributes;

typedef int IInkTransform;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkGesture;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkCursor;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkCursors;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkCursorButton;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkCursorButtons;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkTablet;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkTablet2;

// TODO: this type is limited to platform 'windows6.1'
typedef int IInkTablet3;

typedef int IInkTablets;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkStrokeDisp;

typedef int IInkStrokes;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkCustomStrokes;

typedef int _IInkStrokesEvents;

typedef int IInkDisp;

typedef int _IInkEvents;

typedef int IInkRenderer;

typedef int IInkCollector;

typedef int _IInkCollectorEvents;

typedef int IInkOverlay;

typedef int _IInkOverlayEvents;

typedef int IInkPicture;

typedef int _IInkPictureEvents;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkRecognizer;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkRecognizer2;

typedef int IInkRecognizers;

typedef int _IInkRecognitionEvents;

typedef int IInkRecognizerContext;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkRecognizerContext2;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkRecognitionResult;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkRecognitionAlternate;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkRecognitionAlternates;

typedef int IInkRecognizerGuide;

typedef int IInkWordList;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkWordList2;

typedef int IInk;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkLineInfo;

typedef int ISketchInk;

typedef int InkDivider;

typedef enum {
    IDT_Segment = 0,
    IDT_Line = 1,
    IDT_Paragraph = 2,
    IDT_Drawing = 3,
} InkDivisionType;

typedef enum {
    DISPID_IInkDivider_Strokes = 1,
    DISPID_IInkDivider_RecognizerContext = 2,
    DISPID_IInkDivider_LineHeight = 3,
    DISPID_IInkDivider_Divide = 4,
} DISPID_InkDivider;

typedef enum {
    DISPID_IInkDivisionResult_Strokes = 1,
    DISPID_IInkDivisionResult_ResultByType = 2,
} DISPID_InkDivisionResult;

typedef enum {
    DISPID_IInkDivisionUnit_Strokes = 1,
    DISPID_IInkDivisionUnit_DivisionType = 2,
    DISPID_IInkDivisionUnit_RecognizedString = 3,
    DISPID_IInkDivisionUnit_RotationTransform = 4,
} DISPID_InkDivisionUnit;

typedef enum {
    DISPID_IInkDivisionUnits_NewEnum = -4,
    DISPID_IInkDivisionUnits_Item = 0,
    DISPID_IInkDivisionUnits_Count = 1,
} DISPID_InkDivisionUnits;

typedef int IInkDivider;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkDivisionResult;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkDivisionUnit;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IInkDivisionUnits;

typedef int HandwrittenTextInsertion;

typedef int PenInputPanel;

typedef int TextInputPanel;

typedef int PenInputPanel_Internal;

typedef enum {
    DISPID_PIPAttachedEditWindow = 0,
    DISPID_PIPFactoid = 1,
    DISPID_PIPCurrentPanel = 2,
    DISPID_PIPDefaultPanel = 3,
    DISPID_PIPVisible = 4,
    DISPID_PIPTop = 5,
    DISPID_PIPLeft = 6,
    DISPID_PIPWidth = 7,
    DISPID_PIPHeight = 8,
    DISPID_PIPMoveTo = 9,
    DISPID_PIPCommitPendingInput = 10,
    DISPID_PIPRefresh = 11,
    DISPID_PIPBusy = 12,
    DISPID_PIPVerticalOffset = 13,
    DISPID_PIPHorizontalOffset = 14,
    DISPID_PIPEnableTsf = 15,
    DISPID_PIPAutoShow = 16,
} DISPID_PenInputPanel;

typedef enum {
    DISPID_PIPEVisibleChanged = 0,
    DISPID_PIPEPanelChanged = 1,
    DISPID_PIPEInputFailed = 2,
    DISPID_PIPEPanelMoving = 3,
} DISPID_PenInputPanelEvents;

typedef enum {
    InPlace = 0,
    Floating = 1,
    DockedTop = 2,
    DockedBottom = 3,
    Closed = 4,
} VisualState;

typedef enum {
    InteractionMode_InPlace = 0,
    InteractionMode_Floating = 1,
    InteractionMode_DockedTop = 2,
    InteractionMode_DockedBottom = 3,
} InteractionMode;

typedef enum {
    InPlaceState_Auto = 0,
    InPlaceState_HoverTarget = 1,
    InPlaceState_Expanded = 2,
} InPlaceState;

typedef enum {
    PanelInputArea_Auto = 0,
    PanelInputArea_Keyboard = 1,
    PanelInputArea_WritingPad = 2,
    PanelInputArea_CharacterPad = 3,
} PanelInputArea;

typedef enum {
    CorrectionMode_NotVisible = 0,
    CorrectionMode_PreInsertion = 1,
    CorrectionMode_PostInsertionCollapsed = 2,
    CorrectionMode_PostInsertionExpanded = 3,
} CorrectionMode;

typedef enum {
    CorrectionPosition_Auto = 0,
    CorrectionPosition_Bottom = 1,
    CorrectionPosition_Top = 2,
} CorrectionPosition;

typedef enum {
    InPlaceDirection_Auto = 0,
    InPlaceDirection_Bottom = 1,
    InPlaceDirection_Top = 2,
} InPlaceDirection;

typedef enum {
    EventMask_InPlaceStateChanging = 1,
    EventMask_InPlaceStateChanged = 2,
    EventMask_InPlaceSizeChanging = 4,
    EventMask_InPlaceSizeChanged = 8,
    EventMask_InputAreaChanging = 16,
    EventMask_InputAreaChanged = 32,
    EventMask_CorrectionModeChanging = 64,
    EventMask_CorrectionModeChanged = 128,
    EventMask_InPlaceVisibilityChanging = 256,
    EventMask_InPlaceVisibilityChanged = 512,
    EventMask_TextInserting = 1024,
    EventMask_TextInserted = 2048,
    EventMask_All = 4095,
} EventMask;

typedef enum {
    PT_Default = 0,
    PT_Inactive = 1,
    PT_Handwriting = 2,
    PT_Keyboard = 3,
} PanelType;

typedef int IPenInputPanel;

typedef int _IPenInputPanelEvents;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IHandwrittenTextInsertion;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ITextInputPanelEventSink;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ITextInputPanel;

typedef int IInputPanelWindowHandle;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ITextInputPanelRunInfo;

typedef enum {
    FLICKDIRECTION_MIN = 0,
    FLICKDIRECTION_RIGHT = 0,
    FLICKDIRECTION_UPRIGHT = 1,
    FLICKDIRECTION_UP = 2,
    FLICKDIRECTION_UPLEFT = 3,
    FLICKDIRECTION_LEFT = 4,
    FLICKDIRECTION_DOWNLEFT = 5,
    FLICKDIRECTION_DOWN = 6,
    FLICKDIRECTION_DOWNRIGHT = 7,
    FLICKDIRECTION_INVALID = 8,
} FLICKDIRECTION;

typedef enum {
    FLICKMODE_MIN = 0,
    FLICKMODE_OFF = 0,
    FLICKMODE_ON = 1,
    FLICKMODE_LEARNING = 2,
    FLICKMODE_MAX = 2,
    FLICKMODE_DEFAULT = 1,
} FLICKMODE;

typedef enum {
    FLICKACTION_COMMANDCODE_NULL = 0,
    FLICKACTION_COMMANDCODE_SCROLL = 1,
    FLICKACTION_COMMANDCODE_APPCOMMAND = 2,
    FLICKACTION_COMMANDCODE_CUSTOMKEY = 3,
    FLICKACTION_COMMANDCODE_KEYMODIFIER = 4,
} FLICKACTION_COMMANDCODE;

typedef int FLICK_POINT;

typedef int FLICK_DATA;

typedef enum {
    SCROLLDIRECTION_UP = 0,
    SCROLLDIRECTION_DOWN = 1,
} SCROLLDIRECTION;

typedef enum {
    KEYMODIFIER_CONTROL = 1,
    KEYMODIFIER_MENU = 2,
    KEYMODIFIER_SHIFT = 4,
    KEYMODIFIER_WIN = 8,
    KEYMODIFIER_ALTGR = 16,
    KEYMODIFIER_EXT = 32,
} KEYMODIFIER;

typedef int InkEdit;

typedef int IEC_STROKEINFO;

typedef int IEC_GESTUREINFO;

typedef int IEC_RECOGNITIONRESULTINFO;

typedef enum {
    NO_BUTTON = 0,
    LEFT_BUTTON = 1,
    RIGHT_BUTTON = 2,
    MIDDLE_BUTTON = 4,
} MouseButton;

typedef enum {
    rtfLeft = 0,
    rtfRight = 1,
    rtfCenter = 2,
} SelAlignmentConstants;

typedef enum {
    DISPID_Text = 0,
    DISPID_TextRTF = 1,
    DISPID_Hwnd = 2,
    DISPID_DisableNoScroll = 3,
    DISPID_Locked = 4,
    DISPID_Enabled = 5,
    DISPID_MaxLength = 6,
    DISPID_MultiLine = 7,
    DISPID_ScrollBars = 8,
    DISPID_RTSelStart = 9,
    DISPID_RTSelLength = 10,
    DISPID_RTSelText = 11,
    DISPID_SelAlignment = 12,
    DISPID_SelBold = 13,
    DISPID_SelCharOffset = 14,
    DISPID_SelColor = 15,
    DISPID_SelFontName = 16,
    DISPID_SelFontSize = 17,
    DISPID_SelItalic = 18,
    DISPID_SelRTF = 19,
    DISPID_SelUnderline = 20,
    DISPID_DragIcon = 21,
    DISPID_Status = 22,
    DISPID_UseMouseForInput = 23,
    DISPID_InkMode = 24,
    DISPID_InkInsertMode = 25,
    DISPID_RecoTimeout = 26,
    DISPID_DrawAttr = 27,
    DISPID_Recognizer = 28,
    DISPID_Factoid = 29,
    DISPID_SelInk = 30,
    DISPID_SelInksDisplayMode = 31,
    DISPID_Recognize = 32,
    DISPID_GetGestStatus = 33,
    DISPID_SetGestStatus = 34,
    DISPID_Refresh = 35,
} DISPID_InkEdit;

typedef enum {
    DISPID_IeeChange = 1,
    DISPID_IeeSelChange = 2,
    DISPID_IeeKeyDown = 3,
    DISPID_IeeKeyUp = 4,
    DISPID_IeeMouseUp = 5,
    DISPID_IeeMouseDown = 6,
    DISPID_IeeKeyPress = 7,
    DISPID_IeeDblClick = 8,
    DISPID_IeeClick = 9,
    DISPID_IeeMouseMove = 10,
    DISPID_IeeCursorDown = 21,
    DISPID_IeeStroke = 22,
    DISPID_IeeGesture = 23,
    DISPID_IeeRecognitionResult = 24,
} DISPID_InkEditEvents;

typedef enum {
    IEM_Disabled = 0,
    IEM_Ink = 1,
    IEM_InkAndGesture = 2,
} InkMode;

typedef enum {
    IEM_InsertText = 0,
    IEM_InsertInk = 1,
} InkInsertMode;

typedef enum {
    IES_Idle = 0,
    IES_Collecting = 1,
    IES_Recognizing = 2,
} InkEditStatus;

typedef enum {
    IDM_Ink = 0,
    IDM_Text = 1,
} InkDisplayMode;

typedef enum {
    rtfFlat = 0,
    rtfThreeD = 1,
} AppearanceConstants;

typedef enum {
    rtfNoBorder = 0,
    rtfFixedSingle = 1,
} BorderStyleConstants;

typedef enum {
    rtfNone = 0,
    rtfHorizontal = 1,
    rtfVertical = 2,
    rtfBoth = 3,
} ScrollBarsConstants;

typedef int IInkEdit;

typedef int _IInkEditEvents;

typedef int MathInputControl;

typedef enum {
    MICUIELEMENT_BUTTON_WRITE = 1,
    MICUIELEMENT_BUTTON_ERASE = 2,
    MICUIELEMENT_BUTTON_CORRECT = 4,
    MICUIELEMENT_BUTTON_CLEAR = 8,
    MICUIELEMENT_BUTTON_UNDO = 16,
    MICUIELEMENT_BUTTON_REDO = 32,
    MICUIELEMENT_BUTTON_INSERT = 64,
    MICUIELEMENT_BUTTON_CANCEL = 128,
    MICUIELEMENT_INKPANEL_BACKGROUND = 256,
    MICUIELEMENT_RESULTPANEL_BACKGROUND = 512,
} MICUIELEMENT;

typedef enum {
    MICUIELEMENTSTATE_NORMAL = 1,
    MICUIELEMENTSTATE_HOT = 2,
    MICUIELEMENTSTATE_PRESSED = 3,
    MICUIELEMENTSTATE_DISABLED = 4,
} MICUIELEMENTSTATE;

typedef enum {
    DISPID_MICInsert = 0,
    DISPID_MICClose = 1,
    DISPID_MICPaint = 2,
    DISPID_MICClear = 3,
} DISPID_MathInputControlEvents;

typedef int IMathInputControl;

typedef int _IMathInputControlEvents;

typedef int RealTimeStylus;

typedef int DynamicRenderer;

typedef int GestureRecognizer;

typedef int StrokeBuilder;

typedef enum {
    RTSDI_AllData = -1,
    RTSDI_None = 0,
    RTSDI_Error = 1,
    RTSDI_RealTimeStylusEnabled = 2,
    RTSDI_RealTimeStylusDisabled = 4,
    RTSDI_StylusNew = 8,
    RTSDI_StylusInRange = 16,
    RTSDI_InAirPackets = 32,
    RTSDI_StylusOutOfRange = 64,
    RTSDI_StylusDown = 128,
    RTSDI_Packets = 256,
    RTSDI_StylusUp = 512,
    RTSDI_StylusButtonUp = 1024,
    RTSDI_StylusButtonDown = 2048,
    RTSDI_SystemEvents = 4096,
    RTSDI_TabletAdded = 8192,
    RTSDI_TabletRemoved = 16384,
    RTSDI_CustomStylusDataAdded = 32768,
    RTSDI_UpdateMapping = 65536,
    RTSDI_DefaultEvents = 37766,
} RealTimeStylusDataInterest;

typedef int StylusInfo;

typedef enum {
    SyncStylusQueue = 1,
    AsyncStylusQueueImmediate = 2,
    AsyncStylusQueue = 3,
} StylusQueue;

typedef enum {
    RTSLT_ObjLock = 1,
    RTSLT_SyncEventLock = 2,
    RTSLT_AsyncEventLock = 4,
    RTSLT_ExcludeCallback = 8,
    RTSLT_SyncObjLock = 11,
    RTSLT_AsyncObjLock = 13,
} RealTimeStylusLockType;

typedef int GESTURE_DATA;

typedef int DYNAMIC_RENDERER_CACHED_DATA;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IRealTimeStylus;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IRealTimeStylus2;

// TODO: this type is limited to platform 'windows6.1'
typedef int IRealTimeStylus3;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IRealTimeStylusSynchronization;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IStrokeBuilder;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IStylusPlugin;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IStylusSyncPlugin;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IStylusAsyncPlugin;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDynamicRenderer;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IGestureRecognizer;

typedef int RECO_GUIDE;

typedef int RECO_ATTRS;

typedef int RECO_RANGE;

typedef int LINE_SEGMENT;

typedef int LATTICE_METRICS;

typedef enum {
    LM_BASELINE = 0,
    LM_MIDLINE = 1,
    LM_ASCENDER = 2,
    LM_DESCENDER = 3,
} LINE_METRICS;

typedef enum {
    CFL_STRONG = 0,
    CFL_INTERMEDIATE = 1,
    CFL_POOR = 2,
} CONFIDENCE_LEVEL;

typedef enum {
    ALT_BREAKS_SAME = 0,
    ALT_BREAKS_UNIQUE = 1,
    ALT_BREAKS_FULL = 2,
} ALT_BREAKS;

typedef enum {
    RECO_TYPE_WSTRING = 0,
    RECO_TYPE_WCHAR = 1,
} enumRECO_TYPE;

typedef int RECO_LATTICE_PROPERTY;

typedef int RECO_LATTICE_PROPERTIES;

typedef int RECO_LATTICE_ELEMENT;

typedef int RECO_LATTICE_COLUMN;

typedef int RECO_LATTICE;

typedef int CHARACTER_RANGE;

typedef int TipAutoCompleteClient;

typedef int ITipAutoCompleteProvider;

typedef int ITipAutoCompleteClient;


//--------------------------------------------------------------------------------
// Section: Functions (27)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void CreateRecognizer();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void DestroyRecognizer();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void GetRecoAttributes();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void CreateContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void DestroyContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void GetResultPropertyList();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void GetUnicodeRanges();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void AddStroke();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void GetBestResultString();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void SetGuide();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void AdviseInkChange();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void EndInkInput();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void Process();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void SetFactoid();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void SetFlags();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void GetLatticePtr();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void SetTextContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void SetEnabledUnicodeRanges();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void IsStringSupported();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void SetWordList();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void GetRightSeparator();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void GetLeftSeparator();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void DestroyWordList();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void AddWordsToWordList();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void MakeWordList();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void GetAllRecognizers();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void LoadCachedAttributes();

