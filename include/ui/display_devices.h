// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (0)
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Section: Types (233)
//--------------------------------------------------------------------------------
typedef int IFIMETRICS;

typedef int HSEMAPHORE;

typedef int FD_XFORM;

typedef int FD_DEVICEMETRICS;

typedef int WCRUN;

typedef int FD_GLYPHSET;

typedef int FD_GLYPHATTR;

typedef int FD_KERNINGPAIR;

typedef int FONTDIFF;

typedef int FONTSIM;

typedef int IFIEXTRA;

typedef int DRVFN;

typedef int DRVENABLEDATA;

typedef int DEVINFO;

typedef int LINEATTRS;

typedef int XFORML;

typedef int CIECHROMA;

typedef int COLORINFO;

typedef int GDIINFO;

typedef int BRUSHOBJ;

typedef int CLIPOBJ;

typedef int DRIVEROBJ;

typedef int FONTOBJ;

typedef int BLENDOBJ;

typedef int PALOBJ;

typedef int PATHOBJ;

typedef int SURFOBJ;

typedef int WNDOBJ;

typedef int XLATEOBJ;

typedef int ENUMRECTS;

typedef int GLYPHBITS;

typedef int GLYPHDEF;

typedef int GLYPHPOS;

typedef int GLYPHDATA;

typedef int STROBJ;

typedef int FONTINFO;

typedef int PATHDATA;

typedef int RUN;

typedef int CLIPLINE;

typedef int PERBANDINFO;

typedef int GAMMARAMP;

typedef int DEVHTINFO;

typedef int DEVHTADJDATA;

typedef int TYPE1_FONT;

typedef int ENGSAFESEMAPHORE;

typedef int ENG_TIME_FIELDS;

typedef int PFN_DrvQueryGlyphAttrs;

typedef int DDVIDEOPORTCAPS;

typedef int DDVIDEOPORTDESC;

typedef int DDVIDEOPORTINFO;

typedef int DDVIDEOPORTBANDWIDTH;

typedef int DDCORECAPS;

typedef int DDHAL_WAITFORVERTICALBLANKDATA;

typedef int DDHAL_DESTROYDDLOCALDATA;

typedef int VIDEOMEMORY;

typedef int VIDEOMEMORYINFO;

typedef int PDD_CANCREATESURFACE;

typedef int PDD_WAITFORVERTICALBLANK;

typedef int PDD_CREATESURFACE;

typedef int PDD_CREATEPALETTE;

typedef int PDD_GETSCANLINE;

typedef int PDD_MAPMEMORY;

typedef int PDD_GETDRIVERINFO;

typedef int DD_CALLBACKS;

typedef int PDD_GETAVAILDRIVERMEMORY;

typedef int DD_MISCELLANEOUSCALLBACKS;

typedef int PDD_CREATESURFACEEX;

typedef int PDD_GETDRIVERSTATE;

typedef int PDD_DESTROYDDLOCAL;

typedef int DD_MISCELLANEOUS2CALLBACKS;

typedef int PDD_FREEDRIVERMEMORY;

typedef int PDD_SETEXCLUSIVEMODE;

typedef int PDD_FLIPTOGDISURFACE;

typedef int DD_NTCALLBACKS;

typedef int PDD_PALCB_DESTROYPALETTE;

typedef int PDD_PALCB_SETENTRIES;

typedef int DD_PALETTECALLBACKS;

typedef int PDD_SURFCB_LOCK;

typedef int PDD_SURFCB_UNLOCK;

typedef int PDD_SURFCB_BLT;

typedef int PDD_SURFCB_UPDATEOVERLAY;

typedef int PDD_SURFCB_SETOVERLAYPOSITION;

typedef int PDD_SURFCB_SETPALETTE;

typedef int PDD_SURFCB_FLIP;

typedef int PDD_SURFCB_DESTROYSURFACE;

typedef int PDD_SURFCB_ADDATTACHEDSURFACE;

typedef int PDD_SURFCB_SETCOLORKEY;

typedef int PDD_SURFCB_GETBLTSTATUS;

typedef int PDD_SURFCB_GETFLIPSTATUS;

typedef int DD_SURFACECALLBACKS;

typedef int PDD_VPORTCB_CANCREATEVIDEOPORT;

typedef int PDD_VPORTCB_CREATEVIDEOPORT;

typedef int PDD_VPORTCB_FLIP;

typedef int PDD_VPORTCB_GETBANDWIDTH;

typedef int PDD_VPORTCB_GETINPUTFORMATS;

typedef int PDD_VPORTCB_GETOUTPUTFORMATS;

typedef int PDD_VPORTCB_GETFIELD;

typedef int PDD_VPORTCB_GETLINE;

typedef int PDD_VPORTCB_GETVPORTCONNECT;

typedef int PDD_VPORTCB_DESTROYVPORT;

typedef int PDD_VPORTCB_GETFLIPSTATUS;

typedef int PDD_VPORTCB_UPDATE;

typedef int PDD_VPORTCB_WAITFORSYNC;

typedef int PDD_VPORTCB_GETSIGNALSTATUS;

typedef int PDD_VPORTCB_COLORCONTROL;

typedef int DD_VIDEOPORTCALLBACKS;

typedef int PDD_COLORCB_COLORCONTROL;

typedef int DD_COLORCONTROLCALLBACKS;

typedef int PDD_KERNELCB_SYNCSURFACE;

typedef int PDD_KERNELCB_SYNCVIDEOPORT;

typedef int DD_KERNELCALLBACKS;

typedef int PDD_MOCOMPCB_GETGUIDS;

typedef int PDD_MOCOMPCB_GETFORMATS;

typedef int PDD_MOCOMPCB_CREATE;

typedef int PDD_MOCOMPCB_GETCOMPBUFFINFO;

typedef int PDD_MOCOMPCB_GETINTERNALINFO;

typedef int PDD_MOCOMPCB_BEGINFRAME;

typedef int PDD_MOCOMPCB_ENDFRAME;

typedef int PDD_MOCOMPCB_RENDER;

typedef int PDD_MOCOMPCB_QUERYSTATUS;

typedef int PDD_MOCOMPCB_DESTROY;

typedef int DD_MOTIONCOMPCALLBACKS;

typedef int DD_NONLOCALVIDMEMCAPS;

typedef int DD_PALETTE_GLOBAL;

typedef int DD_PALETTE_LOCAL;

typedef int DD_CLIPPER_GLOBAL;

typedef int DD_CLIPPER_LOCAL;

typedef int DD_ATTACHLIST;

typedef int DD_SURFACE_INT;

typedef int DD_SURFACE_GLOBAL;

typedef int DD_SURFACE_MORE;

typedef int DD_SURFACE_LOCAL;

typedef int DD_D3DBUFCALLBACKS;

typedef int DD_HALINFO;

typedef int DD_DIRECTDRAW_GLOBAL;

typedef int DD_DIRECTDRAW_LOCAL;

typedef int DD_VIDEOPORT_LOCAL;

typedef int DD_MOTIONCOMP_LOCAL;

typedef int DD_MORESURFACECAPS;

typedef int DD_STEREOMODE;

typedef int DD_UPDATENONLOCALHEAPDATA;

typedef int DD_NTPRIVATEDRIVERCAPS;

typedef int DD_BLTDATA;

typedef int DD_LOCKDATA;

typedef int DD_UNLOCKDATA;

typedef int DD_UPDATEOVERLAYDATA;

typedef int DD_SETOVERLAYPOSITIONDATA;

typedef int DD_SETPALETTEDATA;

typedef int DD_FLIPDATA;

typedef int DD_DESTROYSURFACEDATA;

typedef int DD_ADDATTACHEDSURFACEDATA;

typedef int DD_SETCOLORKEYDATA;

typedef int DD_GETBLTSTATUSDATA;

typedef int DD_GETFLIPSTATUSDATA;

typedef int DD_DESTROYPALETTEDATA;

typedef int DD_SETENTRIESDATA;

typedef int DD_CREATESURFACEDATA;

typedef int DD_CANCREATESURFACEDATA;

typedef int DD_CREATEPALETTEDATA;

typedef int DD_WAITFORVERTICALBLANKDATA;

typedef int DD_GETSCANLINEDATA;

typedef int DD_MAPMEMORYDATA;

typedef int DD_CANCREATEVPORTDATA;

typedef int DD_CREATEVPORTDATA;

typedef int DD_FLIPVPORTDATA;

typedef int DD_GETVPORTBANDWIDTHDATA;

typedef int DD_GETVPORTINPUTFORMATDATA;

typedef int DD_GETVPORTOUTPUTFORMATDATA;

typedef int DD_GETVPORTFIELDDATA;

typedef int DD_GETVPORTLINEDATA;

typedef int DD_GETVPORTCONNECTDATA;

typedef int DD_DESTROYVPORTDATA;

typedef int DD_GETVPORTFLIPSTATUSDATA;

typedef int DD_UPDATEVPORTDATA;

typedef int DD_WAITFORVPORTSYNCDATA;

typedef int DD_GETVPORTSIGNALDATA;

typedef int DD_VPORTCOLORDATA;

typedef int DD_COLORCONTROLDATA;

typedef int DD_GETDRIVERINFODATA;

typedef int DD_GETAVAILDRIVERMEMORYDATA;

typedef int DD_FREEDRIVERMEMORYDATA;

typedef int DD_SETEXCLUSIVEMODEDATA;

typedef int DD_FLIPTOGDISURFACEDATA;

typedef int DD_SYNCSURFACEDATA;

typedef int DD_SYNCVIDEOPORTDATA;

typedef int DD_GETMOCOMPGUIDSDATA;

typedef int DD_GETMOCOMPFORMATSDATA;

typedef int DD_CREATEMOCOMPDATA;

typedef int DDCOMPBUFFERINFO;

typedef int DD_GETMOCOMPCOMPBUFFDATA;

typedef int DD_GETINTERNALMOCOMPDATA;

typedef int DD_BEGINMOCOMPFRAMEDATA;

typedef int DD_ENDMOCOMPFRAMEDATA;

typedef int DDMOCOMPBUFFERINFO;

typedef int DD_RENDERMOCOMPDATA;

typedef int DD_QUERYMOCOMPSTATUSDATA;

typedef int DD_DESTROYMOCOMPDATA;

typedef int DD_CREATESURFACEEXDATA;

typedef int DD_GETDRIVERSTATEDATA;

typedef int DEVMODEA;

typedef int DEVMODEW;

typedef int DISPLAYCONFIG_RATIONAL;

typedef enum {
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_OTHER = -1,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HD15 = 0,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SVIDEO = 1,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPOSITE_VIDEO = 2,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPONENT_VIDEO = 3,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DVI = 4,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HDMI = 5,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_LVDS = 6,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_D_JPN = 8,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDI = 9,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EXTERNAL = 10,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EMBEDDED = 11,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EXTERNAL = 12,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EMBEDDED = 13,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDTVDONGLE = 14,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_MIRACAST = 15,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INDIRECT_WIRED = 16,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INDIRECT_VIRTUAL = 17,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INTERNAL = -2147483648,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_FORCE_UINT32 = -1,
} DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY;

typedef enum {
    DISPLAYCONFIG_SCANLINE_ORDERING_UNSPECIFIED = 0,
    DISPLAYCONFIG_SCANLINE_ORDERING_PROGRESSIVE = 1,
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED = 2,
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_UPPERFIELDFIRST = 2,
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_LOWERFIELDFIRST = 3,
    DISPLAYCONFIG_SCANLINE_ORDERING_FORCE_UINT32 = -1,
} DISPLAYCONFIG_SCANLINE_ORDERING;

typedef int DISPLAYCONFIG_2DREGION;

typedef int DISPLAYCONFIG_VIDEO_SIGNAL_INFO;

typedef enum {
    DISPLAYCONFIG_SCALING_IDENTITY = 1,
    DISPLAYCONFIG_SCALING_CENTERED = 2,
    DISPLAYCONFIG_SCALING_STRETCHED = 3,
    DISPLAYCONFIG_SCALING_ASPECTRATIOCENTEREDMAX = 4,
    DISPLAYCONFIG_SCALING_CUSTOM = 5,
    DISPLAYCONFIG_SCALING_PREFERRED = 128,
    DISPLAYCONFIG_SCALING_FORCE_UINT32 = -1,
} DISPLAYCONFIG_SCALING;

typedef enum {
    DISPLAYCONFIG_ROTATION_IDENTITY = 1,
    DISPLAYCONFIG_ROTATION_ROTATE90 = 2,
    DISPLAYCONFIG_ROTATION_ROTATE180 = 3,
    DISPLAYCONFIG_ROTATION_ROTATE270 = 4,
    DISPLAYCONFIG_ROTATION_FORCE_UINT32 = -1,
} DISPLAYCONFIG_ROTATION;

typedef enum {
    DISPLAYCONFIG_MODE_INFO_TYPE_SOURCE = 1,
    DISPLAYCONFIG_MODE_INFO_TYPE_TARGET = 2,
    DISPLAYCONFIG_MODE_INFO_TYPE_DESKTOP_IMAGE = 3,
    DISPLAYCONFIG_MODE_INFO_TYPE_FORCE_UINT32 = -1,
} DISPLAYCONFIG_MODE_INFO_TYPE;

typedef enum {
    DISPLAYCONFIG_PIXELFORMAT_8BPP = 1,
    DISPLAYCONFIG_PIXELFORMAT_16BPP = 2,
    DISPLAYCONFIG_PIXELFORMAT_24BPP = 3,
    DISPLAYCONFIG_PIXELFORMAT_32BPP = 4,
    DISPLAYCONFIG_PIXELFORMAT_NONGDI = 5,
    DISPLAYCONFIG_PIXELFORMAT_FORCE_UINT32 = -1,
} DISPLAYCONFIG_PIXELFORMAT;

typedef int DISPLAYCONFIG_SOURCE_MODE;

typedef int DISPLAYCONFIG_TARGET_MODE;

typedef int DISPLAYCONFIG_DESKTOP_IMAGE_INFO;

typedef int DISPLAYCONFIG_MODE_INFO;

typedef int DISPLAYCONFIG_PATH_SOURCE_INFO;

typedef int DISPLAYCONFIG_PATH_TARGET_INFO;

typedef int DISPLAYCONFIG_PATH_INFO;

typedef enum {
    DISPLAYCONFIG_TOPOLOGY_INTERNAL = 1,
    DISPLAYCONFIG_TOPOLOGY_CLONE = 2,
    DISPLAYCONFIG_TOPOLOGY_EXTEND = 4,
    DISPLAYCONFIG_TOPOLOGY_EXTERNAL = 8,
    DISPLAYCONFIG_TOPOLOGY_FORCE_UINT32 = -1,
} DISPLAYCONFIG_TOPOLOGY_ID;

typedef enum {
    DISPLAYCONFIG_DEVICE_INFO_GET_SOURCE_NAME = 1,
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_NAME = 2,
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_PREFERRED_MODE = 3,
    DISPLAYCONFIG_DEVICE_INFO_GET_ADAPTER_NAME = 4,
    DISPLAYCONFIG_DEVICE_INFO_SET_TARGET_PERSISTENCE = 5,
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_BASE_TYPE = 6,
    DISPLAYCONFIG_DEVICE_INFO_GET_SUPPORT_VIRTUAL_RESOLUTION = 7,
    DISPLAYCONFIG_DEVICE_INFO_SET_SUPPORT_VIRTUAL_RESOLUTION = 8,
    DISPLAYCONFIG_DEVICE_INFO_GET_ADVANCED_COLOR_INFO = 9,
    DISPLAYCONFIG_DEVICE_INFO_SET_ADVANCED_COLOR_STATE = 10,
    DISPLAYCONFIG_DEVICE_INFO_GET_SDR_WHITE_LEVEL = 11,
    DISPLAYCONFIG_DEVICE_INFO_FORCE_UINT32 = -1,
} DISPLAYCONFIG_DEVICE_INFO_TYPE;

typedef int DISPLAYCONFIG_DEVICE_INFO_HEADER;

typedef int DISPLAYCONFIG_SOURCE_DEVICE_NAME;

typedef int DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS;

typedef int DISPLAYCONFIG_TARGET_DEVICE_NAME;

typedef int DISPLAYCONFIG_TARGET_PREFERRED_MODE;

typedef int DISPLAYCONFIG_ADAPTER_NAME;

typedef int DISPLAYCONFIG_TARGET_BASE_TYPE;

typedef int DISPLAYCONFIG_SET_TARGET_PERSISTENCE;

typedef int DISPLAYCONFIG_SUPPORT_VIRTUAL_RESOLUTION;

typedef int VIDEOPARAMETERS;

typedef int IDirectDrawKernel;

typedef int IDirectDrawSurfaceKernel;

typedef int DDKERNELCAPS;

typedef int IFIMETRICS;


//--------------------------------------------------------------------------------
// Section: Functions (83)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows5.0'
/*?*c_void*/void BRUSHOBJ_pvAllocRbrush();

// TODO: this type is limited to platform 'windows5.0'
/*?*c_void*/void BRUSHOBJ_pvGetRbrush();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void BRUSHOBJ_ulGetBrushColor();

// TODO: this type is limited to platform 'windows5.0'
/*HANDLE*/void BRUSHOBJ_hGetColorTransform();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void CLIPOBJ_cEnumStart();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void CLIPOBJ_bEnum();

// TODO: this type is limited to platform 'windows5.0'
/*?*PATHOBJ*/void CLIPOBJ_ppoGetPath();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void FONTOBJ_cGetAllGlyphHandles();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void FONTOBJ_vGetInfo();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void FONTOBJ_cGetGlyphs();

// TODO: this type is limited to platform 'windows5.0'
/*?*XFORMOBJ*/void FONTOBJ_pxoGetXform();

// TODO: this type is limited to platform 'windows5.0'
/*?*IFIMETRICS*/void FONTOBJ_pifi();

// TODO: this type is limited to platform 'windows5.0'
/*?*FD_GLYPHSET*/void FONTOBJ_pfdg();

// TODO: this type is limited to platform 'windows5.0'
/*?*c_void*/void FONTOBJ_pvTrueTypeFontFile();

// TODO: this type is limited to platform 'windows5.0'
/*?*FD_GLYPHATTR*/void FONTOBJ_pQueryGlyphAttrs();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void PATHOBJ_vEnumStart();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PATHOBJ_bEnum();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void PATHOBJ_vEnumStartClipLines();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PATHOBJ_bEnumClipLines();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void PATHOBJ_vGetBounds();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void STROBJ_vEnumStart();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void STROBJ_bEnum();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void STROBJ_bEnumPositionsOnly();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void STROBJ_dwGetCodePage();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void STROBJ_bGetAdvanceWidths();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void XFORMOBJ_iGetXform();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void XFORMOBJ_bApplyXform();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void XLATEOBJ_iXlate();

// TODO: this type is limited to platform 'windows5.0'
/*?*u32*/void XLATEOBJ_piVector();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void XLATEOBJ_cGetPalette();

// TODO: this type is limited to platform 'windows5.0'
/*HANDLE*/void XLATEOBJ_hGetColorTransform();

// TODO: this type is limited to platform 'windows5.0'
/*HBITMAP*/void EngCreateBitmap();

// TODO: this type is limited to platform 'windows5.0'
/*HSURF*/void EngCreateDeviceSurface();

// TODO: this type is limited to platform 'windows5.0'
/*HBITMAP*/void EngCreateDeviceBitmap();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngDeleteSurface();

// TODO: this type is limited to platform 'windows5.0'
/*?*SURFOBJ*/void EngLockSurface();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void EngUnlockSurface();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngEraseSurface();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngAssociateSurface();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngMarkBandingSurface();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngCheckAbort();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void EngDeletePath();

// TODO: this type is limited to platform 'windows5.0'
/*HPALETTE*/void EngCreatePalette();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngDeletePalette();

// TODO: this type is limited to platform 'windows5.0'
/*?*CLIPOBJ*/void EngCreateClip();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void EngDeleteClip();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngBitBlt();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngLineTo();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngStretchBlt();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngStretchBltROP();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngAlphaBlend();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngGradientFill();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngTransparentBlt();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngTextOut();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngStrokePath();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngFillPath();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngStrokeAndFillPath();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngPaint();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngCopyBits();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EngPlgBlt();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void HT_Get8BPPFormatPalette();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void HT_Get8BPPMaskPalette();

// TODO: this type is limited to platform 'windows5.0'
/*PWSTR*/void EngGetPrinterDataFileName();

// TODO: this type is limited to platform 'windows5.0'
/*PWSTR*/void EngGetDriverName();

// TODO: this type is limited to platform 'windows5.0'
/*HANDLE*/void EngLoadModule();

// TODO: this type is limited to platform 'windows5.0'
/*?*c_void*/void EngFindResource();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void EngFreeModule();

// TODO: this type is limited to platform 'windows5.0'
/*?*HSEMAPHORE__*/void EngCreateSemaphore();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void EngAcquireSemaphore();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void EngReleaseSemaphore();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void EngDeleteSemaphore();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void EngMultiByteToUnicodeN();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void EngUnicodeToMultiByteN();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void EngQueryLocalTime();

// TODO: this type is limited to platform 'windows5.0'
/*?*FD_GLYPHSET*/void EngComputeGlyphSet();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void EngMultiByteToWideChar();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void EngWideCharToMultiByte();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void EngGetCurrentCodePage();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetDisplayConfigBufferSizes();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void SetDisplayConfig();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void QueryDisplayConfig();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void DisplayConfigGetDeviceInfo();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void DisplayConfigSetDeviceInfo();

