// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (1405)
//--------------------------------------------------------------------------------
#define WM_DEVICECHANGE (UINT)537
#define BSM_VXDS (UINT)1
#define BSM_NETDRIVER (UINT)2
#define BSM_INSTALLABLEDRIVERS (UINT)4
#define OFN_SHAREFALLTHROUGH (UINT)2
#define OFN_SHARENOWARN (UINT)1
#define OFN_SHAREWARN (UINT)0
#define CDM_FIRST (UINT)1124
#define CDM_LAST (UINT)1224
#define CDM_GETSPEC (UINT)1124
#define CDM_GETFILEPATH (UINT)1125
#define CDM_GETFOLDERPATH (UINT)1126
#define CDM_GETFOLDERIDLIST (UINT)1127
#define CDM_SETCONTROLTEXT (UINT)1128
#define CDM_HIDECONTROL (UINT)1129
#define CDM_SETDEFEXT (UINT)1130
#define FR_RAW (UINT)131072
#define FR_SHOWWRAPAROUND (UINT)262144
#define FR_NOWRAPAROUND (UINT)524288
#define FR_WRAPAROUND (UINT)1048576
#define FRM_FIRST (UINT)1124
#define FRM_LAST (UINT)1224
#define FRM_SETOPERATIONRESULT (UINT)1124
#define FRM_SETOPERATIONRESULTTEXT (UINT)1125
#define PS_OPENTYPE_FONTTYPE (UINT)65536
#define TT_OPENTYPE_FONTTYPE (UINT)131072
#define TYPE1_FONTTYPE (UINT)262144
#define SYMBOL_FONTTYPE (UINT)524288
#define WM_CHOOSEFONT_GETLOGFONT (UINT)1025
#define WM_CHOOSEFONT_SETLOGFONT (UINT)1125
#define WM_CHOOSEFONT_SETFLAGS (UINT)1126
#define CD_LBSELNOITEMS (INT)-1
#define CD_LBSELCHANGE (UINT)0
#define CD_LBSELSUB (UINT)1
#define CD_LBSELADD (UINT)2
#define START_PAGE_GENERAL (UINT)4294967295
#define PD_RESULT_CANCEL (UINT)0
#define PD_RESULT_PRINT (UINT)1
#define PD_RESULT_APPLY (UINT)2
#define DN_DEFAULTPRN (UINT)1
#define WM_PSD_FULLPAGERECT (UINT)1025
#define WM_PSD_MINMARGINRECT (UINT)1026
#define WM_PSD_MARGINRECT (UINT)1027
#define WM_PSD_GREEKTEXTRECT (UINT)1028
#define WM_PSD_ENVSTAMPRECT (UINT)1029
#define WM_PSD_YAFULLPAGERECT (UINT)1030
// skipped 'RT_CURSOR'
// skipped 'RT_BITMAP'
// skipped 'RT_ICON'
// skipped 'RT_MENU'
// skipped 'RT_DIALOG'
// skipped 'RT_FONTDIR'
// skipped 'RT_FONT'
// skipped 'RT_ACCELERATOR'
// skipped 'RT_MESSAGETABLE'
#define DIFFERENCE (UINT)11
// skipped 'RT_VERSION'
// skipped 'RT_DLGINCLUDE'
// skipped 'RT_PLUGPLAY'
// skipped 'RT_VXD'
// skipped 'RT_ANICURSOR'
// skipped 'RT_ANIICON'
// skipped 'RT_HTML'
#define RT_MANIFEST (UINT)24
#define CREATEPROCESS_MANIFEST_RESOURCE_ID (UINT)1
#define ISOLATIONAWARE_MANIFEST_RESOURCE_ID (UINT)2
#define ISOLATIONAWARE_NOSTATICIMPORT_MANIFEST_RESOURCE_ID (UINT)3
#define ISOLATIONPOLICY_MANIFEST_RESOURCE_ID (UINT)4
#define ISOLATIONPOLICY_BROWSER_MANIFEST_RESOURCE_ID (UINT)5
#define MINIMUM_RESERVED_MANIFEST_RESOURCE_ID (UINT)1
#define MAXIMUM_RESERVED_MANIFEST_RESOURCE_ID (UINT)16
#define SB_LINEUP (UINT)0
#define SB_LINELEFT (UINT)0
#define SB_LINEDOWN (UINT)1
#define SB_LINERIGHT (UINT)1
#define SB_PAGEUP (UINT)2
#define SB_PAGELEFT (UINT)2
#define SB_PAGEDOWN (UINT)3
#define SB_PAGERIGHT (UINT)3
#define SB_THUMBPOSITION (UINT)4
#define SB_THUMBTRACK (UINT)5
#define SB_TOP (UINT)6
#define SB_LEFT (UINT)6
#define SB_BOTTOM (UINT)7
#define SB_RIGHT (UINT)7
#define SB_ENDSCROLL (UINT)8
#define HIDE_WINDOW (UINT)0
#define SHOW_OPENWINDOW (UINT)1
#define SHOW_ICONWINDOW (UINT)2
#define SHOW_FULLSCREEN (UINT)3
#define SHOW_OPENNOACTIVATE (UINT)4
#define KF_EXTENDED (UINT)256
#define KF_DLGMODE (UINT)2048
#define KF_MENUMODE (UINT)4096
#define KF_ALTDOWN (UINT)8192
#define KF_REPEAT (UINT)16384
#define KF_UP (UINT)32768
#define WH_MIN (INT)-1
#define WH_HARDWARE (UINT)8
#define WH_MAX (UINT)14
#define HC_ACTION (UINT)0
#define HC_GETNEXT (UINT)1
#define HC_SKIP (UINT)2
#define HC_NOREMOVE (UINT)3
#define HC_SYSMODALON (UINT)4
#define HC_SYSMODALOFF (UINT)5
#define HCBT_MOVESIZE (UINT)0
#define HCBT_MINMAX (UINT)1
#define HCBT_QS (UINT)2
#define HCBT_CREATEWND (UINT)3
#define HCBT_DESTROYWND (UINT)4
#define HCBT_ACTIVATE (UINT)5
#define HCBT_CLICKSKIPPED (UINT)6
#define HCBT_KEYSKIPPED (UINT)7
#define HCBT_SYSCOMMAND (UINT)8
#define HCBT_SETFOCUS (UINT)9
#define WTS_CONSOLE_CONNECT (UINT)1
#define WTS_CONSOLE_DISCONNECT (UINT)2
#define WTS_REMOTE_CONNECT (UINT)3
#define WTS_REMOTE_DISCONNECT (UINT)4
#define WTS_SESSION_LOGON (UINT)5
#define WTS_SESSION_LOGOFF (UINT)6
#define WTS_SESSION_LOCK (UINT)7
#define WTS_SESSION_UNLOCK (UINT)8
#define WTS_SESSION_REMOTE_CONTROL (UINT)9
#define WTS_SESSION_CREATE (UINT)10
#define WTS_SESSION_TERMINATE (UINT)11
#define MSGF_DIALOGBOX (UINT)0
#define MSGF_MESSAGEBOX (UINT)1
#define MSGF_MENU (UINT)2
#define MSGF_SCROLLBAR (UINT)5
#define MSGF_NEXTWINDOW (UINT)6
#define MSGF_MAX (UINT)8
#define MSGF_USER (UINT)4096
#define HSHELL_WINDOWCREATED (UINT)1
#define HSHELL_WINDOWDESTROYED (UINT)2
#define HSHELL_ACTIVATESHELLWINDOW (UINT)3
#define HSHELL_WINDOWACTIVATED (UINT)4
#define HSHELL_GETMINRECT (UINT)5
#define HSHELL_REDRAW (UINT)6
#define HSHELL_TASKMAN (UINT)7
#define HSHELL_LANGUAGE (UINT)8
#define HSHELL_SYSMENU (UINT)9
#define HSHELL_ENDTASK (UINT)10
#define HSHELL_ACCESSIBILITYSTATE (UINT)11
#define HSHELL_APPCOMMAND (UINT)12
#define HSHELL_WINDOWREPLACED (UINT)13
#define HSHELL_WINDOWREPLACING (UINT)14
#define HSHELL_MONITORCHANGED (UINT)16
#define HSHELL_HIGHBIT (UINT)32768
#define FAPPCOMMAND_MOUSE (UINT)32768
#define FAPPCOMMAND_KEY (UINT)0
#define FAPPCOMMAND_OEM (UINT)4096
#define FAPPCOMMAND_MASK (UINT)61440
#define LLMHF_INJECTED (UINT)1
#define LLMHF_LOWER_IL_INJECTED (UINT)2
#define HKL_PREV (UINT)0
#define HKL_NEXT (UINT)1
#define INPUTLANGCHANGE_SYSCHARSET (UINT)1
#define INPUTLANGCHANGE_FORWARD (UINT)2
#define INPUTLANGCHANGE_BACKWARD (UINT)4
#define KL_NAMELENGTH (UINT)9
#define DESKTOP_READOBJECTS (INT)1
#define DESKTOP_CREATEWINDOW (INT)2
#define DESKTOP_CREATEMENU (INT)4
#define DESKTOP_HOOKCONTROL (INT)8
#define DESKTOP_JOURNALRECORD (INT)16
#define DESKTOP_JOURNALPLAYBACK (INT)32
#define DESKTOP_ENUMERATE (INT)64
#define DESKTOP_WRITEOBJECTS (INT)128
#define DESKTOP_SWITCHDESKTOP (INT)256
#define DF_ALLOWOTHERACCOUNTHOOK (INT)1
#define WINSTA_ENUMDESKTOPS (INT)1
#define WINSTA_READATTRIBUTES (INT)2
#define WINSTA_ACCESSCLIPBOARD (INT)4
#define WINSTA_CREATEDESKTOP (INT)8
#define WINSTA_WRITEATTRIBUTES (INT)16
#define WINSTA_ACCESSGLOBALATOMS (INT)32
#define WINSTA_EXITWINDOWS (INT)64
#define WINSTA_ENUMERATE (INT)256
#define WINSTA_READSCREEN (INT)512
#define CWF_CREATE_ONLY (UINT)1
#define WSF_VISIBLE (INT)1
#define UOI_TIMERPROC_EXCEPTION_SUPPRESSION (UINT)7
#define WM_NULL (UINT)0
#define WM_CREATE (UINT)1
#define WM_DESTROY (UINT)2
#define WM_MOVE (UINT)3
#define WM_SIZE (UINT)5
#define WM_ACTIVATE (UINT)6
#define WA_INACTIVE (UINT)0
#define WA_ACTIVE (UINT)1
#define WA_CLICKACTIVE (UINT)2
#define WM_SETFOCUS (UINT)7
#define WM_KILLFOCUS (UINT)8
#define WM_ENABLE (UINT)10
#define WM_SETREDRAW (UINT)11
#define WM_SETTEXT (UINT)12
#define WM_GETTEXT (UINT)13
#define WM_GETTEXTLENGTH (UINT)14
#define WM_PAINT (UINT)15
#define WM_CLOSE (UINT)16
#define WM_QUERYENDSESSION (UINT)17
#define WM_QUERYOPEN (UINT)19
#define WM_ENDSESSION (UINT)22
#define WM_QUIT (UINT)18
#define WM_ERASEBKGND (UINT)20
#define WM_SYSCOLORCHANGE (UINT)21
#define WM_SHOWWINDOW (UINT)24
#define WM_WININICHANGE (UINT)26
#define WM_DEVMODECHANGE (UINT)27
#define WM_ACTIVATEAPP (UINT)28
#define WM_FONTCHANGE (UINT)29
#define WM_TIMECHANGE (UINT)30
#define WM_CANCELMODE (UINT)31
#define WM_SETCURSOR (UINT)32
#define WM_MOUSEACTIVATE (UINT)33
#define WM_CHILDACTIVATE (UINT)34
#define WM_QUEUESYNC (UINT)35
#define WM_GETMINMAXINFO (UINT)36
#define WM_PAINTICON (UINT)38
#define WM_ICONERASEBKGND (UINT)39
#define WM_NEXTDLGCTL (UINT)40
#define WM_SPOOLERSTATUS (UINT)42
#define WM_DRAWITEM (UINT)43
#define WM_MEASUREITEM (UINT)44
#define WM_DELETEITEM (UINT)45
#define WM_VKEYTOITEM (UINT)46
#define WM_CHARTOITEM (UINT)47
#define WM_SETFONT (UINT)48
#define WM_GETFONT (UINT)49
#define WM_SETHOTKEY (UINT)50
#define WM_GETHOTKEY (UINT)51
#define WM_QUERYDRAGICON (UINT)55
#define WM_COMPAREITEM (UINT)57
#define WM_GETOBJECT (UINT)61
#define WM_COMPACTING (UINT)65
#define WM_COMMNOTIFY (UINT)68
#define WM_WINDOWPOSCHANGING (UINT)70
#define WM_WINDOWPOSCHANGED (UINT)71
#define WM_POWER (UINT)72
#define PWR_OK (UINT)1
#define PWR_FAIL (INT)-1
#define PWR_SUSPENDREQUEST (UINT)1
#define PWR_SUSPENDRESUME (UINT)2
#define PWR_CRITICALRESUME (UINT)3
#define WM_COPYDATA (UINT)74
#define WM_CANCELJOURNAL (UINT)75
#define WM_INPUTLANGCHANGEREQUEST (UINT)80
#define WM_INPUTLANGCHANGE (UINT)81
#define WM_TCARD (UINT)82
#define WM_HELP (UINT)83
#define WM_USERCHANGED (UINT)84
#define WM_NOTIFYFORMAT (UINT)85
#define NFR_ANSI (UINT)1
#define NFR_UNICODE (UINT)2
#define NF_QUERY (UINT)3
#define NF_REQUERY (UINT)4
#define WM_STYLECHANGING (UINT)124
#define WM_STYLECHANGED (UINT)125
#define WM_DISPLAYCHANGE (UINT)126
#define WM_GETICON (UINT)127
#define WM_SETICON (UINT)128
#define WM_NCCREATE (UINT)129
#define WM_NCDESTROY (UINT)130
#define WM_NCCALCSIZE (UINT)131
#define WM_NCHITTEST (UINT)132
#define WM_NCPAINT (UINT)133
#define WM_NCACTIVATE (UINT)134
#define WM_GETDLGCODE (UINT)135
#define WM_SYNCPAINT (UINT)136
#define WM_NCMOUSEMOVE (UINT)160
#define WM_NCLBUTTONDOWN (UINT)161
#define WM_NCLBUTTONUP (UINT)162
#define WM_NCLBUTTONDBLCLK (UINT)163
#define WM_NCRBUTTONDOWN (UINT)164
#define WM_NCRBUTTONUP (UINT)165
#define WM_NCRBUTTONDBLCLK (UINT)166
#define WM_NCMBUTTONDOWN (UINT)167
#define WM_NCMBUTTONUP (UINT)168
#define WM_NCMBUTTONDBLCLK (UINT)169
#define WM_NCXBUTTONDOWN (UINT)171
#define WM_NCXBUTTONUP (UINT)172
#define WM_NCXBUTTONDBLCLK (UINT)173
#define WM_INPUT_DEVICE_CHANGE (UINT)254
#define WM_INPUT (UINT)255
#define WM_KEYFIRST (UINT)256
#define WM_KEYDOWN (UINT)256
#define WM_KEYUP (UINT)257
#define WM_CHAR (UINT)258
#define WM_DEADCHAR (UINT)259
#define WM_SYSKEYDOWN (UINT)260
#define WM_SYSKEYUP (UINT)261
#define WM_SYSCHAR (UINT)262
#define WM_SYSDEADCHAR (UINT)263
#define WM_KEYLAST (UINT)265
#define UNICODE_NOCHAR (UINT)65535
#define WM_IME_STARTCOMPOSITION (UINT)269
#define WM_IME_ENDCOMPOSITION (UINT)270
#define WM_IME_COMPOSITION (UINT)271
#define WM_IME_KEYLAST (UINT)271
#define WM_INITDIALOG (UINT)272
#define WM_COMMAND (UINT)273
#define WM_SYSCOMMAND (UINT)274
#define WM_TIMER (UINT)275
#define WM_HSCROLL (UINT)276
#define WM_VSCROLL (UINT)277
#define WM_INITMENU (UINT)278
#define WM_INITMENUPOPUP (UINT)279
#define WM_GESTURE (UINT)281
#define WM_GESTURENOTIFY (UINT)282
#define WM_MENUSELECT (UINT)287
#define WM_MENUCHAR (UINT)288
#define WM_ENTERIDLE (UINT)289
#define WM_MENURBUTTONUP (UINT)290
#define WM_MENUDRAG (UINT)291
#define WM_MENUGETOBJECT (UINT)292
#define WM_UNINITMENUPOPUP (UINT)293
#define WM_MENUCOMMAND (UINT)294
#define WM_CHANGEUISTATE (UINT)295
#define WM_UPDATEUISTATE (UINT)296
#define WM_QUERYUISTATE (UINT)297
#define UIS_SET (UINT)1
#define UIS_CLEAR (UINT)2
#define UIS_INITIALIZE (UINT)3
#define UISF_HIDEFOCUS (UINT)1
#define UISF_HIDEACCEL (UINT)2
#define UISF_ACTIVE (UINT)4
#define WM_CTLCOLORMSGBOX (UINT)306
#define WM_CTLCOLOREDIT (UINT)307
#define WM_CTLCOLORLISTBOX (UINT)308
#define WM_CTLCOLORBTN (UINT)309
#define WM_CTLCOLORDLG (UINT)310
#define WM_CTLCOLORSCROLLBAR (UINT)311
#define WM_CTLCOLORSTATIC (UINT)312
#define MN_GETHMENU (UINT)481
#define WM_MOUSEFIRST (UINT)512
#define WM_MOUSEMOVE (UINT)512
#define WM_LBUTTONDOWN (UINT)513
#define WM_LBUTTONUP (UINT)514
#define WM_LBUTTONDBLCLK (UINT)515
#define WM_RBUTTONDOWN (UINT)516
#define WM_RBUTTONUP (UINT)517
#define WM_RBUTTONDBLCLK (UINT)518
#define WM_MBUTTONDOWN (UINT)519
#define WM_MBUTTONUP (UINT)520
#define WM_MBUTTONDBLCLK (UINT)521
#define WM_MOUSEWHEEL (UINT)522
#define WM_XBUTTONDOWN (UINT)523
#define WM_XBUTTONUP (UINT)524
#define WM_XBUTTONDBLCLK (UINT)525
#define WM_MOUSEHWHEEL (UINT)526
#define WM_MOUSELAST (UINT)526
#define WHEEL_DELTA (UINT)120
#define WM_PARENTNOTIFY (UINT)528
#define WM_ENTERMENULOOP (UINT)529
#define WM_EXITMENULOOP (UINT)530
#define WM_NEXTMENU (UINT)531
#define WM_SIZING (UINT)532
#define WM_CAPTURECHANGED (UINT)533
#define WM_MOVING (UINT)534
#define WM_POWERBROADCAST (UINT)536
#define PBT_APMQUERYSUSPEND (UINT)0
#define PBT_APMQUERYSTANDBY (UINT)1
#define PBT_APMQUERYSUSPENDFAILED (UINT)2
#define PBT_APMQUERYSTANDBYFAILED (UINT)3
#define PBT_APMSUSPEND (UINT)4
#define PBT_APMSTANDBY (UINT)5
#define PBT_APMRESUMECRITICAL (UINT)6
#define PBT_APMRESUMESUSPEND (UINT)7
#define PBT_APMRESUMESTANDBY (UINT)8
#define PBTF_APMRESUMEFROMFAILURE (UINT)1
#define PBT_APMBATTERYLOW (UINT)9
#define PBT_APMPOWERSTATUSCHANGE (UINT)10
#define PBT_APMOEMEVENT (UINT)11
#define PBT_APMRESUMEAUTOMATIC (UINT)18
#define PBT_POWERSETTINGCHANGE (UINT)32787
#define WM_MDICREATE (UINT)544
#define WM_MDIDESTROY (UINT)545
#define WM_MDIACTIVATE (UINT)546
#define WM_MDIRESTORE (UINT)547
#define WM_MDINEXT (UINT)548
#define WM_MDIMAXIMIZE (UINT)549
#define WM_MDITILE (UINT)550
#define WM_MDICASCADE (UINT)551
#define WM_MDIICONARRANGE (UINT)552
#define WM_MDIGETACTIVE (UINT)553
#define WM_MDISETMENU (UINT)560
#define WM_ENTERSIZEMOVE (UINT)561
#define WM_EXITSIZEMOVE (UINT)562
#define WM_DROPFILES (UINT)563
#define WM_MDIREFRESHMENU (UINT)564
#define WM_POINTERDEVICECHANGE (UINT)568
#define WM_POINTERDEVICEINRANGE (UINT)569
#define WM_POINTERDEVICEOUTOFRANGE (UINT)570
#define WM_TOUCH (UINT)576
#define WM_NCPOINTERUPDATE (UINT)577
#define WM_NCPOINTERDOWN (UINT)578
#define WM_NCPOINTERUP (UINT)579
#define WM_POINTERUPDATE (UINT)581
#define WM_POINTERDOWN (UINT)582
#define WM_POINTERUP (UINT)583
#define WM_POINTERENTER (UINT)585
#define WM_POINTERLEAVE (UINT)586
#define WM_POINTERACTIVATE (UINT)587
#define WM_POINTERCAPTURECHANGED (UINT)588
#define WM_TOUCHHITTESTING (UINT)589
#define WM_POINTERWHEEL (UINT)590
#define WM_POINTERHWHEEL (UINT)591
#define DM_POINTERHITTEST (UINT)592
#define WM_POINTERROUTEDTO (UINT)593
#define WM_POINTERROUTEDAWAY (UINT)594
#define WM_POINTERROUTEDRELEASED (UINT)595
#define WM_IME_SETCONTEXT (UINT)641
#define WM_IME_NOTIFY (UINT)642
#define WM_IME_CONTROL (UINT)643
#define WM_IME_COMPOSITIONFULL (UINT)644
#define WM_IME_SELECT (UINT)645
#define WM_IME_CHAR (UINT)646
#define WM_IME_REQUEST (UINT)648
#define WM_IME_KEYDOWN (UINT)656
#define WM_IME_KEYUP (UINT)657
#define WM_NCMOUSEHOVER (UINT)672
#define WM_NCMOUSELEAVE (UINT)674
#define WM_WTSSESSION_CHANGE (UINT)689
#define WM_TABLET_FIRST (UINT)704
#define WM_TABLET_LAST (UINT)735
#define WM_DPICHANGED (UINT)736
#define WM_DPICHANGED_BEFOREPARENT (UINT)738
#define WM_DPICHANGED_AFTERPARENT (UINT)739
#define WM_GETDPISCALEDSIZE (UINT)740
#define WM_CUT (UINT)768
#define WM_COPY (UINT)769
#define WM_PASTE (UINT)770
#define WM_CLEAR (UINT)771
#define WM_UNDO (UINT)772
#define WM_RENDERFORMAT (UINT)773
#define WM_RENDERALLFORMATS (UINT)774
#define WM_DESTROYCLIPBOARD (UINT)775
#define WM_DRAWCLIPBOARD (UINT)776
#define WM_PAINTCLIPBOARD (UINT)777
#define WM_VSCROLLCLIPBOARD (UINT)778
#define WM_SIZECLIPBOARD (UINT)779
#define WM_ASKCBFORMATNAME (UINT)780
#define WM_CHANGECBCHAIN (UINT)781
#define WM_HSCROLLCLIPBOARD (UINT)782
#define WM_QUERYNEWPALETTE (UINT)783
#define WM_PALETTEISCHANGING (UINT)784
#define WM_PALETTECHANGED (UINT)785
#define WM_HOTKEY (UINT)786
#define WM_PRINT (UINT)791
#define WM_APPCOMMAND (UINT)793
#define WM_THEMECHANGED (UINT)794
#define WM_CLIPBOARDUPDATE (UINT)797
#define WM_DWMCOMPOSITIONCHANGED (UINT)798
#define WM_DWMNCRENDERINGCHANGED (UINT)799
#define WM_DWMCOLORIZATIONCOLORCHANGED (UINT)800
#define WM_DWMWINDOWMAXIMIZEDCHANGE (UINT)801
#define WM_DWMSENDICONICTHUMBNAIL (UINT)803
#define WM_DWMSENDICONICLIVEPREVIEWBITMAP (UINT)806
#define WM_GETTITLEBARINFOEX (UINT)831
#define WM_HANDHELDFIRST (UINT)856
#define WM_HANDHELDLAST (UINT)863
#define WM_AFXFIRST (UINT)864
#define WM_AFXLAST (UINT)895
#define WM_PENWINFIRST (UINT)896
#define WM_PENWINLAST (UINT)911
#define WM_APP (UINT)32768
#define WM_USER (UINT)1024
#define WMSZ_LEFT (UINT)1
#define WMSZ_RIGHT (UINT)2
#define WMSZ_TOP (UINT)3
#define WMSZ_TOPLEFT (UINT)4
#define WMSZ_TOPRIGHT (UINT)5
#define WMSZ_BOTTOM (UINT)6
#define WMSZ_BOTTOMLEFT (UINT)7
#define WMSZ_BOTTOMRIGHT (UINT)8
#define HTERROR (INT)-2
#define HTTRANSPARENT (INT)-1
#define HTNOWHERE (UINT)0
#define HTCLIENT (UINT)1
#define HTCAPTION (UINT)2
#define HTSYSMENU (UINT)3
#define HTGROWBOX (UINT)4
#define HTMENU (UINT)5
#define HTHSCROLL (UINT)6
#define HTVSCROLL (UINT)7
#define HTMINBUTTON (UINT)8
#define HTMAXBUTTON (UINT)9
#define HTLEFT (UINT)10
#define HTRIGHT (UINT)11
#define HTTOP (UINT)12
#define HTTOPLEFT (UINT)13
#define HTTOPRIGHT (UINT)14
#define HTBOTTOM (UINT)15
#define HTBOTTOMLEFT (UINT)16
#define HTBOTTOMRIGHT (UINT)17
#define HTBORDER (UINT)18
#define HTOBJECT (UINT)19
#define HTCLOSE (UINT)20
#define HTHELP (UINT)21
#define MA_ACTIVATE (UINT)1
#define MA_ACTIVATEANDEAT (UINT)2
#define MA_NOACTIVATE (UINT)3
#define MA_NOACTIVATEANDEAT (UINT)4
#define ICON_SMALL (UINT)0
#define ICON_BIG (UINT)1
#define ICON_SMALL2 (UINT)2
#define SIZE_RESTORED (UINT)0
#define SIZE_MINIMIZED (UINT)1
#define SIZE_MAXIMIZED (UINT)2
#define SIZE_MAXSHOW (UINT)3
#define SIZE_MAXHIDE (UINT)4
#define WVR_ALIGNTOP (UINT)16
#define WVR_ALIGNLEFT (UINT)32
#define WVR_ALIGNBOTTOM (UINT)64
#define WVR_ALIGNRIGHT (UINT)128
#define WVR_HREDRAW (UINT)256
#define WVR_VREDRAW (UINT)512
#define WVR_VALIDRECTS (UINT)1024
#define MK_LBUTTON (UINT)1
#define MK_RBUTTON (UINT)2
#define MK_SHIFT (UINT)4
#define MK_CONTROL (UINT)8
#define MK_MBUTTON (UINT)16
#define MK_XBUTTON1 (UINT)32
#define MK_XBUTTON2 (UINT)64
#define PRF_CHECKVISIBLE (INT)1
#define PRF_NONCLIENT (INT)2
#define PRF_CLIENT (INT)4
#define PRF_ERASEBKGND (INT)8
#define PRF_CHILDREN (INT)16
#define PRF_OWNED (INT)32
#define IDANI_OPEN (UINT)1
#define IDANI_CAPTION (UINT)3
#define FVIRTKEY (UINT)1
#define FNOINVERT (UINT)2
#define FSHIFT (UINT)4
#define FCONTROL (UINT)8
#define FALT (UINT)16
#define ODA_DRAWENTIRE (UINT)1
#define ODA_SELECT (UINT)2
#define ODA_FOCUS (UINT)4
#define ODS_SELECTED (UINT)1
#define ODS_GRAYED (UINT)2
#define ODS_DISABLED (UINT)4
#define ODS_CHECKED (UINT)8
#define ODS_FOCUS (UINT)16
#define ODS_DEFAULT (UINT)32
#define ODS_COMBOBOXEDIT (UINT)4096
#define ODS_HOTLIGHT (UINT)64
#define ODS_INACTIVE (UINT)128
#define ODS_NOACCEL (UINT)256
#define ODS_NOFOCUSRECT (UINT)512
#define IDHOT_SNAPWINDOW (INT)-1
#define IDHOT_SNAPDESKTOP (INT)-2
#define ENDSESSION_CLOSEAPP (UINT)1
#define ENDSESSION_CRITICAL (UINT)1073741824
#define ENDSESSION_LOGOFF (UINT)2147483648
#define EWX_FORCE (UINT)4
#define EWX_FORCEIFHUNG (UINT)16
#define EWX_QUICKRESOLVE (UINT)32
#define EWX_BOOTOPTIONS (UINT)16777216
#define EWX_ARSO (UINT)67108864
#define BROADCAST_QUERY_DENY (UINT)1112363332
#define DEVICE_NOTIFY_ALL_INTERFACE_CLASSES (UINT)4
#define HWND_MESSAGE (HWND)(INT)-3
#define ISMEX_NOSEND (UINT)0
#define ISMEX_SEND (UINT)1
#define ISMEX_NOTIFY (UINT)2
#define ISMEX_CALLBACK (UINT)4
#define ISMEX_REPLIED (UINT)8
// skipped 'HWND_DESKTOP'
#define PW_RENDERFULLCONTENT (UINT)2
// skipped 'HWND_TOP'
#define HWND_BOTTOM (HWND)(INT)1
#define HWND_TOPMOST (HWND)(INT)-1
#define HWND_NOTOPMOST (HWND)(INT)-2
#define DLGWINDOWEXTRA (UINT)30
#define POINTER_MOD_SHIFT (UINT)4
#define POINTER_MOD_CTRL (UINT)8
#define TOUCH_FLAG_NONE (UINT)0
#define TOUCH_MASK_NONE (UINT)0
#define TOUCH_MASK_CONTACTAREA (UINT)1
#define TOUCH_MASK_ORIENTATION (UINT)2
#define TOUCH_MASK_PRESSURE (UINT)4
#define PEN_FLAG_NONE (UINT)0
#define PEN_FLAG_BARREL (UINT)1
#define PEN_FLAG_INVERTED (UINT)2
#define PEN_FLAG_ERASER (UINT)4
#define PEN_MASK_NONE (UINT)0
#define PEN_MASK_PRESSURE (UINT)1
#define PEN_MASK_ROTATION (UINT)2
#define PEN_MASK_TILT_X (UINT)4
#define PEN_MASK_TILT_Y (UINT)8
#define POINTER_MESSAGE_FLAG_NEW (UINT)1
#define POINTER_MESSAGE_FLAG_INRANGE (UINT)2
#define POINTER_MESSAGE_FLAG_INCONTACT (UINT)4
#define POINTER_MESSAGE_FLAG_FIRSTBUTTON (UINT)16
#define POINTER_MESSAGE_FLAG_SECONDBUTTON (UINT)32
#define POINTER_MESSAGE_FLAG_THIRDBUTTON (UINT)64
#define POINTER_MESSAGE_FLAG_FOURTHBUTTON (UINT)128
#define POINTER_MESSAGE_FLAG_FIFTHBUTTON (UINT)256
#define POINTER_MESSAGE_FLAG_PRIMARY (UINT)8192
#define POINTER_MESSAGE_FLAG_CONFIDENCE (UINT)16384
#define POINTER_MESSAGE_FLAG_CANCELED (UINT)32768
#define MAX_TOUCH_COUNT (UINT)256
#define TOUCH_HIT_TESTING_DEFAULT (UINT)0
#define TOUCH_HIT_TESTING_CLIENT (UINT)1
#define TOUCH_HIT_TESTING_NONE (UINT)2
#define TOUCH_HIT_TESTING_PROXIMITY_CLOSEST (UINT)0
#define TOUCH_HIT_TESTING_PROXIMITY_FARTHEST (UINT)4095
#define GWFS_INCLUDE_ANCESTORS (UINT)1
#define MAPVK_VK_TO_VSC (UINT)0
#define MAPVK_VSC_TO_VK (UINT)1
#define MAPVK_VK_TO_CHAR (UINT)2
#define MAPVK_VSC_TO_VK_EX (UINT)3
#define MAPVK_VK_TO_VSC_EX (UINT)4
#define QS_TOUCH (UINT)2048
#define QS_POINTER (UINT)4096
#define USER_TIMER_MAXIMUM (UINT)2147483647
#define USER_TIMER_MINIMUM (UINT)10
#define TIMERV_DEFAULT_COALESCING (UINT)0
#define TIMERV_NO_COALESCING (UINT)4294967295
#define TIMERV_COALESCING_MIN (UINT)1
#define TIMERV_COALESCING_MAX (UINT)2147483637
#define SM_RESERVED1 (UINT)24
#define SM_RESERVED2 (UINT)25
#define SM_RESERVED3 (UINT)26
#define SM_RESERVED4 (UINT)27
#define SM_CMETRICS (UINT)76
#define SM_CARETBLINKINGENABLED (UINT)8194
#define SM_SYSTEMDOCKED (UINT)8196
#define PMB_ACTIVE (UINT)1
#define MNC_IGNORE (UINT)0
#define MNC_CLOSE (UINT)1
#define MNC_EXECUTE (UINT)2
#define MNC_SELECT (UINT)3
#define MND_CONTINUE (UINT)0
#define MND_ENDMENU (UINT)1
#define MNGO_NOINTERFACE (UINT)0
#define MNGO_NOERROR (UINT)1
#define DOF_EXECUTABLE (UINT)32769
#define DOF_DOCUMENT (UINT)32770
#define DOF_DIRECTORY (UINT)32771
#define DOF_MULTIPLE (UINT)32772
#define DOF_PROGMAN (UINT)1
#define DOF_SHELLDATA (UINT)2
#define DO_DROPFILE (INT)1162627398
#define DO_PRINTFILE (INT)1414419024
#define ASFW_ANY (UINT)4294967295
#define DCX_EXCLUDEUPDATE (INT)256
#define HELPINFO_WINDOW (UINT)1
#define HELPINFO_MENUITEM (UINT)2
#define CTLCOLOR_MSGBOX (UINT)0
#define CTLCOLOR_EDIT (UINT)1
#define CTLCOLOR_LISTBOX (UINT)2
#define CTLCOLOR_BTN (UINT)3
#define CTLCOLOR_DLG (UINT)4
#define CTLCOLOR_SCROLLBAR (UINT)5
#define CTLCOLOR_STATIC (UINT)6
#define CTLCOLOR_MAX (UINT)7
#define COLOR_BTNHIGHLIGHT (UINT)20
#define GW_MAX (UINT)5
#define SC_SIZE (UINT)61440
#define SC_MOVE (UINT)61456
#define SC_MINIMIZE (UINT)61472
#define SC_MAXIMIZE (UINT)61488
#define SC_NEXTWINDOW (UINT)61504
#define SC_PREVWINDOW (UINT)61520
#define SC_CLOSE (UINT)61536
#define SC_VSCROLL (UINT)61552
#define SC_HSCROLL (UINT)61568
#define SC_MOUSEMENU (UINT)61584
#define SC_KEYMENU (UINT)61696
#define SC_ARRANGE (UINT)61712
#define SC_RESTORE (UINT)61728
#define SC_TASKLIST (UINT)61744
#define SC_SCREENSAVE (UINT)61760
#define SC_HOTKEY (UINT)61776
#define SC_DEFAULT (UINT)61792
#define SC_MONITORPOWER (UINT)61808
#define SC_CONTEXTHELP (UINT)61824
#define SC_SEPARATOR (UINT)61455
#define SCF_ISSECURE (UINT)1
#define IDC_ARROW ([*:0]const u16)(INT)32512
// skipped 'IDC_IBEAM'
// skipped 'IDC_WAIT'
// skipped 'IDC_CROSS'
// skipped 'IDC_UPARROW'
// skipped 'IDC_SIZE'
// skipped 'IDC_ICON'
// skipped 'IDC_SIZENWSE'
// skipped 'IDC_SIZENESW'
// skipped 'IDC_SIZEWE'
// skipped 'IDC_SIZENS'
// skipped 'IDC_SIZEALL'
// skipped 'IDC_NO'
// skipped 'IDC_HAND'
// skipped 'IDC_APPSTARTING'
// skipped 'IDC_HELP'
// skipped 'IDC_PIN'
// skipped 'IDC_PERSON'
#define IMAGE_ENHMETAFILE (UINT)3
#define LR_COLOR (UINT)2
#define RES_ICON (UINT)1
#define RES_CURSOR (UINT)2
#define OBM_CLOSE (UINT)32754
#define OBM_UPARROW (UINT)32753
#define OBM_DNARROW (UINT)32752
#define OBM_RGARROW (UINT)32751
#define OBM_LFARROW (UINT)32750
#define OBM_REDUCE (UINT)32749
#define OBM_ZOOM (UINT)32748
#define OBM_RESTORE (UINT)32747
#define OBM_REDUCED (UINT)32746
#define OBM_ZOOMD (UINT)32745
#define OBM_RESTORED (UINT)32744
#define OBM_UPARROWD (UINT)32743
#define OBM_DNARROWD (UINT)32742
#define OBM_RGARROWD (UINT)32741
#define OBM_LFARROWD (UINT)32740
#define OBM_MNARROW (UINT)32739
#define OBM_COMBO (UINT)32738
#define OBM_UPARROWI (UINT)32737
#define OBM_DNARROWI (UINT)32736
#define OBM_RGARROWI (UINT)32735
#define OBM_LFARROWI (UINT)32734
#define OBM_OLD_CLOSE (UINT)32767
#define OBM_SIZE (UINT)32766
#define OBM_OLD_UPARROW (UINT)32765
#define OBM_OLD_DNARROW (UINT)32764
#define OBM_OLD_RGARROW (UINT)32763
#define OBM_OLD_LFARROW (UINT)32762
#define OBM_BTSIZE (UINT)32761
#define OBM_CHECK (UINT)32760
#define OBM_CHECKBOXES (UINT)32759
#define OBM_BTNCORNERS (UINT)32758
#define OBM_OLD_REDUCE (UINT)32757
#define OBM_OLD_ZOOM (UINT)32756
#define OBM_OLD_RESTORE (UINT)32755
#define OCR_SIZE (UINT)32640
#define OCR_ICON (UINT)32641
#define OCR_ICOCUR (UINT)32647
#define OIC_SAMPLE (UINT)32512
#define OIC_HAND (UINT)32513
#define OIC_QUES (UINT)32514
#define OIC_BANG (UINT)32515
#define OIC_NOTE (UINT)32516
#define OIC_WINLOGO (UINT)32517
#define OIC_SHIELD (UINT)32518
#define ORD_LANGDRIVER (UINT)1
#define IDI_APPLICATION ([*:0]const u16)(UINT)32512
// skipped 'IDI_HAND'
// skipped 'IDI_QUESTION'
// skipped 'IDI_EXCLAMATION'
// skipped 'IDI_ASTERISK'
// skipped 'IDI_WINLOGO'
// skipped 'IDI_SHIELD'
#define ES_LEFT (INT)0
#define ES_CENTER (INT)1
#define ES_RIGHT (INT)2
#define ES_MULTILINE (INT)4
#define ES_UPPERCASE (INT)8
#define ES_LOWERCASE (INT)16
#define ES_PASSWORD (INT)32
#define ES_AUTOVSCROLL (INT)64
#define ES_AUTOHSCROLL (INT)128
#define ES_NOHIDESEL (INT)256
#define ES_OEMCONVERT (INT)1024
#define ES_READONLY (INT)2048
#define ES_WANTRETURN (INT)4096
#define ES_NUMBER (INT)8192
#define EN_SETFOCUS (UINT)256
#define EN_KILLFOCUS (UINT)512
#define EN_CHANGE (UINT)768
#define EN_UPDATE (UINT)1024
#define EN_ERRSPACE (UINT)1280
#define EN_MAXTEXT (UINT)1281
#define EN_HSCROLL (UINT)1537
#define EN_VSCROLL (UINT)1538
#define EN_ALIGN_LTR_EC (UINT)1792
#define EN_ALIGN_RTL_EC (UINT)1793
#define EN_BEFORE_PASTE (UINT)2048
#define EN_AFTER_PASTE (UINT)2049
#define EC_LEFTMARGIN (UINT)1
#define EC_RIGHTMARGIN (UINT)2
#define EC_USEFONTINFO (UINT)65535
#define EMSIS_COMPOSITIONSTRING (UINT)1
#define EIMES_GETCOMPSTRATONCE (UINT)1
#define EIMES_CANCELCOMPSTRINFOCUS (UINT)2
#define EIMES_COMPLETECOMPSTRKILLFOCUS (UINT)4
#define BS_PUSHBUTTON (INT)0
#define BS_DEFPUSHBUTTON (INT)1
#define BS_CHECKBOX (INT)2
#define BS_AUTOCHECKBOX (INT)3
#define BS_RADIOBUTTON (INT)4
#define BS_3STATE (INT)5
#define BS_AUTO3STATE (INT)6
#define BS_GROUPBOX (INT)7
#define BS_USERBUTTON (INT)8
#define BS_AUTORADIOBUTTON (INT)9
#define BS_PUSHBOX (INT)10
#define BS_OWNERDRAW (INT)11
#define BS_TYPEMASK (INT)15
#define BS_LEFTTEXT (INT)32
#define BS_TEXT (INT)0
#define BS_ICON (INT)64
#define BS_BITMAP (INT)128
#define BS_LEFT (INT)256
#define BS_RIGHT (INT)512
#define BS_CENTER (INT)768
#define BS_TOP (INT)1024
#define BS_BOTTOM (INT)2048
#define BS_VCENTER (INT)3072
#define BS_PUSHLIKE (INT)4096
#define BS_MULTILINE (INT)8192
#define BS_NOTIFY (INT)16384
#define BS_FLAT (INT)32768
#define BN_CLICKED (UINT)0
#define BN_PAINT (UINT)1
#define BN_HILITE (UINT)2
#define BN_UNHILITE (UINT)3
#define BN_DISABLE (UINT)4
#define BN_DOUBLECLICKED (UINT)5
#define BN_SETFOCUS (UINT)6
#define BN_KILLFOCUS (UINT)7
#define BM_GETCHECK (UINT)240
#define BM_SETCHECK (UINT)241
#define BM_GETSTATE (UINT)242
#define BM_SETSTATE (UINT)243
#define BM_SETSTYLE (UINT)244
#define BM_CLICK (UINT)245
#define BM_GETIMAGE (UINT)246
#define BM_SETIMAGE (UINT)247
#define BM_SETDONTCLICK (UINT)248
#define BST_PUSHED (UINT)4
#define BST_FOCUS (UINT)8
#define SS_LEFT (INT)0
#define SS_CENTER (INT)1
#define SS_RIGHT (INT)2
#define SS_ICON (INT)3
#define SS_BLACKRECT (INT)4
#define SS_GRAYRECT (INT)5
#define SS_WHITERECT (INT)6
#define SS_BLACKFRAME (INT)7
#define SS_GRAYFRAME (INT)8
#define SS_WHITEFRAME (INT)9
#define SS_USERITEM (INT)10
#define SS_SIMPLE (INT)11
#define SS_LEFTNOWORDWRAP (INT)12
#define SS_OWNERDRAW (INT)13
#define SS_BITMAP (INT)14
#define SS_ENHMETAFILE (INT)15
#define SS_ETCHEDHORZ (INT)16
#define SS_ETCHEDVERT (INT)17
#define SS_ETCHEDFRAME (INT)18
#define SS_TYPEMASK (INT)31
#define SS_REALSIZECONTROL (INT)64
#define SS_NOPREFIX (INT)128
#define SS_NOTIFY (INT)256
#define SS_CENTERIMAGE (INT)512
#define SS_RIGHTJUST (INT)1024
#define SS_REALSIZEIMAGE (INT)2048
#define SS_SUNKEN (INT)4096
#define SS_EDITCONTROL (INT)8192
#define SS_ENDELLIPSIS (INT)16384
#define SS_PATHELLIPSIS (INT)32768
#define SS_WORDELLIPSIS (INT)49152
#define SS_ELLIPSISMASK (INT)49152
#define STM_SETICON (UINT)368
#define STM_GETICON (UINT)369
#define STM_SETIMAGE (UINT)370
#define STM_GETIMAGE (UINT)371
#define STN_CLICKED (UINT)0
#define STN_DBLCLK (UINT)1
#define STN_ENABLE (UINT)2
#define STN_DISABLE (UINT)3
#define STM_MSGMAX (UINT)372
#define DWL_MSGRESULT (UINT)0
#define DWL_DLGPROC (UINT)4
#define DWL_USER (UINT)8
#define DWLP_MSGRESULT (UINT)0
#define DS_ABSALIGN (INT)1
#define DS_SYSMODAL (INT)2
#define DS_LOCALEDIT (INT)32
#define DS_SETFONT (INT)64
#define DS_MODALFRAME (INT)128
#define DS_NOIDLEMSG (INT)256
#define DS_SETFOREGROUND (INT)512
#define DS_3DLOOK (INT)4
#define DS_FIXEDSYS (INT)8
#define DS_NOFAILCREATE (INT)16
#define DS_CONTROL (INT)1024
#define DS_CENTER (INT)2048
#define DS_CENTERMOUSE (INT)4096
#define DS_CONTEXTHELP (INT)8192
#define DS_USEPIXELS (INT)32768
#define DM_GETDEFID (UINT)1024
#define DM_SETDEFID (UINT)1025
#define DM_REPOSITION (UINT)1026
#define DC_HASDEFID (UINT)21323
#define DLGC_WANTARROWS (UINT)1
#define DLGC_WANTTAB (UINT)2
#define DLGC_WANTALLKEYS (UINT)4
#define DLGC_WANTMESSAGE (UINT)4
#define DLGC_HASSETSEL (UINT)8
#define DLGC_DEFPUSHBUTTON (UINT)16
#define DLGC_UNDEFPUSHBUTTON (UINT)32
#define DLGC_RADIOBUTTON (UINT)64
#define DLGC_WANTCHARS (UINT)128
#define DLGC_STATIC (UINT)256
#define DLGC_BUTTON (UINT)8192
#define LB_CTLCODE (INT)0
#define LB_OKAY (UINT)0
#define LB_ERR (INT)-1
#define LB_ERRSPACE (INT)-2
#define LBN_ERRSPACE (INT)-2
#define LBN_SELCHANGE (UINT)1
#define LBN_DBLCLK (UINT)2
#define LBN_SELCANCEL (UINT)3
#define LBN_SETFOCUS (UINT)4
#define LBN_KILLFOCUS (UINT)5
#define LB_ADDSTRING (UINT)384
#define LB_INSERTSTRING (UINT)385
#define LB_DELETESTRING (UINT)386
#define LB_SELITEMRANGEEX (UINT)387
#define LB_RESETCONTENT (UINT)388
#define LB_SETSEL (UINT)389
#define LB_SETCURSEL (UINT)390
#define LB_GETSEL (UINT)391
#define LB_GETCURSEL (UINT)392
#define LB_GETTEXT (UINT)393
#define LB_GETTEXTLEN (UINT)394
#define LB_GETCOUNT (UINT)395
#define LB_SELECTSTRING (UINT)396
#define LB_DIR (UINT)397
#define LB_GETTOPINDEX (UINT)398
#define LB_FINDSTRING (UINT)399
#define LB_GETSELCOUNT (UINT)400
#define LB_GETSELITEMS (UINT)401
#define LB_SETTABSTOPS (UINT)402
#define LB_GETHORIZONTALEXTENT (UINT)403
#define LB_SETHORIZONTALEXTENT (UINT)404
#define LB_SETCOLUMNWIDTH (UINT)405
#define LB_ADDFILE (UINT)406
#define LB_SETTOPINDEX (UINT)407
#define LB_GETITEMRECT (UINT)408
#define LB_GETITEMDATA (UINT)409
#define LB_SETITEMDATA (UINT)410
#define LB_SELITEMRANGE (UINT)411
#define LB_SETANCHORINDEX (UINT)412
#define LB_GETANCHORINDEX (UINT)413
#define LB_SETCARETINDEX (UINT)414
#define LB_GETCARETINDEX (UINT)415
#define LB_SETITEMHEIGHT (UINT)416
#define LB_GETITEMHEIGHT (UINT)417
#define LB_FINDSTRINGEXACT (UINT)418
#define LB_SETLOCALE (UINT)421
#define LB_GETLOCALE (UINT)422
#define LB_SETCOUNT (UINT)423
#define LB_INITSTORAGE (UINT)424
#define LB_ITEMFROMPOINT (UINT)425
#define LB_MULTIPLEADDSTRING (UINT)433
#define LB_GETLISTBOXINFO (UINT)434
#define LB_MSGMAX (UINT)435
#define LBS_NOTIFY (INT)1
#define LBS_SORT (INT)2
#define LBS_NOREDRAW (INT)4
#define LBS_MULTIPLESEL (INT)8
#define LBS_OWNERDRAWFIXED (INT)16
#define LBS_OWNERDRAWVARIABLE (INT)32
#define LBS_HASSTRINGS (INT)64
#define LBS_USETABSTOPS (INT)128
#define LBS_NOINTEGRALHEIGHT (INT)256
#define LBS_MULTICOLUMN (INT)512
#define LBS_WANTKEYBOARDINPUT (INT)1024
#define LBS_EXTENDEDSEL (INT)2048
#define LBS_DISABLENOSCROLL (INT)4096
#define LBS_NODATA (INT)8192
#define LBS_NOSEL (INT)16384
#define LBS_COMBOBOX (INT)32768
#define CB_OKAY (UINT)0
#define CB_ERR (INT)-1
#define CB_ERRSPACE (INT)-2
#define CBN_ERRSPACE (INT)-1
#define CBN_SELCHANGE (UINT)1
#define CBN_DBLCLK (UINT)2
#define CBN_SETFOCUS (UINT)3
#define CBN_KILLFOCUS (UINT)4
#define CBN_EDITCHANGE (UINT)5
#define CBN_EDITUPDATE (UINT)6
#define CBN_DROPDOWN (UINT)7
#define CBN_CLOSEUP (UINT)8
#define CBN_SELENDOK (UINT)9
#define CBN_SELENDCANCEL (UINT)10
#define CBS_SIMPLE (INT)1
#define CBS_DROPDOWN (INT)2
#define CBS_DROPDOWNLIST (INT)3
#define CBS_OWNERDRAWFIXED (INT)16
#define CBS_OWNERDRAWVARIABLE (INT)32
#define CBS_AUTOHSCROLL (INT)64
#define CBS_OEMCONVERT (INT)128
#define CBS_SORT (INT)256
#define CBS_HASSTRINGS (INT)512
#define CBS_NOINTEGRALHEIGHT (INT)1024
#define CBS_DISABLENOSCROLL (INT)2048
#define CBS_UPPERCASE (INT)8192
#define CBS_LOWERCASE (INT)16384
#define CB_GETEDITSEL (UINT)320
#define CB_LIMITTEXT (UINT)321
#define CB_SETEDITSEL (UINT)322
#define CB_ADDSTRING (UINT)323
#define CB_DELETESTRING (UINT)324
#define CB_DIR (UINT)325
#define CB_GETCOUNT (UINT)326
#define CB_GETCURSEL (UINT)327
#define CB_GETLBTEXT (UINT)328
#define CB_GETLBTEXTLEN (UINT)329
#define CB_INSERTSTRING (UINT)330
#define CB_RESETCONTENT (UINT)331
#define CB_FINDSTRING (UINT)332
#define CB_SELECTSTRING (UINT)333
#define CB_SETCURSEL (UINT)334
#define CB_SHOWDROPDOWN (UINT)335
#define CB_GETITEMDATA (UINT)336
#define CB_SETITEMDATA (UINT)337
#define CB_GETDROPPEDCONTROLRECT (UINT)338
#define CB_SETITEMHEIGHT (UINT)339
#define CB_GETITEMHEIGHT (UINT)340
#define CB_SETEXTENDEDUI (UINT)341
#define CB_GETEXTENDEDUI (UINT)342
#define CB_GETDROPPEDSTATE (UINT)343
#define CB_FINDSTRINGEXACT (UINT)344
#define CB_SETLOCALE (UINT)345
#define CB_GETLOCALE (UINT)346
#define CB_GETTOPINDEX (UINT)347
#define CB_SETTOPINDEX (UINT)348
#define CB_GETHORIZONTALEXTENT (UINT)349
#define CB_SETHORIZONTALEXTENT (UINT)350
#define CB_GETDROPPEDWIDTH (UINT)351
#define CB_SETDROPPEDWIDTH (UINT)352
#define CB_INITSTORAGE (UINT)353
#define CB_MULTIPLEADDSTRING (UINT)355
#define CB_GETCOMBOBOXINFO (UINT)356
#define CB_MSGMAX (UINT)357
#define SBS_HORZ (INT)0
#define SBS_VERT (INT)1
#define SBS_TOPALIGN (INT)2
#define SBS_LEFTALIGN (INT)2
#define SBS_BOTTOMALIGN (INT)4
#define SBS_RIGHTALIGN (INT)4
#define SBS_SIZEBOXTOPLEFTALIGN (INT)2
#define SBS_SIZEBOXBOTTOMRIGHTALIGN (INT)4
#define SBS_SIZEBOX (INT)8
#define SBS_SIZEGRIP (INT)16
#define SBM_SETPOS (UINT)224
#define SBM_GETPOS (UINT)225
#define SBM_SETRANGE (UINT)226
#define SBM_SETRANGEREDRAW (UINT)230
#define SBM_GETRANGE (UINT)227
#define SBM_ENABLE_ARROWS (UINT)228
#define SBM_SETSCROLLINFO (UINT)233
#define SBM_GETSCROLLINFO (UINT)234
#define SBM_GETSCROLLBARINFO (UINT)235
#define MDIS_ALLCHILDSTYLES (UINT)1
#define HELP_CONTEXT (INT)1
#define HELP_QUIT (INT)2
#define HELP_INDEX (INT)3
#define HELP_CONTENTS (INT)3
#define HELP_HELPONHELP (INT)4
#define HELP_SETINDEX (INT)5
#define HELP_SETCONTENTS (INT)5
#define HELP_CONTEXTPOPUP (INT)8
#define HELP_FORCEFILE (INT)9
#define HELP_KEY (INT)257
#define HELP_COMMAND (INT)258
#define HELP_PARTIALKEY (INT)261
#define HELP_MULTIKEY (INT)513
#define HELP_SETWINPOS (INT)515
#define HELP_CONTEXTMENU (UINT)10
#define HELP_FINDER (UINT)11
#define HELP_WM_HELP (UINT)12
#define HELP_SETPOPUP_POS (UINT)13
#define HELP_TCARD (UINT)32768
#define HELP_TCARD_DATA (UINT)16
#define HELP_TCARD_OTHER_CALLER (UINT)17
#define IDH_NO_HELP (UINT)28440
#define IDH_MISSING_CONTEXT (UINT)28441
#define IDH_GENERIC_HELP_BUTTON (UINT)28442
#define IDH_OK (UINT)28443
#define IDH_CANCEL (UINT)28444
#define IDH_HELP (UINT)28445
#define MAX_TOUCH_PREDICTION_FILTER_TAPS (UINT)3
#define TOUCHPREDICTIONPARAMETERS_DEFAULT_LATENCY (UINT)8
#define TOUCHPREDICTIONPARAMETERS_DEFAULT_SAMPLETIME (UINT)8
#define TOUCHPREDICTIONPARAMETERS_DEFAULT_USE_HW_TIMESTAMP (UINT)1
#define TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_DELTA (FLOAT)1.0e-03
#define TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_LAMBDA_MIN (FLOAT)9.0e-01
#define TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_LAMBDA_MAX (FLOAT)9.99e-01
#define TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_LAMBDA_LEARNING_RATE (FLOAT)1.0e-03
#define TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_EXPO_SMOOTH_ALPHA (FLOAT)9.9e-01
#define MAX_LOGICALDPIOVERRIDE (UINT)2
#define MIN_LOGICALDPIOVERRIDE (INT)-2
#define FE_FONTSMOOTHINGSTANDARD (UINT)1
#define FE_FONTSMOOTHINGCLEARTYPE (UINT)2
#define FE_FONTSMOOTHINGORIENTATIONBGR (UINT)0
#define FE_FONTSMOOTHINGORIENTATIONRGB (UINT)1
#define CONTACTVISUALIZATION_OFF (UINT)0
#define CONTACTVISUALIZATION_ON (UINT)1
#define CONTACTVISUALIZATION_PRESENTATIONMODE (UINT)2
#define GESTUREVISUALIZATION_OFF (UINT)0
#define GESTUREVISUALIZATION_ON (UINT)31
#define GESTUREVISUALIZATION_TAP (UINT)1
#define GESTUREVISUALIZATION_DOUBLETAP (UINT)2
#define GESTUREVISUALIZATION_PRESSANDTAP (UINT)4
#define GESTUREVISUALIZATION_PRESSANDHOLD (UINT)8
#define GESTUREVISUALIZATION_RIGHTTAP (UINT)16
#define MOUSEWHEEL_ROUTING_FOCUS (UINT)0
#define MOUSEWHEEL_ROUTING_HYBRID (UINT)1
#define MOUSEWHEEL_ROUTING_MOUSE_POS (UINT)2
#define PENVISUALIZATION_ON (UINT)35
#define PENVISUALIZATION_OFF (UINT)0
#define PENVISUALIZATION_TAP (UINT)1
#define PENVISUALIZATION_DOUBLETAP (UINT)2
#define PENVISUALIZATION_CURSOR (UINT)32
#define PENARBITRATIONTYPE_NONE (UINT)0
#define PENARBITRATIONTYPE_WIN8 (UINT)1
#define PENARBITRATIONTYPE_FIS (UINT)2
#define PENARBITRATIONTYPE_SPT (UINT)3
#define PENARBITRATIONTYPE_MAX (UINT)4
#define METRICS_USEDEFAULT (INT)-1
#define ARW_STARTMASK (INT)3
#define ARW_STARTRIGHT (INT)1
#define ARW_STARTTOP (INT)2
#define ARW_LEFT (INT)0
#define ARW_RIGHT (INT)0
#define ARW_UP (INT)4
#define ARW_DOWN (INT)4
#define ARW_HIDE (INT)8
#define HCF_LOGONDESKTOP (UINT)256
#define HCF_DEFAULTDESKTOP (UINT)512
#define EDS_RAWMODE (UINT)2
#define EDS_ROTATEDMODE (UINT)4
#define EDD_GET_DEVICE_INTERFACE_NAME (UINT)1
#define FKF_FILTERKEYSON (UINT)1
#define FKF_AVAILABLE (UINT)2
#define FKF_HOTKEYACTIVE (UINT)4
#define FKF_CONFIRMHOTKEY (UINT)8
#define FKF_HOTKEYSOUND (UINT)16
#define FKF_INDICATOR (UINT)32
#define FKF_CLICKON (UINT)64
#define MKF_MOUSEKEYSON (UINT)1
#define MKF_AVAILABLE (UINT)2
#define MKF_HOTKEYACTIVE (UINT)4
#define MKF_CONFIRMHOTKEY (UINT)8
#define MKF_HOTKEYSOUND (UINT)16
#define MKF_INDICATOR (UINT)32
#define MKF_MODIFIERS (UINT)64
#define MKF_REPLACENUMBERS (UINT)128
#define MKF_LEFTBUTTONSEL (UINT)268435456
#define MKF_RIGHTBUTTONSEL (UINT)536870912
#define MKF_LEFTBUTTONDOWN (UINT)16777216
#define MKF_RIGHTBUTTONDOWN (UINT)33554432
#define MKF_MOUSEMODE (UINT)2147483648
#define TKF_TOGGLEKEYSON (UINT)1
#define TKF_AVAILABLE (UINT)2
#define TKF_HOTKEYACTIVE (UINT)4
#define TKF_CONFIRMHOTKEY (UINT)8
#define TKF_HOTKEYSOUND (UINT)16
#define TKF_INDICATOR (UINT)32
#define MONITORINFOF_PRIMARY (UINT)1
#define WINEVENT_OUTOFCONTEXT (UINT)0
#define WINEVENT_SKIPOWNTHREAD (UINT)1
#define WINEVENT_SKIPOWNPROCESS (UINT)2
#define WINEVENT_INCONTEXT (UINT)4
#define CHILDID_SELF (UINT)0
#define INDEXID_OBJECT (UINT)0
#define INDEXID_CONTAINER (UINT)0
#define EVENT_MIN (UINT)1
#define EVENT_MAX (UINT)2147483647
#define EVENT_SYSTEM_SOUND (UINT)1
#define EVENT_SYSTEM_ALERT (UINT)2
#define EVENT_SYSTEM_FOREGROUND (UINT)3
#define EVENT_SYSTEM_MENUSTART (UINT)4
#define EVENT_SYSTEM_MENUEND (UINT)5
#define EVENT_SYSTEM_MENUPOPUPSTART (UINT)6
#define EVENT_SYSTEM_MENUPOPUPEND (UINT)7
#define EVENT_SYSTEM_CAPTURESTART (UINT)8
#define EVENT_SYSTEM_CAPTUREEND (UINT)9
#define EVENT_SYSTEM_MOVESIZESTART (UINT)10
#define EVENT_SYSTEM_MOVESIZEEND (UINT)11
#define EVENT_SYSTEM_CONTEXTHELPSTART (UINT)12
#define EVENT_SYSTEM_CONTEXTHELPEND (UINT)13
#define EVENT_SYSTEM_DRAGDROPSTART (UINT)14
#define EVENT_SYSTEM_DRAGDROPEND (UINT)15
#define EVENT_SYSTEM_DIALOGSTART (UINT)16
#define EVENT_SYSTEM_DIALOGEND (UINT)17
#define EVENT_SYSTEM_SCROLLINGSTART (UINT)18
#define EVENT_SYSTEM_SCROLLINGEND (UINT)19
#define EVENT_SYSTEM_SWITCHSTART (UINT)20
#define EVENT_SYSTEM_SWITCHEND (UINT)21
#define EVENT_SYSTEM_MINIMIZESTART (UINT)22
#define EVENT_SYSTEM_MINIMIZEEND (UINT)23
#define EVENT_SYSTEM_DESKTOPSWITCH (UINT)32
#define EVENT_SYSTEM_SWITCHER_APPGRABBED (UINT)36
#define EVENT_SYSTEM_SWITCHER_APPOVERTARGET (UINT)37
#define EVENT_SYSTEM_SWITCHER_APPDROPPED (UINT)38
#define EVENT_SYSTEM_SWITCHER_CANCELLED (UINT)39
#define EVENT_SYSTEM_IME_KEY_NOTIFICATION (UINT)41
#define EVENT_SYSTEM_END (UINT)255
#define EVENT_OEM_DEFINED_START (UINT)257
#define EVENT_OEM_DEFINED_END (UINT)511
#define EVENT_UIA_EVENTID_START (UINT)19968
#define EVENT_UIA_EVENTID_END (UINT)20223
#define EVENT_UIA_PROPID_START (UINT)29952
#define EVENT_UIA_PROPID_END (UINT)30207
#define EVENT_CONSOLE_CARET (UINT)16385
#define EVENT_CONSOLE_UPDATE_REGION (UINT)16386
#define EVENT_CONSOLE_UPDATE_SIMPLE (UINT)16387
#define EVENT_CONSOLE_UPDATE_SCROLL (UINT)16388
#define EVENT_CONSOLE_LAYOUT (UINT)16389
#define EVENT_CONSOLE_START_APPLICATION (UINT)16390
#define EVENT_CONSOLE_END_APPLICATION (UINT)16391
#define CONSOLE_APPLICATION_16BIT (UINT)0
#define CONSOLE_CARET_SELECTION (UINT)1
#define CONSOLE_CARET_VISIBLE (UINT)2
#define EVENT_CONSOLE_END (UINT)16639
#define EVENT_OBJECT_CREATE (UINT)32768
#define EVENT_OBJECT_DESTROY (UINT)32769
#define EVENT_OBJECT_SHOW (UINT)32770
#define EVENT_OBJECT_HIDE (UINT)32771
#define EVENT_OBJECT_REORDER (UINT)32772
#define EVENT_OBJECT_FOCUS (UINT)32773
#define EVENT_OBJECT_SELECTION (UINT)32774
#define EVENT_OBJECT_SELECTIONADD (UINT)32775
#define EVENT_OBJECT_SELECTIONREMOVE (UINT)32776
#define EVENT_OBJECT_SELECTIONWITHIN (UINT)32777
#define EVENT_OBJECT_STATECHANGE (UINT)32778
#define EVENT_OBJECT_LOCATIONCHANGE (UINT)32779
#define EVENT_OBJECT_NAMECHANGE (UINT)32780
#define EVENT_OBJECT_DESCRIPTIONCHANGE (UINT)32781
#define EVENT_OBJECT_VALUECHANGE (UINT)32782
#define EVENT_OBJECT_PARENTCHANGE (UINT)32783
#define EVENT_OBJECT_HELPCHANGE (UINT)32784
#define EVENT_OBJECT_DEFACTIONCHANGE (UINT)32785
#define EVENT_OBJECT_ACCELERATORCHANGE (UINT)32786
#define EVENT_OBJECT_INVOKED (UINT)32787
#define EVENT_OBJECT_TEXTSELECTIONCHANGED (UINT)32788
#define EVENT_OBJECT_CONTENTSCROLLED (UINT)32789
#define EVENT_SYSTEM_ARRANGMENTPREVIEW (UINT)32790
#define EVENT_OBJECT_CLOAKED (UINT)32791
#define EVENT_OBJECT_UNCLOAKED (UINT)32792
#define EVENT_OBJECT_LIVEREGIONCHANGED (UINT)32793
#define EVENT_OBJECT_HOSTEDOBJECTSINVALIDATED (UINT)32800
#define EVENT_OBJECT_DRAGSTART (UINT)32801
#define EVENT_OBJECT_DRAGCANCEL (UINT)32802
#define EVENT_OBJECT_DRAGCOMPLETE (UINT)32803
#define EVENT_OBJECT_DRAGENTER (UINT)32804
#define EVENT_OBJECT_DRAGLEAVE (UINT)32805
#define EVENT_OBJECT_DRAGDROPPED (UINT)32806
#define EVENT_OBJECT_IME_SHOW (UINT)32807
#define EVENT_OBJECT_IME_HIDE (UINT)32808
#define EVENT_OBJECT_IME_CHANGE (UINT)32809
#define EVENT_OBJECT_TEXTEDIT_CONVERSIONTARGETCHANGED (UINT)32816
#define EVENT_OBJECT_END (UINT)33023
#define EVENT_AIA_START (UINT)40960
#define EVENT_AIA_END (UINT)45055
#define SOUND_SYSTEM_STARTUP (UINT)1
#define SOUND_SYSTEM_SHUTDOWN (UINT)2
#define SOUND_SYSTEM_BEEP (UINT)3
#define SOUND_SYSTEM_ERROR (UINT)4
#define SOUND_SYSTEM_QUESTION (UINT)5
#define SOUND_SYSTEM_WARNING (UINT)6
#define SOUND_SYSTEM_INFORMATION (UINT)7
#define SOUND_SYSTEM_MAXIMIZE (UINT)8
#define SOUND_SYSTEM_MINIMIZE (UINT)9
#define SOUND_SYSTEM_RESTOREUP (UINT)10
#define SOUND_SYSTEM_RESTOREDOWN (UINT)11
#define SOUND_SYSTEM_APPSTART (UINT)12
#define SOUND_SYSTEM_FAULT (UINT)13
#define SOUND_SYSTEM_APPEND (UINT)14
#define SOUND_SYSTEM_MENUCOMMAND (UINT)15
#define SOUND_SYSTEM_MENUPOPUP (UINT)16
#define CSOUND_SYSTEM (UINT)16
#define CALERT_SYSTEM (UINT)6
#define GUI_16BITTASK (UINT)0
#define USER_DEFAULT_SCREEN_DPI (UINT)96
#define STATE_SYSTEM_SELECTED (UINT)2
#define STATE_SYSTEM_FOCUSED (UINT)4
#define STATE_SYSTEM_CHECKED (UINT)16
#define STATE_SYSTEM_MIXED (UINT)32
#define STATE_SYSTEM_READONLY (UINT)64
#define STATE_SYSTEM_HOTTRACKED (UINT)128
#define STATE_SYSTEM_DEFAULT (UINT)256
#define STATE_SYSTEM_EXPANDED (UINT)512
#define STATE_SYSTEM_COLLAPSED (UINT)1024
#define STATE_SYSTEM_BUSY (UINT)2048
#define STATE_SYSTEM_FLOATING (UINT)4096
#define STATE_SYSTEM_MARQUEED (UINT)8192
#define STATE_SYSTEM_ANIMATED (UINT)16384
#define STATE_SYSTEM_SIZEABLE (UINT)131072
#define STATE_SYSTEM_MOVEABLE (UINT)262144
#define STATE_SYSTEM_SELFVOICING (UINT)524288
#define STATE_SYSTEM_SELECTABLE (UINT)2097152
#define STATE_SYSTEM_LINKED (UINT)4194304
#define STATE_SYSTEM_TRAVERSED (UINT)8388608
#define STATE_SYSTEM_MULTISELECTABLE (UINT)16777216
#define STATE_SYSTEM_EXTSELECTABLE (UINT)33554432
#define STATE_SYSTEM_ALERT_LOW (UINT)67108864
#define STATE_SYSTEM_ALERT_MEDIUM (UINT)134217728
#define STATE_SYSTEM_ALERT_HIGH (UINT)268435456
#define STATE_SYSTEM_PROTECTED (UINT)536870912
#define STATE_SYSTEM_VALID (UINT)1073741823
#define CCHILDREN_TITLEBAR (UINT)5
#define CCHILDREN_SCROLLBAR (UINT)5
#define RIM_INPUT (UINT)0
#define RIM_INPUTSINK (UINT)1
#define RIM_TYPEMAX (UINT)2
#define RI_MOUSE_LEFT_BUTTON_DOWN (UINT)1
#define RI_MOUSE_LEFT_BUTTON_UP (UINT)2
#define RI_MOUSE_RIGHT_BUTTON_DOWN (UINT)4
#define RI_MOUSE_RIGHT_BUTTON_UP (UINT)8
#define RI_MOUSE_MIDDLE_BUTTON_DOWN (UINT)16
#define RI_MOUSE_MIDDLE_BUTTON_UP (UINT)32
#define RI_MOUSE_BUTTON_4_DOWN (UINT)64
#define RI_MOUSE_BUTTON_4_UP (UINT)128
#define RI_MOUSE_BUTTON_5_DOWN (UINT)256
#define RI_MOUSE_BUTTON_5_UP (UINT)512
#define RI_MOUSE_WHEEL (UINT)1024
#define RI_MOUSE_HWHEEL (UINT)2048
#define RI_KEY_MAKE (UINT)0
#define RI_KEY_BREAK (UINT)1
#define RI_KEY_E0 (UINT)2
#define RI_KEY_E1 (UINT)4
#define RI_KEY_TERMSRV_SET_LED (UINT)8
#define RI_KEY_TERMSRV_SHADOW (UINT)16
#define RIDEV_EXMODEMASK (UINT)240
#define GIDC_ARRIVAL (UINT)1
#define GIDC_REMOVAL (UINT)2
#define POINTER_DEVICE_PRODUCT_STRING_MAX (UINT)520
#define PDC_ARRIVAL (UINT)1
#define PDC_REMOVAL (UINT)2
#define PDC_ORIENTATION_0 (UINT)4
#define PDC_ORIENTATION_90 (UINT)8
#define PDC_ORIENTATION_180 (UINT)16
#define PDC_ORIENTATION_270 (UINT)32
#define PDC_MODE_DEFAULT (UINT)64
#define PDC_MODE_CENTERED (UINT)128
#define PDC_MAPPING_CHANGE (UINT)256
#define PDC_RESOLUTION (UINT)512
#define PDC_ORIGIN (UINT)1024
#define PDC_MODE_ASPECTRATIOPRESERVED (UINT)2048
#define GF_BEGIN (UINT)1
#define GF_INERTIA (UINT)2
#define GF_END (UINT)4
#define GESTURECONFIGMAXCOUNT (UINT)256
#define GCF_INCLUDE_ANCESTORS (UINT)1
#define NID_INTEGRATED_TOUCH (UINT)1
#define NID_EXTERNAL_TOUCH (UINT)2
#define NID_INTEGRATED_PEN (UINT)4
#define NID_EXTERNAL_PEN (UINT)8
#define NID_MULTI_INPUT (UINT)64
#define NID_READY (UINT)128
#define MAX_STR_BLOCKREASON (UINT)256
#define STRSAFE_USE_SECURE_CRT (UINT)0
#define STRSAFE_MAX_CCH (UINT)2147483647
#define STRSAFE_IGNORE_NULLS (UINT)256
#define STRSAFE_FILL_BEHIND_NULL (UINT)512
#define STRSAFE_FILL_ON_FAILURE (UINT)1024
#define STRSAFE_NULL_ON_FAILURE (UINT)2048
#define STRSAFE_NO_TRUNCATION (UINT)4096
#define STRSAFE_E_INSUFFICIENT_BUFFER (HRESULT)(INT)-2147024774
#define STRSAFE_E_INVALID_PARAMETER (HRESULT)(INT)-2147024809
#define STRSAFE_E_END_OF_FILE (HRESULT)(INT)-2147024858
#define __WARNING_CYCLOMATIC_COMPLEXITY (UINT)28734
#define __WARNING_USING_UNINIT_VAR (UINT)6001
#define __WARNING_RETURN_UNINIT_VAR (UINT)6101
#define __WARNING_DEREF_NULL_PTR (UINT)6011
#define __WARNING_MISSING_ZERO_TERMINATION2 (UINT)6054
#define __WARNING_INVALID_PARAM_VALUE_1 (UINT)6387
#define __WARNING_INCORRECT_ANNOTATION (UINT)26007
#define __WARNING_POTENTIAL_BUFFER_OVERFLOW_HIGH_PRIORITY (UINT)26015
#define __WARNING_PRECONDITION_NULLTERMINATION_VIOLATION (UINT)26035
#define __WARNING_POSTCONDITION_NULLTERMINATION_VIOLATION (UINT)26036
#define __WARNING_HIGH_PRIORITY_OVERFLOW_POSTCONDITION (UINT)26045
#define __WARNING_RANGE_POSTCONDITION_VIOLATION (UINT)26061
#define __WARNING_POTENTIAL_RANGE_POSTCONDITION_VIOLATION (UINT)26071
#define __WARNING_INVALID_PARAM_VALUE_3 (UINT)28183
#define __WARNING_RETURNING_BAD_RESULT (UINT)28196
#define __WARNING_BANNED_API_USAGE (UINT)28719
#define __WARNING_POST_EXPECTED (UINT)28210
#define HBMMENU_CALLBACK (HBITMAP)(INT)-1
#define HBMMENU_SYSTEM (HBITMAP)(INT)1
#define HBMMENU_MBAR_RESTORE (HBITMAP)(INT)2
#define HBMMENU_MBAR_MINIMIZE (HBITMAP)(INT)3
#define HBMMENU_MBAR_CLOSE (HBITMAP)(INT)5
#define HBMMENU_MBAR_CLOSE_D (HBITMAP)(INT)6
#define HBMMENU_MBAR_MINIMIZE_D (HBITMAP)(INT)7
#define HBMMENU_POPUP_CLOSE (HBITMAP)(INT)8
#define HBMMENU_POPUP_RESTORE (HBITMAP)(INT)9
#define HBMMENU_POPUP_MAXIMIZE (HBITMAP)(INT)10
#define HBMMENU_POPUP_MINIMIZE (HBITMAP)(INT)11
#define CW_USEDEFAULT (INT)-2147483648
#define LBS_STANDARD (INT)10485763

//--------------------------------------------------------------------------------
// Section: Types (214)
//--------------------------------------------------------------------------------
typedef enum {
    CS_VREDRAW = 1,
    CS_HREDRAW = 2,
    CS_DBLCLKS = 8,
    CS_OWNDC = 32,
    CS_CLASSDC = 64,
    CS_PARENTDC = 128,
    CS_NOCLOSE = 512,
    CS_SAVEBITS = 2048,
    CS_BYTEALIGNCLIENT = 4096,
    CS_BYTEALIGNWINDOW = 8192,
    CS_GLOBALCLASS = 16384,
    CS_IME = 65536,
    CS_DROPSHADOW = 131072,
} WNDCLASS_STYLES;

typedef enum {
    CWP_ALL = 0,
    CWP_SKIPINVISIBLE = 1,
    CWP_SKIPDISABLED = 2,
    CWP_SKIPTRANSPARENT = 4,
} CWP_FLAGS;

typedef enum {
    MB_ABORTRETRYIGNORE = 2,
    MB_CANCELTRYCONTINUE = 6,
    MB_HELP = 16384,
    MB_OK = 0,
    MB_OKCANCEL = 1,
    MB_RETRYCANCEL = 5,
    MB_YESNO = 4,
    MB_YESNOCANCEL = 3,
    MB_ICONHAND = 16,
    MB_ICONQUESTION = 32,
    MB_ICONEXCLAMATION = 48,
    MB_ICONASTERISK = 64,
    MB_USERICON = 128,
    MB_ICONWARNING = 48,
    MB_ICONERROR = 16,
    MB_ICONINFORMATION = 64,
    MB_ICONSTOP = 16,
    MB_DEFBUTTON1 = 0,
    MB_DEFBUTTON2 = 256,
    MB_DEFBUTTON3 = 512,
    MB_DEFBUTTON4 = 768,
    MB_APPLMODAL = 0,
    MB_SYSTEMMODAL = 4096,
    MB_TASKMODAL = 8192,
    MB_NOFOCUS = 32768,
    MB_SETFOREGROUND = 65536,
    MB_DEFAULT_DESKTOP_ONLY = 131072,
    MB_TOPMOST = 262144,
    MB_RIGHT = 524288,
    MB_RTLREADING = 1048576,
    MB_SERVICE_NOTIFICATION = 2097152,
    MB_SERVICE_NOTIFICATION_NT3X = 262144,
    MB_TYPEMASK = 15,
    MB_ICONMASK = 240,
    MB_DEFMASK = 3840,
    MB_MODEMASK = 12288,
    MB_MISCMASK = 49152,
} MESSAGEBOX_STYLE;

typedef enum {
    MF_BYCOMMAND = 0,
    MF_BYPOSITION = 1024,
    MF_BITMAP = 4,
    MF_CHECKED = 8,
    MF_DISABLED = 2,
    MF_ENABLED = 0,
    MF_GRAYED = 1,
    MF_MENUBARBREAK = 32,
    MF_MENUBREAK = 64,
    MF_OWNERDRAW = 256,
    MF_POPUP = 16,
    MF_SEPARATOR = 2048,
    MF_STRING = 0,
    MF_UNCHECKED = 0,
    MF_INSERT = 0,
    MF_CHANGE = 128,
    MF_APPEND = 256,
    MF_DELETE = 512,
    MF_REMOVE = 4096,
    MF_USECHECKBITMAPS = 512,
    MF_UNHILITE = 0,
    MF_HILITE = 128,
    MF_DEFAULT = 4096,
    MF_SYSMENU = 8192,
    MF_HELP = 16384,
    MF_RIGHTJUSTIFY = 16384,
    MF_MOUSESELECT = 32768,
    MF_END = 128,
} MENU_ITEM_FLAGS;

typedef enum {
    SW_FORCEMINIMIZE = 11,
    SW_HIDE = 0,
    SW_MAXIMIZE = 3,
    SW_MINIMIZE = 6,
    SW_RESTORE = 9,
    SW_SHOW = 5,
    SW_SHOWDEFAULT = 10,
    SW_SHOWMAXIMIZED = 3,
    SW_SHOWMINIMIZED = 2,
    SW_SHOWMINNOACTIVE = 7,
    SW_SHOWNA = 8,
    SW_SHOWNOACTIVATE = 4,
    SW_SHOWNORMAL = 1,
    SW_NORMAL = 1,
    SW_MAX = 11,
    SW_PARENTCLOSING = 1,
    SW_OTHERZOOM = 2,
    SW_PARENTOPENING = 3,
    SW_OTHERUNZOOM = 4,
    SW_SCROLLCHILDREN = 1,
    SW_INVALIDATE = 2,
    SW_ERASE = 4,
    SW_SMOOTHSCROLL = 16,
} SHOW_WINDOW_CMD;

typedef enum {
    SPI_GETBEEP = 1,
    SPI_SETBEEP = 2,
    SPI_GETMOUSE = 3,
    SPI_SETMOUSE = 4,
    SPI_GETBORDER = 5,
    SPI_SETBORDER = 6,
    SPI_GETKEYBOARDSPEED = 10,
    SPI_SETKEYBOARDSPEED = 11,
    SPI_LANGDRIVER = 12,
    SPI_ICONHORIZONTALSPACING = 13,
    SPI_GETSCREENSAVETIMEOUT = 14,
    SPI_SETSCREENSAVETIMEOUT = 15,
    SPI_GETSCREENSAVEACTIVE = 16,
    SPI_SETSCREENSAVEACTIVE = 17,
    SPI_GETGRIDGRANULARITY = 18,
    SPI_SETGRIDGRANULARITY = 19,
    SPI_SETDESKWALLPAPER = 20,
    SPI_SETDESKPATTERN = 21,
    SPI_GETKEYBOARDDELAY = 22,
    SPI_SETKEYBOARDDELAY = 23,
    SPI_ICONVERTICALSPACING = 24,
    SPI_GETICONTITLEWRAP = 25,
    SPI_SETICONTITLEWRAP = 26,
    SPI_GETMENUDROPALIGNMENT = 27,
    SPI_SETMENUDROPALIGNMENT = 28,
    SPI_SETDOUBLECLKWIDTH = 29,
    SPI_SETDOUBLECLKHEIGHT = 30,
    SPI_GETICONTITLELOGFONT = 31,
    SPI_SETDOUBLECLICKTIME = 32,
    SPI_SETMOUSEBUTTONSWAP = 33,
    SPI_SETICONTITLELOGFONT = 34,
    SPI_GETFASTTASKSWITCH = 35,
    SPI_SETFASTTASKSWITCH = 36,
    SPI_SETDRAGFULLWINDOWS = 37,
    SPI_GETDRAGFULLWINDOWS = 38,
    SPI_GETNONCLIENTMETRICS = 41,
    SPI_SETNONCLIENTMETRICS = 42,
    SPI_GETMINIMIZEDMETRICS = 43,
    SPI_SETMINIMIZEDMETRICS = 44,
    SPI_GETICONMETRICS = 45,
    SPI_SETICONMETRICS = 46,
    SPI_SETWORKAREA = 47,
    SPI_GETWORKAREA = 48,
    SPI_SETPENWINDOWS = 49,
    SPI_GETHIGHCONTRAST = 66,
    SPI_SETHIGHCONTRAST = 67,
    SPI_GETKEYBOARDPREF = 68,
    SPI_SETKEYBOARDPREF = 69,
    SPI_GETSCREENREADER = 70,
    SPI_SETSCREENREADER = 71,
    SPI_GETANIMATION = 72,
    SPI_SETANIMATION = 73,
    SPI_GETFONTSMOOTHING = 74,
    SPI_SETFONTSMOOTHING = 75,
    SPI_SETDRAGWIDTH = 76,
    SPI_SETDRAGHEIGHT = 77,
    SPI_SETHANDHELD = 78,
    SPI_GETLOWPOWERTIMEOUT = 79,
    SPI_GETPOWEROFFTIMEOUT = 80,
    SPI_SETLOWPOWERTIMEOUT = 81,
    SPI_SETPOWEROFFTIMEOUT = 82,
    SPI_GETLOWPOWERACTIVE = 83,
    SPI_GETPOWEROFFACTIVE = 84,
    SPI_SETLOWPOWERACTIVE = 85,
    SPI_SETPOWEROFFACTIVE = 86,
    SPI_SETCURSORS = 87,
    SPI_SETICONS = 88,
    SPI_GETDEFAULTINPUTLANG = 89,
    SPI_SETDEFAULTINPUTLANG = 90,
    SPI_SETLANGTOGGLE = 91,
    SPI_GETWINDOWSEXTENSION = 92,
    SPI_SETMOUSETRAILS = 93,
    SPI_GETMOUSETRAILS = 94,
    SPI_SETSCREENSAVERRUNNING = 97,
    SPI_SCREENSAVERRUNNING = 97,
    SPI_GETFILTERKEYS = 50,
    SPI_SETFILTERKEYS = 51,
    SPI_GETTOGGLEKEYS = 52,
    SPI_SETTOGGLEKEYS = 53,
    SPI_GETMOUSEKEYS = 54,
    SPI_SETMOUSEKEYS = 55,
    SPI_GETSHOWSOUNDS = 56,
    SPI_SETSHOWSOUNDS = 57,
    SPI_GETSTICKYKEYS = 58,
    SPI_SETSTICKYKEYS = 59,
    SPI_GETACCESSTIMEOUT = 60,
    SPI_SETACCESSTIMEOUT = 61,
    SPI_GETSERIALKEYS = 62,
    SPI_SETSERIALKEYS = 63,
    SPI_GETSOUNDSENTRY = 64,
    SPI_SETSOUNDSENTRY = 65,
    SPI_GETSNAPTODEFBUTTON = 95,
    SPI_SETSNAPTODEFBUTTON = 96,
    SPI_GETMOUSEHOVERWIDTH = 98,
    SPI_SETMOUSEHOVERWIDTH = 99,
    SPI_GETMOUSEHOVERHEIGHT = 100,
    SPI_SETMOUSEHOVERHEIGHT = 101,
    SPI_GETMOUSEHOVERTIME = 102,
    SPI_SETMOUSEHOVERTIME = 103,
    SPI_GETWHEELSCROLLLINES = 104,
    SPI_SETWHEELSCROLLLINES = 105,
    SPI_GETMENUSHOWDELAY = 106,
    SPI_SETMENUSHOWDELAY = 107,
    SPI_GETWHEELSCROLLCHARS = 108,
    SPI_SETWHEELSCROLLCHARS = 109,
    SPI_GETSHOWIMEUI = 110,
    SPI_SETSHOWIMEUI = 111,
    SPI_GETMOUSESPEED = 112,
    SPI_SETMOUSESPEED = 113,
    SPI_GETSCREENSAVERRUNNING = 114,
    SPI_GETDESKWALLPAPER = 115,
    SPI_GETAUDIODESCRIPTION = 116,
    SPI_SETAUDIODESCRIPTION = 117,
    SPI_GETSCREENSAVESECURE = 118,
    SPI_SETSCREENSAVESECURE = 119,
    SPI_GETHUNGAPPTIMEOUT = 120,
    SPI_SETHUNGAPPTIMEOUT = 121,
    SPI_GETWAITTOKILLTIMEOUT = 122,
    SPI_SETWAITTOKILLTIMEOUT = 123,
    SPI_GETWAITTOKILLSERVICETIMEOUT = 124,
    SPI_SETWAITTOKILLSERVICETIMEOUT = 125,
    SPI_GETMOUSEDOCKTHRESHOLD = 126,
    SPI_SETMOUSEDOCKTHRESHOLD = 127,
    SPI_GETPENDOCKTHRESHOLD = 128,
    SPI_SETPENDOCKTHRESHOLD = 129,
    SPI_GETWINARRANGING = 130,
    SPI_SETWINARRANGING = 131,
    SPI_GETMOUSEDRAGOUTTHRESHOLD = 132,
    SPI_SETMOUSEDRAGOUTTHRESHOLD = 133,
    SPI_GETPENDRAGOUTTHRESHOLD = 134,
    SPI_SETPENDRAGOUTTHRESHOLD = 135,
    SPI_GETMOUSESIDEMOVETHRESHOLD = 136,
    SPI_SETMOUSESIDEMOVETHRESHOLD = 137,
    SPI_GETPENSIDEMOVETHRESHOLD = 138,
    SPI_SETPENSIDEMOVETHRESHOLD = 139,
    SPI_GETDRAGFROMMAXIMIZE = 140,
    SPI_SETDRAGFROMMAXIMIZE = 141,
    SPI_GETSNAPSIZING = 142,
    SPI_SETSNAPSIZING = 143,
    SPI_GETDOCKMOVING = 144,
    SPI_SETDOCKMOVING = 145,
    SPI_GETTOUCHPREDICTIONPARAMETERS = 156,
    SPI_SETTOUCHPREDICTIONPARAMETERS = 157,
    SPI_GETLOGICALDPIOVERRIDE = 158,
    SPI_SETLOGICALDPIOVERRIDE = 159,
    SPI_GETMENURECT = 162,
    SPI_SETMENURECT = 163,
    SPI_GETACTIVEWINDOWTRACKING = 4096,
    SPI_SETACTIVEWINDOWTRACKING = 4097,
    SPI_GETMENUANIMATION = 4098,
    SPI_SETMENUANIMATION = 4099,
    SPI_GETCOMBOBOXANIMATION = 4100,
    SPI_SETCOMBOBOXANIMATION = 4101,
    SPI_GETLISTBOXSMOOTHSCROLLING = 4102,
    SPI_SETLISTBOXSMOOTHSCROLLING = 4103,
    SPI_GETGRADIENTCAPTIONS = 4104,
    SPI_SETGRADIENTCAPTIONS = 4105,
    SPI_GETKEYBOARDCUES = 4106,
    SPI_SETKEYBOARDCUES = 4107,
    SPI_GETMENUUNDERLINES = 4106,
    SPI_SETMENUUNDERLINES = 4107,
    SPI_GETACTIVEWNDTRKZORDER = 4108,
    SPI_SETACTIVEWNDTRKZORDER = 4109,
    SPI_GETHOTTRACKING = 4110,
    SPI_SETHOTTRACKING = 4111,
    SPI_GETMENUFADE = 4114,
    SPI_SETMENUFADE = 4115,
    SPI_GETSELECTIONFADE = 4116,
    SPI_SETSELECTIONFADE = 4117,
    SPI_GETTOOLTIPANIMATION = 4118,
    SPI_SETTOOLTIPANIMATION = 4119,
    SPI_GETTOOLTIPFADE = 4120,
    SPI_SETTOOLTIPFADE = 4121,
    SPI_GETCURSORSHADOW = 4122,
    SPI_SETCURSORSHADOW = 4123,
    SPI_GETMOUSESONAR = 4124,
    SPI_SETMOUSESONAR = 4125,
    SPI_GETMOUSECLICKLOCK = 4126,
    SPI_SETMOUSECLICKLOCK = 4127,
    SPI_GETMOUSEVANISH = 4128,
    SPI_SETMOUSEVANISH = 4129,
    SPI_GETFLATMENU = 4130,
    SPI_SETFLATMENU = 4131,
    SPI_GETDROPSHADOW = 4132,
    SPI_SETDROPSHADOW = 4133,
    SPI_GETBLOCKSENDINPUTRESETS = 4134,
    SPI_SETBLOCKSENDINPUTRESETS = 4135,
    SPI_GETUIEFFECTS = 4158,
    SPI_SETUIEFFECTS = 4159,
    SPI_GETDISABLEOVERLAPPEDCONTENT = 4160,
    SPI_SETDISABLEOVERLAPPEDCONTENT = 4161,
    SPI_GETCLIENTAREAANIMATION = 4162,
    SPI_SETCLIENTAREAANIMATION = 4163,
    SPI_GETCLEARTYPE = 4168,
    SPI_SETCLEARTYPE = 4169,
    SPI_GETSPEECHRECOGNITION = 4170,
    SPI_SETSPEECHRECOGNITION = 4171,
    SPI_GETCARETBROWSING = 4172,
    SPI_SETCARETBROWSING = 4173,
    SPI_GETTHREADLOCALINPUTSETTINGS = 4174,
    SPI_SETTHREADLOCALINPUTSETTINGS = 4175,
    SPI_GETSYSTEMLANGUAGEBAR = 4176,
    SPI_SETSYSTEMLANGUAGEBAR = 4177,
    SPI_GETFOREGROUNDLOCKTIMEOUT = 8192,
    SPI_SETFOREGROUNDLOCKTIMEOUT = 8193,
    SPI_GETACTIVEWNDTRKTIMEOUT = 8194,
    SPI_SETACTIVEWNDTRKTIMEOUT = 8195,
    SPI_GETFOREGROUNDFLASHCOUNT = 8196,
    SPI_SETFOREGROUNDFLASHCOUNT = 8197,
    SPI_GETCARETWIDTH = 8198,
    SPI_SETCARETWIDTH = 8199,
    SPI_GETMOUSECLICKLOCKTIME = 8200,
    SPI_SETMOUSECLICKLOCKTIME = 8201,
    SPI_GETFONTSMOOTHINGTYPE = 8202,
    SPI_SETFONTSMOOTHINGTYPE = 8203,
    SPI_GETFONTSMOOTHINGCONTRAST = 8204,
    SPI_SETFONTSMOOTHINGCONTRAST = 8205,
    SPI_GETFOCUSBORDERWIDTH = 8206,
    SPI_SETFOCUSBORDERWIDTH = 8207,
    SPI_GETFOCUSBORDERHEIGHT = 8208,
    SPI_SETFOCUSBORDERHEIGHT = 8209,
    SPI_GETFONTSMOOTHINGORIENTATION = 8210,
    SPI_SETFONTSMOOTHINGORIENTATION = 8211,
    SPI_GETMINIMUMHITRADIUS = 8212,
    SPI_SETMINIMUMHITRADIUS = 8213,
    SPI_GETMESSAGEDURATION = 8214,
    SPI_SETMESSAGEDURATION = 8215,
    SPI_GETCONTACTVISUALIZATION = 8216,
    SPI_SETCONTACTVISUALIZATION = 8217,
    SPI_GETGESTUREVISUALIZATION = 8218,
    SPI_SETGESTUREVISUALIZATION = 8219,
    SPI_GETMOUSEWHEELROUTING = 8220,
    SPI_SETMOUSEWHEELROUTING = 8221,
    SPI_GETPENVISUALIZATION = 8222,
    SPI_SETPENVISUALIZATION = 8223,
    SPI_GETPENARBITRATIONTYPE = 8224,
    SPI_SETPENARBITRATIONTYPE = 8225,
    SPI_GETCARETTIMEOUT = 8226,
    SPI_SETCARETTIMEOUT = 8227,
    SPI_GETHANDEDNESS = 8228,
    SPI_SETHANDEDNESS = 8229,
} SYSTEM_PARAMETERS_INFO_ACTION;

typedef enum {
    TPM_LEFTBUTTON = 0,
    TPM_RIGHTBUTTON = 2,
    TPM_LEFTALIGN = 0,
    TPM_CENTERALIGN = 4,
    TPM_RIGHTALIGN = 8,
    TPM_TOPALIGN = 0,
    TPM_VCENTERALIGN = 16,
    TPM_BOTTOMALIGN = 32,
    TPM_HORIZONTAL = 0,
    TPM_VERTICAL = 64,
    TPM_NONOTIFY = 128,
    TPM_RETURNCMD = 256,
    TPM_RECURSE = 1,
    TPM_HORPOSANIMATION = 1024,
    TPM_HORNEGANIMATION = 2048,
    TPM_VERPOSANIMATION = 4096,
    TPM_VERNEGANIMATION = 8192,
    TPM_NOANIMATION = 16384,
    TPM_LAYOUTRTL = 32768,
    TPM_WORKAREA = 65536,
} TRACK_POPUP_MENU_FLAGS;

typedef enum {
    WS_EX_DLGMODALFRAME = 1,
    WS_EX_NOPARENTNOTIFY = 4,
    WS_EX_TOPMOST = 8,
    WS_EX_ACCEPTFILES = 16,
    WS_EX_TRANSPARENT = 32,
    WS_EX_MDICHILD = 64,
    WS_EX_TOOLWINDOW = 128,
    WS_EX_WINDOWEDGE = 256,
    WS_EX_CLIENTEDGE = 512,
    WS_EX_CONTEXTHELP = 1024,
    WS_EX_RIGHT = 4096,
    WS_EX_LEFT = 0,
    WS_EX_RTLREADING = 8192,
    WS_EX_LTRREADING = 0,
    WS_EX_LEFTSCROLLBAR = 16384,
    WS_EX_RIGHTSCROLLBAR = 0,
    WS_EX_CONTROLPARENT = 65536,
    WS_EX_STATICEDGE = 131072,
    WS_EX_APPWINDOW = 262144,
    WS_EX_OVERLAPPEDWINDOW = 768,
    WS_EX_PALETTEWINDOW = 392,
    WS_EX_LAYERED = 524288,
    WS_EX_NOINHERITLAYOUT = 1048576,
    WS_EX_NOREDIRECTIONBITMAP = 2097152,
    WS_EX_LAYOUTRTL = 4194304,
    WS_EX_COMPOSITED = 33554432,
    WS_EX_NOACTIVATE = 134217728,
} WINDOW_EX_STYLE;

typedef enum {
    WS_OVERLAPPED = 0,
    WS_POPUP = 2147483648,
    WS_CHILD = 1073741824,
    WS_MINIMIZE = 536870912,
    WS_VISIBLE = 268435456,
    WS_DISABLED = 134217728,
    WS_CLIPSIBLINGS = 67108864,
    WS_CLIPCHILDREN = 33554432,
    WS_MAXIMIZE = 16777216,
    WS_CAPTION = 12582912,
    WS_BORDER = 8388608,
    WS_DLGFRAME = 4194304,
    WS_VSCROLL = 2097152,
    WS_HSCROLL = 1048576,
    WS_SYSMENU = 524288,
    WS_THICKFRAME = 262144,
    WS_GROUP = 131072,
    WS_TABSTOP = 65536,
    WS_MINIMIZEBOX = 131072,
    WS_MAXIMIZEBOX = 65536,
    WS_TILED = 0,
    WS_ICONIC = 536870912,
    WS_SIZEBOX = 262144,
    WS_TILEDWINDOW = 13565952,
    WS_OVERLAPPEDWINDOW = 13565952,
    WS_POPUPWINDOW = 2156396544,
    WS_CHILDWINDOW = 1073741824,
    WS_ACTIVECAPTION = 1,
} WINDOW_STYLE;

typedef enum {
    MFT_BITMAP = 4,
    MFT_MENUBARBREAK = 32,
    MFT_MENUBREAK = 64,
    MFT_OWNERDRAW = 256,
    MFT_RADIOCHECK = 512,
    MFT_RIGHTJUSTIFY = 16384,
    MFT_RIGHTORDER = 8192,
    MFT_SEPARATOR = 2048,
    MFT_STRING = 0,
} MENU_ITEM_TYPE;

typedef enum {
    IDOK = 1,
    IDCANCEL = 2,
    IDABORT = 3,
    IDRETRY = 4,
    IDIGNORE = 5,
    IDYES = 6,
    IDNO = 7,
    IDCLOSE = 8,
    IDHELP = 9,
    IDTRYAGAIN = 10,
    IDCONTINUE = 11,
    IDASYNC = 32001,
    IDTIMEOUT = 32000,
} MESSAGEBOX_RESULT;

typedef enum {
    OFN_READONLY = 1,
    OFN_OVERWRITEPROMPT = 2,
    OFN_HIDEREADONLY = 4,
    OFN_NOCHANGEDIR = 8,
    OFN_SHOWHELP = 16,
    OFN_ENABLEHOOK = 32,
    OFN_ENABLETEMPLATE = 64,
    OFN_ENABLETEMPLATEHANDLE = 128,
    OFN_NOVALIDATE = 256,
    OFN_ALLOWMULTISELECT = 512,
    OFN_EXTENSIONDIFFERENT = 1024,
    OFN_PATHMUSTEXIST = 2048,
    OFN_FILEMUSTEXIST = 4096,
    OFN_CREATEPROMPT = 8192,
    OFN_SHAREAWARE = 16384,
    OFN_NOREADONLYRETURN = 32768,
    OFN_NOTESTFILECREATE = 65536,
    OFN_NONETWORKBUTTON = 131072,
    OFN_NOLONGNAMES = 262144,
    OFN_EXPLORER = 524288,
    OFN_NODEREFERENCELINKS = 1048576,
    OFN_LONGNAMES = 2097152,
    OFN_ENABLEINCLUDENOTIFY = 4194304,
    OFN_ENABLESIZING = 8388608,
    OFN_DONTADDTORECENT = 33554432,
    OFN_FORCESHOWHIDDEN = 268435456,
} OPEN_FILENAME_FLAGS;

typedef enum {
    OFN_EX_NONE = 0,
    OFN_EX_NOPLACESBAR = 1,
} OPEN_FILENAME_FLAGS_EX;

typedef enum {
    MFS_GRAYED = 3,
    MFS_DISABLED = 3,
    MFS_CHECKED = 8,
    MFS_HILITE = 128,
    MFS_ENABLED = 0,
    MFS_UNCHECKED = 0,
    MFS_UNHILITE = 0,
    MFS_DEFAULT = 4096,
} MENU_ITEM_STATE;

typedef enum {
    GCW_ATOM = -32,
    GCL_CBCLSEXTRA = -20,
    GCL_CBWNDEXTRA = -18,
    GCL_HBRBACKGROUND = -10,
    GCL_HCURSOR = -12,
    GCL_HICON = -14,
    GCL_HICONSM = -34,
    GCL_HMODULE = -16,
    GCL_MENUNAME = -8,
    GCL_STYLE = -26,
    GCL_WNDPROC = -24,
    GCLP_HBRBACKGROUND = -10,
    GCLP_HCURSOR = -12,
    GCLP_HICON = -14,
    GCLP_HICONSM = -34,
    GCLP_HMODULE = -16,
    GCLP_MENUNAME = -8,
    GCLP_WNDPROC = -24,
} GET_CLASS_LONG_INDEX;

typedef enum {
    BSF_ALLOWSFW = 128,
    BSF_FLUSHDISK = 4,
    BSF_FORCEIFHUNG = 32,
    BSF_IGNORECURRENTTASK = 2,
    BSF_NOHANG = 8,
    BSF_NOTIMEOUTIFNOTHUNG = 64,
    BSF_POSTMESSAGE = 16,
    BSF_QUERY = 1,
    BSF_SENDNOTIFYMESSAGE = 256,
    BSF_LUID = 1024,
    BSF_RETURNHDESK = 512,
} BROADCAST_SYSTEM_MESSAGE_FLAGS;

typedef enum {
    ULW_ALPHA = 2,
    ULW_COLORKEY = 1,
    ULW_OPAQUE = 4,
    ULW_EX_NORESIZE = 8,
} UPDATE_LAYERED_WINDOW_FLAGS;

typedef enum {
    GWL_EXSTYLE = -20,
    GWLP_HINSTANCE = -6,
    GWLP_HWNDPARENT = -8,
    GWLP_ID = -12,
    GWL_STYLE = -16,
    GWLP_USERDATA = -21,
    GWLP_WNDPROC = -4,
    GWL_HINSTANCE = -6,
    GWL_ID = -12,
    GWL_USERDATA = -21,
    GWL_WNDPROC = -4,
    GWL_HWNDPARENT = -8,
} WINDOW_LONG_PTR_INDEX;

typedef enum {
    AW_ACTIVATE = 131072,
    AW_BLEND = 524288,
    AW_CENTER = 16,
    AW_HIDE = 65536,
    AW_HOR_POSITIVE = 1,
    AW_HOR_NEGATIVE = 2,
    AW_SLIDE = 262144,
    AW_VER_POSITIVE = 4,
    AW_VER_NEGATIVE = 8,
} ANIMATE_WINDOW_FLAGS;

typedef enum {
    MSGFLT_ADD = 1,
    MSGFLT_REMOVE = 2,
} CHANGE_WINDOW_MESSAGE_FILTER_FLAGS;

typedef enum {
    IMAGE_BITMAP = 0,
    IMAGE_CURSOR = 2,
    IMAGE_ICON = 1,
} GDI_IMAGE_TYPE;

typedef enum {
    WH_CALLWNDPROC = 4,
    WH_CALLWNDPROCRET = 12,
    WH_CBT = 5,
    WH_DEBUG = 9,
    WH_FOREGROUNDIDLE = 11,
    WH_GETMESSAGE = 3,
    WH_JOURNALPLAYBACK = 1,
    WH_JOURNALRECORD = 0,
    WH_KEYBOARD = 2,
    WH_KEYBOARD_LL = 13,
    WH_MOUSE = 7,
    WH_MOUSE_LL = 14,
    WH_MSGFILTER = -1,
    WH_SHELL = 10,
    WH_SYSMSGFILTER = 6,
} WINDOWS_HOOK_ID;

typedef enum {
    BSM_ALLCOMPONENTS = 0,
    BSM_ALLDESKTOPS = 16,
    BSM_APPLICATIONS = 8,
} BROADCAST_SYSTEM_MESSAGE_INFO;

typedef enum {
    SPIF_UPDATEINIFILE = 1,
    SPIF_SENDCHANGE = 2,
    SPIF_SENDWININICHANGE = 2,
} SYSTEM_PARAMETERS_INFO_UPDATE_FLAGS;

typedef enum {
    SWP_ASYNCWINDOWPOS = 16384,
    SWP_DEFERERASE = 8192,
    SWP_DRAWFRAME = 32,
    SWP_FRAMECHANGED = 32,
    SWP_HIDEWINDOW = 128,
    SWP_NOACTIVATE = 16,
    SWP_NOCOPYBITS = 256,
    SWP_NOMOVE = 2,
    SWP_NOOWNERZORDER = 512,
    SWP_NOREDRAW = 8,
    SWP_NOREPOSITION = 512,
    SWP_NOSENDCHANGING = 1024,
    SWP_NOSIZE = 1,
    SWP_NOZORDER = 4,
    SWP_SHOWWINDOW = 64,
    SWP__NOOWNERZORDER = 512,
} SET_WINDOW_POS_FLAGS;

typedef enum {
    QS_ALLEVENTS = 1215,
    QS_ALLINPUT = 1279,
    QS_ALLPOSTMESSAGE = 256,
    QS_HOTKEY = 128,
    QS_INPUT = 1031,
    QS_KEY = 1,
    QS_MOUSE = 6,
    QS_MOUSEBUTTON = 4,
    QS_MOUSEMOVE = 2,
    QS_PAINT = 32,
    QS_POSTMESSAGE = 8,
    QS_RAWINPUT = 1024,
    QS_SENDMESSAGE = 64,
    QS_TIMER = 16,
} QUEUE_STATUS_FLAGS;

typedef enum {
    OCR_APPSTARTING = 32650,
    OCR_NORMAL = 32512,
    OCR_CROSS = 32515,
    OCR_HAND = 32649,
    OCR_HELP = 32651,
    OCR_IBEAM = 32513,
    OCR_NO = 32648,
    OCR_SIZEALL = 32646,
    OCR_SIZENESW = 32643,
    OCR_SIZENS = 32645,
    OCR_SIZENWSE = 32642,
    OCR_SIZEWE = 32644,
    OCR_UP = 32516,
    OCR_WAIT = 32514,
} SYSTEM_CURSOR_ID;

typedef enum {
    LWA_ALPHA = 2,
    LWA_COLORKEY = 1,
} LAYERED_WINDOW_ATTRIBUTES_FLAGS;

typedef enum {
    SMTO_ABORTIFHUNG = 2,
    SMTO_BLOCK = 1,
    SMTO_NORMAL = 0,
    SMTO_NOTIMEOUTIFNOTHUNG = 8,
    SMTO_ERRORONEXIT = 32,
} SEND_MESSAGE_TIMEOUT_FLAGS;

typedef enum {
    PM_NOREMOVE = 0,
    PM_REMOVE = 1,
    PM_NOYIELD = 2,
    PM_QS_INPUT = 67567616,
    PM_QS_POSTMESSAGE = 9961472,
    PM_QS_PAINT = 2097152,
    PM_QS_SENDMESSAGE = 4194304,
} PEEK_MESSAGE_REMOVE_TYPE;

typedef enum {
    COLOR_3DDKSHADOW = 21,
    COLOR_3DFACE = 15,
    COLOR_3DHIGHLIGHT = 20,
    COLOR_3DHILIGHT = 20,
    COLOR_3DLIGHT = 22,
    COLOR_3DSHADOW = 16,
    COLOR_ACTIVEBORDER = 10,
    COLOR_ACTIVECAPTION = 2,
    COLOR_APPWORKSPACE = 12,
    COLOR_BACKGROUND = 1,
    COLOR_BTNFACE = 15,
    _COLOR_BTNHIGHLIGHT = 20,
    _COLOR_BTNHILIGHT = 20,
    COLOR_BTNSHADOW = 16,
    COLOR_BTNTEXT = 18,
    COLOR_CAPTIONTEXT = 9,
    COLOR_DESKTOP = 1,
    COLOR_GRADIENTACTIVECAPTION = 27,
    COLOR_GRADIENTINACTIVECAPTION = 28,
    COLOR_GRAYTEXT = 17,
    COLOR_HIGHLIGHT = 13,
    COLOR_HIGHLIGHTTEXT = 14,
    COLOR_HOTLIGHT = 26,
    COLOR_INACTIVEBORDER = 11,
    COLOR_INACTIVECAPTION = 3,
    COLOR_INACTIVECAPTIONTEXT = 19,
    COLOR_INFOBK = 24,
    COLOR_INFOTEXT = 23,
    COLOR_MENU = 4,
    COLOR_MENUHILIGHT = 29,
    COLOR_MENUBAR = 30,
    COLOR_MENUTEXT = 7,
    COLOR_SCROLLBAR = 0,
    COLOR_WINDOW = 5,
    COLOR_WINDOWFRAME = 6,
    COLOR_WINDOWTEXT = 8,
} SYS_COLOR_INDEX;

typedef enum {
    GW_CHILD = 5,
    GW_ENABLEDPOPUP = 6,
    GW_HWNDFIRST = 0,
    GW_HWNDLAST = 1,
    GW_HWNDNEXT = 2,
    GW_HWNDPREV = 3,
    GW_OWNER = 4,
} GET_WINDOW_CMD;

typedef enum {
    SM_ARRANGE = 56,
    SM_CLEANBOOT = 67,
    SM_CMONITORS = 80,
    SM_CMOUSEBUTTONS = 43,
    SM_CONVERTIBLESLATEMODE = 8195,
    SM_CXBORDER = 5,
    SM_CXCURSOR = 13,
    SM_CXDLGFRAME = 7,
    SM_CXDOUBLECLK = 36,
    SM_CXDRAG = 68,
    SM_CXEDGE = 45,
    SM_CXFIXEDFRAME = 7,
    SM_CXFOCUSBORDER = 83,
    SM_CXFRAME = 32,
    SM_CXFULLSCREEN = 16,
    SM_CXHSCROLL = 21,
    SM_CXHTHUMB = 10,
    SM_CXICON = 11,
    SM_CXICONSPACING = 38,
    SM_CXMAXIMIZED = 61,
    SM_CXMAXTRACK = 59,
    SM_CXMENUCHECK = 71,
    SM_CXMENUSIZE = 54,
    SM_CXMIN = 28,
    SM_CXMINIMIZED = 57,
    SM_CXMINSPACING = 47,
    SM_CXMINTRACK = 34,
    SM_CXPADDEDBORDER = 92,
    SM_CXSCREEN = 0,
    SM_CXSIZE = 30,
    SM_CXSIZEFRAME = 32,
    SM_CXSMICON = 49,
    SM_CXSMSIZE = 52,
    SM_CXVIRTUALSCREEN = 78,
    SM_CXVSCROLL = 2,
    SM_CYBORDER = 6,
    SM_CYCAPTION = 4,
    SM_CYCURSOR = 14,
    SM_CYDLGFRAME = 8,
    SM_CYDOUBLECLK = 37,
    SM_CYDRAG = 69,
    SM_CYEDGE = 46,
    SM_CYFIXEDFRAME = 8,
    SM_CYFOCUSBORDER = 84,
    SM_CYFRAME = 33,
    SM_CYFULLSCREEN = 17,
    SM_CYHSCROLL = 3,
    SM_CYICON = 12,
    SM_CYICONSPACING = 39,
    SM_CYKANJIWINDOW = 18,
    SM_CYMAXIMIZED = 62,
    SM_CYMAXTRACK = 60,
    SM_CYMENU = 15,
    SM_CYMENUCHECK = 72,
    SM_CYMENUSIZE = 55,
    SM_CYMIN = 29,
    SM_CYMINIMIZED = 58,
    SM_CYMINSPACING = 48,
    SM_CYMINTRACK = 35,
    SM_CYSCREEN = 1,
    SM_CYSIZE = 31,
    SM_CYSIZEFRAME = 33,
    SM_CYSMCAPTION = 51,
    SM_CYSMICON = 50,
    SM_CYSMSIZE = 53,
    SM_CYVIRTUALSCREEN = 79,
    SM_CYVSCROLL = 20,
    SM_CYVTHUMB = 9,
    SM_DBCSENABLED = 42,
    SM_DEBUG = 22,
    SM_DIGITIZER = 94,
    SM_IMMENABLED = 82,
    SM_MAXIMUMTOUCHES = 95,
    SM_MEDIACENTER = 87,
    SM_MENUDROPALIGNMENT = 40,
    SM_MIDEASTENABLED = 74,
    SM_MOUSEPRESENT = 19,
    SM_MOUSEHORIZONTALWHEELPRESENT = 91,
    SM_MOUSEWHEELPRESENT = 75,
    SM_NETWORK = 63,
    SM_PENWINDOWS = 41,
    SM_REMOTECONTROL = 8193,
    SM_REMOTESESSION = 4096,
    SM_SAMEDISPLAYFORMAT = 81,
    SM_SECURE = 44,
    SM_SERVERR2 = 89,
    SM_SHOWSOUNDS = 70,
    SM_SHUTTINGDOWN = 8192,
    SM_SLOWMACHINE = 73,
    SM_STARTER = 88,
    SM_SWAPBUTTON = 23,
    SM_SYSTEMDOCKED_ = 8196,
    SM_TABLETPC = 86,
    SM_XVIRTUALSCREEN = 76,
    SM_YVIRTUALSCREEN = 77,
} SYSTEM_METRICS_INDEX;

typedef enum {
    GA_PARENT = 1,
    GA_ROOT = 2,
    GA_ROOTOWNER = 3,
} GET_ANCESTOR_FLAGS;

typedef enum {
    MDITILE_HORIZONTAL = 1,
    MDITILE_VERTICAL = 0,
} TILE_WINDOWS_HOW;

typedef enum {
    WDA_NONE = 0,
    WDA_MONITOR = 1,
    WDA_EXCLUDEFROMCAPTURE = 17,
} WINDOW_DISPLAY_AFFINITY;

typedef enum {
    LSFW_LOCK = 1,
    LSFW_UNLOCK = 2,
} FOREGROUND_WINDOW_LOCK_CODE;

typedef enum {
    MDITILE_SKIPDISABLED = 2,
    MDITILE_ZORDER = 4,
} CASCADE_WINDOWS_HOW;

typedef enum {
    MSGFLT_ALLOW = 1,
    MSGFLT_DISALLOW = 2,
    MSGFLT_RESET = 0,
} WINDOW_MESSAGE_FILTER_ACTION;

typedef enum {
    GMDI_GOINTOPOPUPS = 2,
    GMDI_USEDISABLED = 1,
} GET_MENU_DEFAULT_ITEM_FLAGS;

typedef enum {
    PSD_DEFAULTMINMARGINS = 0,
    PSD_DISABLEMARGINS = 16,
    PSD_DISABLEORIENTATION = 256,
    PSD_DISABLEPAGEPAINTING = 524288,
    PSD_DISABLEPAPER = 512,
    PSD_DISABLEPRINTER = 32,
    PSD_ENABLEPAGEPAINTHOOK = 262144,
    PSD_ENABLEPAGESETUPHOOK = 8192,
    PSD_ENABLEPAGESETUPTEMPLATE = 32768,
    PSD_ENABLEPAGESETUPTEMPLATEHANDLE = 131072,
    PSD_INHUNDREDTHSOFMILLIMETERS = 8,
    PSD_INTHOUSANDTHSOFINCHES = 4,
    PSD_INWININIINTLMEASURE = 0,
    PSD_MARGINS = 2,
    PSD_MINMARGINS = 1,
    PSD_NONETWORKBUTTON = 2097152,
    PSD_NOWARNING = 128,
    PSD_RETURNDEFAULT = 1024,
    PSD_SHOWHELP = 2048,
} PAGESETUPDLG_FLAGS;

typedef enum {
    MSGFLTINFO_NONE = 0,
    MSGFLTINFO_ALLOWED_HIGHER = 3,
    MSGFLTINFO_ALREADYALLOWED_FORWND = 1,
    MSGFLTINFO_ALREADYDISALLOWED_FORWND = 2,
} MSGFLTINFO_STATUS;

typedef enum {
    CF_APPLY = 512,
    CF_ANSIONLY = 1024,
    CF_BOTH = 3,
    CF_EFFECTS = 256,
    CF_ENABLEHOOK = 8,
    CF_ENABLETEMPLATE = 16,
    CF_ENABLETEMPLATEHANDLE = 32,
    CF_FIXEDPITCHONLY = 16384,
    CF_FORCEFONTEXIST = 65536,
    CF_INACTIVEFONTS = 33554432,
    CF_INITTOLOGFONTSTRUCT = 64,
    CF_LIMITSIZE = 8192,
    CF_NOOEMFONTS = 2048,
    CF_NOFACESEL = 524288,
    CF_NOSCRIPTSEL = 8388608,
    CF_NOSIMULATIONS = 4096,
    CF_NOSIZESEL = 2097152,
    CF_NOSTYLESEL = 1048576,
    CF_NOVECTORFONTS = 2048,
    CF_NOVERTFONTS = 16777216,
    CF_PRINTERFONTS = 2,
    CF_SCALABLEONLY = 131072,
    CF_SCREENFONTS = 1,
    CF_SCRIPTSONLY = 1024,
    CF_SELECTSCRIPT = 4194304,
    CF_SHOWHELP = 4,
    CF_TTONLY = 262144,
    CF_USESTYLE = 128,
    CF_WYSIWYG = 32768,
} CHOOSEFONT_FLAGS;

typedef enum {
    FR_DIALOGTERM = 64,
    FR_DOWN = 1,
    FR_ENABLEHOOK = 256,
    FR_ENABLETEMPLATE = 512,
    FR_ENABLETEMPLATEHANDLE = 8192,
    FR_FINDNEXT = 8,
    FR_HIDEUPDOWN = 16384,
    FR_HIDEMATCHCASE = 32768,
    FR_HIDEWHOLEWORD = 65536,
    FR_MATCHCASE = 4,
    FR_NOMATCHCASE = 2048,
    FR_NOUPDOWN = 1024,
    FR_NOWHOLEWORD = 4096,
    FR_REPLACE = 16,
    FR_REPLACEALL = 32,
    FR_SHOWHELP = 128,
    FR_WHOLEWORD = 2,
} FINDREPLACE_FLAGS;

typedef enum {
    PD_ALLPAGES = 0,
    PD_COLLATE = 16,
    PD_CURRENTPAGE = 4194304,
    PD_DISABLEPRINTTOFILE = 524288,
    PD_ENABLEPRINTTEMPLATE = 16384,
    PD_ENABLEPRINTTEMPLATEHANDLE = 65536,
    PD_EXCLUSIONFLAGS = 16777216,
    PD_HIDEPRINTTOFILE = 1048576,
    PD_NOCURRENTPAGE = 8388608,
    PD_NOPAGENUMS = 8,
    PD_NOSELECTION = 4,
    PD_NOWARNING = 128,
    PD_PAGENUMS = 2,
    PD_PRINTTOFILE = 32,
    PD_RETURNDC = 256,
    PD_RETURNDEFAULT = 1024,
    PD_RETURNIC = 512,
    PD_SELECTION = 1,
    PD_USEDEVMODECOPIES = 262144,
    PD_USEDEVMODECOPIESANDCOLLATE = 262144,
    PD_USELARGETEMPLATE = 268435456,
    PD_ENABLEPRINTHOOK = 4096,
    PD_ENABLESETUPHOOK = 8192,
    PD_ENABLESETUPTEMPLATE = 32768,
    PD_ENABLESETUPTEMPLATEHANDLE = 131072,
    PD_NONETWORKBUTTON = 2097152,
    PD_PRINTSETUP = 64,
    PD_SHOWHELP = 2048,
} PRINTDLGEX_FLAGS;

typedef enum {
    XBUTTON1 = 1,
    XBUTTON2 = 2,
} MOUSEHOOKSTRUCTEX_MOUSE_DATA;

typedef enum {
    MIIM_BITMAP = 128,
    MIIM_CHECKMARKS = 8,
    MIIM_DATA = 32,
    MIIM_FTYPE = 256,
    MIIM_ID = 2,
    MIIM_STATE = 1,
    MIIM_STRING = 64,
    MIIM_SUBMENU = 4,
    MIIM_TYPE = 16,
} MENU_ITEM_MASK;

typedef enum {
    FLASHW_ALL = 3,
    FLASHW_CAPTION = 1,
    FLASHW_STOP = 0,
    FLASHW_TIMER = 4,
    FLASHW_TIMERNOFG = 12,
    FLASHW_TRAY = 2,
} FLASHWINFO_FLAGS;

typedef enum {
    CURSOR_SHOWING = 1,
    CURSOR_SUPPRESSED = 2,
} CURSORINFO_FLAGS;

typedef enum {
    MNS_AUTODISMISS = 268435456,
    MNS_CHECKORBMP = 67108864,
    MNS_DRAGDROP = 536870912,
    MNS_MODELESS = 1073741824,
    MNS_NOCHECK = 2147483648,
    MNS_NOTIFYBYPOS = 134217728,
} MENUINFO_STYLE;

typedef enum {
    WPF_ASYNCWINDOWPLACEMENT = 4,
    WPF_RESTORETOMAXIMIZED = 2,
    WPF_SETMINPOSITION = 1,
} WINDOWPLACEMENT_FLAGS;

typedef enum {
    BOLD_FONTTYPE = 256,
    ITALIC_FONTTYPE = 512,
    PRINTER_FONTTYPE = 16384,
    REGULAR_FONTTYPE = 1024,
    SCREEN_FONTTYPE = 8192,
    SIMULATED_FONTTYPE = 32768,
} CHOOSEFONT_FONT_TYPE;

typedef enum {
    MIM_APPLYTOSUBMENUS = 2147483648,
    MIM_BACKGROUND = 2,
    MIM_HELPID = 4,
    MIM_MAXHEIGHT = 1,
    MIM_MENUDATA = 8,
    MIM_STYLE = 16,
} MENUINFO_MASK;

typedef enum {
    ARW_BOTTOMLEFT = 0,
    ARW_BOTTOMRIGHT = 1,
    ARW_TOPLEFT = 2,
    ARW_TOPRIGHT = 3,
} MINIMIZEDMETRICS_ARRANGE;

typedef enum {
    MNGOF_BOTTOMGAP = 2,
    MNGOF_TOPGAP = 1,
} MENUGETOBJECTINFO_FLAGS;

typedef enum {
    GUI_CARETBLINKING = 1,
    GUI_INMENUMODE = 4,
    GUI_INMOVESIZE = 2,
    GUI_POPUPMENUMODE = 16,
    GUI_SYSTEMMENUMODE = 8,
} GUITHREADINFO_FLAGS;

typedef enum {
    LLKHF_EXTENDED = 1,
    LLKHF_ALTDOWN = 32,
    LLKHF_UP = 128,
    LLKHF_INJECTED = 16,
    LLKHF_LOWER_IL_INJECTED = 2,
} KBDLLHOOKSTRUCT_FLAGS;

typedef int WINSTAENUMPROCA;

typedef int WINSTAENUMPROCW;

typedef int DESKTOPENUMPROCA;

typedef int DESKTOPENUMPROCW;

typedef enum {
    DI_MASK = 1,
    DI_IMAGE = 2,
    DI_NORMAL = 3,
    DI_COMPAT = 4,
    DI_DEFAULTSIZE = 8,
    DI_NOMIRROR = 16,
} DI_FLAGS;

typedef int OPENFILENAME_NT4A;

typedef int OPENFILENAME_NT4W;

typedef int OPENFILENAMEA;

typedef int OPENFILENAMEW;

typedef int OFNOTIFYA;

typedef int OFNOTIFYW;

typedef int OFNOTIFYEXA;

typedef int OFNOTIFYEXW;

typedef int CHOOSECOLORA;

typedef int CHOOSECOLORW;

typedef int FINDREPLACEA;

typedef int FINDREPLACEW;

typedef int CHOOSEFONTA;

typedef int CHOOSEFONTW;

typedef int PRINTDLGA;

typedef int PRINTDLGW;

typedef int PRINTPAGERANGE;

typedef int PRINTDLGEXA;

typedef int PRINTDLGEXW;

typedef int DEVNAMES;

typedef int PAGESETUPDLGA;

typedef int PAGESETUPDLGW;

typedef int HHOOK;

typedef int HICON;

typedef int HMENU;

typedef int HCURSOR;

typedef int HACCEL;

typedef int MESSAGE_RESOURCE_ENTRY;

typedef int MESSAGE_RESOURCE_BLOCK;

typedef int MESSAGE_RESOURCE_DATA;

typedef int LPOFNHOOKPROC;

typedef int LPCCHOOKPROC;

typedef int LPFRHOOKPROC;

typedef int LPCFHOOKPROC;

typedef int LPPRINTHOOKPROC;

typedef int LPSETUPHOOKPROC;

// TODO: this type is limited to platform 'windows5.0'
typedef int IPrintDialogCallback;

// TODO: this type is limited to platform 'windows5.0'
typedef int IPrintDialogServices;

typedef int LPPAGEPAINTHOOK;

typedef int LPPAGESETUPHOOK;

typedef int WNDPROC;

typedef int DLGPROC;

typedef int TIMERPROC;

typedef int WNDENUMPROC;

typedef int HOOKPROC;

typedef int SENDASYNCPROC;

typedef int PROPENUMPROCA;

typedef int PROPENUMPROCW;

typedef int PROPENUMPROCEXA;

typedef int PROPENUMPROCEXW;

typedef int NAMEENUMPROCA;

typedef int NAMEENUMPROCW;

typedef int CBT_CREATEWNDA;

typedef int CBT_CREATEWNDW;

typedef int CBTACTIVATESTRUCT;

typedef int SHELLHOOKINFO;

typedef int EVENTMSG;

typedef int CWPSTRUCT;

typedef int CWPRETSTRUCT;

typedef int KBDLLHOOKSTRUCT;

typedef int MSLLHOOKSTRUCT;

typedef int DEBUGHOOKINFO;

typedef int MOUSEHOOKSTRUCT;

typedef int MOUSEHOOKSTRUCTEX;

typedef int HARDWAREHOOKSTRUCT;

typedef int WNDCLASSEXA;

typedef int WNDCLASSEXW;

typedef int WNDCLASSA;

typedef int WNDCLASSW;

typedef int MSG;

typedef int MINMAXINFO;

typedef int MDINEXTMENU;

typedef int WINDOWPOS;

typedef int NCCALCSIZE_PARAMS;

typedef int ACCEL;

typedef int CREATESTRUCTA;

typedef int CREATESTRUCTW;

typedef int WINDOWPLACEMENT;

typedef int STYLESTRUCT;

typedef int BSMINFO;

typedef int PREGISTERCLASSNAMEW;

typedef int UPDATELAYEREDWINDOWINFO;

typedef int FLASHWINFO;

typedef int DLGTEMPLATE;

typedef int DLGITEMTEMPLATE;

typedef enum {
    PT_POINTER = 1,
    PT_TOUCH = 2,
    PT_PEN = 3,
    PT_MOUSE = 4,
    PT_TOUCHPAD = 5,
} POINTER_INPUT_TYPE;

typedef int TPMPARAMS;

typedef int MENUINFO;

typedef int MENUGETOBJECTINFO;

typedef int MENUITEMINFOA;

typedef int MENUITEMINFOW;

typedef int DROPSTRUCT;

typedef int MSGBOXCALLBACK;

typedef int MSGBOXPARAMSA;

typedef int MSGBOXPARAMSW;

typedef int MENUITEMTEMPLATEHEADER;

typedef int MENUITEMTEMPLATE;

typedef int ICONINFO;

typedef int CURSORSHAPE;

typedef int ICONINFOEXA;

typedef int ICONINFOEXW;

typedef enum {
    EDIT_CONTROL_FEATURE_ENTERPRISE_DATA_PROTECTION_PASTE_SUPPORT = 0,
    EDIT_CONTROL_FEATURE_PASTE_NOTIFICATIONS = 1,
} EDIT_CONTROL_FEATURE;

typedef int MDICREATESTRUCTA;

typedef int MDICREATESTRUCTW;

typedef int CLIENTCREATESTRUCT;

typedef int TouchPredictionParameters;

typedef enum {
    HANDEDNESS_LEFT = 0,
    HANDEDNESS_RIGHT = 1,
} HANDEDNESS;

typedef int NONCLIENTMETRICSA;

typedef int NONCLIENTMETRICSW;

typedef int MINIMIZEDMETRICS;

typedef int ICONMETRICSA;

typedef int ICONMETRICSW;

typedef int ANIMATIONINFO;

typedef int AUDIODESCRIPTION;

typedef int GUITHREADINFO;

typedef int CURSORINFO;

typedef int WINDOWINFO;

typedef int TITLEBARINFO;

typedef int TITLEBARINFOEX;

typedef int MENUBARINFO;

typedef int ALTTABINFO;

typedef int CHANGEFILTERSTRUCT;

typedef int IndexedResourceQualifier;

typedef enum {
    MrmPlatformVersion_Default = 0,
    MrmPlatformVersion_Windows10_0_0_0 = 17432576,
    MrmPlatformVersion_Windows10_0_0_5 = 17432581,
} MrmPlatformVersion;

typedef int MrmResourceIndexerHandle;

typedef enum {
    MrmPackagingModeStandaloneFile = 0,
    MrmPackagingModeAutoSplit = 1,
    MrmPackagingModeResourcePack = 2,
} MrmPackagingMode;

typedef enum {
    MrmPackagingOptionsNone = 0,
    MrmPackagingOptionsOmitSchemaFromResourcePacks = 1,
    MrmPackagingOptionsSplitLanguageVariants = 2,
} MrmPackagingOptions;

typedef enum {
    MrmDumpType_Basic = 0,
    MrmDumpType_Detailed = 1,
    MrmDumpType_Schema = 2,
} MrmDumpType;

typedef enum {
    MrmResourceIndexerMessageSeverityVerbose = 0,
    MrmResourceIndexerMessageSeverityInfo = 1,
    MrmResourceIndexerMessageSeverityWarning = 2,
    MrmResourceIndexerMessageSeverityError = 3,
} MrmResourceIndexerMessageSeverity;

typedef int MrmResourceIndexerMessage;

typedef int OPENFILENAME_NT4A;

typedef int OPENFILENAME_NT4W;

typedef int OPENFILENAMEA;

typedef int OPENFILENAMEW;

typedef int OFNOTIFYA;

typedef int OFNOTIFYW;

typedef int OFNOTIFYEXA;

typedef int OFNOTIFYEXW;

typedef int CHOOSECOLORA;

typedef int CHOOSECOLORW;

typedef int FINDREPLACEA;

typedef int FINDREPLACEW;

typedef int CHOOSEFONTA;

typedef int CHOOSEFONTW;

typedef int PRINTDLGA;

typedef int PRINTDLGW;

typedef int PRINTPAGERANGE;

typedef int PRINTDLGEXA;

typedef int PRINTDLGEXW;

typedef int DEVNAMES;

typedef int PAGESETUPDLGA;

typedef int PAGESETUPDLGW;


//--------------------------------------------------------------------------------
// Section: Functions (426)
//--------------------------------------------------------------------------------
#if  defined(X64) || defined(Arm64)
// TODO: this type is limited to platform 'windows5.0'
/*isize*/void GetWindowLongPtrA();
#endif

#if  defined(X64) || defined(Arm64)
// TODO: this type is limited to platform 'windows5.0'
/*isize*/void GetWindowLongPtrW();
#endif

#if  defined(X64) || defined(Arm64)
// TODO: this type is limited to platform 'windows5.0'
/*isize*/void SetWindowLongPtrA();
#endif

#if  defined(X64) || defined(Arm64)
// TODO: this type is limited to platform 'windows5.0'
/*isize*/void SetWindowLongPtrW();
#endif

#if  defined(X64) || defined(Arm64)
// TODO: this type is limited to platform 'windows5.0'
/*usize*/void GetClassLongPtrA();
#endif

#if  defined(X64) || defined(Arm64)
// TODO: this type is limited to platform 'windows5.0'
/*usize*/void GetClassLongPtrW();
#endif

#if  defined(X64) || defined(Arm64)
// TODO: this type is limited to platform 'windows5.0'
/*usize*/void SetClassLongPtrA();
#endif

#if  defined(X64) || defined(Arm64)
// TODO: this type is limited to platform 'windows5.0'
/*usize*/void SetClassLongPtrW();
#endif

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetOpenFileNameA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetOpenFileNameW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetSaveFileNameA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetSaveFileNameW();

// TODO: this type is limited to platform 'windows5.0'
/*i16*/void GetFileTitleA();

// TODO: this type is limited to platform 'windows5.0'
/*i16*/void GetFileTitleW();

/*BOOL*/void ChooseColorA();

/*BOOL*/void ChooseColorW();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void FindTextA();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void FindTextW();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void ReplaceTextA();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void ReplaceTextW();

/*BOOL*/void ChooseFontA();

/*BOOL*/void ChooseFontW();

/*BOOL*/void PrintDlgA();

/*BOOL*/void PrintDlgW();

/*HRESULT*/void PrintDlgExA();

/*HRESULT*/void PrintDlgExW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void CommDlgExtendedError();

/*BOOL*/void PageSetupDlgA();

/*BOOL*/void PageSetupDlgW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void LoadStringA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void LoadStringW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void wvsprintfA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void wvsprintfW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void wsprintfA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void wsprintfW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsHungAppWindow();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void DisableProcessWindowsGhosting();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RegisterWindowMessageA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RegisterWindowMessageW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetMessageA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetMessageW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void TranslateMessage();

// TODO: this type is limited to platform 'windows5.0'
/*LRESULT*/void DispatchMessageA();

// TODO: this type is limited to platform 'windows5.0'
/*LRESULT*/void DispatchMessageW();

/*BOOL*/void SetMessageQueue();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PeekMessageA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PeekMessageW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetMessagePos();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetMessageTime();

// TODO: this type is limited to platform 'windows5.0'
/*LPARAM*/void GetMessageExtraInfo();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void IsWow64Message();

// TODO: this type is limited to platform 'windows5.0'
/*LPARAM*/void SetMessageExtraInfo();

// TODO: this type is limited to platform 'windows5.0'
/*LRESULT*/void SendMessageA();

// TODO: this type is limited to platform 'windows5.0'
/*LRESULT*/void SendMessageW();

// TODO: this type is limited to platform 'windows5.0'
/*LRESULT*/void SendMessageTimeoutA();

// TODO: this type is limited to platform 'windows5.0'
/*LRESULT*/void SendMessageTimeoutW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SendNotifyMessageA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SendNotifyMessageW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SendMessageCallbackA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SendMessageCallbackW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void BroadcastSystemMessageExA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void BroadcastSystemMessageExW();

/*i32*/void BroadcastSystemMessageA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void BroadcastSystemMessageW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PostMessageA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PostMessageW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PostThreadMessageA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PostThreadMessageW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ReplyMessage();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void WaitMessage();

// TODO: this type is limited to platform 'windows5.0'
/*LRESULT*/void DefWindowProcA();

// TODO: this type is limited to platform 'windows5.0'
/*LRESULT*/void DefWindowProcW();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void PostQuitMessage();

// TODO: this type is limited to platform 'windows5.0'
/*LRESULT*/void CallWindowProcA();

// TODO: this type is limited to platform 'windows5.0'
/*LRESULT*/void CallWindowProcW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void InSendMessage();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void InSendMessageEx();

// TODO: this type is limited to platform 'windows5.0'
/*u16*/void RegisterClassA();

// TODO: this type is limited to platform 'windows5.0'
/*u16*/void RegisterClassW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void UnregisterClassA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void UnregisterClassW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetClassInfoA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetClassInfoW();

// TODO: this type is limited to platform 'windows5.0'
/*u16*/void RegisterClassExA();

// TODO: this type is limited to platform 'windows5.0'
/*u16*/void RegisterClassExW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetClassInfoExA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetClassInfoExW();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void CreateWindowExA();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void CreateWindowExW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsWindow();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsMenu();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsChild();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DestroyWindow();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ShowWindow();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void AnimateWindow();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void UpdateLayeredWindow();

/*BOOL*/void UpdateLayeredWindowIndirect();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetLayeredWindowAttributes();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetLayeredWindowAttributes();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ShowWindowAsync();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void FlashWindow();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void FlashWindowEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ShowOwnedPopups();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void OpenIcon();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void CloseWindow();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void MoveWindow();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetWindowPos();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetWindowPlacement();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetWindowPlacement();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void GetWindowDisplayAffinity();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void SetWindowDisplayAffinity();

// TODO: this type is limited to platform 'windows5.0'
/*isize*/void BeginDeferWindowPos();

// TODO: this type is limited to platform 'windows5.0'
/*isize*/void DeferWindowPos();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EndDeferWindowPos();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsWindowVisible();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsIconic();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void AnyPopup();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void BringWindowToTop();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsZoomed();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void CreateDialogParamA();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void CreateDialogParamW();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void CreateDialogIndirectParamA();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void CreateDialogIndirectParamW();

// TODO: this type is limited to platform 'windows5.0'
/*isize*/void DialogBoxParamA();

// TODO: this type is limited to platform 'windows5.0'
/*isize*/void DialogBoxParamW();

// TODO: this type is limited to platform 'windows5.0'
/*isize*/void DialogBoxIndirectParamA();

// TODO: this type is limited to platform 'windows5.0'
/*isize*/void DialogBoxIndirectParamW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EndDialog();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void GetDlgItem();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetDlgItemInt();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetDlgItemInt();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetDlgItemTextA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetDlgItemTextW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetDlgItemTextA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetDlgItemTextW();

// TODO: this type is limited to platform 'windows5.0'
/*LRESULT*/void SendDlgItemMessageA();

// TODO: this type is limited to platform 'windows5.0'
/*LRESULT*/void SendDlgItemMessageW();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void GetNextDlgGroupItem();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void GetNextDlgTabItem();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetDlgCtrlID();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetDialogBaseUnits();

/*LRESULT*/void DefDlgProcA();

// TODO: this type is limited to platform 'windows5.0'
/*LRESULT*/void DefDlgProcW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void CallMsgFilterA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void CallMsgFilterW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void CharToOemA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void CharToOemW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void OemToCharA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void OemToCharW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void CharToOemBuffA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void CharToOemBuffW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void OemToCharBuffA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void OemToCharBuffW();

// TODO: this type is limited to platform 'windows5.0'
/*PSTR*/void CharUpperA();

// TODO: this type is limited to platform 'windows5.0'
/*PWSTR*/void CharUpperW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void CharUpperBuffA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void CharUpperBuffW();

// TODO: this type is limited to platform 'windows5.0'
/*PSTR*/void CharLowerA();

// TODO: this type is limited to platform 'windows5.0'
/*PWSTR*/void CharLowerW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void CharLowerBuffA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void CharLowerBuffW();

// TODO: this type is limited to platform 'windows5.0'
/*PSTR*/void CharNextA();

// TODO: this type is limited to platform 'windows5.0'
/*PWSTR*/void CharNextW();

// TODO: this type is limited to platform 'windows5.0'
/*PSTR*/void CharPrevA();

// TODO: this type is limited to platform 'windows5.0'
/*PWSTR*/void CharPrevW();

// TODO: this type is limited to platform 'windows5.0'
/*PSTR*/void CharNextExA();

// TODO: this type is limited to platform 'windows5.0'
/*PSTR*/void CharPrevExA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsCharAlphaA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsCharAlphaW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsCharAlphaNumericA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsCharAlphaNumericW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsCharUpperA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsCharUpperW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsCharLowerA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetInputState();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetQueueStatus();

// TODO: this type is limited to platform 'windows5.0'
/*usize*/void SetTimer();

// TODO: this type is limited to platform 'windows8.0'
/*usize*/void SetCoalescableTimer();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void KillTimer();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsWindowUnicode();

// TODO: this type is limited to platform 'windows5.0'
/*HACCEL*/void LoadAcceleratorsA();

// TODO: this type is limited to platform 'windows5.0'
/*HACCEL*/void LoadAcceleratorsW();

// TODO: this type is limited to platform 'windows5.0'
/*HACCEL*/void CreateAcceleratorTableA();

// TODO: this type is limited to platform 'windows5.0'
/*HACCEL*/void CreateAcceleratorTableW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DestroyAcceleratorTable();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void CopyAcceleratorTableA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void CopyAcceleratorTableW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void TranslateAcceleratorA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void TranslateAcceleratorW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetSystemMetrics();

// TODO: this type is limited to platform 'windows5.0'
/*HMENU*/void LoadMenuA();

// TODO: this type is limited to platform 'windows5.0'
/*HMENU*/void LoadMenuW();

// TODO: this type is limited to platform 'windows5.0'
/*HMENU*/void LoadMenuIndirectA();

// TODO: this type is limited to platform 'windows5.0'
/*HMENU*/void LoadMenuIndirectW();

// TODO: this type is limited to platform 'windows5.0'
/*HMENU*/void GetMenu();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetMenu();

/*BOOL*/void ChangeMenuA();

/*BOOL*/void ChangeMenuW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void HiliteMenuItem();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetMenuStringA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetMenuStringW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetMenuState();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DrawMenuBar();

// TODO: this type is limited to platform 'windows5.0'
/*HMENU*/void GetSystemMenu();

// TODO: this type is limited to platform 'windows5.0'
/*HMENU*/void CreateMenu();

// TODO: this type is limited to platform 'windows5.0'
/*HMENU*/void CreatePopupMenu();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DestroyMenu();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void CheckMenuItem();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnableMenuItem();

// TODO: this type is limited to platform 'windows5.0'
/*HMENU*/void GetSubMenu();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetMenuItemID();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetMenuItemCount();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void InsertMenuA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void InsertMenuW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void AppendMenuA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void AppendMenuW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ModifyMenuA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ModifyMenuW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void RemoveMenu();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DeleteMenu();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetMenuItemBitmaps();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetMenuCheckMarkDimensions();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void TrackPopupMenu();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void TrackPopupMenuEx();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void CalculatePopupWindowPosition();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetMenuInfo();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetMenuInfo();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EndMenu();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void InsertMenuItemA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void InsertMenuItemW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetMenuItemInfoA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetMenuItemInfoW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetMenuItemInfoA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetMenuItemInfoW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetMenuDefaultItem();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetMenuDefaultItem();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetMenuItemRect();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void MenuItemFromPoint();

/*u32*/void DragObject();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DrawIcon();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void GetForegroundWindow();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void SwitchToThisWindow();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetForegroundWindow();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void AllowSetForegroundWindow();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void LockSetForegroundWindow();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetPropA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetPropW();

// TODO: this type is limited to platform 'windows5.0'
/*HANDLE*/void GetPropA();

// TODO: this type is limited to platform 'windows5.0'
/*HANDLE*/void GetPropW();

// TODO: this type is limited to platform 'windows5.0'
/*HANDLE*/void RemovePropA();

// TODO: this type is limited to platform 'windows5.0'
/*HANDLE*/void RemovePropW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void EnumPropsExA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void EnumPropsExW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void EnumPropsA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void EnumPropsW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetWindowTextA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetWindowTextW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetWindowTextA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetWindowTextW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetWindowTextLengthA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetWindowTextLengthW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetClientRect();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetWindowRect();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void AdjustWindowRect();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void AdjustWindowRectEx();

// TODO: this type is limited to platform 'windows5.0'
/*MESSAGEBOX_RESULT*/void MessageBoxA();

// TODO: this type is limited to platform 'windows5.0'
/*MESSAGEBOX_RESULT*/void MessageBoxW();

// TODO: this type is limited to platform 'windows5.0'
/*MESSAGEBOX_RESULT*/void MessageBoxExA();

// TODO: this type is limited to platform 'windows5.0'
/*MESSAGEBOX_RESULT*/void MessageBoxExW();

// TODO: this type is limited to platform 'windows5.0'
/*MESSAGEBOX_RESULT*/void MessageBoxIndirectA();

// TODO: this type is limited to platform 'windows5.0'
/*MESSAGEBOX_RESULT*/void MessageBoxIndirectW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void ShowCursor();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetCursorPos();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void SetPhysicalCursorPos();

// TODO: this type is limited to platform 'windows5.0'
/*HCURSOR*/void SetCursor();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCursorPos();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetPhysicalCursorPos();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetClipCursor();

// TODO: this type is limited to platform 'windows5.0'
/*HCURSOR*/void GetCursor();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void CreateCaret();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetCaretBlinkTime();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetCaretBlinkTime();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DestroyCaret();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void HideCaret();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ShowCaret();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetCaretPos();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCaretPos();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void LogicalToPhysicalPoint();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void PhysicalToLogicalPoint();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void WindowFromPoint();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HWND*/void WindowFromPhysicalPoint();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void ChildWindowFromPoint();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ClipCursor();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void ChildWindowFromPointEx();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetSysColor();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetSysColors();

/*u16*/void GetWindowWord();

/*u16*/void SetWindowWord();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetWindowLongA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetWindowLongW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SetWindowLongA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SetWindowLongW();

// TODO: this type is limited to platform 'windows5.0'
/*u16*/void GetClassWord();

// TODO: this type is limited to platform 'windows5.0'
/*u16*/void SetClassWord();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetClassLongA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetClassLongW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SetClassLongA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SetClassLongW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetProcessDefaultLayout();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetProcessDefaultLayout();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void GetDesktopWindow();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void GetParent();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void SetParent();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumChildWindows();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void FindWindowA();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void FindWindowW();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void FindWindowExA();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void FindWindowExW();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void GetShellWindow();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void RegisterShellHookWindow();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DeregisterShellHookWindow();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumWindows();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumThreadWindows();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetClassNameA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetClassNameW();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void GetTopWindow();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetWindowThreadProcessId();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void IsGUIThread();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void GetLastActivePopup();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void GetWindow();

/*HHOOK*/void SetWindowsHookA();

/*HHOOK*/void SetWindowsHookW();

/*BOOL*/void UnhookWindowsHook();

// TODO: this type is limited to platform 'windows5.0'
/*HHOOK*/void SetWindowsHookExA();

// TODO: this type is limited to platform 'windows5.0'
/*HHOOK*/void SetWindowsHookExW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void UnhookWindowsHookEx();

// TODO: this type is limited to platform 'windows5.0'
/*LRESULT*/void CallNextHookEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void CheckMenuRadioItem();

// TODO: this type is limited to platform 'windows5.0'
/*HCURSOR*/void LoadCursorA();

// TODO: this type is limited to platform 'windows5.0'
/*HCURSOR*/void LoadCursorW();

// TODO: this type is limited to platform 'windows5.0'
/*HCURSOR*/void LoadCursorFromFileA();

// TODO: this type is limited to platform 'windows5.0'
/*HCURSOR*/void LoadCursorFromFileW();

// TODO: this type is limited to platform 'windows5.0'
/*HCURSOR*/void CreateCursor();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DestroyCursor();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetSystemCursor();

// TODO: this type is limited to platform 'windows5.0'
/*HICON*/void LoadIconA();

// TODO: this type is limited to platform 'windows5.0'
/*HICON*/void LoadIconW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void PrivateExtractIconsA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void PrivateExtractIconsW();

// TODO: this type is limited to platform 'windows5.0'
/*HICON*/void CreateIcon();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DestroyIcon();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void LookupIconIdFromDirectory();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void LookupIconIdFromDirectoryEx();

// TODO: this type is limited to platform 'windows5.0'
/*HICON*/void CreateIconFromResource();

// TODO: this type is limited to platform 'windows5.0'
/*HICON*/void CreateIconFromResourceEx();

// TODO: this type is limited to platform 'windows5.0'
/*HANDLE*/void LoadImageA();

// TODO: this type is limited to platform 'windows5.0'
/*HANDLE*/void LoadImageW();

// TODO: this type is limited to platform 'windows5.0'
/*HANDLE*/void CopyImage();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DrawIconEx();

// TODO: this type is limited to platform 'windows5.0'
/*HICON*/void CreateIconIndirect();

// TODO: this type is limited to platform 'windows5.0'
/*HICON*/void CopyIcon();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetIconInfo();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetIconInfoExA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetIconInfoExW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsDialogMessageA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsDialogMessageW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void MapDialogRect();

// TODO: this type is limited to platform 'windows5.0'
/*LRESULT*/void DefFrameProcA();

// TODO: this type is limited to platform 'windows5.0'
/*LRESULT*/void DefFrameProcW();

// TODO: this type is limited to platform 'windows5.0'
/*LRESULT*/void DefMDIChildProcA();

// TODO: this type is limited to platform 'windows5.0'
/*LRESULT*/void DefMDIChildProcW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void TranslateMDISysAccel();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void ArrangeIconicWindows();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void CreateMDIWindowA();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void CreateMDIWindowW();

// TODO: this type is limited to platform 'windows5.0'
/*u16*/void TileWindows();

// TODO: this type is limited to platform 'windows5.0'
/*u16*/void CascadeWindows();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SystemParametersInfoA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SystemParametersInfoW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void SoundSentry();

/*void*/void SetDebugErrorLevel();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void InternalGetWindowText();

/*BOOL*/void CancelShutdown();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetGUIThreadInfo();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void SetProcessDPIAware();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void IsProcessDPIAware();

/*BOOL*/void InheritWindowMonitor();

/*DPI_AWARENESS_CONTEXT*/void GetDpiAwarenessContextForProcess();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetWindowModuleFileNameA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetWindowModuleFileNameW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCursorInfo();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetWindowInfo();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetTitleBarInfo();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetMenuBarInfo();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void GetAncestor();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void RealChildWindowFromPoint();

/*u32*/void RealGetWindowClassA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RealGetWindowClassW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetAltTabInfoA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetAltTabInfoW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void ChangeWindowMessageFilter();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void ChangeWindowMessageFilterEx();

// TODO: this type is limited to platform 'windows10.0.10240'
/*HRESULT*/void CreateResourceIndexer();

// TODO: this type is limited to platform 'windows10.0.10240'
/*void*/void DestroyResourceIndexer();

// TODO: this type is limited to platform 'windows10.0.10240'
/*HRESULT*/void IndexFilePath();

// TODO: this type is limited to platform 'windows10.0.10240'
/*void*/void DestroyIndexedResults();

/*HRESULT*/void MrmCreateResourceIndexer();

/*HRESULT*/void MrmCreateResourceIndexerFromPreviousSchemaFile();

/*HRESULT*/void MrmCreateResourceIndexerFromPreviousPriFile();

/*HRESULT*/void MrmCreateResourceIndexerFromPreviousSchemaData();

/*HRESULT*/void MrmCreateResourceIndexerFromPreviousPriData();

/*HRESULT*/void MrmIndexString();

/*HRESULT*/void MrmIndexEmbeddedData();

/*HRESULT*/void MrmIndexFile();

/*HRESULT*/void MrmIndexFileAutoQualifiers();

/*HRESULT*/void MrmIndexResourceContainerAutoQualifiers();

/*HRESULT*/void MrmCreateResourceFile();

/*HRESULT*/void MrmCreateResourceFileInMemory();

/*HRESULT*/void MrmPeekResourceIndexerMessages();

/*HRESULT*/void MrmDestroyIndexerAndMessages();

/*HRESULT*/void MrmFreeMemory();

/*HRESULT*/void MrmDumpPriFile();

/*HRESULT*/void MrmDumpPriFileInMemory();

/*HRESULT*/void MrmDumpPriDataInMemory();

/*HRESULT*/void MrmCreateConfig();

/*HRESULT*/void MrmCreateConfigInMemory();

