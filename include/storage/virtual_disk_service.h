// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (78)
//--------------------------------------------------------------------------------
#define VDS_NF_VOLUME_ARRIVE (UINT)4
#define VDS_NF_VOLUME_DEPART (UINT)5
#define VDS_NF_VOLUME_MODIFY (UINT)6
#define VDS_NF_VOLUME_REBUILDING_PROGRESS (UINT)7
#define VDS_NF_PARTITION_ARRIVE (UINT)11
#define VDS_NF_PARTITION_DEPART (UINT)12
#define VDS_NF_PARTITION_MODIFY (UINT)13
#define VDS_NF_SUB_SYSTEM_ARRIVE (UINT)101
#define VDS_NF_SUB_SYSTEM_DEPART (UINT)102
#define VDS_NF_PORTAL_ARRIVE (UINT)123
#define VDS_NF_PORTAL_DEPART (UINT)124
#define VDS_NF_PORTAL_MODIFY (UINT)125
#define VDS_NF_TARGET_ARRIVE (UINT)126
#define VDS_NF_TARGET_DEPART (UINT)127
#define VDS_NF_TARGET_MODIFY (UINT)128
#define VDS_NF_PORTAL_GROUP_ARRIVE (UINT)129
#define VDS_NF_PORTAL_GROUP_DEPART (UINT)130
#define VDS_NF_PORTAL_GROUP_MODIFY (UINT)131
#define VDS_NF_SUB_SYSTEM_MODIFY (UINT)151
#define VDS_NF_DRIVE_LETTER_FREE (UINT)201
#define VDS_NF_DRIVE_LETTER_ASSIGN (UINT)202
#define VDS_NF_MOUNT_POINTS_CHANGE (UINT)205
#define VDS_NF_FILE_SYSTEM_SHRINKING_PROGRESS (UINT)206
#define VDS_NF_SERVICE_OUT_OF_SYNC (UINT)301
#define GPT_PARTITION_NAME_LENGTH (UINT)36
#define VDS_HINT_FASTCRASHRECOVERYREQUIRED (INT)1
#define VDS_HINT_MOSTLYREADS (INT)2
#define VDS_HINT_OPTIMIZEFORSEQUENTIALREADS (INT)4
#define VDS_HINT_OPTIMIZEFORSEQUENTIALWRITES (INT)8
#define VDS_HINT_READBACKVERIFYENABLED (INT)16
#define VDS_HINT_REMAPENABLED (INT)32
#define VDS_HINT_WRITETHROUGHCACHINGENABLED (INT)64
#define VDS_HINT_HARDWARECHECKSUMENABLED (INT)128
#define VDS_HINT_ISYANKABLE (INT)256
#define VDS_HINT_ALLOCATEHOTSPARE (INT)512
#define VDS_HINT_BUSTYPE (INT)1024
#define VDS_HINT_USEMIRROREDCACHE (INT)2048
#define VDS_HINT_READCACHINGENABLED (INT)4096
#define VDS_HINT_WRITECACHINGENABLED (INT)8192
#define VDS_HINT_MEDIASCANENABLED (INT)16384
#define VDS_HINT_CONSISTENCYCHECKENABLED (INT)32768
#define VDS_REBUILD_PRIORITY_MIN (UINT)0
#define VDS_REBUILD_PRIORITY_MAX (UINT)16
#define VDS_POOL_ATTRIB_RAIDTYPE (INT)1
#define VDS_POOL_ATTRIB_BUSTYPE (INT)2
#define VDS_POOL_ATTRIB_ALLOW_SPINDOWN (INT)4
#define VDS_POOL_ATTRIB_THIN_PROVISION (INT)8
#define VDS_POOL_ATTRIB_NO_SINGLE_POF (INT)16
#define VDS_POOL_ATTRIB_DATA_RDNCY_MAX (INT)32
#define VDS_POOL_ATTRIB_DATA_RDNCY_MIN (INT)64
#define VDS_POOL_ATTRIB_DATA_RDNCY_DEF (INT)128
#define VDS_POOL_ATTRIB_PKG_RDNCY_MAX (INT)256
#define VDS_POOL_ATTRIB_PKG_RDNCY_MIN (INT)512
#define VDS_POOL_ATTRIB_PKG_RDNCY_DEF (INT)1024
#define VDS_POOL_ATTRIB_STRIPE_SIZE (INT)2048
#define VDS_POOL_ATTRIB_STRIPE_SIZE_MAX (INT)4096
#define VDS_POOL_ATTRIB_STRIPE_SIZE_MIN (INT)8192
#define VDS_POOL_ATTRIB_STRIPE_SIZE_DEF (INT)16384
#define VDS_POOL_ATTRIB_NUM_CLMNS (INT)32768
#define VDS_POOL_ATTRIB_NUM_CLMNS_MAX (INT)65536
#define VDS_POOL_ATTRIB_NUM_CLMNS_MIN (INT)131072
#define VDS_POOL_ATTRIB_NUM_CLMNS_DEF (INT)262144
#define VDS_POOL_ATTRIB_DATA_AVL_HINT (INT)524288
#define VDS_POOL_ATTRIB_ACCS_RNDM_HINT (INT)1048576
#define VDS_POOL_ATTRIB_ACCS_DIR_HINT (INT)2097152
#define VDS_POOL_ATTRIB_ACCS_SIZE_HINT (INT)4194304
#define VDS_POOL_ATTRIB_ACCS_LTNCY_HINT (INT)8388608
#define VDS_POOL_ATTRIB_ACCS_BDW_WT_HINT (INT)16777216
#define VDS_POOL_ATTRIB_STOR_COST_HINT (INT)33554432
#define VDS_POOL_ATTRIB_STOR_EFFCY_HINT (INT)67108864
#define VDS_POOL_ATTRIB_CUSTOM_ATTRIB (INT)134217728
#define VDS_ATTACH_VIRTUAL_DISK_FLAG_USE_FILE_ACL (UINT)1
#define CLSID_VdsLoader GUID { "9c38ed61-d565-4728-aeee-c80952f0ecde" }
#define CLSID_VdsService GUID { "7d1933cb-86f6-4a98-8628-01be94c9a575" }
#define MAX_FS_NAME_SIZE (UINT)8
#define MAX_FS_FORMAT_SUPPORT_NAME_SIZE (UINT)32
#define MAX_FS_ALLOWED_CLUSTER_SIZES_SIZE (UINT)32
#define VER_VDS_LUN_INFORMATION (UINT)1

//--------------------------------------------------------------------------------
// Section: Types (139)
//--------------------------------------------------------------------------------
typedef enum {
    VDS_NF_PACK_ARRIVE = 1,
    VDS_NF_PACK_DEPART = 2,
    VDS_NF_PACK_MODIFY = 3,
} VDS_NF_PACK;

typedef enum {
    VDS_NF_FILE_SYSTEM_MODIFY = 203,
    VDS_NF_FILE_SYSTEM_FORMAT_PROGRESS = 204,
} VDS_NF_FILE_SYSTEM;

typedef enum {
    VDS_NF_CONTROLLER_ARRIVE = 103,
    VDS_NF_CONTROLLER_DEPART = 104,
    VDS_NF_CONTROLLER_MODIFY = 350,
    VDS_NF_CONTROLLER_REMOVED = 351,
} VDS_NF_CONTROLLER;

typedef enum {
    VDS_NF_DRIVE_ARRIVE = 105,
    VDS_NF_DRIVE_DEPART = 106,
    VDS_NF_DRIVE_MODIFY = 107,
    VDS_NF_DRIVE_REMOVED = 354,
} VDS_NF_DRIVE;

typedef enum {
    VDS_NF_PORT_ARRIVE = 121,
    VDS_NF_PORT_DEPART = 122,
    VDS_NF_PORT_MODIFY = 352,
    VDS_NF_PORT_REMOVED = 353,
} VDS_NF_PORT;

typedef enum {
    VDS_NF_LUN_ARRIVE = 108,
    VDS_NF_LUN_DEPART = 109,
    VDS_NF_LUN_MODIFY = 110,
} VDS_NF_LUN;

typedef enum {
    VDS_NF_DISK_ARRIVE = 8,
    VDS_NF_DISK_DEPART = 9,
    VDS_NF_DISK_MODIFY = 10,
} VDS_NF_DISK;

typedef enum {
    VDSStorageIdCodeSetReserved = 0,
    VDSStorageIdCodeSetBinary = 1,
    VDSStorageIdCodeSetAscii = 2,
    VDSStorageIdCodeSetUtf8 = 3,
} VDS_STORAGE_IDENTIFIER_CODE_SET;

typedef enum {
    VDSStorageIdTypeVendorSpecific = 0,
    VDSStorageIdTypeVendorId = 1,
    VDSStorageIdTypeEUI64 = 2,
    VDSStorageIdTypeFCPHName = 3,
    VDSStorageIdTypePortRelative = 4,
    VDSStorageIdTypeTargetPortGroup = 5,
    VDSStorageIdTypeLogicalUnitGroup = 6,
    VDSStorageIdTypeMD5LogicalUnitIdentifier = 7,
    VDSStorageIdTypeScsiNameString = 8,
} VDS_STORAGE_IDENTIFIER_TYPE;

typedef enum {
    VDSBusTypeUnknown = 0,
    VDSBusTypeScsi = 1,
    VDSBusTypeAtapi = 2,
    VDSBusTypeAta = 3,
    VDSBusType1394 = 4,
    VDSBusTypeSsa = 5,
    VDSBusTypeFibre = 6,
    VDSBusTypeUsb = 7,
    VDSBusTypeRAID = 8,
    VDSBusTypeiScsi = 9,
    VDSBusTypeSas = 10,
    VDSBusTypeSata = 11,
    VDSBusTypeSd = 12,
    VDSBusTypeMmc = 13,
    VDSBusTypeMax = 14,
    VDSBusTypeVirtual = 14,
    VDSBusTypeFileBackedVirtual = 15,
    VDSBusTypeSpaces = 16,
    VDSBusTypeNVMe = 17,
    VDSBusTypeScm = 18,
    VDSBusTypeUfs = 19,
    VDSBusTypeMaxReserved = 127,
} VDS_STORAGE_BUS_TYPE;

typedef int VDS_STORAGE_IDENTIFIER;

typedef int VDS_STORAGE_DEVICE_ID_DESCRIPTOR;

typedef enum {
    VDS_IA_UNKNOWN = 0,
    VDS_IA_FCFS = 1,
    VDS_IA_FCPH = 2,
    VDS_IA_FCPH3 = 3,
    VDS_IA_MAC = 4,
    VDS_IA_SCSI = 5,
} VDS_INTERCONNECT_ADDRESS_TYPE;

typedef int VDS_INTERCONNECT;

typedef int VDS_LUN_INFORMATION;

typedef enum {
    VDS_OT_UNKNOWN = 0,
    VDS_OT_PROVIDER = 1,
    VDS_OT_PACK = 10,
    VDS_OT_VOLUME = 11,
    VDS_OT_VOLUME_PLEX = 12,
    VDS_OT_DISK = 13,
    VDS_OT_SUB_SYSTEM = 30,
    VDS_OT_CONTROLLER = 31,
    VDS_OT_DRIVE = 32,
    VDS_OT_LUN = 33,
    VDS_OT_LUN_PLEX = 34,
    VDS_OT_PORT = 35,
    VDS_OT_PORTAL = 36,
    VDS_OT_TARGET = 37,
    VDS_OT_PORTAL_GROUP = 38,
    VDS_OT_STORAGE_POOL = 39,
    VDS_OT_HBAPORT = 90,
    VDS_OT_INIT_ADAPTER = 91,
    VDS_OT_INIT_PORTAL = 92,
    VDS_OT_ASYNC = 100,
    VDS_OT_ENUM = 101,
    VDS_OT_VDISK = 200,
    VDS_OT_OPEN_VDISK = 201,
} VDS_OBJECT_TYPE;

typedef enum {
    VDS_PT_UNKNOWN = 0,
    VDS_PT_SOFTWARE = 1,
    VDS_PT_HARDWARE = 2,
    VDS_PT_VIRTUALDISK = 3,
    VDS_PT_MAX = 4,
} VDS_PROVIDER_TYPE;

typedef enum {
    VDS_PF_DYNAMIC = 1,
    VDS_PF_INTERNAL_HARDWARE_PROVIDER = 2,
    VDS_PF_ONE_DISK_ONLY_PER_PACK = 4,
    VDS_PF_ONE_PACK_ONLINE_ONLY = 8,
    VDS_PF_VOLUME_SPACE_MUST_BE_CONTIGUOUS = 16,
    VDS_PF_SUPPORT_DYNAMIC = -2147483648,
    VDS_PF_SUPPORT_FAULT_TOLERANT = 1073741824,
    VDS_PF_SUPPORT_DYNAMIC_1394 = 536870912,
    VDS_PF_SUPPORT_MIRROR = 32,
    VDS_PF_SUPPORT_RAID5 = 64,
} VDS_PROVIDER_FLAG;

typedef enum {
    VDS_RA_UNKNOWN = 0,
    VDS_RA_REFRESH = 1,
    VDS_RA_RESTART = 2,
} VDS_RECOVER_ACTION;

typedef enum {
    VDS_NTT_UNKNOWN = 0,
    VDS_NTT_PACK = 10,
    VDS_NTT_VOLUME = 11,
    VDS_NTT_DISK = 13,
    VDS_NTT_PARTITION = 60,
    VDS_NTT_DRIVE_LETTER = 61,
    VDS_NTT_FILE_SYSTEM = 62,
    VDS_NTT_MOUNT_POINT = 63,
    VDS_NTT_SUB_SYSTEM = 30,
    VDS_NTT_CONTROLLER = 31,
    VDS_NTT_DRIVE = 32,
    VDS_NTT_LUN = 33,
    VDS_NTT_PORT = 35,
    VDS_NTT_PORTAL = 36,
    VDS_NTT_TARGET = 37,
    VDS_NTT_PORTAL_GROUP = 38,
    VDS_NTT_SERVICE = 200,
} VDS_NOTIFICATION_TARGET_TYPE;

typedef int VDS_PACK_NOTIFICATION;

typedef int VDS_DISK_NOTIFICATION;

typedef int VDS_VOLUME_NOTIFICATION;

typedef int VDS_PARTITION_NOTIFICATION;

typedef int VDS_SERVICE_NOTIFICATION;

typedef int VDS_DRIVE_LETTER_NOTIFICATION;

typedef int VDS_FILE_SYSTEM_NOTIFICATION;

typedef int VDS_MOUNT_POINT_NOTIFICATION;

typedef int VDS_SUB_SYSTEM_NOTIFICATION;

typedef int VDS_CONTROLLER_NOTIFICATION;

typedef int VDS_DRIVE_NOTIFICATION;

typedef int VDS_LUN_NOTIFICATION;

typedef int VDS_PORT_NOTIFICATION;

typedef int VDS_PORTAL_NOTIFICATION;

typedef int VDS_TARGET_NOTIFICATION;

typedef int VDS_PORTAL_GROUP_NOTIFICATION;

typedef int VDS_NOTIFICATION;

typedef enum {
    VDS_ASYNCOUT_UNKNOWN = 0,
    VDS_ASYNCOUT_CREATEVOLUME = 1,
    VDS_ASYNCOUT_EXTENDVOLUME = 2,
    VDS_ASYNCOUT_SHRINKVOLUME = 3,
    VDS_ASYNCOUT_ADDVOLUMEPLEX = 4,
    VDS_ASYNCOUT_BREAKVOLUMEPLEX = 5,
    VDS_ASYNCOUT_REMOVEVOLUMEPLEX = 6,
    VDS_ASYNCOUT_REPAIRVOLUMEPLEX = 7,
    VDS_ASYNCOUT_RECOVERPACK = 8,
    VDS_ASYNCOUT_REPLACEDISK = 9,
    VDS_ASYNCOUT_CREATEPARTITION = 10,
    VDS_ASYNCOUT_CLEAN = 11,
    VDS_ASYNCOUT_CREATELUN = 50,
    VDS_ASYNCOUT_ADDLUNPLEX = 52,
    VDS_ASYNCOUT_REMOVELUNPLEX = 53,
    VDS_ASYNCOUT_EXTENDLUN = 54,
    VDS_ASYNCOUT_SHRINKLUN = 55,
    VDS_ASYNCOUT_RECOVERLUN = 56,
    VDS_ASYNCOUT_LOGINTOTARGET = 60,
    VDS_ASYNCOUT_LOGOUTFROMTARGET = 61,
    VDS_ASYNCOUT_CREATETARGET = 62,
    VDS_ASYNCOUT_CREATEPORTALGROUP = 63,
    VDS_ASYNCOUT_DELETETARGET = 64,
    VDS_ASYNCOUT_ADDPORTAL = 65,
    VDS_ASYNCOUT_REMOVEPORTAL = 66,
    VDS_ASYNCOUT_DELETEPORTALGROUP = 67,
    VDS_ASYNCOUT_FORMAT = 101,
    VDS_ASYNCOUT_CREATE_VDISK = 200,
    VDS_ASYNCOUT_ATTACH_VDISK = 201,
    VDS_ASYNCOUT_COMPACT_VDISK = 202,
    VDS_ASYNCOUT_MERGE_VDISK = 203,
    VDS_ASYNCOUT_EXPAND_VDISK = 204,
} VDS_ASYNC_OUTPUT_TYPE;

typedef int VDS_ASYNC_OUTPUT;

typedef enum {
    VDS_IPT_TEXT = 0,
    VDS_IPT_IPV4 = 1,
    VDS_IPT_IPV6 = 2,
    VDS_IPT_EMPTY = 3,
} VDS_IPADDRESS_TYPE;

typedef enum {
    VDS_H_UNKNOWN = 0,
    VDS_H_HEALTHY = 1,
    VDS_H_REBUILDING = 2,
    VDS_H_STALE = 3,
    VDS_H_FAILING = 4,
    VDS_H_FAILING_REDUNDANCY = 5,
    VDS_H_FAILED_REDUNDANCY = 6,
    VDS_H_FAILED_REDUNDANCY_FAILING = 7,
    VDS_H_FAILED = 8,
    VDS_H_REPLACED = 9,
    VDS_H_PENDING_FAILURE = 10,
    VDS_H_DEGRADED = 11,
} VDS_HEALTH;

typedef enum {
    VDS_TS_UNKNOWN = 0,
    VDS_TS_STABLE = 1,
    VDS_TS_EXTENDING = 2,
    VDS_TS_SHRINKING = 3,
    VDS_TS_RECONFIGING = 4,
    VDS_TS_RESTRIPING = 5,
} VDS_TRANSITION_STATE;

typedef enum {
    VDS_FST_UNKNOWN = 0,
    VDS_FST_RAW = 1,
    VDS_FST_FAT = 2,
    VDS_FST_FAT32 = 3,
    VDS_FST_NTFS = 4,
    VDS_FST_CDFS = 5,
    VDS_FST_UDF = 6,
    VDS_FST_EXFAT = 7,
    VDS_FST_CSVFS = 8,
    VDS_FST_REFS = 9,
} VDS_FILE_SYSTEM_TYPE;

typedef enum {
    VDS_HPT_UNKNOWN = 1,
    VDS_HPT_OTHER = 2,
    VDS_HPT_NOTPRESENT = 3,
    VDS_HPT_NPORT = 5,
    VDS_HPT_NLPORT = 6,
    VDS_HPT_FLPORT = 7,
    VDS_HPT_FPORT = 8,
    VDS_HPT_EPORT = 9,
    VDS_HPT_GPORT = 10,
    VDS_HPT_LPORT = 20,
    VDS_HPT_PTP = 21,
} VDS_HBAPORT_TYPE;

typedef enum {
    VDS_HPS_UNKNOWN = 1,
    VDS_HPS_ONLINE = 2,
    VDS_HPS_OFFLINE = 3,
    VDS_HPS_BYPASSED = 4,
    VDS_HPS_DIAGNOSTICS = 5,
    VDS_HPS_LINKDOWN = 6,
    VDS_HPS_ERROR = 7,
    VDS_HPS_LOOPBACK = 8,
} VDS_HBAPORT_STATUS;

typedef enum {
    VDS_HSF_UNKNOWN = 0,
    VDS_HSF_1GBIT = 1,
    VDS_HSF_2GBIT = 2,
    VDS_HSF_10GBIT = 4,
    VDS_HSF_4GBIT = 8,
    VDS_HSF_NOT_NEGOTIATED = 32768,
} VDS_HBAPORT_SPEED_FLAG;

typedef enum {
    VDS_MPS_UNKNOWN = 0,
    VDS_MPS_ONLINE = 1,
    VDS_MPS_FAILED = 5,
    VDS_MPS_STANDBY = 7,
} VDS_PATH_STATUS;

typedef enum {
    VDS_LBP_UNKNOWN = 0,
    VDS_LBP_FAILOVER = 1,
    VDS_LBP_ROUND_ROBIN = 2,
    VDS_LBP_ROUND_ROBIN_WITH_SUBSET = 3,
    VDS_LBP_DYN_LEAST_QUEUE_DEPTH = 4,
    VDS_LBP_WEIGHTED_PATHS = 5,
    VDS_LBP_LEAST_BLOCKS = 6,
    VDS_LBP_VENDOR_SPECIFIC = 7,
} VDS_LOADBALANCE_POLICY_ENUM;

typedef enum {
    VDS_LBF_FAILOVER = 1,
    VDS_LBF_ROUND_ROBIN = 2,
    VDS_LBF_ROUND_ROBIN_WITH_SUBSET = 4,
    VDS_LBF_DYN_LEAST_QUEUE_DEPTH = 8,
    VDS_LBF_WEIGHTED_PATHS = 16,
    VDS_LBF_LEAST_BLOCKS = 32,
    VDS_LBF_VENDOR_SPECIFIC = 64,
} VDS_PROVIDER_LBSUPPORT_FLAG;

typedef enum {
    VDS_VSF_1_0 = 1,
    VDS_VSF_1_1 = 2,
    VDS_VSF_2_0 = 4,
    VDS_VSF_2_1 = 8,
    VDS_VSF_3_0 = 16,
} VDS_VERSION_SUPPORT_FLAG;

typedef enum {
    VDS_HWT_UNKNOWN = 0,
    VDS_HWT_PCI_RAID = 1,
    VDS_HWT_FIBRE_CHANNEL = 2,
    VDS_HWT_ISCSI = 3,
    VDS_HWT_SAS = 4,
    VDS_HWT_HYBRID = 5,
} VDS_HWPROVIDER_TYPE;

typedef enum {
    VDS_ILT_MANUAL = 0,
    VDS_ILT_PERSISTENT = 1,
    VDS_ILT_BOOT = 2,
} VDS_ISCSI_LOGIN_TYPE;

typedef enum {
    VDS_IAT_NONE = 0,
    VDS_IAT_CHAP = 1,
    VDS_IAT_MUTUAL_CHAP = 2,
} VDS_ISCSI_AUTH_TYPE;

typedef enum {
    VDS_IIF_VALID = 1,
    VDS_IIF_IKE = 2,
    VDS_IIF_MAIN_MODE = 4,
    VDS_IIF_AGGRESSIVE_MODE = 8,
    VDS_IIF_PFS_ENABLE = 16,
    VDS_IIF_TRANSPORT_MODE_PREFERRED = 32,
    VDS_IIF_TUNNEL_MODE_PREFERRED = 64,
} VDS_ISCSI_IPSEC_FLAG;

typedef enum {
    VDS_ILF_REQUIRE_IPSEC = 1,
    VDS_ILF_MULTIPATH_ENABLED = 2,
} VDS_ISCSI_LOGIN_FLAG;

typedef int VDS_PATH_ID;

typedef int VDS_WWN;

typedef int VDS_IPADDRESS;

typedef int VDS_ISCSI_IPSEC_KEY;

typedef int VDS_ISCSI_SHARED_SECRET;

typedef int VDS_HBAPORT_PROP;

typedef int VDS_ISCSI_INITIATOR_ADAPTER_PROP;

typedef int VDS_ISCSI_INITIATOR_PORTAL_PROP;

typedef int VDS_PROVIDER_PROP;

typedef int VDS_PATH_INFO;

typedef int VDS_PATH_POLICY;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IEnumVdsObject;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsAsync;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsAdviseSink;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsProvider;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsProviderSupport;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsProviderPrivate;

typedef enum {
    VDS_SSS_UNKNOWN = 0,
    VDS_SSS_ONLINE = 1,
    VDS_SSS_NOT_READY = 2,
    VDS_SSS_OFFLINE = 4,
    VDS_SSS_FAILED = 5,
    VDS_SSS_PARTIALLY_MANAGED = 9,
} VDS_SUB_SYSTEM_STATUS;

typedef enum {
    VDS_SF_LUN_MASKING_CAPABLE = 1,
    VDS_SF_LUN_PLEXING_CAPABLE = 2,
    VDS_SF_LUN_REMAPPING_CAPABLE = 4,
    VDS_SF_DRIVE_EXTENT_CAPABLE = 8,
    VDS_SF_HARDWARE_CHECKSUM_CAPABLE = 16,
    VDS_SF_RADIUS_CAPABLE = 32,
    VDS_SF_READ_BACK_VERIFY_CAPABLE = 64,
    VDS_SF_WRITE_THROUGH_CACHING_CAPABLE = 128,
    VDS_SF_SUPPORTS_FAULT_TOLERANT_LUNS = 512,
    VDS_SF_SUPPORTS_NON_FAULT_TOLERANT_LUNS = 1024,
    VDS_SF_SUPPORTS_SIMPLE_LUNS = 2048,
    VDS_SF_SUPPORTS_SPAN_LUNS = 4096,
    VDS_SF_SUPPORTS_STRIPE_LUNS = 8192,
    VDS_SF_SUPPORTS_MIRROR_LUNS = 16384,
    VDS_SF_SUPPORTS_PARITY_LUNS = 32768,
    VDS_SF_SUPPORTS_AUTH_CHAP = 65536,
    VDS_SF_SUPPORTS_AUTH_MUTUAL_CHAP = 131072,
    VDS_SF_SUPPORTS_SIMPLE_TARGET_CONFIG = 262144,
    VDS_SF_SUPPORTS_LUN_NUMBER = 524288,
    VDS_SF_SUPPORTS_MIRRORED_CACHE = 1048576,
    VDS_SF_READ_CACHING_CAPABLE = 2097152,
    VDS_SF_WRITE_CACHING_CAPABLE = 4194304,
    VDS_SF_MEDIA_SCAN_CAPABLE = 8388608,
    VDS_SF_CONSISTENCY_CHECK_CAPABLE = 16777216,
} VDS_SUB_SYSTEM_FLAG;

typedef enum {
    VDS_SF_SUPPORTS_RAID2_LUNS = 1,
    VDS_SF_SUPPORTS_RAID3_LUNS = 2,
    VDS_SF_SUPPORTS_RAID4_LUNS = 4,
    VDS_SF_SUPPORTS_RAID5_LUNS = 8,
    VDS_SF_SUPPORTS_RAID6_LUNS = 16,
    VDS_SF_SUPPORTS_RAID01_LUNS = 32,
    VDS_SF_SUPPORTS_RAID03_LUNS = 64,
    VDS_SF_SUPPORTS_RAID05_LUNS = 128,
    VDS_SF_SUPPORTS_RAID10_LUNS = 256,
    VDS_SF_SUPPORTS_RAID15_LUNS = 512,
    VDS_SF_SUPPORTS_RAID30_LUNS = 1024,
    VDS_SF_SUPPORTS_RAID50_LUNS = 2048,
    VDS_SF_SUPPORTS_RAID51_LUNS = 4096,
    VDS_SF_SUPPORTS_RAID53_LUNS = 8192,
    VDS_SF_SUPPORTS_RAID60_LUNS = 16384,
    VDS_SF_SUPPORTS_RAID61_LUNS = 32768,
} VDS_SUB_SYSTEM_SUPPORTED_RAID_TYPE_FLAG;

typedef enum {
    VDS_ITF_PCI_RAID = 1,
    VDS_ITF_FIBRE_CHANNEL = 2,
    VDS_ITF_ISCSI = 4,
    VDS_ITF_SAS = 8,
} VDS_INTERCONNECT_FLAG;

typedef enum {
    VDS_CS_UNKNOWN = 0,
    VDS_CS_ONLINE = 1,
    VDS_CS_NOT_READY = 2,
    VDS_CS_OFFLINE = 4,
    VDS_CS_FAILED = 5,
    VDS_CS_REMOVED = 8,
} VDS_CONTROLLER_STATUS;

typedef enum {
    VDS_PRS_UNKNOWN = 0,
    VDS_PRS_ONLINE = 1,
    VDS_PRS_NOT_READY = 2,
    VDS_PRS_OFFLINE = 4,
    VDS_PRS_FAILED = 5,
    VDS_PRS_REMOVED = 8,
} VDS_PORT_STATUS;

typedef enum {
    VDS_DRS_UNKNOWN = 0,
    VDS_DRS_ONLINE = 1,
    VDS_DRS_NOT_READY = 2,
    VDS_DRS_OFFLINE = 4,
    VDS_DRS_FAILED = 5,
    VDS_DRS_REMOVED = 8,
} VDS_DRIVE_STATUS;

typedef enum {
    VDS_DRF_HOTSPARE = 1,
    VDS_DRF_ASSIGNED = 2,
    VDS_DRF_UNASSIGNED = 4,
    VDS_DRF_HOTSPARE_IN_USE = 8,
    VDS_DRF_HOTSPARE_STANDBY = 16,
} VDS_DRIVE_FLAG;

typedef enum {
    VDS_LT_UNKNOWN = 0,
    VDS_LT_DEFAULT = 1,
    VDS_LT_FAULT_TOLERANT = 2,
    VDS_LT_NON_FAULT_TOLERANT = 3,
    VDS_LT_SIMPLE = 10,
    VDS_LT_SPAN = 11,
    VDS_LT_STRIPE = 12,
    VDS_LT_MIRROR = 13,
    VDS_LT_PARITY = 14,
    VDS_LT_RAID2 = 15,
    VDS_LT_RAID3 = 16,
    VDS_LT_RAID4 = 17,
    VDS_LT_RAID5 = 18,
    VDS_LT_RAID6 = 19,
    VDS_LT_RAID01 = 20,
    VDS_LT_RAID03 = 21,
    VDS_LT_RAID05 = 22,
    VDS_LT_RAID10 = 23,
    VDS_LT_RAID15 = 24,
    VDS_LT_RAID30 = 25,
    VDS_LT_RAID50 = 26,
    VDS_LT_RAID51 = 27,
    VDS_LT_RAID53 = 28,
    VDS_LT_RAID60 = 29,
    VDS_LT_RAID61 = 30,
} VDS_LUN_TYPE;

typedef enum {
    VDS_LS_UNKNOWN = 0,
    VDS_LS_ONLINE = 1,
    VDS_LS_NOT_READY = 2,
    VDS_LS_OFFLINE = 4,
    VDS_LS_FAILED = 5,
} VDS_LUN_STATUS;

typedef enum {
    VDS_LF_LBN_REMAP_ENABLED = 1,
    VDS_LF_READ_BACK_VERIFY_ENABLED = 2,
    VDS_LF_WRITE_THROUGH_CACHING_ENABLED = 4,
    VDS_LF_HARDWARE_CHECKSUM_ENABLED = 8,
    VDS_LF_READ_CACHE_ENABLED = 16,
    VDS_LF_WRITE_CACHE_ENABLED = 32,
    VDS_LF_MEDIA_SCAN_ENABLED = 64,
    VDS_LF_CONSISTENCY_CHECK_ENABLED = 128,
    VDS_LF_SNAPSHOT = 256,
} VDS_LUN_FLAG;

typedef enum {
    VDS_LPT_UNKNOWN = 0,
    VDS_LPT_SIMPLE = 10,
    VDS_LPT_SPAN = 11,
    VDS_LPT_STRIPE = 12,
    VDS_LPT_PARITY = 14,
    VDS_LPT_RAID2 = 15,
    VDS_LPT_RAID3 = 16,
    VDS_LPT_RAID4 = 17,
    VDS_LPT_RAID5 = 18,
    VDS_LPT_RAID6 = 19,
    VDS_LPT_RAID03 = 21,
    VDS_LPT_RAID05 = 22,
    VDS_LPT_RAID10 = 23,
    VDS_LPT_RAID15 = 24,
    VDS_LPT_RAID30 = 25,
    VDS_LPT_RAID50 = 26,
    VDS_LPT_RAID53 = 28,
    VDS_LPT_RAID60 = 29,
} VDS_LUN_PLEX_TYPE;

typedef enum {
    VDS_LPS_UNKNOWN = 0,
    VDS_LPS_ONLINE = 1,
    VDS_LPS_NOT_READY = 2,
    VDS_LPS_OFFLINE = 4,
    VDS_LPS_FAILED = 5,
} VDS_LUN_PLEX_STATUS;

typedef enum {
    VDS_LPF_LBN_REMAP_ENABLED = 1,
} VDS_LUN_PLEX_FLAG;

typedef enum {
    VDS_IPS_UNKNOWN = 0,
    VDS_IPS_ONLINE = 1,
    VDS_IPS_NOT_READY = 2,
    VDS_IPS_OFFLINE = 4,
    VDS_IPS_FAILED = 5,
} VDS_ISCSI_PORTAL_STATUS;

typedef enum {
    VDS_SPS_UNKNOWN = 0,
    VDS_SPS_ONLINE = 1,
    VDS_SPS_NOT_READY = 2,
    VDS_SPS_OFFLINE = 4,
} VDS_STORAGE_POOL_STATUS;

typedef enum {
    VDS_SPT_UNKNOWN = 0,
    VDS_SPT_PRIMORDIAL = 1,
    VDS_SPT_CONCRETE = 2,
} VDS_STORAGE_POOL_TYPE;

typedef enum {
    BlinkLight = 1,
    BeepAlarm = 2,
    SpinDown = 3,
    SpinUp = 4,
    Ping = 5,
} VDS_MAINTENANCE_OPERATION;

typedef int VDS_HINTS;

typedef int VDS_HINTS2;

typedef int VDS_SUB_SYSTEM_PROP;

typedef int VDS_SUB_SYSTEM_PROP2;

typedef int VDS_CONTROLLER_PROP;

typedef int VDS_DRIVE_PROP;

typedef int VDS_DRIVE_PROP2;

typedef int VDS_DRIVE_EXTENT;

typedef int VDS_LUN_PROP;

typedef int VDS_LUN_PLEX_PROP;

typedef int VDS_PORT_PROP;

typedef int VDS_ISCSI_PORTAL_PROP;

typedef int VDS_ISCSI_TARGET_PROP;

typedef int VDS_ISCSI_PORTALGROUP_PROP;

typedef enum {
    VDS_RT_UNKNOWN = 0,
    VDS_RT_RAID0 = 10,
    VDS_RT_RAID1 = 11,
    VDS_RT_RAID2 = 12,
    VDS_RT_RAID3 = 13,
    VDS_RT_RAID4 = 14,
    VDS_RT_RAID5 = 15,
    VDS_RT_RAID6 = 16,
    VDS_RT_RAID01 = 17,
    VDS_RT_RAID03 = 18,
    VDS_RT_RAID05 = 19,
    VDS_RT_RAID10 = 20,
    VDS_RT_RAID15 = 21,
    VDS_RT_RAID30 = 22,
    VDS_RT_RAID50 = 23,
    VDS_RT_RAID51 = 24,
    VDS_RT_RAID53 = 25,
    VDS_RT_RAID60 = 26,
    VDS_RT_RAID61 = 27,
} VDS_RAID_TYPE;

typedef int VDS_POOL_CUSTOM_ATTRIBUTES;

typedef int VDS_POOL_ATTRIBUTES;

typedef int VDS_STORAGE_POOL_PROP;

typedef int VDS_STORAGE_POOL_DRIVE_EXTENT;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsHwProvider;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsHwProviderType;

// TODO: this type is limited to platform 'windows6.1'
typedef int IVdsHwProviderType2;

// TODO: this type is limited to platform 'windows6.1'
typedef int IVdsHwProviderStoragePools;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsSubSystem;

// TODO: this type is limited to platform 'windows6.1'
typedef int IVdsSubSystem2;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsSubSystemNaming;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsSubSystemIscsi;

// TODO: this type is limited to platform 'windows6.1'
typedef int IVdsSubSystemInterconnect;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsControllerPort;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsController;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsControllerControllerPort;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsDrive;

// TODO: this type is limited to platform 'windows6.1'
typedef int IVdsDrive2;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsLun;

// TODO: this type is limited to platform 'windows6.1'
typedef int IVdsLun2;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsLunNaming;

// TODO: this type is limited to platform 'windows6.1'
typedef int IVdsLunNumber;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsLunControllerPorts;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsLunMpio;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsLunIscsi;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsLunPlex;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsIscsiPortal;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsIscsiTarget;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsIscsiPortalGroup;

// TODO: this type is limited to platform 'windows6.1'
typedef int IVdsStoragePool;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsMaintenance;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsHwProviderPrivate;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsHwProviderPrivateMpio;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IVdsAdmin;


//--------------------------------------------------------------------------------
// Section: Functions (0)
//--------------------------------------------------------------------------------
