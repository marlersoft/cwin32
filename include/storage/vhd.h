// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (11)
//--------------------------------------------------------------------------------
#define VIRTUAL_STORAGE_TYPE_VENDOR_MICROSOFT GUID { "ec984aec-a0f9-47e9-901f-71415a66345b" }
#define VIRTUAL_STORAGE_TYPE_DEVICE_UNKNOWN (UINT)0
#define VIRTUAL_STORAGE_TYPE_DEVICE_ISO (UINT)1
#define VIRTUAL_STORAGE_TYPE_DEVICE_VHD (UINT)2
#define VIRTUAL_STORAGE_TYPE_DEVICE_VHDX (UINT)3
#define VIRTUAL_STORAGE_TYPE_DEVICE_VHDSET (UINT)4
#define OPEN_VIRTUAL_DISK_RW_DEPTH_DEFAULT (UINT)1
#define CREATE_VIRTUAL_DISK_PARAMETERS_DEFAULT_BLOCK_SIZE (UINT)0
#define CREATE_VIRTUAL_DISK_PARAMETERS_DEFAULT_SECTOR_SIZE (UINT)0
#define VIRTUAL_DISK_MAXIMUM_CHANGE_TRACKING_ID_LENGTH (UINT)256
#define MERGE_VIRTUAL_DISK_DEFAULT_MERGE_DEPTH (UINT)1

//--------------------------------------------------------------------------------
// Section: Types (59)
//--------------------------------------------------------------------------------
typedef int VIRTUAL_STORAGE_TYPE;

typedef enum {
    OPEN_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0,
    OPEN_VIRTUAL_DISK_VERSION_1 = 1,
    OPEN_VIRTUAL_DISK_VERSION_2 = 2,
    OPEN_VIRTUAL_DISK_VERSION_3 = 3,
} OPEN_VIRTUAL_DISK_VERSION;

typedef int OPEN_VIRTUAL_DISK_PARAMETERS;

typedef enum {
    VIRTUAL_DISK_ACCESS_NONE = 0,
    VIRTUAL_DISK_ACCESS_ATTACH_RO = 65536,
    VIRTUAL_DISK_ACCESS_ATTACH_RW = 131072,
    VIRTUAL_DISK_ACCESS_DETACH = 262144,
    VIRTUAL_DISK_ACCESS_GET_INFO = 524288,
    VIRTUAL_DISK_ACCESS_CREATE = 1048576,
    VIRTUAL_DISK_ACCESS_METAOPS = 2097152,
    VIRTUAL_DISK_ACCESS_READ = 851968,
    VIRTUAL_DISK_ACCESS_ALL = 4128768,
    VIRTUAL_DISK_ACCESS_WRITABLE = 3276800,
} VIRTUAL_DISK_ACCESS_MASK;

typedef enum {
    OPEN_VIRTUAL_DISK_FLAG_NONE = 0,
    OPEN_VIRTUAL_DISK_FLAG_NO_PARENTS = 1,
    OPEN_VIRTUAL_DISK_FLAG_BLANK_FILE = 2,
    OPEN_VIRTUAL_DISK_FLAG_BOOT_DRIVE = 4,
    OPEN_VIRTUAL_DISK_FLAG_CACHED_IO = 8,
    OPEN_VIRTUAL_DISK_FLAG_CUSTOM_DIFF_CHAIN = 16,
    OPEN_VIRTUAL_DISK_FLAG_PARENT_CACHED_IO = 32,
    OPEN_VIRTUAL_DISK_FLAG_VHDSET_FILE_ONLY = 64,
    OPEN_VIRTUAL_DISK_FLAG_IGNORE_RELATIVE_PARENT_LOCATOR = 128,
    OPEN_VIRTUAL_DISK_FLAG_NO_WRITE_HARDENING = 256,
    OPEN_VIRTUAL_DISK_FLAG_SUPPORT_COMPRESSED_VOLUMES = 512,
} OPEN_VIRTUAL_DISK_FLAG;

typedef enum {
    CREATE_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0,
    CREATE_VIRTUAL_DISK_VERSION_1 = 1,
    CREATE_VIRTUAL_DISK_VERSION_2 = 2,
    CREATE_VIRTUAL_DISK_VERSION_3 = 3,
    CREATE_VIRTUAL_DISK_VERSION_4 = 4,
} CREATE_VIRTUAL_DISK_VERSION;

typedef int CREATE_VIRTUAL_DISK_PARAMETERS;

typedef enum {
    CREATE_VIRTUAL_DISK_FLAG_NONE = 0,
    CREATE_VIRTUAL_DISK_FLAG_FULL_PHYSICAL_ALLOCATION = 1,
    CREATE_VIRTUAL_DISK_FLAG_PREVENT_WRITES_TO_SOURCE_DISK = 2,
    CREATE_VIRTUAL_DISK_FLAG_DO_NOT_COPY_METADATA_FROM_PARENT = 4,
    CREATE_VIRTUAL_DISK_FLAG_CREATE_BACKING_STORAGE = 8,
    CREATE_VIRTUAL_DISK_FLAG_USE_CHANGE_TRACKING_SOURCE_LIMIT = 16,
    CREATE_VIRTUAL_DISK_FLAG_PRESERVE_PARENT_CHANGE_TRACKING_STATE = 32,
    CREATE_VIRTUAL_DISK_FLAG_VHD_SET_USE_ORIGINAL_BACKING_STORAGE = 64,
    CREATE_VIRTUAL_DISK_FLAG_SPARSE_FILE = 128,
    CREATE_VIRTUAL_DISK_FLAG_PMEM_COMPATIBLE = 256,
} CREATE_VIRTUAL_DISK_FLAG;

typedef enum {
    ATTACH_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0,
    ATTACH_VIRTUAL_DISK_VERSION_1 = 1,
    ATTACH_VIRTUAL_DISK_VERSION_2 = 2,
} ATTACH_VIRTUAL_DISK_VERSION;

typedef int ATTACH_VIRTUAL_DISK_PARAMETERS;

typedef enum {
    ATTACH_VIRTUAL_DISK_FLAG_NONE = 0,
    ATTACH_VIRTUAL_DISK_FLAG_READ_ONLY = 1,
    ATTACH_VIRTUAL_DISK_FLAG_NO_DRIVE_LETTER = 2,
    ATTACH_VIRTUAL_DISK_FLAG_PERMANENT_LIFETIME = 4,
    ATTACH_VIRTUAL_DISK_FLAG_NO_LOCAL_HOST = 8,
    ATTACH_VIRTUAL_DISK_FLAG_NO_SECURITY_DESCRIPTOR = 16,
    ATTACH_VIRTUAL_DISK_FLAG_BYPASS_DEFAULT_ENCRYPTION_POLICY = 32,
    ATTACH_VIRTUAL_DISK_FLAG_NON_PNP = 64,
    ATTACH_VIRTUAL_DISK_FLAG_RESTRICTED_RANGE = 128,
    ATTACH_VIRTUAL_DISK_FLAG_SINGLE_PARTITION = 256,
    ATTACH_VIRTUAL_DISK_FLAG_REGISTER_VOLUME = 512,
} ATTACH_VIRTUAL_DISK_FLAG;

typedef enum {
    DETACH_VIRTUAL_DISK_FLAG_NONE = 0,
} DETACH_VIRTUAL_DISK_FLAG;

typedef enum {
    DEPENDENT_DISK_FLAG_NONE = 0,
    DEPENDENT_DISK_FLAG_MULT_BACKING_FILES = 1,
    DEPENDENT_DISK_FLAG_FULLY_ALLOCATED = 2,
    DEPENDENT_DISK_FLAG_READ_ONLY = 4,
    DEPENDENT_DISK_FLAG_REMOTE = 8,
    DEPENDENT_DISK_FLAG_SYSTEM_VOLUME = 16,
    DEPENDENT_DISK_FLAG_SYSTEM_VOLUME_PARENT = 32,
    DEPENDENT_DISK_FLAG_REMOVABLE = 64,
    DEPENDENT_DISK_FLAG_NO_DRIVE_LETTER = 128,
    DEPENDENT_DISK_FLAG_PARENT = 256,
    DEPENDENT_DISK_FLAG_NO_HOST_DISK = 512,
    DEPENDENT_DISK_FLAG_PERMANENT_LIFETIME = 1024,
    DEPENDENT_DISK_FLAG_SUPPORT_COMPRESSED_VOLUMES = 2048,
} DEPENDENT_DISK_FLAG;

typedef enum {
    STORAGE_DEPENDENCY_INFO_VERSION_UNSPECIFIED = 0,
    STORAGE_DEPENDENCY_INFO_VERSION_1 = 1,
    STORAGE_DEPENDENCY_INFO_VERSION_2 = 2,
} STORAGE_DEPENDENCY_INFO_VERSION;

typedef int STORAGE_DEPENDENCY_INFO_TYPE_1;

typedef int STORAGE_DEPENDENCY_INFO_TYPE_2;

typedef int STORAGE_DEPENDENCY_INFO;

typedef enum {
    GET_STORAGE_DEPENDENCY_FLAG_NONE = 0,
    GET_STORAGE_DEPENDENCY_FLAG_HOST_VOLUMES = 1,
    GET_STORAGE_DEPENDENCY_FLAG_DISK_HANDLE = 2,
} GET_STORAGE_DEPENDENCY_FLAG;

typedef enum {
    GET_VIRTUAL_DISK_INFO_UNSPECIFIED = 0,
    GET_VIRTUAL_DISK_INFO_SIZE = 1,
    GET_VIRTUAL_DISK_INFO_IDENTIFIER = 2,
    GET_VIRTUAL_DISK_INFO_PARENT_LOCATION = 3,
    GET_VIRTUAL_DISK_INFO_PARENT_IDENTIFIER = 4,
    GET_VIRTUAL_DISK_INFO_PARENT_TIMESTAMP = 5,
    GET_VIRTUAL_DISK_INFO_VIRTUAL_STORAGE_TYPE = 6,
    GET_VIRTUAL_DISK_INFO_PROVIDER_SUBTYPE = 7,
    GET_VIRTUAL_DISK_INFO_IS_4K_ALIGNED = 8,
    GET_VIRTUAL_DISK_INFO_PHYSICAL_DISK = 9,
    GET_VIRTUAL_DISK_INFO_VHD_PHYSICAL_SECTOR_SIZE = 10,
    GET_VIRTUAL_DISK_INFO_SMALLEST_SAFE_VIRTUAL_SIZE = 11,
    GET_VIRTUAL_DISK_INFO_FRAGMENTATION = 12,
    GET_VIRTUAL_DISK_INFO_IS_LOADED = 13,
    GET_VIRTUAL_DISK_INFO_VIRTUAL_DISK_ID = 14,
    GET_VIRTUAL_DISK_INFO_CHANGE_TRACKING_STATE = 15,
} GET_VIRTUAL_DISK_INFO_VERSION;

typedef int GET_VIRTUAL_DISK_INFO;

typedef enum {
    SET_VIRTUAL_DISK_INFO_UNSPECIFIED = 0,
    SET_VIRTUAL_DISK_INFO_PARENT_PATH = 1,
    SET_VIRTUAL_DISK_INFO_IDENTIFIER = 2,
    SET_VIRTUAL_DISK_INFO_PARENT_PATH_WITH_DEPTH = 3,
    SET_VIRTUAL_DISK_INFO_PHYSICAL_SECTOR_SIZE = 4,
    SET_VIRTUAL_DISK_INFO_VIRTUAL_DISK_ID = 5,
    SET_VIRTUAL_DISK_INFO_CHANGE_TRACKING_STATE = 6,
    SET_VIRTUAL_DISK_INFO_PARENT_LOCATOR = 7,
} SET_VIRTUAL_DISK_INFO_VERSION;

typedef int SET_VIRTUAL_DISK_INFO;

typedef int VIRTUAL_DISK_PROGRESS;

typedef enum {
    COMPACT_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0,
    COMPACT_VIRTUAL_DISK_VERSION_1 = 1,
} COMPACT_VIRTUAL_DISK_VERSION;

typedef int COMPACT_VIRTUAL_DISK_PARAMETERS;

typedef enum {
    COMPACT_VIRTUAL_DISK_FLAG_NONE = 0,
    COMPACT_VIRTUAL_DISK_FLAG_NO_ZERO_SCAN = 1,
    COMPACT_VIRTUAL_DISK_FLAG_NO_BLOCK_MOVES = 2,
} COMPACT_VIRTUAL_DISK_FLAG;

typedef enum {
    MERGE_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0,
    MERGE_VIRTUAL_DISK_VERSION_1 = 1,
    MERGE_VIRTUAL_DISK_VERSION_2 = 2,
} MERGE_VIRTUAL_DISK_VERSION;

typedef int MERGE_VIRTUAL_DISK_PARAMETERS;

typedef enum {
    MERGE_VIRTUAL_DISK_FLAG_NONE = 0,
} MERGE_VIRTUAL_DISK_FLAG;

typedef enum {
    EXPAND_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0,
    EXPAND_VIRTUAL_DISK_VERSION_1 = 1,
} EXPAND_VIRTUAL_DISK_VERSION;

typedef int EXPAND_VIRTUAL_DISK_PARAMETERS;

typedef enum {
    EXPAND_VIRTUAL_DISK_FLAG_NONE = 0,
} EXPAND_VIRTUAL_DISK_FLAG;

typedef enum {
    RESIZE_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0,
    RESIZE_VIRTUAL_DISK_VERSION_1 = 1,
} RESIZE_VIRTUAL_DISK_VERSION;

typedef int RESIZE_VIRTUAL_DISK_PARAMETERS;

typedef enum {
    RESIZE_VIRTUAL_DISK_FLAG_NONE = 0,
    RESIZE_VIRTUAL_DISK_FLAG_ALLOW_UNSAFE_VIRTUAL_SIZE = 1,
    RESIZE_VIRTUAL_DISK_FLAG_RESIZE_TO_SMALLEST_SAFE_VIRTUAL_SIZE = 2,
} RESIZE_VIRTUAL_DISK_FLAG;

typedef enum {
    MIRROR_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0,
    MIRROR_VIRTUAL_DISK_VERSION_1 = 1,
} MIRROR_VIRTUAL_DISK_VERSION;

typedef int MIRROR_VIRTUAL_DISK_PARAMETERS;

typedef enum {
    MIRROR_VIRTUAL_DISK_FLAG_NONE = 0,
    MIRROR_VIRTUAL_DISK_FLAG_EXISTING_FILE = 1,
    MIRROR_VIRTUAL_DISK_FLAG_SKIP_MIRROR_ACTIVATION = 2,
    MIRROR_VIRTUAL_DISK_FLAG_ENABLE_SMB_COMPRESSION = 4,
    MIRROR_VIRTUAL_DISK_FLAG_IS_LIVE_MIGRATION = 8,
} MIRROR_VIRTUAL_DISK_FLAG;

typedef int QUERY_CHANGES_VIRTUAL_DISK_RANGE;

typedef enum {
    QUERY_CHANGES_VIRTUAL_DISK_FLAG_NONE = 0,
} QUERY_CHANGES_VIRTUAL_DISK_FLAG;

typedef enum {
    TAKE_SNAPSHOT_VHDSET_FLAG_NONE = 0,
    TAKE_SNAPSHOT_VHDSET_FLAG_WRITEABLE = 1,
} TAKE_SNAPSHOT_VHDSET_FLAG;

typedef enum {
    TAKE_SNAPSHOT_VHDSET_VERSION_UNSPECIFIED = 0,
    TAKE_SNAPSHOT_VHDSET_VERSION_1 = 1,
} TAKE_SNAPSHOT_VHDSET_VERSION;

typedef int TAKE_SNAPSHOT_VHDSET_PARAMETERS;

typedef enum {
    DELETE_SNAPSHOT_VHDSET_FLAG_NONE = 0,
    DELETE_SNAPSHOT_VHDSET_FLAG_PERSIST_RCT = 1,
} DELETE_SNAPSHOT_VHDSET_FLAG;

typedef enum {
    DELETE_SNAPSHOT_VHDSET_VERSION_UNSPECIFIED = 0,
    DELETE_SNAPSHOT_VHDSET_VERSION_1 = 1,
} DELETE_SNAPSHOT_VHDSET_VERSION;

typedef int DELETE_SNAPSHOT_VHDSET_PARAMETERS;

typedef enum {
    MODIFY_VHDSET_UNSPECIFIED = 0,
    MODIFY_VHDSET_SNAPSHOT_PATH = 1,
    MODIFY_VHDSET_REMOVE_SNAPSHOT = 2,
    MODIFY_VHDSET_DEFAULT_SNAPSHOT_PATH = 3,
} MODIFY_VHDSET_VERSION;

typedef enum {
    MODIFY_VHDSET_FLAG_NONE = 0,
    MODIFY_VHDSET_FLAG_WRITEABLE_SNAPSHOT = 1,
} MODIFY_VHDSET_FLAG;

typedef int MODIFY_VHDSET_PARAMETERS;

typedef enum {
    APPLY_SNAPSHOT_VHDSET_FLAG_NONE = 0,
    APPLY_SNAPSHOT_VHDSET_FLAG_WRITEABLE = 1,
} APPLY_SNAPSHOT_VHDSET_FLAG;

typedef enum {
    APPLY_SNAPSHOT_VHDSET_VERSION_UNSPECIFIED = 0,
    APPLY_SNAPSHOT_VHDSET_VERSION_1 = 1,
} APPLY_SNAPSHOT_VHDSET_VERSION;

typedef int APPLY_SNAPSHOT_VHDSET_PARAMETERS;

typedef enum {
    RAW_SCSI_VIRTUAL_DISK_FLAG_NONE = 0,
} RAW_SCSI_VIRTUAL_DISK_FLAG;

typedef enum {
    RAW_SCSI_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0,
    RAW_SCSI_VIRTUAL_DISK_VERSION_1 = 1,
} RAW_SCSI_VIRTUAL_DISK_VERSION;

typedef int RAW_SCSI_VIRTUAL_DISK_PARAMETERS;

typedef int RAW_SCSI_VIRTUAL_DISK_RESPONSE;

typedef enum {
    FORK_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0,
    FORK_VIRTUAL_DISK_VERSION_1 = 1,
} FORK_VIRTUAL_DISK_VERSION;

typedef int FORK_VIRTUAL_DISK_PARAMETERS;

typedef enum {
    FORK_VIRTUAL_DISK_FLAG_NONE = 0,
    FORK_VIRTUAL_DISK_FLAG_EXISTING_FILE = 1,
} FORK_VIRTUAL_DISK_FLAG;


//--------------------------------------------------------------------------------
// Section: Functions (29)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows6.1'
/*u32*/void OpenVirtualDisk();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void CreateVirtualDisk();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void AttachVirtualDisk();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void DetachVirtualDisk();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void GetVirtualDiskPhysicalPath();

/*u32*/void GetAllAttachedVirtualDiskPhysicalPaths();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void GetStorageDependencyInformation();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void GetVirtualDiskInformation();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void SetVirtualDiskInformation();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void EnumerateVirtualDiskMetadata();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void GetVirtualDiskMetadata();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void SetVirtualDiskMetadata();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void DeleteVirtualDiskMetadata();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void GetVirtualDiskOperationProgress();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void CompactVirtualDisk();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void MergeVirtualDisk();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void ExpandVirtualDisk();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void ResizeVirtualDisk();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void MirrorVirtualDisk();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void BreakMirrorVirtualDisk();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void AddVirtualDiskParent();

// TODO: this type is limited to platform 'windows10.0.10240'
/*u32*/void QueryChangesVirtualDisk();

// TODO: this type is limited to platform 'windows10.0.10240'
/*u32*/void TakeSnapshotVhdSet();

// TODO: this type is limited to platform 'windows10.0.10240'
/*u32*/void DeleteSnapshotVhdSet();

// TODO: this type is limited to platform 'windows10.0.10240'
/*u32*/void ModifyVhdSet();

// TODO: this type is limited to platform 'windows10.0.10240'
/*u32*/void ApplySnapshotVhdSet();

// TODO: this type is limited to platform 'windows10.0.10240'
/*u32*/void RawSCSIVirtualDisk();

/*u32*/void ForkVirtualDisk();

/*u32*/void CompleteForkVirtualDisk();

