// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (16)
//--------------------------------------------------------------------------------
#define PACKAGE_PROPERTY_FRAMEWORK (UINT)1
#define PACKAGE_PROPERTY_RESOURCE (UINT)2
#define PACKAGE_PROPERTY_BUNDLE (UINT)4
#define PACKAGE_PROPERTY_OPTIONAL (UINT)8
#define PACKAGE_FILTER_HEAD (UINT)16
#define PACKAGE_FILTER_DIRECT (UINT)32
#define PACKAGE_FILTER_RESOURCE (UINT)64
#define PACKAGE_FILTER_BUNDLE (UINT)128
#define PACKAGE_INFORMATION_BASIC (UINT)0
#define PACKAGE_INFORMATION_FULL (UINT)256
#define PACKAGE_PROPERTY_DEVELOPMENT_MODE (UINT)65536
#define PACKAGE_FILTER_OPTIONAL (UINT)131072
#define PACKAGE_PROPERTY_IS_IN_RELATED_SET (UINT)262144
#define PACKAGE_PROPERTY_STATIC (UINT)524288
#define PACKAGE_PROPERTY_DYNAMIC (UINT)1048576
#define PACKAGE_FILTER_ALL_LOADED (UINT)0

//--------------------------------------------------------------------------------
// Section: Types (120)
//--------------------------------------------------------------------------------
typedef int PACKAGE_ID;

typedef int PACKAGE_INFO;

typedef int AppxFactory;

typedef int AppxBundleFactory;

typedef int AppxPackagingDiagnosticEventSinkManager;

typedef int AppxEncryptionFactory;

typedef int AppxPackageEditor;

typedef int APPX_PACKAGE_SETTINGS;

typedef enum {
    APPX_COMPRESSION_OPTION_NONE = 0,
    APPX_COMPRESSION_OPTION_NORMAL = 1,
    APPX_COMPRESSION_OPTION_MAXIMUM = 2,
    APPX_COMPRESSION_OPTION_FAST = 3,
    APPX_COMPRESSION_OPTION_SUPERFAST = 4,
} APPX_COMPRESSION_OPTION;

typedef int APPX_PACKAGE_WRITER_PAYLOAD_STREAM;

typedef enum {
    APPX_FOOTPRINT_FILE_TYPE_MANIFEST = 0,
    APPX_FOOTPRINT_FILE_TYPE_BLOCKMAP = 1,
    APPX_FOOTPRINT_FILE_TYPE_SIGNATURE = 2,
    APPX_FOOTPRINT_FILE_TYPE_CODEINTEGRITY = 3,
    APPX_FOOTPRINT_FILE_TYPE_CONTENTGROUPMAP = 4,
} APPX_FOOTPRINT_FILE_TYPE;

typedef enum {
    APPX_BUNDLE_FOOTPRINT_FILE_TYPE_FIRST = 0,
    APPX_BUNDLE_FOOTPRINT_FILE_TYPE_MANIFEST = 0,
    APPX_BUNDLE_FOOTPRINT_FILE_TYPE_BLOCKMAP = 1,
    APPX_BUNDLE_FOOTPRINT_FILE_TYPE_SIGNATURE = 2,
    APPX_BUNDLE_FOOTPRINT_FILE_TYPE_LAST = 2,
} APPX_BUNDLE_FOOTPRINT_FILE_TYPE;

typedef enum {
    APPX_CAPABILITY_INTERNET_CLIENT = 1,
    APPX_CAPABILITY_INTERNET_CLIENT_SERVER = 2,
    APPX_CAPABILITY_PRIVATE_NETWORK_CLIENT_SERVER = 4,
    APPX_CAPABILITY_DOCUMENTS_LIBRARY = 8,
    APPX_CAPABILITY_PICTURES_LIBRARY = 16,
    APPX_CAPABILITY_VIDEOS_LIBRARY = 32,
    APPX_CAPABILITY_MUSIC_LIBRARY = 64,
    APPX_CAPABILITY_ENTERPRISE_AUTHENTICATION = 128,
    APPX_CAPABILITY_SHARED_USER_CERTIFICATES = 256,
    APPX_CAPABILITY_REMOVABLE_STORAGE = 512,
    APPX_CAPABILITY_APPOINTMENTS = 1024,
    APPX_CAPABILITY_CONTACTS = 2048,
} APPX_CAPABILITIES;

typedef enum {
    APPX_PACKAGE_ARCHITECTURE_X86 = 0,
    APPX_PACKAGE_ARCHITECTURE_ARM = 5,
    APPX_PACKAGE_ARCHITECTURE_X64 = 9,
    APPX_PACKAGE_ARCHITECTURE_NEUTRAL = 11,
    APPX_PACKAGE_ARCHITECTURE_ARM64 = 12,
} APPX_PACKAGE_ARCHITECTURE;

typedef enum {
    APPX_PACKAGE_ARCHITECTURE2_X86 = 0,
    APPX_PACKAGE_ARCHITECTURE2_ARM = 5,
    APPX_PACKAGE_ARCHITECTURE2_X64 = 9,
    APPX_PACKAGE_ARCHITECTURE2_NEUTRAL = 11,
    APPX_PACKAGE_ARCHITECTURE2_ARM64 = 12,
    APPX_PACKAGE_ARCHITECTURE2_X86_ON_ARM64 = 14,
    APPX_PACKAGE_ARCHITECTURE2_UNKNOWN = 65535,
} APPX_PACKAGE_ARCHITECTURE2;

typedef enum {
    APPX_BUNDLE_PAYLOAD_PACKAGE_TYPE_APPLICATION = 0,
    APPX_BUNDLE_PAYLOAD_PACKAGE_TYPE_RESOURCE = 1,
} APPX_BUNDLE_PAYLOAD_PACKAGE_TYPE;

typedef enum {
    DX_FEATURE_LEVEL_UNSPECIFIED = 0,
    DX_FEATURE_LEVEL_9 = 1,
    DX_FEATURE_LEVEL_10 = 2,
    DX_FEATURE_LEVEL_11 = 3,
} DX_FEATURE_LEVEL;

typedef enum {
    APPX_CAPABILITY_CLASS_DEFAULT = 0,
    APPX_CAPABILITY_CLASS_GENERAL = 1,
    APPX_CAPABILITY_CLASS_RESTRICTED = 2,
    APPX_CAPABILITY_CLASS_WINDOWS = 4,
    APPX_CAPABILITY_CLASS_ALL = 7,
    APPX_CAPABILITY_CLASS_CUSTOM = 8,
} APPX_CAPABILITY_CLASS_TYPE;

typedef enum {
    APPX_PACKAGING_CONTEXT_CHANGE_TYPE_START = 0,
    APPX_PACKAGING_CONTEXT_CHANGE_TYPE_CHANGE = 1,
    APPX_PACKAGING_CONTEXT_CHANGE_TYPE_DETAILS = 2,
    APPX_PACKAGING_CONTEXT_CHANGE_TYPE_END = 3,
} APPX_PACKAGING_CONTEXT_CHANGE_TYPE;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxFactory;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxFactory2;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxPackageReader;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxPackageWriter;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxPackageWriter2;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxPackageWriter3;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxFile;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxFilesEnumerator;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxBlockMapReader;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxBlockMapFile;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxBlockMapFilesEnumerator;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxBlockMapBlock;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxBlockMapBlocksEnumerator;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxManifestReader;

// TODO: this type is limited to platform 'windows8.1'
typedef int IAppxManifestReader2;

typedef int IAppxManifestReader3;

typedef int IAppxManifestReader4;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxManifestReader5;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxManifestReader6;

typedef int IAppxManifestReader7;

typedef int IAppxManifestDriverDependenciesEnumerator;

typedef int IAppxManifestDriverDependency;

typedef int IAppxManifestDriverConstraintsEnumerator;

typedef int IAppxManifestDriverConstraint;

typedef int IAppxManifestOSPackageDependenciesEnumerator;

typedef int IAppxManifestOSPackageDependency;

typedef int IAppxManifestHostRuntimeDependenciesEnumerator;

typedef int IAppxManifestHostRuntimeDependency;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxManifestOptionalPackageInfo;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxManifestMainPackageDependenciesEnumerator;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxManifestMainPackageDependency;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxManifestPackageId;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxManifestPackageId2;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxManifestProperties;

typedef int IAppxManifestTargetDeviceFamiliesEnumerator;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxManifestTargetDeviceFamily;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxManifestPackageDependenciesEnumerator;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxManifestPackageDependency;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxManifestPackageDependency2;

typedef int IAppxManifestPackageDependency3;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxManifestResourcesEnumerator;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxManifestDeviceCapabilitiesEnumerator;

typedef int IAppxManifestCapabilitiesEnumerator;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxManifestApplicationsEnumerator;

// TODO: this type is limited to platform 'windows8.0'
typedef int IAppxManifestApplication;

typedef int IAppxManifestQualifiedResourcesEnumerator;

typedef int IAppxManifestQualifiedResource;

// TODO: this type is limited to platform 'windows8.1'
typedef int IAppxBundleFactory;

// TODO: this type is limited to platform 'windows8.1'
typedef int IAppxBundleWriter;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxBundleWriter2;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxBundleWriter3;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxBundleWriter4;

// TODO: this type is limited to platform 'windows8.1'
typedef int IAppxBundleReader;

// TODO: this type is limited to platform 'windows8.1'
typedef int IAppxBundleManifestReader;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxBundleManifestReader2;

// TODO: this type is limited to platform 'windows8.1'
typedef int IAppxBundleManifestPackageInfoEnumerator;

// TODO: this type is limited to platform 'windows8.1'
typedef int IAppxBundleManifestPackageInfo;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxBundleManifestPackageInfo2;

typedef int IAppxBundleManifestPackageInfo3;

typedef int IAppxBundleManifestPackageInfo4;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxBundleManifestOptionalBundleInfoEnumerator;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxBundleManifestOptionalBundleInfo;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxContentGroupFilesEnumerator;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxContentGroup;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxContentGroupsEnumerator;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxContentGroupMapReader;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxSourceContentGroupMapReader;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxContentGroupMapWriter;

typedef int IAppxPackagingDiagnosticEventSink;

typedef int IAppxPackagingDiagnosticEventSinkManager;

typedef int APPX_ENCRYPTED_PACKAGE_SETTINGS;

typedef enum {
    APPX_ENCRYPTED_PACKAGE_OPTION_NONE = 0,
    APPX_ENCRYPTED_PACKAGE_OPTION_DIFFUSION = 1,
    APPX_ENCRYPTED_PACKAGE_OPTION_PAGE_HASHING = 2,
} APPX_ENCRYPTED_PACKAGE_OPTIONS;

typedef int APPX_ENCRYPTED_PACKAGE_SETTINGS2;

typedef int APPX_KEY_INFO;

typedef int APPX_ENCRYPTED_EXEMPTIONS;

// TODO: this type is limited to platform 'windows10.0.14393'
typedef int IAppxEncryptionFactory;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxEncryptionFactory2;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxEncryptionFactory3;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxEncryptionFactory4;

// TODO: this type is limited to platform 'windows10.0.14393'
typedef int IAppxEncryptedPackageWriter;

// TODO: this type is limited to platform 'windows10.0.14393'
typedef int IAppxEncryptedPackageWriter2;

// TODO: this type is limited to platform 'windows10.0.14393'
typedef int IAppxEncryptedBundleWriter;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxEncryptedBundleWriter2;

typedef enum {
    APPX_PACKAGE_EDITOR_UPDATE_PACKAGE_OPTION_APPEND_DELTA = 0,
} APPX_PACKAGE_EDITOR_UPDATE_PACKAGE_OPTION;

typedef enum {
    APPX_PACKAGE_EDITOR_UPDATE_PACKAGE_MANIFEST_OPTION_NONE = 0,
    APPX_PACKAGE_EDITOR_UPDATE_PACKAGE_MANIFEST_OPTION_SKIP_VALIDATION = 1,
    APPX_PACKAGE_EDITOR_UPDATE_PACKAGE_MANIFEST_OPTION_LOCALIZED = 2,
} APPX_PACKAGE_EDITOR_UPDATE_PACKAGE_MANIFEST_OPTIONS;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxEncryptedBundleWriter3;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IAppxPackageEditor;

typedef int PACKAGE_VERSION;

typedef enum {
    PackagePathType_Install = 0,
    PackagePathType_Mutable = 1,
    PackagePathType_Effective = 2,
    PackagePathType_MachineExternal = 3,
    PackagePathType_UserExternal = 4,
    PackagePathType_EffectiveExternal = 5,
} PackagePathType;

typedef enum {
    PackageOrigin_Unknown = 0,
    PackageOrigin_Unsigned = 1,
    PackageOrigin_Inbox = 2,
    PackageOrigin_Store = 3,
    PackageOrigin_DeveloperUnsigned = 4,
    PackageOrigin_DeveloperSigned = 5,
    PackageOrigin_LineOfBusiness = 6,
} PackageOrigin;

typedef int _PACKAGE_INFO_REFERENCE;

typedef enum {
    AppPolicyLifecycleManagement_Unmanaged = 0,
    AppPolicyLifecycleManagement_Managed = 1,
} AppPolicyLifecycleManagement;

typedef enum {
    AppPolicyWindowingModel_None = 0,
    AppPolicyWindowingModel_Universal = 1,
    AppPolicyWindowingModel_ClassicDesktop = 2,
    AppPolicyWindowingModel_ClassicPhone = 3,
} AppPolicyWindowingModel;

typedef enum {
    AppPolicyMediaFoundationCodecLoading_All = 0,
    AppPolicyMediaFoundationCodecLoading_InboxOnly = 1,
} AppPolicyMediaFoundationCodecLoading;

typedef enum {
    AppPolicyClrCompat_Other = 0,
    AppPolicyClrCompat_ClassicDesktop = 1,
    AppPolicyClrCompat_Universal = 2,
    AppPolicyClrCompat_PackagedDesktop = 3,
} AppPolicyClrCompat;

typedef enum {
    AppPolicyThreadInitializationType_None = 0,
    AppPolicyThreadInitializationType_InitializeWinRT = 1,
} AppPolicyThreadInitializationType;

typedef enum {
    AppPolicyShowDeveloperDiagnostic_None = 0,
    AppPolicyShowDeveloperDiagnostic_ShowUI = 1,
} AppPolicyShowDeveloperDiagnostic;

typedef enum {
    AppPolicyProcessTerminationMethod_ExitProcess = 0,
    AppPolicyProcessTerminationMethod_TerminateProcess = 1,
} AppPolicyProcessTerminationMethod;

typedef enum {
    AppPolicyCreateFileAccess_Full = 0,
    AppPolicyCreateFileAccess_Limited = 1,
} AppPolicyCreateFileAccess;

typedef int PACKAGE_ID;

typedef int PACKAGE_INFO;


//--------------------------------------------------------------------------------
// Section: Functions (49)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows8.0'
/*i32*/void GetCurrentPackageId();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void GetCurrentPackageFullName();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void GetCurrentPackageFamilyName();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void GetCurrentPackagePath();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void GetPackageId();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void GetPackageFullName();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void GetPackageFullNameFromToken();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void GetPackageFamilyName();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void GetPackageFamilyNameFromToken();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void GetPackagePath();

// TODO: this type is limited to platform 'windows8.1'
/*i32*/void GetPackagePathByFullName();

// TODO: this type is limited to platform 'windows8.1'
/*i32*/void GetStagedPackagePathByFullName();

// TODO: this type is limited to platform 'windows10.0.10240'
/*i32*/void GetPackagePathByFullName2();

// TODO: this type is limited to platform 'windows10.0.10240'
/*i32*/void GetStagedPackagePathByFullName2();

// TODO: this type is limited to platform 'windows10.0.10240'
/*i32*/void GetCurrentPackageInfo2();

// TODO: this type is limited to platform 'windows10.0.10240'
/*i32*/void GetCurrentPackagePath2();

/*i32*/void GetCurrentApplicationUserModelId();

/*i32*/void GetApplicationUserModelId();

/*i32*/void GetApplicationUserModelIdFromToken();

/*i32*/void VerifyPackageFullName();

/*i32*/void VerifyPackageFamilyName();

/*i32*/void VerifyPackageId();

/*i32*/void VerifyApplicationUserModelId();

/*i32*/void VerifyPackageRelativeApplicationId();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void PackageIdFromFullName();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void PackageFullNameFromId();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void PackageFamilyNameFromId();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void PackageFamilyNameFromFullName();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void PackageNameAndPublisherIdFromFamilyName();

// TODO: this type is limited to platform 'windows8.1'
/*i32*/void FormatApplicationUserModelId();

// TODO: this type is limited to platform 'windows8.1'
/*i32*/void ParseApplicationUserModelId();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void GetPackagesByPackageFamily();

// TODO: this type is limited to platform 'windows8.1'
/*i32*/void FindPackagesByPackageFamily();

// TODO: this type is limited to platform 'windows8.1'
/*i32*/void GetStagedPackageOrigin();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void GetCurrentPackageInfo();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void OpenPackageInfoByFullName();

/*i32*/void OpenPackageInfoByFullNameForUser();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void ClosePackageInfo();

// TODO: this type is limited to platform 'windows8.0'
/*i32*/void GetPackageInfo();

// TODO: this type is limited to platform 'windows8.1'
/*i32*/void GetPackageApplicationIds();

/*i32*/void AppPolicyGetLifecycleManagement();

/*i32*/void AppPolicyGetWindowingModel();

/*i32*/void AppPolicyGetMediaFoundationCodecLoading();

/*i32*/void AppPolicyGetClrCompat();

/*i32*/void AppPolicyGetThreadInitializationType();

/*i32*/void AppPolicyGetShowDeveloperDiagnostic();

/*i32*/void AppPolicyGetProcessTerminationMethod();

/*i32*/void AppPolicyGetCreateFileAccess();

// TODO: this type is limited to platform 'windows10.0.10240'
/*i32*/void GetPackageInfo2();

