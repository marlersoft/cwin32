// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (4)
//--------------------------------------------------------------------------------
#define FILTER_NAME_MAX_CHARS (UINT)255
#define VOLUME_NAME_MAX_CHARS (UINT)1024
#define INSTANCE_NAME_MAX_CHARS (UINT)255
#define FLT_PORT_FLAG_SYNC_HANDLE (UINT)1

//--------------------------------------------------------------------------------
// Section: Types (21)
//--------------------------------------------------------------------------------
typedef int HFILTER;

typedef int HFILTER_INSTANCE;

typedef int FilterFindHandle;

typedef int FilterVolumeFindHandle;

typedef int FilterInstanceFindHandle;

typedef int FilterVolumeInstanceFindHandle;

typedef enum {
    FLT_FSTYPE_UNKNOWN = 0,
    FLT_FSTYPE_RAW = 1,
    FLT_FSTYPE_NTFS = 2,
    FLT_FSTYPE_FAT = 3,
    FLT_FSTYPE_CDFS = 4,
    FLT_FSTYPE_UDFS = 5,
    FLT_FSTYPE_LANMAN = 6,
    FLT_FSTYPE_WEBDAV = 7,
    FLT_FSTYPE_RDPDR = 8,
    FLT_FSTYPE_NFS = 9,
    FLT_FSTYPE_MS_NETWARE = 10,
    FLT_FSTYPE_NETWARE = 11,
    FLT_FSTYPE_BSUDF = 12,
    FLT_FSTYPE_MUP = 13,
    FLT_FSTYPE_RSFX = 14,
    FLT_FSTYPE_ROXIO_UDF1 = 15,
    FLT_FSTYPE_ROXIO_UDF2 = 16,
    FLT_FSTYPE_ROXIO_UDF3 = 17,
    FLT_FSTYPE_TACIT = 18,
    FLT_FSTYPE_FS_REC = 19,
    FLT_FSTYPE_INCD = 20,
    FLT_FSTYPE_INCD_FAT = 21,
    FLT_FSTYPE_EXFAT = 22,
    FLT_FSTYPE_PSFS = 23,
    FLT_FSTYPE_GPFS = 24,
    FLT_FSTYPE_NPFS = 25,
    FLT_FSTYPE_MSFS = 26,
    FLT_FSTYPE_CSVFS = 27,
    FLT_FSTYPE_REFS = 28,
    FLT_FSTYPE_OPENAFS = 29,
    FLT_FSTYPE_CIMFS = 30,
} FLT_FILESYSTEM_TYPE;

typedef enum {
    FilterFullInformation = 0,
    FilterAggregateBasicInformation = 1,
    FilterAggregateStandardInformation = 2,
} FILTER_INFORMATION_CLASS;

typedef int FILTER_FULL_INFORMATION;

typedef int FILTER_AGGREGATE_BASIC_INFORMATION;

typedef int FILTER_AGGREGATE_STANDARD_INFORMATION;

typedef enum {
    FilterVolumeBasicInformation = 0,
    FilterVolumeStandardInformation = 1,
} FILTER_VOLUME_INFORMATION_CLASS;

typedef int FILTER_VOLUME_BASIC_INFORMATION;

typedef int FILTER_VOLUME_STANDARD_INFORMATION;

typedef enum {
    InstanceBasicInformation = 0,
    InstancePartialInformation = 1,
    InstanceFullInformation = 2,
    InstanceAggregateStandardInformation = 3,
} INSTANCE_INFORMATION_CLASS;

typedef int INSTANCE_BASIC_INFORMATION;

typedef int INSTANCE_PARTIAL_INFORMATION;

typedef int INSTANCE_FULL_INFORMATION;

typedef int INSTANCE_AGGREGATE_STANDARD_INFORMATION;

typedef int FILTER_MESSAGE_HEADER;

typedef int FILTER_REPLY_HEADER;


//--------------------------------------------------------------------------------
// Section: Functions (28)
//--------------------------------------------------------------------------------
/*HRESULT*/void FilterLoad();

/*HRESULT*/void FilterUnload();

/*HRESULT*/void FilterCreate();

/*HRESULT*/void FilterClose();

/*HRESULT*/void FilterInstanceCreate();

/*HRESULT*/void FilterInstanceClose();

/*HRESULT*/void FilterAttach();

/*HRESULT*/void FilterAttachAtAltitude();

/*HRESULT*/void FilterDetach();

/*HRESULT*/void FilterFindFirst();

/*HRESULT*/void FilterFindNext();

/*HRESULT*/void FilterFindClose();

/*HRESULT*/void FilterVolumeFindFirst();

/*HRESULT*/void FilterVolumeFindNext();

/*HRESULT*/void FilterVolumeFindClose();

/*HRESULT*/void FilterInstanceFindFirst();

/*HRESULT*/void FilterInstanceFindNext();

/*HRESULT*/void FilterInstanceFindClose();

/*HRESULT*/void FilterVolumeInstanceFindFirst();

/*HRESULT*/void FilterVolumeInstanceFindNext();

/*HRESULT*/void FilterVolumeInstanceFindClose();

/*HRESULT*/void FilterGetInformation();

/*HRESULT*/void FilterInstanceGetInformation();

/*HRESULT*/void FilterConnectCommunicationPort();

/*HRESULT*/void FilterSendMessage();

/*HRESULT*/void FilterGetMessage();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void FilterReplyMessage();

/*HRESULT*/void FilterGetDosName();

