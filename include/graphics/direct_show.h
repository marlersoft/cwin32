// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (717)
//--------------------------------------------------------------------------------
#define EC_SND_DEVICE_ERROR_BASE (UINT)512
#define EC_SNDDEV_IN_ERROR (UINT)512
#define EC_SNDDEV_OUT_ERROR (UINT)513
#define EC_SYSTEMBASE (UINT)0
#define EC_USER (UINT)32768
#define EC_COMPLETE (UINT)1
#define EC_USERABORT (UINT)2
#define EC_ERRORABORT (UINT)3
#define EC_TIME (UINT)4
#define EC_REPAINT (UINT)5
#define EC_STREAM_ERROR_STOPPED (UINT)6
#define EC_STREAM_ERROR_STILLPLAYING (UINT)7
#define EC_ERROR_STILLPLAYING (UINT)8
#define EC_PALETTE_CHANGED (UINT)9
#define EC_VIDEO_SIZE_CHANGED (UINT)10
#define EC_QUALITY_CHANGE (UINT)11
#define EC_SHUTTING_DOWN (UINT)12
#define EC_CLOCK_CHANGED (UINT)13
#define EC_PAUSED (UINT)14
#define EC_OPENING_FILE (UINT)16
#define EC_BUFFERING_DATA (UINT)17
#define EC_FULLSCREEN_LOST (UINT)18
#define EC_ACTIVATE (UINT)19
#define EC_NEED_RESTART (UINT)20
#define EC_WINDOW_DESTROYED (UINT)21
#define EC_DISPLAY_CHANGED (UINT)22
#define EC_STARVATION (UINT)23
#define EC_OLE_EVENT (UINT)24
#define EC_NOTIFY_WINDOW (UINT)25
#define EC_STREAM_CONTROL_STOPPED (UINT)26
#define EC_STREAM_CONTROL_STARTED (UINT)27
#define EC_END_OF_SEGMENT (UINT)28
#define EC_SEGMENT_STARTED (UINT)29
#define EC_LENGTH_CHANGED (UINT)30
#define EC_DEVICE_LOST (UINT)31
#define EC_SAMPLE_NEEDED (UINT)32
#define EC_PROCESSING_LATENCY (UINT)33
#define EC_SAMPLE_LATENCY (UINT)34
#define EC_SCRUB_TIME (UINT)35
#define EC_STEP_COMPLETE (UINT)36
#define EC_TIMECODE_AVAILABLE (UINT)48
#define EC_EXTDEVICE_MODE_CHANGE (UINT)49
#define EC_STATE_CHANGE (UINT)50
#define EC_GRAPH_CHANGED (UINT)80
#define EC_CLOCK_UNSET (UINT)81
#define EC_VMR_RENDERDEVICE_SET (UINT)83
#define VMR_RENDER_DEVICE_OVERLAY (UINT)1
#define VMR_RENDER_DEVICE_VIDMEM (UINT)2
#define VMR_RENDER_DEVICE_SYSMEM (UINT)4
#define EC_VMR_SURFACE_FLIPPED (UINT)84
#define EC_VMR_RECONNECTION_FAILED (UINT)85
#define EC_PREPROCESS_COMPLETE (UINT)86
#define EC_CODECAPI_EVENT (UINT)87
#define EC_WMT_EVENT_BASE (UINT)593
#define EC_WMT_EVENT (UINT)594
#define EC_BUILT (UINT)768
#define EC_UNBUILT (UINT)769
#define EC_SKIP_FRAMES (UINT)37
#define EC_PLEASE_REOPEN (UINT)64
#define EC_STATUS (UINT)65
#define EC_MARKER_HIT (UINT)66
#define EC_LOADSTATUS (UINT)67
#define EC_FILE_CLOSED (UINT)68
#define EC_ERRORABORTEX (UINT)69
#define AM_LOADSTATUS_CLOSED (UINT)0
#define AM_LOADSTATUS_LOADINGDESCR (UINT)1
#define AM_LOADSTATUS_LOADINGMCAST (UINT)2
#define AM_LOADSTATUS_LOCATING (UINT)3
#define AM_LOADSTATUS_CONNECTING (UINT)4
#define AM_LOADSTATUS_OPENING (UINT)5
#define AM_LOADSTATUS_OPEN (UINT)6
#define EC_NEW_PIN (UINT)32
#define EC_RENDER_FINISHED (UINT)33
#define EC_EOS_SOON (UINT)70
#define EC_CONTENTPROPERTY_CHANGED (UINT)71
#define AM_CONTENTPROPERTY_TITLE (UINT)1
#define AM_CONTENTPROPERTY_AUTHOR (UINT)2
#define AM_CONTENTPROPERTY_COPYRIGHT (UINT)4
#define AM_CONTENTPROPERTY_DESCRIPTION (UINT)8
#define EC_BANDWIDTHCHANGE (UINT)72
#define EC_VIDEOFRAMEREADY (UINT)73
#define EC_DVDBASE (UINT)256
#define EC_DVD_DOMAIN_CHANGE (UINT)257
#define EC_DVD_TITLE_CHANGE (UINT)258
#define EC_DVD_CHAPTER_START (UINT)259
#define EC_DVD_AUDIO_STREAM_CHANGE (UINT)260
#define EC_DVD_SUBPICTURE_STREAM_CHANGE (UINT)261
#define EC_DVD_ANGLE_CHANGE (UINT)262
#define EC_DVD_BUTTON_CHANGE (UINT)263
#define EC_DVD_VALID_UOPS_CHANGE (UINT)264
#define EC_DVD_STILL_ON (UINT)265
#define EC_DVD_STILL_OFF (UINT)266
#define EC_DVD_CURRENT_TIME (UINT)267
#define EC_DVD_ERROR (UINT)268
#define EC_DVD_WARNING (UINT)269
#define EC_DVD_CHAPTER_AUTOSTOP (UINT)270
#define EC_DVD_NO_FP_PGC (UINT)271
#define EC_DVD_PLAYBACK_RATE_CHANGE (UINT)272
#define EC_DVD_PARENTAL_LEVEL_CHANGE (UINT)273
#define EC_DVD_PLAYBACK_STOPPED (UINT)274
#define EC_DVD_ANGLES_AVAILABLE (UINT)275
#define EC_DVD_PLAYPERIOD_AUTOSTOP (UINT)276
#define EC_DVD_BUTTON_AUTO_ACTIVATED (UINT)277
#define EC_DVD_CMD_START (UINT)278
#define EC_DVD_CMD_END (UINT)279
#define EC_DVD_DISC_EJECTED (UINT)280
#define EC_DVD_DISC_INSERTED (UINT)281
#define EC_DVD_CURRENT_HMSF_TIME (UINT)282
#define EC_DVD_KARAOKE_MODE (UINT)283
#define EC_DVD_PROGRAM_CELL_CHANGE (UINT)284
#define EC_DVD_TITLE_SET_CHANGE (UINT)285
#define EC_DVD_PROGRAM_CHAIN_CHANGE (UINT)286
#define EC_DVD_VOBU_Offset (UINT)287
#define EC_DVD_VOBU_Timestamp (UINT)288
#define EC_DVD_GPRM_Change (UINT)289
#define EC_DVD_SPRM_Change (UINT)290
#define EC_DVD_BeginNavigationCommands (UINT)291
#define EC_DVD_NavigationCommand (UINT)292
#define AM_AC3_ALTERNATE_AUDIO_1 (UINT)1
#define AM_AC3_ALTERNATE_AUDIO_2 (UINT)2
#define AM_AC3_ALTERNATE_AUDIO_BOTH (UINT)3
#define AM_AC3_SERVICE_MAIN_AUDIO (UINT)0
#define AM_AC3_SERVICE_NO_DIALOG (UINT)1
#define AM_AC3_SERVICE_VISUALLY_IMPAIRED (UINT)2
#define AM_AC3_SERVICE_HEARING_IMPAIRED (UINT)3
#define AM_AC3_SERVICE_DIALOG_ONLY (UINT)4
#define AM_AC3_SERVICE_COMMENTARY (UINT)5
#define AM_AC3_SERVICE_EMERGENCY_FLASH (UINT)6
#define AM_AC3_SERVICE_VOICE_OVER (UINT)7
#define AM_UseNewCSSKey (UINT)1
#define AM_ReverseBlockStart (UINT)2
#define AM_ReverseBlockEnd (UINT)4
#define AM_DVD_CGMS_RESERVED_MASK (UINT)120
#define AM_DVD_CGMS_COPY_PROTECT_MASK (UINT)24
#define AM_DVD_CGMS_COPY_PERMITTED (UINT)0
#define AM_DVD_CGMS_COPY_ONCE (UINT)16
#define AM_DVD_CGMS_NO_COPY (UINT)24
#define AM_DVD_COPYRIGHT_MASK (UINT)64
#define AM_DVD_NOT_COPYRIGHTED (UINT)0
#define AM_DVD_COPYRIGHTED (UINT)64
#define AM_DVD_SECTOR_PROTECT_MASK (UINT)32
#define AM_DVD_SECTOR_NOT_PROTECTED (UINT)0
#define AM_DVD_SECTOR_PROTECTED (UINT)32
#define AMINTERLACE_IsInterlaced (UINT)1
#define AMINTERLACE_1FieldPerSample (UINT)2
#define AMINTERLACE_Field1First (UINT)4
#define AMINTERLACE_UNUSED (UINT)8
#define AMINTERLACE_FieldPatternMask (UINT)48
#define AMINTERLACE_FieldPatField1Only (UINT)0
#define AMINTERLACE_FieldPatField2Only (UINT)16
#define AMINTERLACE_FieldPatBothRegular (UINT)32
#define AMINTERLACE_FieldPatBothIrregular (UINT)48
#define AMINTERLACE_DisplayModeMask (UINT)192
#define AMINTERLACE_DisplayModeBobOnly (UINT)0
#define AMINTERLACE_DisplayModeWeaveOnly (UINT)64
#define AMINTERLACE_DisplayModeBobOrWeave (UINT)128
#define AMCOPYPROTECT_RestrictDuplication (UINT)1
#define AMCONTROL_USED (UINT)1
#define AMCONTROL_PAD_TO_4x3 (UINT)2
#define AMCONTROL_PAD_TO_16x9 (UINT)4
#define AMCONTROL_COLORINFO_PRESENT (UINT)128
#define AM_VIDEO_FLAG_FIELD_MASK (INT)3
#define AM_VIDEO_FLAG_INTERLEAVED_FRAME (INT)0
#define AM_VIDEO_FLAG_FIELD1 (INT)1
#define AM_VIDEO_FLAG_FIELD2 (INT)2
#define AM_VIDEO_FLAG_FIELD1FIRST (INT)4
#define AM_VIDEO_FLAG_WEAVE (INT)8
#define AM_VIDEO_FLAG_IPB_MASK (INT)48
#define AM_VIDEO_FLAG_I_SAMPLE (INT)0
#define AM_VIDEO_FLAG_P_SAMPLE (INT)16
#define AM_VIDEO_FLAG_B_SAMPLE (INT)32
#define AM_VIDEO_FLAG_REPEAT_FIELD (INT)64
#define AVIF_HASINDEX (UINT)16
#define AVIF_MUSTUSEINDEX (UINT)32
#define AVIF_ISINTERLEAVED (UINT)256
#define AVIF_TRUSTCKTYPE (UINT)2048
#define AVIF_WASCAPTUREFILE (UINT)65536
#define AVIF_COPYRIGHTED (UINT)131072
#define AVI_HEADERSIZE (UINT)2048
#define AVISF_DISABLED (UINT)1
#define AVISF_VIDEO_PALCHANGES (UINT)65536
#define AVIIF_LIST (INT)1
#define AVIIF_KEYFRAME (INT)16
#define AVIIF_FIRSTPART (INT)32
#define AVIIF_LASTPART (INT)64
#define AVIIF_NOTIME (INT)256
#define AVIIF_COMPUSE (INT)268369920
#define TIMECODE_RATE_30DROP (UINT)0
#define TIMECODE_SMPTE_BINARY_GROUP (UINT)7
#define TIMECODE_SMPTE_COLOR_FRAME (UINT)8
#define AVI_INDEX_OF_INDEXES (UINT)0
#define AVI_INDEX_OF_CHUNKS (UINT)1
#define AVI_INDEX_OF_TIMED_CHUNKS (UINT)2
#define AVI_INDEX_OF_SUB_2FIELD (UINT)3
#define AVI_INDEX_IS_DATA (UINT)128
#define AVI_INDEX_SUB_DEFAULT (UINT)0
#define AVI_INDEX_SUB_2FIELD (UINT)1
#define STDINDEXSIZE (UINT)16384
#define AVISTDINDEX_DELTAFRAME (UINT)2147483648
#define AllocatorStrategy_DontCare (UINT)0
#define AllocatorStrategy_MinimizeNumberOfFrames (UINT)1
#define AllocatorStrategy_MinimizeFrameSize (UINT)2
#define AllocatorStrategy_MinimizeNumberOfAllocators (UINT)4
#define AllocatorStrategy_MaximizeSpeed (UINT)8
#define PipeFactor_None (UINT)0
#define PipeFactor_UserModeUpstream (UINT)1
#define PipeFactor_UserModeDownstream (UINT)2
#define PipeFactor_MemoryTypes (UINT)4
#define PipeFactor_Flags (UINT)8
#define PipeFactor_PhysicalRanges (UINT)16
#define PipeFactor_OptimalRanges (UINT)32
#define PipeFactor_FixedCompression (UINT)64
#define PipeFactor_UnknownCompression (UINT)128
#define PipeFactor_Buffers (UINT)256
#define PipeFactor_Align (UINT)512
#define PipeFactor_PhysicalEnd (UINT)1024
#define PipeFactor_LogicalEnd (UINT)2048
#define AMVA_TYPEINDEX_OUTPUTFRAME (UINT)4294967295
#define AMVA_QUERYRENDERSTATUSF_READ (UINT)1
#define MIN_DIMENSION (UINT)1
#define BDA_PLP_ID_NOT_SET (INT)-1
#define CDEF_CLASS_DEFAULT (UINT)1
#define CDEF_BYPASS_CLASS_MANAGER (UINT)2
#define CDEF_MERIT_ABOVE_DO_NOT_USE (UINT)8
#define CDEF_DEVMON_CMGR_DEVICE (UINT)16
#define CDEF_DEVMON_DMO (UINT)32
#define CDEF_DEVMON_PNP_DEVICE (UINT)64
#define CDEF_DEVMON_FILTER (UINT)128
#define CDEF_DEVMON_SELECTIVE_MASK (UINT)240
#define CHARS_IN_GUID (UINT)39
#define MAX_PIN_NAME (UINT)128
#define MAX_FILTER_NAME (UINT)128
#define AM_GBF_PREVFRAMESKIPPED (UINT)1
#define AM_GBF_NOTASYNCPOINT (UINT)2
#define AM_GBF_NOWAIT (UINT)4
#define AM_GBF_NODDSURFACELOCK (UINT)8
#define AMF_AUTOMATICGAIN (DOUBLE)-1
#define AnalogVideo_NTSC_Mask (UINT)7
#define AnalogVideo_PAL_Mask (UINT)1052656
#define AnalogVideo_SECAM_Mask (UINT)1044480
#define MPEG2_PROGRAM_STREAM_MAP (UINT)0
#define MPEG2_PROGRAM_ELEMENTARY_STREAM (UINT)1
#define MPEG2_PROGRAM_DIRECTORY_PES_PACKET (UINT)2
#define MPEG2_PROGRAM_PACK_HEADER (UINT)3
#define MPEG2_PROGRAM_PES_STREAM (UINT)4
#define MPEG2_PROGRAM_SYSTEM_HEADER (UINT)5
#define SUBSTREAM_FILTER_VAL_NONE (UINT)268435456
#define AM_GETDECODERCAP_QUERY_VMR_SUPPORT (UINT)1
#define VMR_NOTSUPPORTED (UINT)0
#define VMR_SUPPORTED (UINT)1
#define AM_QUERY_DECODER_VMR_SUPPORT (UINT)1
#define AM_QUERY_DECODER_DXVA_1_SUPPORT (UINT)2
#define AM_QUERY_DECODER_DVD_SUPPORT (UINT)3
#define AM_QUERY_DECODER_ATSC_SD_SUPPORT (UINT)4
#define AM_QUERY_DECODER_ATSC_HD_SUPPORT (UINT)5
#define AM_GETDECODERCAP_QUERY_VMR9_SUPPORT (UINT)6
#define AM_GETDECODERCAP_QUERY_EVR_SUPPORT (UINT)7
#define DECODER_CAP_NOTSUPPORTED (UINT)0
#define DECODER_CAP_SUPPORTED (UINT)1
#define VMRBITMAP_DISABLE (UINT)1
#define VMRBITMAP_HDC (UINT)2
#define VMRBITMAP_ENTIREDDS (UINT)4
#define VMRBITMAP_SRCCOLORKEY (UINT)8
#define VMRBITMAP_SRCRECT (UINT)16
#define DVD_TITLE_MENU (UINT)0
#define DVD_STREAM_DATA_CURRENT (UINT)2048
#define DVD_STREAM_DATA_VMGM (UINT)1024
#define DVD_STREAM_DATA_VTSM (UINT)1025
#define DVD_DEFAULT_AUDIO_STREAM (UINT)15
#define DVD_AUDIO_CAPS_AC3 (UINT)1
#define DVD_AUDIO_CAPS_MPEG2 (UINT)2
#define DVD_AUDIO_CAPS_LPCM (UINT)4
#define DVD_AUDIO_CAPS_DTS (UINT)8
#define DVD_AUDIO_CAPS_SDDS (UINT)16
#define MEDIATYPE_CONTROL GUID { "e06d8021-db46-11cf-b4d1-00805f6cbbea" }
#define PBDA_AUX_CONNECTOR_TYPE_SVideo GUID { "a0e905f4-24c9-4a54-b761-213355efc13a" }
#define PBDA_AUX_CONNECTOR_TYPE_Composite GUID { "f6298b4c-c725-4d42-849b-410bbb14ea62" }
#define CLSID_PBDA_AUX_DATA_TYPE GUID { "fd456373-3323-4090-adca-8ed45f55cf10" }
#define CLSID_PBDA_Encoder_DATA_TYPE GUID { "728fd6bc-5546-4716-b103-f899f5a1fa68" }
#define PBDA_Encoder_Audio_AlgorithmType_MPEG1LayerII (UINT)0
#define PBDA_Encoder_Audio_AlgorithmType_AC3 (UINT)1
#define PBDA_Encoder_Video_MPEG2PartII (UINT)0
#define PBDA_Encoder_Video_MPEG4Part10 (UINT)1
#define PBDA_Encoder_Video_AVC (UINT)1
#define PBDA_Encoder_Video_H264 (UINT)1
#define PBDA_Encoder_BitrateMode_Constant (UINT)1
#define PBDA_Encoder_BitrateMode_Variable (UINT)2
#define PBDA_Encoder_BitrateMode_Average (UINT)3
#define CLSID_PBDA_FDC_DATA_TYPE GUID { "e7dbf9a0-22ab-4047-8e67-ef9ad504e729" }
#define CLSID_PBDA_GDDS_DATA_TYPE GUID { "c80c0df3-6052-4c16-9f56-c44c21f73c45" }
#define LIBID_QuartzNetTypeLib GUID { "56a868b1-0ad4-11ce-b03a-0020af0ba770" }
#define LIBID_QuartzTypeLib GUID { "56a868b0-0ad4-11ce-b03a-0020af0ba770" }
#define CLSID_AMMultiMediaStream GUID { "49c47ce5-9ba4-11d0-8212-00c04fc32c45" }
#define CLSID_AMDirectDrawStream GUID { "49c47ce4-9ba4-11d0-8212-00c04fc32c45" }
#define CLSID_AMAudioStream GUID { "8496e040-af4c-11d0-8212-00c04fc32c45" }
#define CLSID_AMAudioData GUID { "f2468580-af8a-11d0-8212-00c04fc32c45" }
#define CLSID_AMMediaTypeStream GUID { "cf0f2f7c-f7bf-11d0-900d-00c04fd9189d" }
#define AMDDS_NONE (UINT)0
#define AMDDS_DCIPS (UINT)1
#define AMDDS_PS (UINT)2
#define AMDDS_RGBOVR (UINT)4
#define AMDDS_YUVOVR (UINT)8
#define AMDDS_RGBOFF (UINT)16
#define AMDDS_YUVOFF (UINT)32
#define AMDDS_RGBFLP (UINT)64
#define AMDDS_YUVFLP (UINT)128
#define AMDDS_ALL (UINT)255
#define MAX_SIZE_MPEG1_SEQUENCE_INFO (UINT)140
#define CLSID_DMOWrapperFilter GUID { "94297043-bd82-4dfd-b0de-8177739c6d20" }
#define CLSID_DMOFilterCategory GUID { "bcd5796c-bd52-4d30-ab76-70f975b89199" }
#define AM_MPEG_AUDIO_DUAL_MERGE (UINT)0
#define AM_MPEG_AUDIO_DUAL_LEFT (UINT)1
#define AM_MPEG_AUDIO_DUAL_RIGHT (UINT)2
#define CLSID_XMLGraphBuilder GUID { "1bb05961-5fbf-11d2-a521-44df07c10000" }
#define VFW_FIRST_CODE (UINT)512
#define MAX_ERROR_TEXT_LEN (UINT)160
#define MPBOOL_TRUE (UINT)1
#define MPBOOL_FALSE (UINT)0
#define DWORD_ALLPARAMS (INT)-1
#define GUID_TIME_REFERENCE GUID { "93ad712b-daa0-4ffe-bc81-b0ce500fcdd9" }
#define GUID_TIME_MUSIC GUID { "0574c49d-5b04-4b15-a542-ae282030117b" }
#define GUID_TIME_SAMPLES GUID { "a8593d05-0c43-4984-9a63-97af9e02c4c0" }
#define MPF_ENVLP_STANDARD (UINT)0
#define MPF_ENVLP_BEGIN_CURRENTVAL (UINT)1
#define MPF_ENVLP_BEGIN_NEUTRALVAL (UINT)2
#define MPF_PUNCHIN_REFTIME (UINT)0
#define MPF_PUNCHIN_NOW (UINT)1
#define MPF_PUNCHIN_STOPPED (UINT)2
#define DMOCATEGORY_AUDIO_DECODER GUID { "57f2db8b-e6bb-4513-9d43-dcd2a6593125" }
#define DMOCATEGORY_AUDIO_ENCODER GUID { "33d9a761-90c8-11d0-bd43-00a0c911ce86" }
#define DMOCATEGORY_VIDEO_DECODER GUID { "4a69b442-28be-4991-969c-b500adf5d8a8" }
#define DMOCATEGORY_VIDEO_ENCODER GUID { "33d9a760-90c8-11d0-bd43-00a0c911ce86" }
#define DMOCATEGORY_AUDIO_EFFECT GUID { "f3602b3f-0592-48df-a4cd-674721e7ebeb" }
#define DMOCATEGORY_VIDEO_EFFECT GUID { "d990ee14-776c-4723-be46-3da2f56f10b9" }
#define DMOCATEGORY_AUDIO_CAPTURE_EFFECT GUID { "f665aaba-3e09-4920-aa5f-219811148f09" }
#define DMOCATEGORY_ACOUSTIC_ECHO_CANCEL GUID { "bf963d80-c559-11d0-8a2b-00a0c9255ac1" }
#define DMOCATEGORY_AUDIO_NOISE_SUPPRESS GUID { "e07f903f-62fd-4e60-8cdd-dea7236665b5" }
#define DMOCATEGORY_AGC GUID { "e88c9ba0-c557-11d0-8a2b-00a0c9255ac1" }
#define MSPID_PrimaryVideo GUID { "a35ff56a-9fda-11d0-8fdf-00c04fd9189d" }
#define MSPID_PrimaryAudio GUID { "a35ff56b-9fda-11d0-8fdf-00c04fd9189d" }
#define VFW_E_INVALIDMEDIATYPE (HRESULT)(INT)-2147220992
#define VFW_E_INVALIDSUBTYPE (HRESULT)(INT)-2147220991
#define VFW_E_NEED_OWNER (HRESULT)(INT)-2147220990
#define VFW_E_ENUM_OUT_OF_SYNC (HRESULT)(INT)-2147220989
#define VFW_E_ALREADY_CONNECTED (HRESULT)(INT)-2147220988
#define VFW_E_FILTER_ACTIVE (HRESULT)(INT)-2147220987
#define VFW_E_NO_TYPES (HRESULT)(INT)-2147220986
#define VFW_E_NO_ACCEPTABLE_TYPES (HRESULT)(INT)-2147220985
#define VFW_E_INVALID_DIRECTION (HRESULT)(INT)-2147220984
#define VFW_E_NOT_CONNECTED (HRESULT)(INT)-2147220983
#define VFW_E_NO_ALLOCATOR (HRESULT)(INT)-2147220982
#define VFW_E_RUNTIME_ERROR (HRESULT)(INT)-2147220981
#define VFW_E_BUFFER_NOTSET (HRESULT)(INT)-2147220980
#define VFW_E_BUFFER_OVERFLOW (HRESULT)(INT)-2147220979
#define VFW_E_BADALIGN (HRESULT)(INT)-2147220978
#define VFW_E_ALREADY_COMMITTED (HRESULT)(INT)-2147220977
#define VFW_E_BUFFERS_OUTSTANDING (HRESULT)(INT)-2147220976
#define VFW_E_NOT_COMMITTED (HRESULT)(INT)-2147220975
#define VFW_E_SIZENOTSET (HRESULT)(INT)-2147220974
#define VFW_E_NO_CLOCK (HRESULT)(INT)-2147220973
#define VFW_E_NO_SINK (HRESULT)(INT)-2147220972
#define VFW_E_NO_INTERFACE (HRESULT)(INT)-2147220971
#define VFW_E_NOT_FOUND (HRESULT)(INT)-2147220970
#define VFW_E_CANNOT_CONNECT (HRESULT)(INT)-2147220969
#define VFW_E_CANNOT_RENDER (HRESULT)(INT)-2147220968
#define VFW_E_CHANGING_FORMAT (HRESULT)(INT)-2147220967
#define VFW_E_NO_COLOR_KEY_SET (HRESULT)(INT)-2147220966
#define VFW_E_NOT_OVERLAY_CONNECTION (HRESULT)(INT)-2147220965
#define VFW_E_NOT_SAMPLE_CONNECTION (HRESULT)(INT)-2147220964
#define VFW_E_PALETTE_SET (HRESULT)(INT)-2147220963
#define VFW_E_COLOR_KEY_SET (HRESULT)(INT)-2147220962
#define VFW_E_NO_COLOR_KEY_FOUND (HRESULT)(INT)-2147220961
#define VFW_E_NO_PALETTE_AVAILABLE (HRESULT)(INT)-2147220960
#define VFW_E_NO_DISPLAY_PALETTE (HRESULT)(INT)-2147220959
#define VFW_E_TOO_MANY_COLORS (HRESULT)(INT)-2147220958
#define VFW_E_STATE_CHANGED (HRESULT)(INT)-2147220957
#define VFW_E_NOT_STOPPED (HRESULT)(INT)-2147220956
#define VFW_E_NOT_PAUSED (HRESULT)(INT)-2147220955
#define VFW_E_NOT_RUNNING (HRESULT)(INT)-2147220954
#define VFW_E_WRONG_STATE (HRESULT)(INT)-2147220953
#define VFW_E_START_TIME_AFTER_END (HRESULT)(INT)-2147220952
#define VFW_E_INVALID_RECT (HRESULT)(INT)-2147220951
#define VFW_E_TYPE_NOT_ACCEPTED (HRESULT)(INT)-2147220950
#define VFW_E_SAMPLE_REJECTED (HRESULT)(INT)-2147220949
#define VFW_E_SAMPLE_REJECTED_EOS (HRESULT)(INT)-2147220948
#define VFW_E_DUPLICATE_NAME (HRESULT)(INT)-2147220947
#define VFW_S_DUPLICATE_NAME (HRESULT)(INT)262701
#define VFW_E_TIMEOUT (HRESULT)(INT)-2147220946
#define VFW_E_INVALID_FILE_FORMAT (HRESULT)(INT)-2147220945
#define VFW_E_ENUM_OUT_OF_RANGE (HRESULT)(INT)-2147220944
#define VFW_E_CIRCULAR_GRAPH (HRESULT)(INT)-2147220943
#define VFW_E_NOT_ALLOWED_TO_SAVE (HRESULT)(INT)-2147220942
#define VFW_E_TIME_ALREADY_PASSED (HRESULT)(INT)-2147220941
#define VFW_E_ALREADY_CANCELLED (HRESULT)(INT)-2147220940
#define VFW_E_CORRUPT_GRAPH_FILE (HRESULT)(INT)-2147220939
#define VFW_E_ADVISE_ALREADY_SET (HRESULT)(INT)-2147220938
#define VFW_S_STATE_INTERMEDIATE (HRESULT)(INT)262711
#define VFW_E_NO_MODEX_AVAILABLE (HRESULT)(INT)-2147220936
#define VFW_E_NO_ADVISE_SET (HRESULT)(INT)-2147220935
#define VFW_E_NO_FULLSCREEN (HRESULT)(INT)-2147220934
#define VFW_E_IN_FULLSCREEN_MODE (HRESULT)(INT)-2147220933
#define VFW_E_UNKNOWN_FILE_TYPE (HRESULT)(INT)-2147220928
#define VFW_E_CANNOT_LOAD_SOURCE_FILTER (HRESULT)(INT)-2147220927
#define VFW_S_PARTIAL_RENDER (HRESULT)(INT)262722
#define VFW_E_FILE_TOO_SHORT (HRESULT)(INT)-2147220925
#define VFW_E_INVALID_FILE_VERSION (HRESULT)(INT)-2147220924
#define VFW_S_SOME_DATA_IGNORED (HRESULT)(INT)262725
#define VFW_S_CONNECTIONS_DEFERRED (HRESULT)(INT)262726
#define VFW_E_INVALID_CLSID (HRESULT)(INT)-2147220921
#define VFW_E_INVALID_MEDIA_TYPE (HRESULT)(INT)-2147220920
#define VFW_E_BAD_KEY (HRESULT)(INT)-2147220494
#define VFW_S_NO_MORE_ITEMS (HRESULT)(INT)262403
#define VFW_E_SAMPLE_TIME_NOT_SET (HRESULT)(INT)-2147220919
#define VFW_S_RESOURCE_NOT_NEEDED (HRESULT)(INT)262736
#define VFW_E_MEDIA_TIME_NOT_SET (HRESULT)(INT)-2147220911
#define VFW_E_NO_TIME_FORMAT_SET (HRESULT)(INT)-2147220910
#define VFW_E_MONO_AUDIO_HW (HRESULT)(INT)-2147220909
#define VFW_S_MEDIA_TYPE_IGNORED (HRESULT)(INT)262740
#define VFW_E_NO_DECOMPRESSOR (HRESULT)(INT)-2147220907
#define VFW_E_NO_AUDIO_HARDWARE (HRESULT)(INT)-2147220906
#define VFW_S_VIDEO_NOT_RENDERED (HRESULT)(INT)262743
#define VFW_S_AUDIO_NOT_RENDERED (HRESULT)(INT)262744
#define VFW_E_RPZA (HRESULT)(INT)-2147220903
#define VFW_S_RPZA (HRESULT)(INT)262746
#define VFW_E_PROCESSOR_NOT_SUITABLE (HRESULT)(INT)-2147220901
#define VFW_E_UNSUPPORTED_AUDIO (HRESULT)(INT)-2147220900
#define VFW_E_UNSUPPORTED_VIDEO (HRESULT)(INT)-2147220899
#define VFW_E_MPEG_NOT_CONSTRAINED (HRESULT)(INT)-2147220898
#define VFW_E_NOT_IN_GRAPH (HRESULT)(INT)-2147220897
#define VFW_S_ESTIMATED (HRESULT)(INT)262752
#define VFW_E_NO_TIME_FORMAT (HRESULT)(INT)-2147220895
#define VFW_E_READ_ONLY (HRESULT)(INT)-2147220894
#define VFW_S_RESERVED (HRESULT)(INT)262755
#define VFW_E_BUFFER_UNDERFLOW (HRESULT)(INT)-2147220892
#define VFW_E_UNSUPPORTED_STREAM (HRESULT)(INT)-2147220891
#define VFW_E_NO_TRANSPORT (HRESULT)(INT)-2147220890
#define VFW_S_STREAM_OFF (HRESULT)(INT)262759
#define VFW_S_CANT_CUE (HRESULT)(INT)262760
#define VFW_E_BAD_VIDEOCD (HRESULT)(INT)-2147220887
#define VFW_S_NO_STOP_TIME (HRESULT)(INT)262768
#define VFW_E_OUT_OF_VIDEO_MEMORY (HRESULT)(INT)-2147220879
#define VFW_E_VP_NEGOTIATION_FAILED (HRESULT)(INT)-2147220878
#define VFW_E_DDRAW_CAPS_NOT_SUITABLE (HRESULT)(INT)-2147220877
#define VFW_E_NO_VP_HARDWARE (HRESULT)(INT)-2147220876
#define VFW_E_NO_CAPTURE_HARDWARE (HRESULT)(INT)-2147220875
#define VFW_E_DVD_OPERATION_INHIBITED (HRESULT)(INT)-2147220874
#define VFW_E_DVD_INVALIDDOMAIN (HRESULT)(INT)-2147220873
#define VFW_E_DVD_NO_BUTTON (HRESULT)(INT)-2147220872
#define VFW_E_DVD_GRAPHNOTREADY (HRESULT)(INT)-2147220871
#define VFW_E_DVD_RENDERFAIL (HRESULT)(INT)-2147220870
#define VFW_E_DVD_DECNOTENOUGH (HRESULT)(INT)-2147220869
#define VFW_E_DDRAW_VERSION_NOT_SUITABLE (HRESULT)(INT)-2147220868
#define VFW_E_COPYPROT_FAILED (HRESULT)(INT)-2147220867
#define VFW_S_NOPREVIEWPIN (HRESULT)(INT)262782
#define VFW_E_TIME_EXPIRED (HRESULT)(INT)-2147220865
#define VFW_S_DVD_NON_ONE_SEQUENTIAL (HRESULT)(INT)262784
#define VFW_E_DVD_WRONG_SPEED (HRESULT)(INT)-2147220863
#define VFW_E_DVD_MENU_DOES_NOT_EXIST (HRESULT)(INT)-2147220862
#define VFW_E_DVD_CMD_CANCELLED (HRESULT)(INT)-2147220861
#define VFW_E_DVD_STATE_WRONG_VERSION (HRESULT)(INT)-2147220860
#define VFW_E_DVD_STATE_CORRUPT (HRESULT)(INT)-2147220859
#define VFW_E_DVD_STATE_WRONG_DISC (HRESULT)(INT)-2147220858
#define VFW_E_DVD_INCOMPATIBLE_REGION (HRESULT)(INT)-2147220857
#define VFW_E_DVD_NO_ATTRIBUTES (HRESULT)(INT)-2147220856
#define VFW_E_DVD_NO_GOUP_PGC (HRESULT)(INT)-2147220855
#define VFW_E_DVD_LOW_PARENTAL_LEVEL (HRESULT)(INT)-2147220854
#define VFW_E_DVD_NOT_IN_KARAOKE_MODE (HRESULT)(INT)-2147220853
#define VFW_S_DVD_CHANNEL_CONTENTS_NOT_AVAILABLE (HRESULT)(INT)262796
#define VFW_S_DVD_NOT_ACCURATE (HRESULT)(INT)262797
#define VFW_E_FRAME_STEP_UNSUPPORTED (HRESULT)(INT)-2147220850
#define VFW_E_DVD_STREAM_DISABLED (HRESULT)(INT)-2147220849
#define VFW_E_DVD_TITLE_UNKNOWN (HRESULT)(INT)-2147220848
#define VFW_E_DVD_INVALID_DISC (HRESULT)(INT)-2147220847
#define VFW_E_DVD_NO_RESUME_INFORMATION (HRESULT)(INT)-2147220846
#define VFW_E_PIN_ALREADY_BLOCKED_ON_THIS_THREAD (HRESULT)(INT)-2147220845
#define VFW_E_PIN_ALREADY_BLOCKED (HRESULT)(INT)-2147220844
#define VFW_E_CERTIFICATION_FAILURE (HRESULT)(INT)-2147220843
#define VFW_E_VMR_NOT_IN_MIXER_MODE (HRESULT)(INT)-2147220842
#define VFW_E_VMR_NO_AP_SUPPLIED (HRESULT)(INT)-2147220841
#define VFW_E_VMR_NO_DEINTERLACE_HW (HRESULT)(INT)-2147220840
#define VFW_E_VMR_NO_PROCAMP_HW (HRESULT)(INT)-2147220839
#define VFW_E_DVD_VMR9_INCOMPATIBLEDEC (HRESULT)(INT)-2147220838
#define VFW_E_NO_COPP_HW (HRESULT)(INT)-2147220837
#define VFW_E_DVD_NONBLOCKING (HRESULT)(INT)-2147220836
#define VFW_E_DVD_TOO_MANY_RENDERERS_IN_FILTER_GRAPH (HRESULT)(INT)-2147220835
#define VFW_E_DVD_NON_EVR_RENDERER_IN_FILTER_GRAPH (HRESULT)(INT)-2147220834
#define VFW_E_DVD_RESOLUTION_ERROR (HRESULT)(INT)-2147220833
#define E_PROP_SET_UNSUPPORTED (HRESULT)(INT)-2147023726
#define E_PROP_ID_UNSUPPORTED (HRESULT)(INT)-2147023728
#define VFW_E_CODECAPI_LINEAR_RANGE (HRESULT)(INT)-2147220720
#define VFW_E_CODECAPI_ENUMERATED (HRESULT)(INT)-2147220719
#define VFW_E_CODECAPI_NO_DEFAULT (HRESULT)(INT)-2147220717
#define VFW_E_CODECAPI_NO_CURRENT_VALUE (HRESULT)(INT)-2147220716
#define VFW_E_DVD_CHAPTER_DOES_NOT_EXIST (HRESULT)(INT)-2147220715
#define VFW_S_DVD_RENDER_STATUS (HRESULT)(INT)262944
#define DTV_CardStatus_Inserted (UINT)0
#define DTV_CardStatus_Removed (UINT)1
#define DTV_CardStatus_Error (UINT)2
#define DTV_CardStatus_FirmwareDownload (UINT)3
#define OCUR_PAIRING_PROTOCOL_VERSION (UINT)2
#define PBDA_PAIRING_PROTOCOL_VERSION (UINT)3
#define DTV_MMIMessage_Open (UINT)0
#define DTV_MMIMessage_Close (UINT)1
#define DTV_Entitlement_CanDecrypt (UINT)0
#define DTV_Entitlement_NotEntitled (UINT)1
#define DTV_Entitlement_TechnicalFailure (UINT)2
#define AudioType_Standard (UINT)0
#define AudioType_Music_And_Effects (UINT)1
#define AudioType_Visually_Impaired (UINT)2
#define AudioType_Hearing_Impaired (UINT)3
#define AudioType_Dialogue (UINT)4
#define AudioType_Commentary (UINT)5
#define AudioType_Emergency (UINT)6
#define AudioType_Voiceover (UINT)7
#define AudioType_Reserved (INT)-1
#define MAX_COUNTRY_CODE_STRING (UINT)3
#define PARENTAL_CONTROL_TIME_RANGE (UINT)1
#define REQUIRED_PARENTAL_CONTROL_TIME_RANGE (UINT)2
#define PARENTAL_CONTROL_CONTENT_RATING (UINT)256
#define PARENTAL_CONTROL_ATTRIB_VIOLENCE (UINT)512
#define PARENTAL_CONTROL_ATTRIB_LANGUAGE (UINT)513
#define PARENTAL_CONTROL_ATTRIB_SEXUAL (UINT)514
#define PARENTAL_CONTROL_ATTRIB_DIALOGUE (UINT)515
#define PARENTAL_CONTROL_ATTRIB_FANTASY (UINT)516
#define PARENTAL_CONTROL_VALUE_UNDEFINED (UINT)0
#define MPEG2_FILTER_VERSION_1_SIZE (UINT)124
#define MPEG2_FILTER_VERSION_2_SIZE (UINT)133
#define SID_MSVidCtl_CurrentAudioEndpoint GUID { "cf9a88f4-abcf-4ed8-9b74-7db33445459e" }
#define STREAMBUFFER_EC_BASE (UINT)806
#define EVENTID_SBE2RecControlStarted GUID { "8966a89e-f83e-4c0e-bc3b-bfa7649e04cb" }
#define EVENTID_SBE2RecControlStopped GUID { "454b1ec8-0c9b-4caa-b1a1-1e7a2666f6c3" }
#define SBE2_STREAM_DESC_EVENT GUID { "2313a4ed-bf2d-454f-ad8a-d95ba7f91fee" }
#define SBE2_V1_STREAMS_CREATION_EVENT GUID { "000fcf09-97f5-46ac-9769-7a83b35384fb" }
#define SBE2_V2_STREAMS_CREATION_EVENT GUID { "a72530a3-0344-4cab-a2d0-fe937dbdcab3" }
#define SBE2_STREAM_DESC_VERSION (UINT)1
#define SID_DRMSecureServiceChannel GUID { "c4c4c4c4-0049-4e2b-98fb-9537f6ce516d" }
#define CLSID_ETFilterEncProperties GUID { "c4c4c481-0049-4e2b-98fb-9537f6ce516d" }
#define CLSID_ETFilterTagProperties GUID { "c4c4c491-0049-4e2b-98fb-9537f6ce516d" }
#define CLSID_PTFilter GUID { "9cd31617-b303-4f96-8330-2eb173ea4dc6" }
#define CLSID_DTFilterEncProperties GUID { "c4c4c482-0049-4e2b-98fb-9537f6ce516d" }
#define CLSID_DTFilterTagProperties GUID { "c4c4c492-0049-4e2b-98fb-9537f6ce516d" }
#define CLSID_XDSCodecProperties GUID { "c4c4c483-0049-4e2b-98fb-9537f6ce516d" }
#define CLSID_XDSCodecTagProperties GUID { "c4c4c493-0049-4e2b-98fb-9537f6ce516d" }
#define CLSID_CPCAFiltersCategory GUID { "c4c4c4fc-0049-4e2b-98fb-9537f6ce516d" }
#define EVENTID_XDSCodecNewXDSRating GUID { "c4c4c4e0-0049-4e2b-98fb-9537f6ce516d" }
#define EVENTID_XDSCodecDuplicateXDSRating GUID { "c4c4c4df-0049-4e2b-98fb-9537f6ce516d" }
#define EVENTID_XDSCodecNewXDSPacket GUID { "c4c4c4e1-0049-4e2b-98fb-9537f6ce516d" }
#define EVENTID_DTFilterRatingChange GUID { "c4c4c4e2-0049-4e2b-98fb-9537f6ce516d" }
#define EVENTID_DTFilterRatingsBlock GUID { "c4c4c4e3-0049-4e2b-98fb-9537f6ce516d" }
#define EVENTID_DTFilterRatingsUnblock GUID { "c4c4c4e4-0049-4e2b-98fb-9537f6ce516d" }
#define EVENTID_DTFilterXDSPacket GUID { "c4c4c4e5-0049-4e2b-98fb-9537f6ce516d" }
#define EVENTID_ETFilterEncryptionOn GUID { "c4c4c4e6-0049-4e2b-98fb-9537f6ce516d" }
#define EVENTID_ETFilterEncryptionOff GUID { "c4c4c4e7-0049-4e2b-98fb-9537f6ce516d" }
#define EVENTID_DTFilterCOPPUnblock GUID { "c4c4c4e8-0049-4e2b-98fb-9537f6ce516d" }
#define EVENTID_EncDecFilterError GUID { "c4c4c4e9-0049-4e2b-98fb-9537f6ce516d" }
#define EVENTID_DTFilterCOPPBlock GUID { "c4c4c4ea-0049-4e2b-98fb-9537f6ce516d" }
#define EVENTID_ETFilterCopyOnce GUID { "c4c4c4eb-0049-4e2b-98fb-9537f6ce516d" }
#define EVENTID_ETFilterCopyNever GUID { "c4c4c4f0-0049-4e2b-98fb-9537f6ce516d" }
#define EVENTID_DTFilterDataFormatOK GUID { "c4c4c4ec-0049-4e2b-98fb-9537f6ce516d" }
#define EVENTID_DTFilterDataFormatFailure GUID { "c4c4c4ed-0049-4e2b-98fb-9537f6ce516d" }
#define EVENTID_ETDTFilterLicenseOK GUID { "c4c4c4ee-0049-4e2b-98fb-9537f6ce516d" }
#define EVENTID_ETDTFilterLicenseFailure GUID { "c4c4c4ef-0049-4e2b-98fb-9537f6ce516d" }
#define MEDIASUBTYPE_ETDTFilter_Tagged GUID { "c4c4c4d0-0049-4e2b-98fb-9537f6ce516d" }
#define FORMATTYPE_ETDTFilter_Tagged GUID { "c4c4c4d1-0049-4e2b-98fb-9537f6ce516d" }
#define MEDIASUBTYPE_CPFilters_Processed GUID { "46adbd28-6fd0-4796-93b2-155c51dc048d" }
#define FORMATTYPE_CPFilters_Processed GUID { "6739b36f-1d5f-4ac2-8192-28bb0e73d16a" }
#define EVENTID_EncDecFilterEvent GUID { "4a1b465b-0fb9-4159-afbd-e33006a0f9f4" }
#define EVENTID_FormatNotSupportedEvent GUID { "24b2280a-b2aa-4777-bf65-63f35e7b024a" }
#define EVENTID_DemultiplexerFilterDiscontinuity GUID { "16155770-aed5-475c-bb98-95a33070df0c" }
#define DSATTRIB_WMDRMProtectionInfo GUID { "40749583-6b9d-4eec-b43c-67a1801e1a9b" }
#define DSATTRIB_BadSampleInfo GUID { "e4846dda-5838-42b4-b897-6f7e5faa2f2f" }
#define MPEG_PAT_PID (UINT)0
#define MPEG_PAT_TID (UINT)0
#define MPEG_CAT_PID (UINT)1
#define MPEG_CAT_TID (UINT)1
#define MPEG_PMT_TID (UINT)2
#define MPEG_TSDT_PID (UINT)2
#define MPEG_TSDT_TID (UINT)3
#define ATSC_MGT_PID (UINT)8187
#define ATSC_MGT_TID (UINT)199
#define ATSC_VCT_PID (UINT)8187
#define ATSC_VCT_TERR_TID (UINT)200
#define ATSC_VCT_CABL_TID (UINT)201
#define ATSC_EIT_TID (UINT)203
#define ATSC_ETT_TID (UINT)204
#define ATSC_RRT_TID (UINT)202
#define ATSC_RRT_PID (UINT)8187
#define ATSC_STT_PID (UINT)8187
#define ATSC_STT_TID (UINT)205
#define ATSC_PIT_TID (UINT)208
#define DVB_NIT_PID (UINT)16
#define DVB_NIT_ACTUAL_TID (UINT)64
#define DVB_NIT_OTHER_TID (UINT)65
#define DVB_SDT_PID (UINT)17
#define DVB_SDT_ACTUAL_TID (UINT)66
#define DVB_SDT_OTHER_TID (UINT)70
#define DVB_BAT_PID (UINT)17
#define DVB_BAT_TID (UINT)74
#define DVB_EIT_PID (UINT)18
#define DVB_EIT_ACTUAL_TID (UINT)78
#define DVB_EIT_OTHER_TID (UINT)79
#define DVB_RST_PID (UINT)19
#define DVB_RST_TID (UINT)113
#define DVB_TDT_PID (UINT)20
#define DVB_TDT_TID (UINT)112
#define DVB_ST_PID_16 (UINT)16
#define DVB_ST_PID_17 (UINT)17
#define DVB_ST_PID_18 (UINT)18
#define DVB_ST_PID_19 (UINT)19
#define DVB_ST_PID_20 (UINT)20
#define DVB_ST_TID (UINT)114
#define ISDB_ST_TID (UINT)114
#define DVB_TOT_PID (UINT)20
#define DVB_TOT_TID (UINT)115
#define DVB_DIT_PID (UINT)30
#define DVB_DIT_TID (UINT)126
#define DVB_SIT_PID (UINT)31
#define DVB_SIT_TID (UINT)127
#define ISDB_EMM_TID (UINT)133
#define ISDB_BIT_PID (UINT)36
#define ISDB_BIT_TID (UINT)196
#define ISDB_NBIT_PID (UINT)37
#define ISDB_NBIT_MSG_TID (UINT)197
#define ISDB_NBIT_REF_TID (UINT)198
#define ISDB_LDT_PID (UINT)37
#define ISDB_LDT_TID (UINT)199
#define ISDB_SDTT_PID (UINT)35
#define ISDB_SDTT_ALT_PID (UINT)40
#define ISDB_SDTT_TID (UINT)195
#define ISDB_CDT_PID (UINT)41
#define ISDB_CDT_TID (UINT)200
#define SCTE_EAS_TID (UINT)216
#define SCTE_EAS_IB_PID (UINT)8187
#define SCTE_EAS_OOB_PID (UINT)8188
#define CLSID_Mpeg2TableFilter GUID { "752845f1-758f-4c83-a043-4270c593308e" }
#define ATSC_ETM_LOCATION_NOT_PRESENT (UINT)0
#define ATSC_ETM_LOCATION_IN_PTC_FOR_PSIP (UINT)1
#define ATSC_ETM_LOCATION_IN_PTC_FOR_EVENT (UINT)2
#define ATSC_ETM_LOCATION_RESERVED (UINT)3
#define SAMPLE_SEQ_SEQUENCE_HEADER (UINT)1
#define SAMPLE_SEQ_GOP_HEADER (UINT)2
#define SAMPLE_SEQ_PICTURE_HEADER (UINT)3
#define SAMPLE_SEQ_CONTENT_UNKNOWN (UINT)0
#define SAMPLE_SEQ_CONTENT_I_FRAME (UINT)1
#define SAMPLE_SEQ_CONTENT_P_FRAME (UINT)2
#define SAMPLE_SEQ_CONTENT_B_FRAME (UINT)3
#define COMPONENT_TAG_CAPTION_MIN (UINT)48
#define COMPONENT_TAG_CAPTION_MAX (UINT)55
#define COMPONENT_TAG_SUPERIMPOSE_MIN (UINT)56
#define COMPONENT_TAG_SUPERIMPOSE_MAX (UINT)63
#define g_wszExcludeScriptStreamDeliverySynchronization "ExcludeScriptStreamDeliverySynchronization"
#define g_wszStreamBufferRecordingDuration "Duration"
#define g_wszStreamBufferRecordingBitrate "Bitrate"
#define g_wszStreamBufferRecordingSeekable "Seekable"
#define g_wszStreamBufferRecordingStridable "Stridable"
#define g_wszStreamBufferRecordingBroadcast "Broadcast"
#define g_wszStreamBufferRecordingProtected "Is_Protected"
#define g_wszStreamBufferRecordingTrusted "Is_Trusted"
#define g_wszStreamBufferRecordingSignature_Name "Signature_Name"
#define g_wszStreamBufferRecordingHasAudio "HasAudio"
#define g_wszStreamBufferRecordingHasImage "HasImage"
#define g_wszStreamBufferRecordingHasScript "HasScript"
#define g_wszStreamBufferRecordingHasVideo "HasVideo"
#define g_wszStreamBufferRecordingCurrentBitrate "CurrentBitrate"
#define g_wszStreamBufferRecordingOptimalBitrate "OptimalBitrate"
#define g_wszStreamBufferRecordingHasAttachedImages "HasAttachedImages"
#define g_wszStreamBufferRecordingSkipBackward "Can_Skip_Backward"
#define g_wszStreamBufferRecordingSkipForward "Can_Skip_Forward"
#define g_wszStreamBufferRecordingNumberOfFrames "NumberOfFrames"
#define g_wszStreamBufferRecordingFileSize "FileSize"
#define g_wszStreamBufferRecordingHasArbitraryDataStream "HasArbitraryDataStream"
#define g_wszStreamBufferRecordingHasFileTransferStream "HasFileTransferStream"
#define g_wszStreamBufferRecordingTitle "Title"
#define g_wszStreamBufferRecordingAuthor "Author"
#define g_wszStreamBufferRecordingDescription "Description"
#define g_wszStreamBufferRecordingRating "Rating"
#define g_wszStreamBufferRecordingCopyright "Copyright"
#define g_wszStreamBufferRecordingUse_DRM "Use_DRM"
#define g_wszStreamBufferRecordingDRM_Flags "DRM_Flags"
#define g_wszStreamBufferRecordingDRM_Level "DRM_Level"
#define g_wszStreamBufferRecordingAlbumTitle "WM/AlbumTitle"
#define g_wszStreamBufferRecordingTrack "WM/Track"
#define g_wszStreamBufferRecordingPromotionURL "WM/PromotionURL"
#define g_wszStreamBufferRecordingAlbumCoverURL "WM/AlbumCoverURL"
#define g_wszStreamBufferRecordingGenre "WM/Genre"
#define g_wszStreamBufferRecordingYear "WM/Year"
#define g_wszStreamBufferRecordingGenreID "WM/GenreID"
#define g_wszStreamBufferRecordingMCDI "WM/MCDI"
#define g_wszStreamBufferRecordingComposer "WM/Composer"
#define g_wszStreamBufferRecordingLyrics "WM/Lyrics"
#define g_wszStreamBufferRecordingTrackNumber "WM/TrackNumber"
#define g_wszStreamBufferRecordingToolName "WM/ToolName"
#define g_wszStreamBufferRecordingToolVersion "WM/ToolVersion"
#define g_wszStreamBufferRecordingIsVBR "IsVBR"
#define g_wszStreamBufferRecordingAlbumArtist "WM/AlbumArtist"
#define g_wszStreamBufferRecordingBannerImageType "BannerImageType"
#define g_wszStreamBufferRecordingBannerImageData "BannerImageData"
#define g_wszStreamBufferRecordingBannerImageURL "BannerImageURL"
#define g_wszStreamBufferRecordingCopyrightURL "CopyrightURL"
#define g_wszStreamBufferRecordingAspectRatioX "AspectRatioX"
#define g_wszStreamBufferRecordingAspectRatioY "AspectRatioY"
#define g_wszStreamBufferRecordingNSCName "NSC_Name"
#define g_wszStreamBufferRecordingNSCAddress "NSC_Address"
#define g_wszStreamBufferRecordingNSCPhone "NSC_Phone"
#define g_wszStreamBufferRecordingNSCEmail "NSC_Email"
#define g_wszStreamBufferRecordingNSCDescription "NSC_Description"
#define STREAMBUFFER_EC_TIMEHOLE (INT)806
#define STREAMBUFFER_EC_STALE_DATA_READ (INT)807
#define STREAMBUFFER_EC_STALE_FILE_DELETED (INT)808
#define STREAMBUFFER_EC_CONTENT_BECOMING_STALE (INT)809
#define STREAMBUFFER_EC_WRITE_FAILURE (INT)810
#define STREAMBUFFER_EC_WRITE_FAILURE_CLEAR (INT)811
#define STREAMBUFFER_EC_READ_FAILURE (INT)812
#define STREAMBUFFER_EC_RATE_CHANGED (INT)813
#define STREAMBUFFER_EC_PRIMARY_AUDIO (INT)814
#define STREAMBUFFER_EC_RATE_CHANGING_FOR_SETPOSITIONS (INT)815
#define STREAMBUFFER_EC_SETPOSITIONS_EVENTS_DONE (INT)816

//--------------------------------------------------------------------------------
// Section: Types (1475)
//--------------------------------------------------------------------------------
typedef enum {
    OATRUE = -1,
    OAFALSE = 0,
} OA_BOOL;

typedef enum {
    AMMPEG2_DoPanScan = 1,
    AMMPEG2_DVDLine21Field1 = 2,
    AMMPEG2_DVDLine21Field2 = 4,
    AMMPEG2_SourceIsLetterboxed = 8,
    AMMPEG2_FilmCameraMode = 16,
    AMMPEG2_LetterboxAnalogOut = 32,
    AMMPEG2_DSS_UserData = 64,
    AMMPEG2_DVB_UserData = 128,
    AMMPEG2_27MhzTimebase = 256,
    AMMPEG2_WidescreenAnalogOut = 512,
} MPEG2VIDEOINFO_FLAGS;

typedef enum {
    MPEGLAYER3_FLAG_PADDING_ISO = 0,
    MPEGLAYER3_FLAG_PADDING_ON = 1,
    MPEGLAYER3_FLAG_PADDING_OFF = 2,
} MPEGLAYER3WAVEFORMAT_FLAGS;

typedef int IKsPin;

typedef int IKsAllocator;

typedef int IKsAllocatorEx;

typedef int KSTOPOLOGY_CONNECTION;

typedef int TIMECODE;

typedef int TIMECODE_SAMPLE;

typedef enum {
    ConstantBitRate = 0,
    VariableBitRateAverage = 1,
    VariableBitRatePeak = 2,
} VIDEOENCODER_BITRATE_MODE;

typedef enum {
    AMVP_DO_NOT_CARE = 0,
    AMVP_BEST_BANDWIDTH = 1,
    AMVP_INPUT_SAME_AS_OUTPUT = 2,
} AMVP_SELECT_FORMAT_BY;

typedef enum {
    AMVP_MODE_WEAVE = 0,
    AMVP_MODE_BOBINTERLEAVED = 1,
    AMVP_MODE_BOBNONINTERLEAVED = 2,
    AMVP_MODE_SKIPEVEN = 3,
    AMVP_MODE_SKIPODD = 4,
} AMVP_MODE;

typedef int AMVPSIZE;

typedef int AMVPDIMINFO;

typedef int AMVPDATAINFO;

// TODO: this type is limited to platform 'windows5.0'
typedef int ICreateDevEnum;

typedef int AM_MEDIA_TYPE;

typedef enum {
    PINDIR_INPUT = 0,
    PINDIR_OUTPUT = 1,
} PIN_DIRECTION;

typedef int ALLOCATOR_PROPERTIES;

typedef int PIN_INFO;

// TODO: this type is limited to platform 'windows5.0'
typedef int IPin;

// TODO: this type is limited to platform 'windows5.0'
typedef int IEnumPins;

// TODO: this type is limited to platform 'windows5.0'
typedef int IEnumMediaTypes;

// TODO: this type is limited to platform 'windows5.0'
typedef int IFilterGraph;

// TODO: this type is limited to platform 'windows5.0'
typedef int IEnumFilters;

typedef enum {
    State_Stopped = 0,
    State_Paused = 1,
    State_Running = 2,
} FILTER_STATE;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMediaFilter;

typedef int FILTER_INFO;

// TODO: this type is limited to platform 'windows5.0'
typedef int IBaseFilter;

// TODO: this type is limited to platform 'windows5.0'
typedef int IReferenceClock;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IReferenceClockTimerControl;

typedef int IReferenceClock2;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMediaSample;

typedef enum {
    AM_SAMPLE_SPLICEPOINT = 1,
    AM_SAMPLE_PREROLL = 2,
    AM_SAMPLE_DATADISCONTINUITY = 4,
    AM_SAMPLE_TYPECHANGED = 8,
    AM_SAMPLE_TIMEVALID = 16,
    AM_SAMPLE_TIMEDISCONTINUITY = 64,
    AM_SAMPLE_FLUSH_ON_PAUSE = 128,
    AM_SAMPLE_STOPVALID = 256,
    AM_SAMPLE_ENDOFSTREAM = 512,
    AM_STREAM_MEDIA = 0,
    AM_STREAM_CONTROL = 1,
} AM_SAMPLE_PROPERTY_FLAGS;

typedef int AM_SAMPLE2_PROPERTIES;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMediaSample2;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMediaSample2Config;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMemAllocator;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMemAllocatorCallbackTemp;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMemAllocatorNotifyCallbackTemp;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMemInputPin;

typedef int IAMovieSetup;

typedef enum {
    AM_SEEKING_NoPositioning = 0,
    AM_SEEKING_AbsolutePositioning = 1,
    AM_SEEKING_RelativePositioning = 2,
    AM_SEEKING_IncrementalPositioning = 3,
    AM_SEEKING_PositioningBitsMask = 3,
    AM_SEEKING_SeekToKeyFrame = 4,
    AM_SEEKING_ReturnTime = 8,
    AM_SEEKING_Segment = 16,
    AM_SEEKING_NoFlush = 32,
} AM_SEEKING_SeekingFlags;

typedef enum {
    AM_SEEKING_CanSeekAbsolute = 1,
    AM_SEEKING_CanSeekForwards = 2,
    AM_SEEKING_CanSeekBackwards = 4,
    AM_SEEKING_CanGetCurrentPos = 8,
    AM_SEEKING_CanGetStopPos = 16,
    AM_SEEKING_CanGetDuration = 32,
    AM_SEEKING_CanPlayBackwards = 64,
    AM_SEEKING_CanDoSegments = 128,
    AM_SEEKING_Source = 256,
} AM_SEEKING_SEEKING_CAPABILITIES;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMediaSeeking;

typedef enum {
    AM_MEDIAEVENT_NONOTIFY = 1,
} AM_MEDIAEVENT_FLAGS;

typedef int REGFILTER;

typedef int IEnumRegFilters;

typedef enum {
    MERIT_PREFERRED = 8388608,
    MERIT_NORMAL = 6291456,
    MERIT_UNLIKELY = 4194304,
    MERIT_DO_NOT_USE = 2097152,
    MERIT_SW_COMPRESSOR = 1048576,
    MERIT_HW_COMPRESSOR = 1048656,
} IFILTERMAPPER_MERIT;

typedef int IFilterMapper;

typedef int REGPINTYPES;

typedef int REGFILTERPINS;

typedef int REGPINMEDIUM;

typedef enum {
    REG_PINFLAG_B_ZERO = 1,
    REG_PINFLAG_B_RENDERER = 2,
    REG_PINFLAG_B_MANY = 4,
    REG_PINFLAG_B_OUTPUT = 8,
} REG_PINFLAG;

typedef int REGFILTERPINS2;

typedef int REGFILTER2;

// TODO: this type is limited to platform 'windows5.0'
typedef int IFilterMapper2;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IFilterMapper3;

typedef enum {
    Famine = 0,
    Flood = 1,
} QualityMessageType;

typedef int Quality;

// TODO: this type is limited to platform 'windows5.0'
typedef int IQualityControl;

typedef enum {
    CK_NOCOLORKEY = 0,
    CK_INDEX = 1,
    CK_RGB = 2,
} COLORKEY_TYPE;

typedef int COLORKEY;

typedef enum {
    ADVISE_NONE = 0,
    ADVISE_CLIPPING = 1,
    ADVISE_PALETTE = 2,
    ADVISE_COLORKEY = 4,
    ADVISE_POSITION = 8,
    ADVISE_DISPLAY_CHANGE = 16,
} ADVISE_TYPE;

// TODO: this type is limited to platform 'windows5.0'
typedef int IOverlayNotify;

// TODO: this type is limited to platform 'windows5.0'
typedef int IOverlayNotify2;

// TODO: this type is limited to platform 'windows5.0'
typedef int IOverlay;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMediaEventSink;

// TODO: this type is limited to platform 'windows5.0'
typedef int IFileSourceFilter;

// TODO: this type is limited to platform 'windows5.0'
typedef int IFileSinkFilter;

// TODO: this type is limited to platform 'windows5.0'
typedef int IFileSinkFilter2;

typedef enum {
    AM_FILE_OVERWRITE = 1,
} AM_FILESINK_FLAGS;

// TODO: this type is limited to platform 'windows5.0'
typedef int IGraphBuilder;

typedef int ICaptureGraphBuilder;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMCopyCaptureFileProgress;

// TODO: this type is limited to platform 'windows5.0'
typedef int ICaptureGraphBuilder2;

typedef enum {
    AM_RENDEREX_RENDERTOEXISTINGRENDERERS = 1,
} _AM_RENSDEREXFLAGS;

// TODO: this type is limited to platform 'windows5.0'
typedef int IFilterGraph2;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IFilterGraph3;

// TODO: this type is limited to platform 'windows5.0'
typedef int IStreamBuilder;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAsyncReader;

// TODO: this type is limited to platform 'windows5.0'
typedef int IGraphVersion;

// TODO: this type is limited to platform 'windows5.0'
typedef int IResourceConsumer;

// TODO: this type is limited to platform 'windows5.0'
typedef int IResourceManager;

// TODO: this type is limited to platform 'windows5.0'
typedef int IDistributorNotify;

typedef enum {
    AM_STREAM_INFO_START_DEFINED = 1,
    AM_STREAM_INFO_STOP_DEFINED = 2,
    AM_STREAM_INFO_DISCARDING = 4,
    AM_STREAM_INFO_STOP_SEND_EXTRA = 16,
} AM_STREAM_INFO_FLAGS;

typedef int AM_STREAM_INFO;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMStreamControl;

// TODO: this type is limited to platform 'windows5.0'
typedef int ISeekingPassThru;

typedef int VIDEO_STREAM_CONFIG_CAPS;

typedef int AUDIO_STREAM_CONFIG_CAPS;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMStreamConfig;

typedef enum {
    INTERLEAVE_NONE = 0,
    INTERLEAVE_CAPTURE = 1,
    INTERLEAVE_FULL = 2,
    INTERLEAVE_NONE_BUFFERED = 3,
} InterleavingMode;

// TODO: this type is limited to platform 'windows5.0'
typedef int IConfigInterleaving;

// TODO: this type is limited to platform 'windows5.0'
typedef int IConfigAviMux;

typedef enum {
    CompressionCaps_CanQuality = 1,
    CompressionCaps_CanCrunch = 2,
    CompressionCaps_CanKeyFrame = 4,
    CompressionCaps_CanBFrame = 8,
    CompressionCaps_CanWindow = 16,
} CompressionCaps;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMVideoCompression;

typedef enum {
    VfwCaptureDialog_Source = 1,
    VfwCaptureDialog_Format = 2,
    VfwCaptureDialog_Display = 4,
} VfwCaptureDialogs;

typedef enum {
    VfwCompressDialog_Config = 1,
    VfwCompressDialog_About = 2,
    VfwCompressDialog_QueryConfig = 4,
    VfwCompressDialog_QueryAbout = 8,
} VfwCompressDialogs;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMVfwCaptureDialogs;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMVfwCompressDialogs;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMDroppedFrames;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMAudioInputMixer;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMBufferNegotiation;

typedef enum {
    AnalogVideo_None = 0,
    AnalogVideo_NTSC_M = 1,
    AnalogVideo_NTSC_M_J = 2,
    AnalogVideo_NTSC_433 = 4,
    AnalogVideo_PAL_B = 16,
    AnalogVideo_PAL_D = 32,
    AnalogVideo_PAL_G = 64,
    AnalogVideo_PAL_H = 128,
    AnalogVideo_PAL_I = 256,
    AnalogVideo_PAL_M = 512,
    AnalogVideo_PAL_N = 1024,
    AnalogVideo_PAL_60 = 2048,
    AnalogVideo_SECAM_B = 4096,
    AnalogVideo_SECAM_D = 8192,
    AnalogVideo_SECAM_G = 16384,
    AnalogVideo_SECAM_H = 32768,
    AnalogVideo_SECAM_K = 65536,
    AnalogVideo_SECAM_K1 = 131072,
    AnalogVideo_SECAM_L = 262144,
    AnalogVideo_SECAM_L1 = 524288,
    AnalogVideo_PAL_N_COMBO = 1048576,
    AnalogVideoMask_MCE_NTSC = 1052167,
    AnalogVideoMask_MCE_PAL = 496,
    AnalogVideoMask_MCE_SECAM = 1044480,
} AnalogVideoStandard;

typedef enum {
    TunerInputCable = 0,
    TunerInputAntenna = 1,
} TunerInputType;

typedef enum {
    VideoCopyProtectionMacrovisionBasic = 0,
    VideoCopyProtectionMacrovisionCBI = 1,
} VideoCopyProtectionType;

typedef enum {
    PhysConn_Video_Tuner = 1,
    PhysConn_Video_Composite = 2,
    PhysConn_Video_SVideo = 3,
    PhysConn_Video_RGB = 4,
    PhysConn_Video_YRYBY = 5,
    PhysConn_Video_SerialDigital = 6,
    PhysConn_Video_ParallelDigital = 7,
    PhysConn_Video_SCSI = 8,
    PhysConn_Video_AUX = 9,
    PhysConn_Video_1394 = 10,
    PhysConn_Video_USB = 11,
    PhysConn_Video_VideoDecoder = 12,
    PhysConn_Video_VideoEncoder = 13,
    PhysConn_Video_SCART = 14,
    PhysConn_Video_Black = 15,
    PhysConn_Audio_Tuner = 4096,
    PhysConn_Audio_Line = 4097,
    PhysConn_Audio_Mic = 4098,
    PhysConn_Audio_AESDigital = 4099,
    PhysConn_Audio_SPDIFDigital = 4100,
    PhysConn_Audio_SCSI = 4101,
    PhysConn_Audio_AUX = 4102,
    PhysConn_Audio_1394 = 4103,
    PhysConn_Audio_USB = 4104,
    PhysConn_Audio_AudioDecoder = 4105,
} PhysicalConnectorType;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMAnalogVideoDecoder;

typedef enum {
    VideoProcAmp_Brightness = 0,
    VideoProcAmp_Contrast = 1,
    VideoProcAmp_Hue = 2,
    VideoProcAmp_Saturation = 3,
    VideoProcAmp_Sharpness = 4,
    VideoProcAmp_Gamma = 5,
    VideoProcAmp_ColorEnable = 6,
    VideoProcAmp_WhiteBalance = 7,
    VideoProcAmp_BacklightCompensation = 8,
    VideoProcAmp_Gain = 9,
} VideoProcAmpProperty;

typedef enum {
    VideoProcAmp_Flags_Auto = 1,
    VideoProcAmp_Flags_Manual = 2,
} VideoProcAmpFlags;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMVideoProcAmp;

typedef enum {
    CameraControl_Pan = 0,
    CameraControl_Tilt = 1,
    CameraControl_Roll = 2,
    CameraControl_Zoom = 3,
    CameraControl_Exposure = 4,
    CameraControl_Iris = 5,
    CameraControl_Focus = 6,
} CameraControlProperty;

typedef enum {
    CameraControl_Flags_Auto = 1,
    CameraControl_Flags_Manual = 2,
} CameraControlFlags;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMCameraControl;

typedef enum {
    VideoControlFlag_FlipHorizontal = 1,
    VideoControlFlag_FlipVertical = 2,
    VideoControlFlag_ExternalTriggerEnable = 4,
    VideoControlFlag_Trigger = 8,
} VideoControlFlags;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMVideoControl;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMCrossbar;

typedef enum {
    AMTUNER_SUBCHAN_NO_TUNE = -2,
    AMTUNER_SUBCHAN_DEFAULT = -1,
} AMTunerSubChannel;

typedef enum {
    AMTUNER_HASNOSIGNALSTRENGTH = -1,
    AMTUNER_NOSIGNAL = 0,
    AMTUNER_SIGNALPRESENT = 1,
} AMTunerSignalStrength;

typedef enum {
    AMTUNER_MODE_DEFAULT = 0,
    AMTUNER_MODE_TV = 1,
    AMTUNER_MODE_FM_RADIO = 2,
    AMTUNER_MODE_AM_RADIO = 4,
    AMTUNER_MODE_DSS = 8,
} AMTunerModeType;

typedef enum {
    AMTUNER_EVENT_CHANGED = 1,
} AMTunerEventType;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMTuner;

typedef int IAMTunerNotification;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMTVTuner;

typedef int IBPCSatelliteTuner;

typedef enum {
    AMTVAUDIO_MODE_MONO = 1,
    AMTVAUDIO_MODE_STEREO = 2,
    AMTVAUDIO_MODE_LANG_A = 16,
    AMTVAUDIO_MODE_LANG_B = 32,
    AMTVAUDIO_MODE_LANG_C = 64,
    AMTVAUDIO_PRESET_STEREO = 512,
    AMTVAUDIO_PRESET_LANG_A = 4096,
    AMTVAUDIO_PRESET_LANG_B = 8192,
    AMTVAUDIO_PRESET_LANG_C = 16384,
} TVAudioMode;

typedef enum {
    AMTVAUDIO_EVENT_CHANGED = 1,
} AMTVAudioEventType;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMTVAudio;

typedef int IAMTVAudioNotification;

typedef int IAMAnalogVideoEncoder;

typedef enum {
    AMPROPERTY_PIN_CATEGORY = 0,
    AMPROPERTY_PIN_MEDIUM = 1,
} AMPROPERTY_PIN;

typedef int IKsPropertySet;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMediaPropertyBag;

// TODO: this type is limited to platform 'windows5.0'
typedef int IPersistMediaPropertyBag;

typedef int IAMPhysicalPinInfo;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMExtDevice;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMExtTransport;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMTimecodeReader;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMTimecodeGenerator;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMTimecodeDisplay;

typedef int IAMDevMemoryAllocator;

typedef int IAMDevMemoryControl;

typedef enum {
    AMSTREAMSELECTINFO_ENABLED = 1,
    AMSTREAMSELECTINFO_EXCLUSIVE = 2,
} _AMSTREAMSELECTINFOFLAGS;

typedef enum {
    AMSTREAMSELECTENABLE_ENABLE = 1,
    AMSTREAMSELECTENABLE_ENABLEALL = 2,
} _AMSTREAMSELECTENABLEFLAGS;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMStreamSelect;

typedef enum {
    AMRESCTL_RESERVEFLAGS_RESERVE = 0,
    AMRESCTL_RESERVEFLAGS_UNRESERVE = 1,
} _AMRESCTL_RESERVEFLAGS;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMResourceControl;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMClockAdjust;

typedef enum {
    AM_FILTER_MISC_FLAGS_IS_RENDERER = 1,
    AM_FILTER_MISC_FLAGS_IS_SOURCE = 2,
} _AM_FILTER_MISC_FLAGS;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMFilterMiscFlags;

typedef int IDrawVideoImage;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDecimateVideoImage;

typedef enum {
    DECIMATION_LEGACY = 0,
    DECIMATION_USE_DECODER_ONLY = 1,
    DECIMATION_USE_VIDEOPORT_ONLY = 2,
    DECIMATION_USE_OVERLAY_ONLY = 3,
    DECIMATION_DEFAULT = 4,
} DECIMATION_USAGE;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IAMVideoDecimationProperties;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVideoFrameStep;

typedef enum {
    AM_PUSHSOURCECAPS_INTERNAL_RM = 1,
    AM_PUSHSOURCECAPS_NOT_LIVE = 2,
    AM_PUSHSOURCECAPS_PRIVATE_CLOCK = 4,
    AM_PUSHSOURCEREQS_USE_STREAM_CLOCK = 65536,
    AM_PUSHSOURCEREQS_USE_CLOCK_CHAIN = 131072,
} _AM_PUSHSOURCE_FLAGS;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IAMLatency;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IAMPushSource;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMDeviceRemoval;

typedef int DVINFO;

typedef enum {
    DVENCODERRESOLUTION_720x480 = 2012,
    DVENCODERRESOLUTION_360x240 = 2013,
    DVENCODERRESOLUTION_180x120 = 2014,
    DVENCODERRESOLUTION_88x60 = 2015,
} _DVENCODERRESOLUTION;

typedef enum {
    DVENCODERVIDEOFORMAT_NTSC = 2000,
    DVENCODERVIDEOFORMAT_PAL = 2001,
} _DVENCODERVIDEOFORMAT;

typedef enum {
    DVENCODERFORMAT_DVSD = 2007,
    DVENCODERFORMAT_DVHD = 2008,
    DVENCODERFORMAT_DVSL = 2009,
} _DVENCODERFORMAT;

// TODO: this type is limited to platform 'windows5.0'
typedef int IDVEnc;

typedef enum {
    DVDECODERRESOLUTION_720x480 = 1000,
    DVDECODERRESOLUTION_360x240 = 1001,
    DVDECODERRESOLUTION_180x120 = 1002,
    DVDECODERRESOLUTION_88x60 = 1003,
} _DVDECODERRESOLUTION;

typedef enum {
    DVRESOLUTION_FULL = 1000,
    DVRESOLUTION_HALF = 1001,
    DVRESOLUTION_QUARTER = 1002,
    DVRESOLUTION_DC = 1003,
} _DVRESOLUTION;

// TODO: this type is limited to platform 'windows5.0'
typedef int IIPDVDec;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDVRGB219;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDVSplitter;

typedef enum {
    AM_AUDREND_STAT_PARAM_BREAK_COUNT = 1,
    AM_AUDREND_STAT_PARAM_SLAVE_MODE = 2,
    AM_AUDREND_STAT_PARAM_SILENCE_DUR = 3,
    AM_AUDREND_STAT_PARAM_LAST_BUFFER_DUR = 4,
    AM_AUDREND_STAT_PARAM_DISCONTINUITIES = 5,
    AM_AUDREND_STAT_PARAM_SLAVE_RATE = 6,
    AM_AUDREND_STAT_PARAM_SLAVE_DROPWRITE_DUR = 7,
    AM_AUDREND_STAT_PARAM_SLAVE_HIGHLOWERROR = 8,
    AM_AUDREND_STAT_PARAM_SLAVE_LASTHIGHLOWERROR = 9,
    AM_AUDREND_STAT_PARAM_SLAVE_ACCUMERROR = 10,
    AM_AUDREND_STAT_PARAM_BUFFERFULLNESS = 11,
    AM_AUDREND_STAT_PARAM_JITTER = 12,
} _AM_AUDIO_RENDERER_STAT_PARAM;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IAMAudioRendererStats;

typedef enum {
    AM_INTF_SEARCH_INPUT_PIN = 1,
    AM_INTF_SEARCH_OUTPUT_PIN = 2,
    AM_INTF_SEARCH_FILTER = 4,
} _AM_INTF_SEARCH_FLAGS;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IAMGraphStreams;

typedef enum {
    AMOVERFX_NOFX = 0,
    AMOVERFX_MIRRORLEFTRIGHT = 2,
    AMOVERFX_MIRRORUPDOWN = 4,
    AMOVERFX_DEINTERLACE = 8,
} AMOVERLAYFX;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IAMOverlayFX;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMOpenProgress;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMpeg2Demultiplexer;

typedef int STREAM_ID_MAP;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IEnumStreamIdMap;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMPEG2StreamIdMap;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IRegisterServiceProvider;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IAMClockSlave;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMGraphBuilderCallback;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMFilterGraphCallback;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IGetCapabilitiesKey;

typedef int IEncoderAPI;

typedef int IVideoEncoder;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IAMDecoderCaps;

typedef int AMCOPPSignature;

typedef int AMCOPPCommand;

typedef int AMCOPPStatusInput;

typedef int AMCOPPStatusOutput;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IAMCertifiedOutputProtection;

// TODO: this type is limited to platform 'windows6.1'
typedef int IAMAsyncReaderTimestampScaling;

// TODO: this type is limited to platform 'windows6.1'
typedef int IAMPluginControl;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IPinConnection;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IPinFlowControl;

typedef enum {
    AM_PIN_FLOW_CONTROL_BLOCK = 1,
} _AM_PIN_FLOW_CONTROL_BLOCK_FLAGS;

typedef enum {
    AM_GRAPH_CONFIG_RECONNECT_DIRECTCONNECT = 1,
    AM_GRAPH_CONFIG_RECONNECT_CACHE_REMOVED_FILTERS = 2,
    AM_GRAPH_CONFIG_RECONNECT_USE_ONLY_CACHED_FILTERS = 4,
} AM_GRAPH_CONFIG_RECONNECT_FLAGS;

typedef enum {
    REMFILTERF_LEAVECONNECTED = 1,
} _REM_FILTER_FLAGS;

typedef enum {
    AM_FILTER_FLAGS_REMOVABLE = 1,
} AM_FILTER_FLAGS;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IGraphConfig;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IGraphConfigCallback;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IFilterChain;

typedef enum {
    VMRSample_SyncPoint = 1,
    VMRSample_Preroll = 2,
    VMRSample_Discontinuity = 4,
    VMRSample_TimeValid = 8,
    VMRSample_SrcDstRectsValid = 16,
} VMRPresentationFlags;

typedef int VMRPRESENTATIONINFO;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRImagePresenter;

typedef enum {
    AMAP_PIXELFORMAT_VALID = 1,
    AMAP_3D_TARGET = 2,
    AMAP_ALLOW_SYSMEM = 4,
    AMAP_FORCE_SYSMEM = 8,
    AMAP_DIRECTED_FLIP = 16,
    AMAP_DXVA_TARGET = 32,
} VMRSurfaceAllocationFlags;

typedef int VMRALLOCATIONINFO;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRSurfaceAllocator;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRSurfaceAllocatorNotify;

typedef enum {
    VMR_ARMODE_NONE = 0,
    VMR_ARMODE_LETTER_BOX = 1,
} VMR_ASPECT_RATIO_MODE;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRWindowlessControl;

typedef enum {
    MixerPref_NoDecimation = 1,
    MixerPref_DecimateOutput = 2,
    MixerPref_ARAdjustXorY = 4,
    MixerPref_DecimationReserved = 8,
    MixerPref_DecimateMask = 15,
    MixerPref_BiLinearFiltering = 16,
    MixerPref_PointFiltering = 32,
    MixerPref_FilteringMask = 240,
    MixerPref_RenderTargetRGB = 256,
    MixerPref_RenderTargetYUV = 4096,
    MixerPref_RenderTargetYUV420 = 512,
    MixerPref_RenderTargetYUV422 = 1024,
    MixerPref_RenderTargetYUV444 = 2048,
    MixerPref_RenderTargetReserved = 57344,
    MixerPref_RenderTargetMask = 65280,
    MixerPref_DynamicSwitchToBOB = 65536,
    MixerPref_DynamicDecimateBy2 = 131072,
    MixerPref_DynamicReserved = 786432,
    MixerPref_DynamicMask = 983040,
} VMRMixerPrefs;

typedef int NORMALIZEDRECT;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRMixerControl;

typedef int VMRGUID;

typedef int VMRMONITORINFO;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRMonitorConfig;

typedef enum {
    RenderPrefs_RestrictToInitialMonitor = 0,
    RenderPrefs_ForceOffscreen = 1,
    RenderPrefs_ForceOverlays = 2,
    RenderPrefs_AllowOverlays = 0,
    RenderPrefs_AllowOffscreen = 0,
    RenderPrefs_DoNotRenderColorKeyAndBorder = 8,
    RenderPrefs_Reserved = 16,
    RenderPrefs_PreferAGPMemWhenMixing = 32,
    RenderPrefs_Mask = 63,
} VMRRenderPrefs;

typedef enum {
    VMRMode_Windowed = 1,
    VMRMode_Windowless = 2,
    VMRMode_Renderless = 4,
    VMRMode_Mask = 7,
} VMRMode;

typedef enum {
    MAX_NUMBER_OF_STREAMS = 16,
} STREAMIF_CONSTANTS;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRFilterConfig;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRAspectRatioControl;

typedef enum {
    DeinterlacePref_NextBest = 1,
    DeinterlacePref_BOB = 2,
    DeinterlacePref_Weave = 4,
    DeinterlacePref_Mask = 7,
} VMRDeinterlacePrefs;

typedef enum {
    DeinterlaceTech_Unknown = 0,
    DeinterlaceTech_BOBLineReplicate = 1,
    DeinterlaceTech_BOBVerticalStretch = 2,
    DeinterlaceTech_MedianFiltering = 4,
    DeinterlaceTech_EdgeFiltering = 16,
    DeinterlaceTech_FieldAdaptive = 32,
    DeinterlaceTech_PixelAdaptive = 64,
    DeinterlaceTech_MotionVectorSteered = 128,
} VMRDeinterlaceTech;

typedef int VMRFrequency;

typedef int VMRVideoDesc;

typedef int VMRDeinterlaceCaps;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRDeinterlaceControl;

typedef int VMRALPHABITMAP;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRMixerBitmap;

typedef int VMRVIDEOSTREAMINFO;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRImageCompositor;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRVideoStreamControl;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRSurface;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRImagePresenterConfig;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRImagePresenterExclModeConfig;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVPManager;

typedef enum {
    DVD_DOMAIN_FirstPlay = 1,
    DVD_DOMAIN_VideoManagerMenu = 2,
    DVD_DOMAIN_VideoTitleSetMenu = 3,
    DVD_DOMAIN_Title = 4,
    DVD_DOMAIN_Stop = 5,
} DVD_DOMAIN;

typedef enum {
    DVD_MENU_Title = 2,
    DVD_MENU_Root = 3,
    DVD_MENU_Subpicture = 4,
    DVD_MENU_Audio = 5,
    DVD_MENU_Angle = 6,
    DVD_MENU_Chapter = 7,
} DVD_MENU_ID;

typedef enum {
    DVD_SIDE_A = 1,
    DVD_SIDE_B = 2,
} DVD_DISC_SIDE;

typedef enum {
    DISPLAY_CONTENT_DEFAULT = 0,
    DISPLAY_16x9 = 1,
    DISPLAY_4x3_PANSCAN_PREFERRED = 2,
    DISPLAY_4x3_LETTERBOX_PREFERRED = 3,
} DVD_PREFERRED_DISPLAY_MODE;

typedef int DVD_ATR;

typedef enum {
    DVD_FPS_25 = 1,
    DVD_FPS_30NonDrop = 3,
} DVD_FRAMERATE;

typedef int DVD_TIMECODE;

typedef enum {
    DVD_NavCmdType_Pre = 1,
    DVD_NavCmdType_Post = 2,
    DVD_NavCmdType_Cell = 3,
    DVD_NavCmdType_Button = 4,
} DVD_NavCmdType;

typedef enum {
    DVD_TC_FLAG_25fps = 1,
    DVD_TC_FLAG_30fps = 2,
    DVD_TC_FLAG_DropFrame = 4,
    DVD_TC_FLAG_Interpolated = 8,
} DVD_TIMECODE_FLAGS;

typedef int DVD_HMSF_TIMECODE;

typedef int DVD_PLAYBACK_LOCATION2;

typedef int DVD_PLAYBACK_LOCATION;

typedef enum {
    UOP_FLAG_Play_Title_Or_AtTime = 1,
    UOP_FLAG_Play_Chapter = 2,
    UOP_FLAG_Play_Title = 4,
    UOP_FLAG_Stop = 8,
    UOP_FLAG_ReturnFromSubMenu = 16,
    UOP_FLAG_Play_Chapter_Or_AtTime = 32,
    UOP_FLAG_PlayPrev_Or_Replay_Chapter = 64,
    UOP_FLAG_PlayNext_Chapter = 128,
    UOP_FLAG_Play_Forwards = 256,
    UOP_FLAG_Play_Backwards = 512,
    UOP_FLAG_ShowMenu_Title = 1024,
    UOP_FLAG_ShowMenu_Root = 2048,
    UOP_FLAG_ShowMenu_SubPic = 4096,
    UOP_FLAG_ShowMenu_Audio = 8192,
    UOP_FLAG_ShowMenu_Angle = 16384,
    UOP_FLAG_ShowMenu_Chapter = 32768,
    UOP_FLAG_Resume = 65536,
    UOP_FLAG_Select_Or_Activate_Button = 131072,
    UOP_FLAG_Still_Off = 262144,
    UOP_FLAG_Pause_On = 524288,
    UOP_FLAG_Select_Audio_Stream = 1048576,
    UOP_FLAG_Select_SubPic_Stream = 2097152,
    UOP_FLAG_Select_Angle = 4194304,
    UOP_FLAG_Select_Karaoke_Audio_Presentation_Mode = 8388608,
    UOP_FLAG_Select_Video_Mode_Preference = 16777216,
} VALID_UOP_FLAG;

typedef enum {
    DVD_CMD_FLAG_None = 0,
    DVD_CMD_FLAG_Flush = 1,
    DVD_CMD_FLAG_SendEvents = 2,
    DVD_CMD_FLAG_Block = 4,
    DVD_CMD_FLAG_StartWhenRendered = 8,
    DVD_CMD_FLAG_EndAfterRendered = 16,
} DVD_CMD_FLAGS;

typedef enum {
    DVD_ResetOnStop = 1,
    DVD_NotifyParentalLevelChange = 2,
    DVD_HMSF_TimeCodeEvents = 3,
    DVD_AudioDuringFFwdRew = 4,
    DVD_EnableNonblockingAPIs = 5,
    DVD_CacheSizeInMB = 6,
    DVD_EnablePortableBookmarks = 7,
    DVD_EnableExtendedCopyProtectErrors = 8,
    DVD_NotifyPositionChange = 9,
    DVD_IncreaseOutputControl = 10,
    DVD_EnableStreaming = 11,
    DVD_EnableESOutput = 12,
    DVD_EnableTitleLength = 13,
    DVD_DisableStillThrottle = 14,
    DVD_EnableLoggingEvents = 15,
    DVD_MaxReadBurstInKB = 16,
    DVD_ReadBurstPeriodInMS = 17,
    DVD_RestartDisc = 18,
    DVD_EnableCC = 19,
} DVD_OPTION_FLAG;

typedef enum {
    DVD_Relative_Upper = 1,
    DVD_Relative_Lower = 2,
    DVD_Relative_Left = 3,
    DVD_Relative_Right = 4,
} DVD_RELATIVE_BUTTON;

typedef enum {
    DVD_PARENTAL_LEVEL_8 = 32768,
    DVD_PARENTAL_LEVEL_7 = 16384,
    DVD_PARENTAL_LEVEL_6 = 8192,
    DVD_PARENTAL_LEVEL_5 = 4096,
    DVD_PARENTAL_LEVEL_4 = 2048,
    DVD_PARENTAL_LEVEL_3 = 1024,
    DVD_PARENTAL_LEVEL_2 = 512,
    DVD_PARENTAL_LEVEL_1 = 256,
} DVD_PARENTAL_LEVEL;

typedef enum {
    DVD_AUD_EXT_NotSpecified = 0,
    DVD_AUD_EXT_Captions = 1,
    DVD_AUD_EXT_VisuallyImpaired = 2,
    DVD_AUD_EXT_DirectorComments1 = 3,
    DVD_AUD_EXT_DirectorComments2 = 4,
} DVD_AUDIO_LANG_EXT;

typedef enum {
    DVD_SP_EXT_NotSpecified = 0,
    DVD_SP_EXT_Caption_Normal = 1,
    DVD_SP_EXT_Caption_Big = 2,
    DVD_SP_EXT_Caption_Children = 3,
    DVD_SP_EXT_CC_Normal = 5,
    DVD_SP_EXT_CC_Big = 6,
    DVD_SP_EXT_CC_Children = 7,
    DVD_SP_EXT_Forced = 9,
    DVD_SP_EXT_DirectorComments_Normal = 13,
    DVD_SP_EXT_DirectorComments_Big = 14,
    DVD_SP_EXT_DirectorComments_Children = 15,
} DVD_SUBPICTURE_LANG_EXT;

typedef enum {
    DVD_AudioMode_None = 0,
    DVD_AudioMode_Karaoke = 1,
    DVD_AudioMode_Surround = 2,
    DVD_AudioMode_Other = 3,
} DVD_AUDIO_APPMODE;

typedef enum {
    DVD_AudioFormat_AC3 = 0,
    DVD_AudioFormat_MPEG1 = 1,
    DVD_AudioFormat_MPEG1_DRC = 2,
    DVD_AudioFormat_MPEG2 = 3,
    DVD_AudioFormat_MPEG2_DRC = 4,
    DVD_AudioFormat_LPCM = 5,
    DVD_AudioFormat_DTS = 6,
    DVD_AudioFormat_SDDS = 7,
    DVD_AudioFormat_Other = 8,
} DVD_AUDIO_FORMAT;

typedef enum {
    DVD_Mix_0to0 = 1,
    DVD_Mix_1to0 = 2,
    DVD_Mix_2to0 = 4,
    DVD_Mix_3to0 = 8,
    DVD_Mix_4to0 = 16,
    DVD_Mix_Lto0 = 32,
    DVD_Mix_Rto0 = 64,
    DVD_Mix_0to1 = 256,
    DVD_Mix_1to1 = 512,
    DVD_Mix_2to1 = 1024,
    DVD_Mix_3to1 = 2048,
    DVD_Mix_4to1 = 4096,
    DVD_Mix_Lto1 = 8192,
    DVD_Mix_Rto1 = 16384,
} DVD_KARAOKE_DOWNMIX;

typedef int DVD_AudioAttributes;

typedef int DVD_MUA_MixingInfo;

typedef int DVD_MUA_Coeff;

typedef int DVD_MultichannelAudioAttributes;

typedef enum {
    DVD_Karaoke_GuideVocal1 = 1,
    DVD_Karaoke_GuideVocal2 = 2,
    DVD_Karaoke_GuideMelody1 = 4,
    DVD_Karaoke_GuideMelody2 = 8,
    DVD_Karaoke_GuideMelodyA = 16,
    DVD_Karaoke_GuideMelodyB = 32,
    DVD_Karaoke_SoundEffectA = 64,
    DVD_Karaoke_SoundEffectB = 128,
} DVD_KARAOKE_CONTENTS;

typedef enum {
    DVD_Assignment_reserved0 = 0,
    DVD_Assignment_reserved1 = 1,
    DVD_Assignment_LR = 2,
    DVD_Assignment_LRM = 3,
    DVD_Assignment_LR1 = 4,
    DVD_Assignment_LRM1 = 5,
    DVD_Assignment_LR12 = 6,
    DVD_Assignment_LRM12 = 7,
} DVD_KARAOKE_ASSIGNMENT;

typedef int DVD_KaraokeAttributes;

typedef enum {
    DVD_VideoCompression_Other = 0,
    DVD_VideoCompression_MPEG1 = 1,
    DVD_VideoCompression_MPEG2 = 2,
} DVD_VIDEO_COMPRESSION;

typedef int DVD_VideoAttributes;

typedef enum {
    DVD_SPType_NotSpecified = 0,
    DVD_SPType_Language = 1,
    DVD_SPType_Other = 2,
} DVD_SUBPICTURE_TYPE;

typedef enum {
    DVD_SPCoding_RunLength = 0,
    DVD_SPCoding_Extended = 1,
    DVD_SPCoding_Other = 2,
} DVD_SUBPICTURE_CODING;

typedef int DVD_SubpictureAttributes;

typedef enum {
    DVD_AppMode_Not_Specified = 0,
    DVD_AppMode_Karaoke = 1,
    DVD_AppMode_Other = 3,
} DVD_TITLE_APPMODE;

typedef int DVD_TitleAttributes;

typedef int DVD_MenuAttributes;

typedef int IDvdControl;

typedef int IDvdInfo;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDvdCmd;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDvdState;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDvdControl2;

typedef enum {
    DVD_Struct_Volume = 1,
    DVD_Struct_Title = 2,
    DVD_Struct_ParentalID = 3,
    DVD_Struct_PartOfTitle = 4,
    DVD_Struct_Cell = 5,
    DVD_Stream_Audio = 16,
    DVD_Stream_Subpicture = 17,
    DVD_Stream_Angle = 18,
    DVD_Channel_Audio = 32,
    DVD_General_Name = 48,
    DVD_General_Comments = 49,
    DVD_Title_Series = 56,
    DVD_Title_Movie = 57,
    DVD_Title_Video = 58,
    DVD_Title_Album = 59,
    DVD_Title_Song = 60,
    DVD_Title_Other = 63,
    DVD_Title_Sub_Series = 64,
    DVD_Title_Sub_Movie = 65,
    DVD_Title_Sub_Video = 66,
    DVD_Title_Sub_Album = 67,
    DVD_Title_Sub_Song = 68,
    DVD_Title_Sub_Other = 71,
    DVD_Title_Orig_Series = 72,
    DVD_Title_Orig_Movie = 73,
    DVD_Title_Orig_Video = 74,
    DVD_Title_Orig_Album = 75,
    DVD_Title_Orig_Song = 76,
    DVD_Title_Orig_Other = 79,
    DVD_Other_Scene = 80,
    DVD_Other_Cut = 81,
    DVD_Other_Take = 82,
} DVD_TextStringType;

typedef enum {
    DVD_CharSet_Unicode = 0,
    DVD_CharSet_ISO646 = 1,
    DVD_CharSet_JIS_Roman_Kanji = 2,
    DVD_CharSet_ISO8859_1 = 3,
    DVD_CharSet_ShiftJIS_Kanji_Roman_Katakana = 4,
} DVD_TextCharSet;

typedef int DVD_DECODER_CAPS;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDvdInfo2;

typedef enum {
    AM_DVD_HWDEC_PREFER = 1,
    AM_DVD_HWDEC_ONLY = 2,
    AM_DVD_SWDEC_PREFER = 4,
    AM_DVD_SWDEC_ONLY = 8,
    AM_DVD_NOVPE = 256,
    AM_DVD_DO_NOT_CLEAR = 512,
    AM_DVD_VMR9_ONLY = 2048,
    AM_DVD_EVR_ONLY = 4096,
    AM_DVD_EVR_QOS = 8192,
    AM_DVD_ADAPT_GRAPH = 16384,
    AM_DVD_MASK = 65535,
} AM_DVD_GRAPH_FLAGS;

typedef enum {
    AM_DVD_STREAM_VIDEO = 1,
    AM_DVD_STREAM_AUDIO = 2,
    AM_DVD_STREAM_SUBPIC = 4,
} AM_DVD_STREAM_FLAGS;

typedef int AM_DVD_RENDERSTATUS;

// TODO: this type is limited to platform 'windows5.0'
typedef int IDvdGraphBuilder;

// TODO: this type is limited to platform 'windows5.0'
typedef int IDDrawExclModeVideo;

typedef enum {
    AM_OVERLAY_NOTIFY_VISIBLE_CHANGE = 1,
    AM_OVERLAY_NOTIFY_SOURCE_CHANGE = 2,
    AM_OVERLAY_NOTIFY_DEST_CHANGE = 4,
} _AM_OVERLAY_NOTIFY_FLAGS;

// TODO: this type is limited to platform 'windows5.0'
typedef int IDDrawExclModeVideoCallback;

typedef int BDA_TEMPLATE_CONNECTION;

typedef int BDA_TEMPLATE_PIN_JOINT;

typedef enum {
    BDA_EVENT_SIGNAL_LOSS = 0,
    BDA_EVENT_SIGNAL_LOCK = 1,
    BDA_EVENT_DATA_START = 2,
    BDA_EVENT_DATA_STOP = 3,
    BDA_EVENT_CHANNEL_ACQUIRED = 4,
    BDA_EVENT_CHANNEL_LOST = 5,
    BDA_EVENT_CHANNEL_SOURCE_CHANGED = 6,
    BDA_EVENT_CHANNEL_ACTIVATED = 7,
    BDA_EVENT_CHANNEL_DEACTIVATED = 8,
    BDA_EVENT_SUBCHANNEL_ACQUIRED = 9,
    BDA_EVENT_SUBCHANNEL_LOST = 10,
    BDA_EVENT_SUBCHANNEL_SOURCE_CHANGED = 11,
    BDA_EVENT_SUBCHANNEL_ACTIVATED = 12,
    BDA_EVENT_SUBCHANNEL_DEACTIVATED = 13,
    BDA_EVENT_ACCESS_GRANTED = 14,
    BDA_EVENT_ACCESS_DENIED = 15,
    BDA_EVENT_OFFER_EXTENDED = 16,
    BDA_EVENT_PURCHASE_COMPLETED = 17,
    BDA_EVENT_SMART_CARD_INSERTED = 18,
    BDA_EVENT_SMART_CARD_REMOVED = 19,
} BDA_EVENT_ID;

typedef int KS_BDA_FRAME_INFO;

typedef int BDA_ETHERNET_ADDRESS;

typedef int BDA_ETHERNET_ADDRESS_LIST;

typedef enum {
    BDA_PROMISCUOUS_MULTICAST = 0,
    BDA_FILTERED_MULTICAST = 1,
    BDA_NO_MULTICAST = 2,
} BDA_MULTICAST_MODE;

typedef int BDA_IPv4_ADDRESS;

typedef int BDA_IPv4_ADDRESS_LIST;

typedef int BDA_IPv6_ADDRESS;

typedef int BDA_IPv6_ADDRESS_LIST;

typedef enum {
    BDA_SIGNAL_UNAVAILABLE = 0,
    BDA_SIGNAL_INACTIVE = 1,
    BDA_SIGNAL_ACTIVE = 2,
} BDA_SIGNAL_STATE;

typedef enum {
    BDA_CHANGES_COMPLETE = 0,
    BDA_CHANGES_PENDING = 1,
} BDA_CHANGE_STATE;

typedef int BDANODE_DESCRIPTOR;

typedef int BDA_TABLE_SECTION;

typedef int BDA_DISEQC_SEND;

typedef int BDA_DISEQC_RESPONSE;

typedef enum {
    MEDIA_TRANSPORT_PACKET = 0,
    MEDIA_ELEMENTARY_STREAM = 1,
    MEDIA_MPEG2_PSI = 2,
    MEDIA_TRANSPORT_PAYLOAD = 3,
} MEDIA_SAMPLE_CONTENT;

typedef int PID_MAP;

typedef int BDA_PID_MAP;

typedef int BDA_PID_UNMAP;

typedef int BDA_CA_MODULE_UI;

typedef int BDA_PROGRAM_PID_LIST;

typedef int BDA_DRM_DRMSTATUS;

typedef int BDA_WMDRM_STATUS;

typedef int BDA_WMDRM_KEYINFOLIST;

typedef int BDA_BUFFER;

typedef int BDA_WMDRM_RENEWLICENSE;

typedef int BDA_WMDRMTUNER_PIDPROTECTION;

typedef int BDA_WMDRMTUNER_PURCHASEENTITLEMENT;

typedef int BDA_TUNER_TUNERSTATE;

typedef int BDA_TUNER_DIAGNOSTICS;

typedef int BDA_STRING;

typedef int BDA_SCAN_CAPABILTIES;

typedef int BDA_SCAN_STATE;

typedef int BDA_SCAN_START;

typedef int BDA_GDDS_DATATYPE;

typedef int BDA_GDDS_DATA;

typedef int BDA_USERACTIVITY_INTERVAL;

typedef int BDA_CAS_CHECK_ENTITLEMENTTOKEN;

typedef int BDA_CAS_CLOSE_MMIDIALOG;

typedef int BDA_CAS_REQUESTTUNERDATA;

typedef int BDA_CAS_OPENMMIDATA;

typedef int BDA_CAS_CLOSEMMIDATA;

typedef enum {
    ISDBCAS_REQUEST_ID_EMG = 56,
    ISDBCAS_REQUEST_ID_EMD = 58,
} ISDBCAS_REQUEST_ID;

typedef int BDA_ISDBCAS_REQUESTHEADER;

typedef int BDA_ISDBCAS_RESPONSEDATA;

typedef int BDA_ISDBCAS_EMG_REQ;

typedef enum {
    PID_OTHER = -1,
    PID_ELEMENTARY_STREAM = 0,
    PID_MPEG2_SECTION_PSI_SI = 1,
} MUX_PID_TYPE;

typedef int BDA_MUX_PIDLISTITEM;

typedef int BDA_TS_SELECTORINFO;

typedef int BDA_TS_SELECTORINFO_ISDBS_EXT;

typedef int BDA_DVBT2_L1_SIGNALLING_DATA;

typedef int BDA_RATING_PINRESET;

typedef enum {
    DVB_Cable = 0,
    DVB_Terrestrial = 1,
    DVB_Satellite = 2,
    ISDB_Terrestrial = 3,
    ISDB_Satellite = 4,
} DVBSystemType;

typedef enum {
    BDA_UNDEFINED_CHANNEL = -1,
} BDA_Channel;

typedef enum {
    CategoryNotSet = -1,
    CategoryOther = 0,
    CategoryVideo = 1,
    CategoryAudio = 2,
    CategoryText = 3,
    CategorySubtitles = 4,
    CategoryCaptions = 5,
    CategorySuperimpose = 6,
    CategoryData = 7,
    CATEGORY_COUNT = 8,
} ComponentCategory;

typedef enum {
    StatusActive = 0,
    StatusInactive = 1,
    StatusUnavailable = 2,
} ComponentStatus;

typedef enum {
    BDA_UNITIALIZED_MPEG2STREAMTYPE = -1,
    Reserved1 = 0,
    ISO_IEC_11172_2_VIDEO = 1,
    ISO_IEC_13818_2_VIDEO = 2,
    ISO_IEC_11172_3_AUDIO = 3,
    ISO_IEC_13818_3_AUDIO = 4,
    ISO_IEC_13818_1_PRIVATE_SECTION = 5,
    ISO_IEC_13818_1_PES = 6,
    ISO_IEC_13522_MHEG = 7,
    ANNEX_A_DSM_CC = 8,
    ITU_T_REC_H_222_1 = 9,
    ISO_IEC_13818_6_TYPE_A = 10,
    ISO_IEC_13818_6_TYPE_B = 11,
    ISO_IEC_13818_6_TYPE_C = 12,
    ISO_IEC_13818_6_TYPE_D = 13,
    ISO_IEC_13818_1_AUXILIARY = 14,
    ISO_IEC_13818_7_AUDIO = 15,
    ISO_IEC_14496_2_VISUAL = 16,
    ISO_IEC_14496_3_AUDIO = 17,
    ISO_IEC_14496_1_IN_PES = 18,
    ISO_IEC_14496_1_IN_SECTION = 19,
    ISO_IEC_13818_6_DOWNLOAD = 20,
    METADATA_IN_PES = 21,
    METADATA_IN_SECTION = 22,
    METADATA_IN_DATA_CAROUSEL = 23,
    METADATA_IN_OBJECT_CAROUSEL = 24,
    METADATA_IN_DOWNLOAD_PROTOCOL = 25,
    IRPM_STREAMM = 26,
    ITU_T_H264 = 27,
    ISO_IEC_13818_1_RESERVED = 28,
    USER_PRIVATE = 16,
    HEVC_VIDEO_OR_TEMPORAL_VIDEO = 36,
    HEVC_TEMPORAL_VIDEO_SUBSET = 37,
    ISO_IEC_USER_PRIVATE = 128,
    DOLBY_AC3_AUDIO = 129,
    DOLBY_DIGITAL_PLUS_AUDIO_ATSC = 135,
} MPEG2StreamType;

typedef int MPEG2_TRANSPORT_STRIDE;

typedef enum {
    ATSCCT_AC3 = 1,
} ATSCComponentTypeFlags;

typedef enum {
    BDA_BCC_RATE_NOT_SET = -1,
    BDA_BCC_RATE_NOT_DEFINED = 0,
    BDA_BCC_RATE_1_2 = 1,
    BDA_BCC_RATE_2_3 = 2,
    BDA_BCC_RATE_3_4 = 3,
    BDA_BCC_RATE_3_5 = 4,
    BDA_BCC_RATE_4_5 = 5,
    BDA_BCC_RATE_5_6 = 6,
    BDA_BCC_RATE_5_11 = 7,
    BDA_BCC_RATE_7_8 = 8,
    BDA_BCC_RATE_1_4 = 9,
    BDA_BCC_RATE_1_3 = 10,
    BDA_BCC_RATE_2_5 = 11,
    BDA_BCC_RATE_6_7 = 12,
    BDA_BCC_RATE_8_9 = 13,
    BDA_BCC_RATE_9_10 = 14,
    BDA_BCC_RATE_MAX = 15,
} BinaryConvolutionCodeRate;

typedef enum {
    BDA_FEC_METHOD_NOT_SET = -1,
    BDA_FEC_METHOD_NOT_DEFINED = 0,
    BDA_FEC_VITERBI = 1,
    BDA_FEC_RS_204_188 = 2,
    BDA_FEC_LDPC = 3,
    BDA_FEC_BCH = 4,
    BDA_FEC_RS_147_130 = 5,
    BDA_FEC_MAX = 6,
} FECMethod;

typedef enum {
    BDA_MOD_NOT_SET = -1,
    BDA_MOD_NOT_DEFINED = 0,
    BDA_MOD_16QAM = 1,
    BDA_MOD_32QAM = 2,
    BDA_MOD_64QAM = 3,
    BDA_MOD_80QAM = 4,
    BDA_MOD_96QAM = 5,
    BDA_MOD_112QAM = 6,
    BDA_MOD_128QAM = 7,
    BDA_MOD_160QAM = 8,
    BDA_MOD_192QAM = 9,
    BDA_MOD_224QAM = 10,
    BDA_MOD_256QAM = 11,
    BDA_MOD_320QAM = 12,
    BDA_MOD_384QAM = 13,
    BDA_MOD_448QAM = 14,
    BDA_MOD_512QAM = 15,
    BDA_MOD_640QAM = 16,
    BDA_MOD_768QAM = 17,
    BDA_MOD_896QAM = 18,
    BDA_MOD_1024QAM = 19,
    BDA_MOD_QPSK = 20,
    BDA_MOD_BPSK = 21,
    BDA_MOD_OQPSK = 22,
    BDA_MOD_8VSB = 23,
    BDA_MOD_16VSB = 24,
    BDA_MOD_ANALOG_AMPLITUDE = 25,
    BDA_MOD_ANALOG_FREQUENCY = 26,
    BDA_MOD_8PSK = 27,
    BDA_MOD_RF = 28,
    BDA_MOD_16APSK = 29,
    BDA_MOD_32APSK = 30,
    BDA_MOD_NBC_QPSK = 31,
    BDA_MOD_NBC_8PSK = 32,
    BDA_MOD_DIRECTV = 33,
    BDA_MOD_ISDB_T_TMCC = 34,
    BDA_MOD_ISDB_S_TMCC = 35,
    BDA_MOD_MAX = 36,
} ModulationType;

typedef enum {
    BDA_SCAN_MOD_16QAM = 1,
    BDA_SCAN_MOD_32QAM = 2,
    BDA_SCAN_MOD_64QAM = 4,
    BDA_SCAN_MOD_80QAM = 8,
    BDA_SCAN_MOD_96QAM = 16,
    BDA_SCAN_MOD_112QAM = 32,
    BDA_SCAN_MOD_128QAM = 64,
    BDA_SCAN_MOD_160QAM = 128,
    BDA_SCAN_MOD_192QAM = 256,
    BDA_SCAN_MOD_224QAM = 512,
    BDA_SCAN_MOD_256QAM = 1024,
    BDA_SCAN_MOD_320QAM = 2048,
    BDA_SCAN_MOD_384QAM = 4096,
    BDA_SCAN_MOD_448QAM = 8192,
    BDA_SCAN_MOD_512QAM = 16384,
    BDA_SCAN_MOD_640QAM = 32768,
    BDA_SCAN_MOD_768QAM = 65536,
    BDA_SCAN_MOD_896QAM = 131072,
    BDA_SCAN_MOD_1024QAM = 262144,
    BDA_SCAN_MOD_QPSK = 524288,
    BDA_SCAN_MOD_BPSK = 1048576,
    BDA_SCAN_MOD_OQPSK = 2097152,
    BDA_SCAN_MOD_8VSB = 4194304,
    BDA_SCAN_MOD_16VSB = 8388608,
    BDA_SCAN_MOD_AM_RADIO = 16777216,
    BDA_SCAN_MOD_FM_RADIO = 33554432,
    BDA_SCAN_MOD_8PSK = 67108864,
    BDA_SCAN_MOD_RF = 134217728,
    ScanModulationTypesMask_MCE_DigitalCable = 11,
    ScanModulationTypesMask_MCE_TerrestrialATSC = 23,
    ScanModulationTypesMask_MCE_AnalogTv = 28,
    ScanModulationTypesMask_MCE_All_TV = -1,
    ScanModulationTypesMask_DVBC = 75,
    BDA_SCAN_MOD_16APSK = 268435456,
    BDA_SCAN_MOD_32APSK = 536870912,
} ScanModulationTypes;

typedef enum {
    BDA_SPECTRAL_INVERSION_NOT_SET = -1,
    BDA_SPECTRAL_INVERSION_NOT_DEFINED = 0,
    BDA_SPECTRAL_INVERSION_AUTOMATIC = 1,
    BDA_SPECTRAL_INVERSION_NORMAL = 2,
    BDA_SPECTRAL_INVERSION_INVERTED = 3,
    BDA_SPECTRAL_INVERSION_MAX = 4,
} SpectralInversion;

typedef enum {
    BDA_POLARISATION_NOT_SET = -1,
    BDA_POLARISATION_NOT_DEFINED = 0,
    BDA_POLARISATION_LINEAR_H = 1,
    BDA_POLARISATION_LINEAR_V = 2,
    BDA_POLARISATION_CIRCULAR_L = 3,
    BDA_POLARISATION_CIRCULAR_R = 4,
    BDA_POLARISATION_MAX = 5,
} Polarisation;

typedef enum {
    BDA_LNB_SOURCE_NOT_SET = -1,
    BDA_LNB_SOURCE_NOT_DEFINED = 0,
    BDA_LNB_SOURCE_A = 1,
    BDA_LNB_SOURCE_B = 2,
    BDA_LNB_SOURCE_C = 3,
    BDA_LNB_SOURCE_D = 4,
    BDA_LNB_SOURCE_MAX = 5,
} LNB_Source;

typedef enum {
    BDA_GUARD_NOT_SET = -1,
    BDA_GUARD_NOT_DEFINED = 0,
    BDA_GUARD_1_32 = 1,
    BDA_GUARD_1_16 = 2,
    BDA_GUARD_1_8 = 3,
    BDA_GUARD_1_4 = 4,
    BDA_GUARD_1_128 = 5,
    BDA_GUARD_19_128 = 6,
    BDA_GUARD_19_256 = 7,
    BDA_GUARD_MAX = 8,
} GuardInterval;

typedef enum {
    BDA_HALPHA_NOT_SET = -1,
    BDA_HALPHA_NOT_DEFINED = 0,
    BDA_HALPHA_1 = 1,
    BDA_HALPHA_2 = 2,
    BDA_HALPHA_4 = 3,
    BDA_HALPHA_MAX = 4,
} HierarchyAlpha;

typedef enum {
    BDA_XMIT_MODE_NOT_SET = -1,
    BDA_XMIT_MODE_NOT_DEFINED = 0,
    BDA_XMIT_MODE_2K = 1,
    BDA_XMIT_MODE_8K = 2,
    BDA_XMIT_MODE_4K = 3,
    BDA_XMIT_MODE_2K_INTERLEAVED = 4,
    BDA_XMIT_MODE_4K_INTERLEAVED = 5,
    BDA_XMIT_MODE_1K = 6,
    BDA_XMIT_MODE_16K = 7,
    BDA_XMIT_MODE_32K = 8,
    BDA_XMIT_MODE_MAX = 9,
} TransmissionMode;

typedef enum {
    BDA_ROLL_OFF_NOT_SET = -1,
    BDA_ROLL_OFF_NOT_DEFINED = 0,
    BDA_ROLL_OFF_20 = 1,
    BDA_ROLL_OFF_25 = 2,
    BDA_ROLL_OFF_35 = 3,
    BDA_ROLL_OFF_MAX = 4,
} RollOff;

typedef enum {
    BDA_PILOT_NOT_SET = -1,
    BDA_PILOT_NOT_DEFINED = 0,
    BDA_PILOT_OFF = 1,
    BDA_PILOT_ON = 2,
    BDA_PILOT_MAX = 3,
} Pilot;

typedef int BDA_SIGNAL_TIMEOUTS;

typedef enum {
    BDA_FREQUENCY_NOT_SET = -1,
    BDA_FREQUENCY_NOT_DEFINED = 0,
} BDA_Frequency;

typedef enum {
    BDA_RANGE_NOT_SET = -1,
    BDA_RANGE_NOT_DEFINED = 0,
} BDA_Range;

typedef enum {
    BDA_CHAN_BANDWITH_NOT_SET = -1,
    BDA_CHAN_BANDWITH_NOT_DEFINED = 0,
} BDA_Channel_Bandwidth;

typedef enum {
    BDA_FREQUENCY_MULTIPLIER_NOT_SET = -1,
    BDA_FREQUENCY_MULTIPLIER_NOT_DEFINED = 0,
} BDA_Frequency_Multiplier;

typedef enum {
    BDACOMP_NOT_DEFINED = 0,
    BDACOMP_EXCLUDE_TS_FROM_TR = 1,
    BDACOMP_INCLUDE_LOCATOR_IN_TR = 2,
    BDACOMP_INCLUDE_COMPONENTS_IN_TR = 4,
} BDA_Comp_Flags;

typedef enum {
    SCTE28_ConditionalAccess = 0,
    SCTE28_POD_Host_Binding_Information = 1,
    SCTE28_IPService = 2,
    SCTE28_NetworkInterface_SCTE55_2 = 3,
    SCTE28_NetworkInterface_SCTE55_1 = 4,
    SCTE28_CopyProtection = 5,
    SCTE28_Diagnostic = 6,
    SCTE28_Undesignated = 7,
    SCTE28_Reserved = 8,
} ApplicationTypeType;

typedef enum {
    CONDITIONALACCESS_ACCESS_UNSPECIFIED = 0,
    CONDITIONALACCESS_ACCESS_NOT_POSSIBLE = 1,
    CONDITIONALACCESS_ACCESS_POSSIBLE = 2,
    CONDITIONALACCESS_ACCESS_POSSIBLE_NO_STREAMING_DISRUPTION = 3,
} BDA_CONDITIONALACCESS_REQUESTTYPE;

typedef enum {
    CONDITIONALACCESS_UNSPECIFIED = 0,
    CONDITIONALACCESS_CLOSED_ITSELF = 1,
    CONDITIONALACCESS_TUNER_REQUESTED_CLOSE = 2,
    CONDITIONALACCESS_DIALOG_TIMEOUT = 3,
    CONDITIONALACCESS_DIALOG_FOCUS_CHANGE = 4,
    CONDITIONALACCESS_DIALOG_USER_DISMISSED = 5,
    CONDITIONALACCESS_DIALOG_USER_NOT_AVAILABLE = 6,
} BDA_CONDITIONALACCESS_MMICLOSEREASON;

typedef enum {
    CONDITIONALACCESS_SUCCESSFULL = 0,
    CONDITIONALACCESS_ENDED_NOCHANGE = 1,
    CONDITIONALACCESS_ABORTED = 2,
} BDA_CONDITIONALACCESS_SESSION_RESULT;

typedef enum {
    BDA_DISCOVERY_UNSPECIFIED = 0,
    BDA_DISCOVERY_REQUIRED = 1,
    BDA_DISCOVERY_COMPLETE = 2,
} BDA_DISCOVERY_STATE;

typedef enum {
    CardInserted = 0,
    CardRemoved = 1,
    CardError = 2,
    CardDataChanged = 3,
    CardFirmwareUpgrade = 4,
} SmartCardStatusType;

typedef enum {
    NotAssociated = 0,
    Associated = 1,
    AssociationUnknown = 2,
} SmartCardAssociationType;

typedef enum {
    SCTE_18 = 0,
} LocationCodeSchemeType;

typedef int EALocationCodeType;

typedef enum {
    Entitled = 0,
    NotEntitled = 1,
    TechnicalFailure = 2,
} EntitlementType;

typedef enum {
    NotReady = 0,
    UserClosed = 1,
    SystemClosed = 2,
    DeviceClosed = 3,
    ErrorClosed = 4,
} UICloseReasonType;

typedef int SmartCardApplication;

typedef enum {
    BDA_DrmPairing_Succeeded = 0,
    BDA_DrmPairing_HardwareFailure = 1,
    BDA_DrmPairing_NeedRevocationData = 2,
    BDA_DrmPairing_NeedIndiv = 3,
    BDA_DrmPairing_Other = 4,
    BDA_DrmPairing_DrmInitFailed = 5,
    BDA_DrmPairing_DrmNotPaired = 6,
    BDA_DrmPairing_DrmRePairSoon = 7,
    BDA_DrmPairing_Aborted = 8,
    BDA_DrmPairing_NeedSDKUpdate = 9,
} BDA_DrmPairingError;

typedef int IBDA_NetworkProvider;

typedef int IBDA_EthernetFilter;

typedef int IBDA_IPV4Filter;

typedef int IBDA_IPV6Filter;

typedef int IBDA_DeviceControl;

typedef int IBDA_PinControl;

typedef int IBDA_SignalProperties;

typedef int IBDA_SignalStatistics;

typedef int IBDA_Topology;

typedef int IBDA_VoidTransform;

typedef int IBDA_NullTransform;

typedef int IBDA_FrequencyFilter;

typedef int IBDA_LNBInfo;

typedef int IBDA_DiseqCommand;

typedef int IBDA_AutoDemodulate;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IBDA_AutoDemodulateEx;

typedef int IBDA_DigitalDemodulator;

typedef int IBDA_DigitalDemodulator2;

typedef int IBDA_DigitalDemodulator3;

typedef enum {
    KSPROPERTY_IPSINK_MULTICASTLIST = 0,
    KSPROPERTY_IPSINK_ADAPTER_DESCRIPTION = 1,
    KSPROPERTY_IPSINK_ADAPTER_ADDRESS = 2,
} KSPROPERTY_IPSINK;

typedef int ICCSubStreamFiltering;

typedef int IBDA_IPSinkControl;

typedef int IBDA_IPSinkInfo;

// TODO: this type is limited to platform 'windows5.0'
typedef int IEnumPIDMap;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMPEG2PIDMap;

typedef int IFrequencyMap;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IBDA_EasMessage;

typedef int IBDA_TransportStreamInfo;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IBDA_ConditionalAccess;

typedef int IBDA_DiagnosticProperties;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IBDA_DRM;

typedef int IBDA_NameValueService;

// TODO: this type is limited to platform 'windows6.1'
typedef int IBDA_ConditionalAccessEx;

// TODO: this type is limited to platform 'windows6.1'
typedef int IBDA_ISDBConditionalAccess;

// TODO: this type is limited to platform 'windows6.1'
typedef int IBDA_EventingService;

typedef int IBDA_AUX;

// TODO: this type is limited to platform 'windows6.1'
typedef int IBDA_Encoder;

// TODO: this type is limited to platform 'windows6.1'
typedef int IBDA_FDC;

// TODO: this type is limited to platform 'windows6.1'
typedef int IBDA_GuideDataDeliveryService;

typedef int IBDA_DRMService;

typedef int IBDA_WMDRMSession;

typedef int IBDA_WMDRMTuner;

// TODO: this type is limited to platform 'windows6.1'
typedef int IBDA_DRIDRMService;

typedef int IBDA_DRIWMDRMSession;

// TODO: this type is limited to platform 'windows6.1'
typedef int IBDA_MUX;

typedef int IBDA_TransportStreamSelector;

// TODO: this type is limited to platform 'windows6.1'
typedef int IBDA_UserActivityService;

// TODO: this type is limited to platform 'windows6.1'
typedef int IESEvent;

// TODO: this type is limited to platform 'windows6.1'
typedef int IESEvents;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IBroadcastEvent;

typedef int IBroadcastEventEx;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMNetShowConfig;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMChannelInfo;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMNetworkStatus;

typedef enum {
    AM_EXSEEK_CANSEEK = 1,
    AM_EXSEEK_CANSCAN = 2,
    AM_EXSEEK_MARKERSEEK = 4,
    AM_EXSEEK_SCANWITHOUTCLOCK = 8,
    AM_EXSEEK_NOSTANDARDREPAINT = 16,
    AM_EXSEEK_BUFFERING = 32,
    AM_EXSEEK_SENDS_VIDEOFRAMEREADY = 64,
} AMExtendedSeekingCapabilities;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMExtendedSeeking;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMNetShowExProps;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMExtendedErrorInfo;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMMediaContent;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMMediaContent2;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMNetShowPreroll;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDShowPlugin;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMDirectSound;

typedef enum {
    AM_L21_CCLEVEL_TC2 = 0,
} AM_LINE21_CCLEVEL;

typedef enum {
    AM_L21_CCSERVICE_None = 0,
    AM_L21_CCSERVICE_Caption1 = 1,
    AM_L21_CCSERVICE_Caption2 = 2,
    AM_L21_CCSERVICE_Text1 = 3,
    AM_L21_CCSERVICE_Text2 = 4,
    AM_L21_CCSERVICE_XDS = 5,
    AM_L21_CCSERVICE_DefChannel = 10,
    AM_L21_CCSERVICE_Invalid = 11,
} AM_LINE21_CCSERVICE;

typedef enum {
    AM_L21_CCSTATE_Off = 0,
    AM_L21_CCSTATE_On = 1,
} AM_LINE21_CCSTATE;

typedef enum {
    AM_L21_CCSTYLE_None = 0,
    AM_L21_CCSTYLE_PopOn = 1,
    AM_L21_CCSTYLE_PaintOn = 2,
    AM_L21_CCSTYLE_RollUp = 3,
} AM_LINE21_CCSTYLE;

typedef enum {
    AM_L21_DRAWBGMODE_Opaque = 0,
    AM_L21_DRAWBGMODE_Transparent = 1,
} AM_LINE21_DRAWBGMODE;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMLine21Decoder;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IAMParse;

typedef int FilgraphManager;

typedef int IAMCollection;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMediaControl;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMediaEvent;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMediaEventEx;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMediaPosition;

// TODO: this type is limited to platform 'windows5.0'
typedef int IBasicAudio;

// TODO: this type is limited to platform 'windows5.0'
typedef int IVideoWindow;

// TODO: this type is limited to platform 'windows5.0'
typedef int IBasicVideo;

// TODO: this type is limited to platform 'windows5.0'
typedef int IBasicVideo2;

// TODO: this type is limited to platform 'windows5.0'
typedef int IDeferredCommand;

// TODO: this type is limited to platform 'windows5.0'
typedef int IQueueCommand;

typedef int IFilterInfo;

typedef int IRegFilterInfo;

typedef int IMediaTypeInfo;

typedef int IPinInfo;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IAMStats;

typedef int AMVAUncompBufferInfo;

typedef int AMVAUncompDataInfo;

typedef int AMVAInternalMemInfo;

typedef int AMVACompBufferInfo;

typedef int AMVABeginFrameInfo;

typedef int AMVAEndFrameInfo;

typedef int AMVABUFFERINFO;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMVideoAcceleratorNotify;

// TODO: this type is limited to platform 'windows5.0'
typedef int IAMVideoAccelerator;

typedef int AM_WST_PAGE;

typedef enum {
    AM_WST_LEVEL_1_5 = 0,
} AM_WST_LEVEL;

typedef enum {
    AM_WST_SERVICE_None = 0,
    AM_WST_SERVICE_Text = 1,
    AM_WST_SERVICE_IDS = 2,
    AM_WST_SERVICE_Invalid = 3,
} AM_WST_SERVICE;

typedef enum {
    AM_WST_STATE_Off = 0,
    AM_WST_STATE_On = 1,
} AM_WST_STATE;

typedef enum {
    AM_WST_STYLE_None = 0,
    AM_WST_STYLE_Invers = 1,
} AM_WST_STYLE;

typedef enum {
    AM_WST_DRAWBGMODE_Opaque = 0,
    AM_WST_DRAWBGMODE_Transparent = 1,
} AM_WST_DRAWBGMODE;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IAMWstDecoder;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IKsTopologyInfo;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ISelector;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ICameraControl;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVideoProcAmp;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IKsNodeControl;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IConfigAsfWriter;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IConfigAsfWriter2;

typedef enum {
    STREAMTYPE_READ = 0,
    STREAMTYPE_WRITE = 1,
    STREAMTYPE_TRANSFORM = 2,
} STREAM_TYPE;

typedef enum {
    STREAMSTATE_STOP = 0,
    STREAMSTATE_RUN = 1,
} STREAM_STATE;

typedef enum {
    COMPSTAT_NOUPDATEOK = 1,
    COMPSTAT_WAIT = 2,
    COMPSTAT_ABORT = 4,
} COMPLETION_STATUS_FLAGS;

typedef enum {
    MMSSF_HASCLOCK = 1,
    MMSSF_SUPPORTSEEK = 2,
    MMSSF_ASYNCHRONOUS = 4,
} MMSSF_GET_INFORMATION_FLAGS;

typedef enum {
    SSUPDATE_ASYNC = 1,
    SSUPDATE_CONTINUOUS = 2,
} SSUPDATE_TYPE;

typedef int IMultiMediaStream;

typedef int IMediaStream;

typedef int IStreamSample;

typedef enum {
    DDSFF_PROGRESSIVERENDER = 1,
} DDSFF_FLAGS;

typedef int IDirectDrawMediaStream;

typedef int IDirectDrawStreamSample;

typedef int IAudioMediaStream;

typedef int IAudioStreamSample;

typedef int IMemoryData;

typedef int IAudioData;

typedef enum {
    AMMSF_NOGRAPHTHREAD = 1,
} AMMSF_MMS_INIT_FLAGS;

typedef enum {
    AMMSF_ADDDEFAULTRENDERER = 1,
    AMMSF_CREATEPEER = 2,
    AMMSF_STOPIFNOSAMPLES = 4,
    AMMSF_NOSTALL = 8,
} AMMSF_MS_FLAGS;

typedef enum {
    AMMSF_RENDERTYPEMASK = 3,
    AMMSF_RENDERTOEXISTING = 0,
    AMMSF_RENDERALLSTREAMS = 1,
    AMMSF_NORENDER = 2,
    AMMSF_NOCLOCK = 4,
    AMMSF_RUN = 8,
} AMMSF_RENDER_FLAGS;

typedef enum {
    Disabled = 0,
    ReadData = 1,
    RenderData = 2,
} OUTPUT_STATE;

typedef int IAMMultiMediaStream;

typedef int IAMMediaStream;

typedef int IMediaStreamFilter;

// TODO: this type is limited to platform 'windows5.0'
typedef int IDirectDrawMediaSampleAllocator;

// TODO: this type is limited to platform 'windows5.0'
typedef int IDirectDrawMediaSample;

typedef int IAMMediaTypeStream;

typedef int IAMMediaTypeSample;

// TODO: this type is limited to platform 'windows5.0'
typedef int IDirectDrawVideo;

// TODO: this type is limited to platform 'windows5.0'
typedef int IQualProp;

typedef int IFullScreenVideo;

// TODO: this type is limited to platform 'windows5.0'
typedef int IFullScreenVideoEx;

typedef int IBaseVideoMixer;

typedef int TRUECOLORINFO;

typedef int VIDEOINFOHEADER;

typedef int VIDEOINFO;

typedef int MPEG1VIDEOINFO;

typedef int ANALOGVIDEOINFO;

typedef enum {
    AM_PROPERTY_FRAMESTEP_STEP = 1,
    AM_PROPERTY_FRAMESTEP_CANCEL = 2,
    AM_PROPERTY_FRAMESTEP_CANSTEP = 3,
    AM_PROPERTY_FRAMESTEP_CANSTEPMULTIPLE = 4,
} AM_PROPERTY_FRAMESTEP;

typedef int AM_FRAMESTEP_STEP;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDMOWrapperFilter;

typedef enum {
    KsAllocatorMode_User = 0,
    KsAllocatorMode_Kernel = 1,
} KSALLOCATORMODE;

typedef enum {
    FramingProp_Uninitialized = 0,
    FramingProp_None = 1,
    FramingProp_Old = 2,
    FramingProp_Ex = 3,
} FRAMING_PROP;

typedef enum {
    Framing_Cache_Update = 0,
    Framing_Cache_ReadLast = 1,
    Framing_Cache_ReadOrig = 2,
    Framing_Cache_Write = 3,
} FRAMING_CACHE_OPS;

typedef int OPTIMAL_WEIGHT_TOTALS;

typedef enum {
    PipeState_DontCare = 0,
    PipeState_RangeNotFixed = 1,
    PipeState_RangeFixed = 2,
    PipeState_CompressionUnknown = 3,
    PipeState_Finalized = 4,
} PIPE_STATE;

typedef int PIPE_DIMENSIONS;

typedef enum {
    Pipe_Allocator_None = 0,
    Pipe_Allocator_FirstPin = 1,
    Pipe_Allocator_LastPin = 2,
    Pipe_Allocator_MiddlePin = 3,
} PIPE_ALLOCATOR_PLACE;

typedef enum {
    KS_MemoryTypeDontCare = 0,
    KS_MemoryTypeKernelPaged = 1,
    KS_MemoryTypeKernelNonPaged = 2,
    KS_MemoryTypeDeviceHostMapped = 3,
    KS_MemoryTypeDeviceSpecific = 4,
    KS_MemoryTypeUser = 5,
    KS_MemoryTypeAnyHost = 6,
} KS_LogicalMemoryType;

typedef int PIPE_TERMINATION;

typedef int ALLOCATOR_PROPERTIES_EX;

typedef int CLSID_Proxy;

typedef int IKsControl;

typedef int IKsAggregateControl;

typedef int IKsTopology;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMixerOCXNotify;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMixerOCX;

typedef enum {
    AM_ARMODE_STRETCHED = 0,
    AM_ARMODE_LETTER_BOX = 1,
    AM_ARMODE_CROP = 2,
    AM_ARMODE_STRETCHED_AS_PRIMARY = 3,
} AM_ASPECT_RATIO_MODE;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMixerPinConfig;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMixerPinConfig2;

typedef int AM_MPEGSTREAMTYPE;

typedef int AM_MPEGSYSTEMTYPE;

// TODO: this type is limited to platform 'windows5.0'
typedef int IMpegAudioDecoder;

typedef enum {
    VMR9Sample_SyncPoint = 1,
    VMR9Sample_Preroll = 2,
    VMR9Sample_Discontinuity = 4,
    VMR9Sample_TimeValid = 8,
    VMR9Sample_SrcDstRectsValid = 16,
} VMR9PresentationFlags;

typedef int VMR9PresentationInfo;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRImagePresenter9;

typedef enum {
    VMR9AllocFlag_3DRenderTarget = 1,
    VMR9AllocFlag_DXVATarget = 2,
    VMR9AllocFlag_TextureSurface = 4,
    VMR9AllocFlag_OffscreenSurface = 8,
    VMR9AllocFlag_RGBDynamicSwitch = 16,
    VMR9AllocFlag_UsageReserved = 224,
    VMR9AllocFlag_UsageMask = 255,
} VMR9SurfaceAllocationFlags;

typedef int VMR9AllocationInfo;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRSurfaceAllocator9;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRSurfaceAllocatorEx9;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRSurfaceAllocatorNotify9;

typedef enum {
    VMR9ARMode_None = 0,
    VMR9ARMode_LetterBox = 1,
} VMR9AspectRatioMode;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRWindowlessControl9;

typedef enum {
    MixerPref9_NoDecimation = 1,
    MixerPref9_DecimateOutput = 2,
    MixerPref9_ARAdjustXorY = 4,
    MixerPref9_NonSquareMixing = 8,
    MixerPref9_DecimateMask = 15,
    MixerPref9_BiLinearFiltering = 16,
    MixerPref9_PointFiltering = 32,
    MixerPref9_AnisotropicFiltering = 64,
    MixerPref9_PyramidalQuadFiltering = 128,
    MixerPref9_GaussianQuadFiltering = 256,
    MixerPref9_FilteringReserved = 3584,
    MixerPref9_FilteringMask = 4080,
    MixerPref9_RenderTargetRGB = 4096,
    MixerPref9_RenderTargetYUV = 8192,
    MixerPref9_RenderTargetReserved = 1032192,
    MixerPref9_RenderTargetMask = 1044480,
    MixerPref9_DynamicSwitchToBOB = 1048576,
    MixerPref9_DynamicDecimateBy2 = 2097152,
    MixerPref9_DynamicReserved = 12582912,
    MixerPref9_DynamicMask = 15728640,
} VMR9MixerPrefs;

typedef int VMR9NormalizedRect;

typedef enum {
    ProcAmpControl9_Brightness = 1,
    ProcAmpControl9_Contrast = 2,
    ProcAmpControl9_Hue = 4,
    ProcAmpControl9_Saturation = 8,
    ProcAmpControl9_Mask = 15,
} VMR9ProcAmpControlFlags;

typedef int VMR9ProcAmpControl;

typedef int VMR9ProcAmpControlRange;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRMixerControl9;

typedef int VMR9AlphaBitmap;

typedef enum {
    VMR9AlphaBitmap_Disable = 1,
    VMR9AlphaBitmap_hDC = 2,
    VMR9AlphaBitmap_EntireDDS = 4,
    VMR9AlphaBitmap_SrcColorKey = 8,
    VMR9AlphaBitmap_SrcRect = 16,
    VMR9AlphaBitmap_FilterMode = 32,
} VMR9AlphaBitmapFlags;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRMixerBitmap9;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRSurface9;

typedef enum {
    RenderPrefs9_DoNotRenderBorder = 1,
    RenderPrefs9_Mask = 1,
} VMR9RenderPrefs;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRImagePresenterConfig9;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRVideoStreamControl9;

typedef enum {
    VMR9Mode_Windowed = 1,
    VMR9Mode_Windowless = 2,
    VMR9Mode_Renderless = 4,
    VMR9Mode_Mask = 7,
} VMR9Mode;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRFilterConfig9;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRAspectRatioControl9;

typedef int VMR9MonitorInfo;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRMonitorConfig9;

typedef enum {
    DeinterlacePref9_NextBest = 1,
    DeinterlacePref9_BOB = 2,
    DeinterlacePref9_Weave = 4,
    DeinterlacePref9_Mask = 7,
} VMR9DeinterlacePrefs;

typedef enum {
    DeinterlaceTech9_Unknown = 0,
    DeinterlaceTech9_BOBLineReplicate = 1,
    DeinterlaceTech9_BOBVerticalStretch = 2,
    DeinterlaceTech9_MedianFiltering = 4,
    DeinterlaceTech9_EdgeFiltering = 16,
    DeinterlaceTech9_FieldAdaptive = 32,
    DeinterlaceTech9_PixelAdaptive = 64,
    DeinterlaceTech9_MotionVectorSteered = 128,
} VMR9DeinterlaceTech;

typedef int VMR9Frequency;

typedef enum {
    VMR9_SampleReserved = 1,
    VMR9_SampleProgressiveFrame = 2,
    VMR9_SampleFieldInterleavedEvenFirst = 3,
    VMR9_SampleFieldInterleavedOddFirst = 4,
    VMR9_SampleFieldSingleEven = 5,
    VMR9_SampleFieldSingleOdd = 6,
} VMR9_SampleFormat;

typedef int VMR9VideoDesc;

typedef int VMR9DeinterlaceCaps;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRDeinterlaceControl9;

typedef int VMR9VideoStreamInfo;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IVMRImageCompositor9;

// TODO: this type is limited to platform 'windows5.0'
typedef int IVPBaseConfig;

// TODO: this type is limited to platform 'windows5.0'
typedef int IVPConfig;

typedef int IVPVBIConfig;

// TODO: this type is limited to platform 'windows5.0'
typedef int IVPBaseNotify;

// TODO: this type is limited to platform 'windows5.0'
typedef int IVPNotify;

// TODO: this type is limited to platform 'windows5.0'
typedef int IVPNotify2;

typedef int IVPVBINotify;

// TODO: this type is limited to platform 'windows5.0'
typedef int IXMLGraphBuilder;

typedef int RIFFCHUNK;

typedef int RIFFLIST;

typedef int AVIMAINHEADER;

typedef int AVIEXTHEADER;

typedef int AVISTREAMHEADER;

typedef int AVIOLDINDEX;

typedef int TIMECODEDATA;

typedef int AVIMETAINDEX;

typedef int AVISUPERINDEX;

typedef int AVISTDINDEX_ENTRY;

typedef int AVISTDINDEX;

typedef int AVITIMEDINDEX_ENTRY;

typedef int _avitimedindex;

typedef int AVITIMECODEINDEX;

typedef int AVITCDLINDEX_ENTRY;

typedef int _avitcdlindex;

typedef int AVIFIELDINDEX;

typedef int MainAVIHeader;

typedef int AVIStreamHeader;

typedef int AVIINDEXENTRY;

typedef int AVIPALCHANGE;

typedef enum {
    AM_PROPERTY_AC3_ERROR_CONCEALMENT = 1,
    AM_PROPERTY_AC3_ALTERNATE_AUDIO = 2,
    AM_PROPERTY_AC3_DOWNMIX = 3,
    AM_PROPERTY_AC3_BIT_STREAM_MODE = 4,
    AM_PROPERTY_AC3_DIALOGUE_LEVEL = 5,
    AM_PROPERTY_AC3_LANGUAGE_CODE = 6,
    AM_PROPERTY_AC3_ROOM_TYPE = 7,
} AM_PROPERTY_AC3;

typedef int AM_AC3_ERROR_CONCEALMENT;

typedef int AM_AC3_ALTERNATE_AUDIO;

typedef int AM_AC3_DOWNMIX;

typedef int AM_AC3_BIT_STREAM_MODE;

typedef int AM_AC3_DIALOGUE_LEVEL;

typedef int AM_AC3_ROOM_TYPE;

typedef enum {
    AM_PROPERTY_DVDSUBPIC_PALETTE = 0,
    AM_PROPERTY_DVDSUBPIC_HLI = 1,
    AM_PROPERTY_DVDSUBPIC_COMPOSIT_ON = 2,
} AM_PROPERTY_DVDSUBPIC;

typedef int AM_DVD_YUV;

typedef int AM_PROPERTY_SPPAL;

typedef int AM_COLCON;

typedef int AM_PROPERTY_SPHLI;

typedef enum {
    AM_PROPERTY_DVDCOPY_CHLG_KEY = 1,
    AM_PROPERTY_DVDCOPY_DVD_KEY1 = 2,
    AM_PROPERTY_DVDCOPY_DEC_KEY2 = 3,
    AM_PROPERTY_DVDCOPY_TITLE_KEY = 4,
    AM_PROPERTY_COPY_MACROVISION = 5,
    AM_PROPERTY_DVDCOPY_REGION = 6,
    AM_PROPERTY_DVDCOPY_SET_COPY_STATE = 7,
    AM_PROPERTY_COPY_ANALOG_COMPONENT = 8,
    AM_PROPERTY_COPY_DIGITAL_CP = 9,
    AM_PROPERTY_COPY_DVD_SRM = 10,
    AM_PROPERTY_DVDCOPY_SUPPORTS_NEW_KEYCOUNT = 11,
    AM_PROPERTY_DVDCOPY_DISC_KEY = 128,
} AM_PROPERTY_DVDCOPYPROT;

typedef enum {
    AM_DIGITAL_CP_OFF = 0,
    AM_DIGITAL_CP_ON = 1,
    AM_DIGITAL_CP_DVD_COMPLIANT = 2,
} AM_DIGITAL_CP;

typedef int AM_DVDCOPY_CHLGKEY;

typedef int AM_DVDCOPY_BUSKEY;

typedef int AM_DVDCOPY_DISCKEY;

typedef int AM_DVDCOPY_TITLEKEY;

typedef int AM_COPY_MACROVISION;

typedef int AM_DVDCOPY_SET_COPY_STATE;

typedef enum {
    AM_DVDCOPYSTATE_INITIALIZE = 0,
    AM_DVDCOPYSTATE_INITIALIZE_TITLE = 1,
    AM_DVDCOPYSTATE_AUTHENTICATION_NOT_REQUIRED = 2,
    AM_DVDCOPYSTATE_AUTHENTICATION_REQUIRED = 3,
    AM_DVDCOPYSTATE_DONE = 4,
} AM_DVDCOPYSTATE;

typedef enum {
    AM_MACROVISION_DISABLED = 0,
    AM_MACROVISION_LEVEL1 = 1,
    AM_MACROVISION_LEVEL2 = 2,
    AM_MACROVISION_LEVEL3 = 3,
} AM_COPY_MACROVISION_LEVEL;

typedef int DVD_REGION;

typedef enum {
    AM_MPEG2Level_Low = 1,
    AM_MPEG2Level_Main = 2,
    AM_MPEG2Level_High1440 = 3,
    AM_MPEG2Level_High = 4,
} AM_MPEG2Level;

typedef enum {
    AM_MPEG2Profile_Simple = 1,
    AM_MPEG2Profile_Main = 2,
    AM_MPEG2Profile_SNRScalable = 3,
    AM_MPEG2Profile_SpatiallyScalable = 4,
    AM_MPEG2Profile_High = 5,
} AM_MPEG2Profile;

typedef int VIDEOINFOHEADER2;

typedef int MPEG2VIDEOINFO;

typedef int AM_DvdKaraokeData;

typedef enum {
    AM_PROPERTY_DVDKARAOKE_ENABLE = 0,
    AM_PROPERTY_DVDKARAOKE_DATA = 1,
} AM_PROPERTY_DVDKARAOKE;

typedef enum {
    AM_RATE_SimpleRateChange = 1,
    AM_RATE_ExactRateChange = 2,
    AM_RATE_MaxFullDataRate = 3,
    AM_RATE_Step = 4,
    AM_RATE_UseRateVersion = 5,
    AM_RATE_QueryFullFrameRate = 6,
    AM_RATE_QueryLastRateSegPTS = 7,
    AM_RATE_CorrectTS = 8,
    AM_RATE_ReverseMaxFullDataRate = 9,
    AM_RATE_ResetOnTimeDisc = 10,
    AM_RATE_QueryMapping = 11,
} AM_PROPERTY_TS_RATE_CHANGE;

typedef enum {
    AM_RATE_ChangeRate = 1,
    AM_RATE_FullDataRateMax = 2,
    AM_RATE_ReverseDecode = 3,
    AM_RATE_DecoderPosition = 4,
    AM_RATE_DecoderVersion = 5,
} AM_PROPERTY_DVD_RATE_CHANGE;

typedef int AM_SimpleRateChange;

typedef int AM_QueryRate;

typedef int AM_ExactRateChange;

typedef int AM_DVD_ChangeRate;

typedef enum {
    DVD_DIR_FORWARD = 0,
    DVD_DIR_BACKWARD = 1,
} DVD_PLAY_DIRECTION;

typedef enum {
    DVD_ERROR_Unexpected = 1,
    DVD_ERROR_CopyProtectFail = 2,
    DVD_ERROR_InvalidDVD1_0Disc = 3,
    DVD_ERROR_InvalidDiscRegion = 4,
    DVD_ERROR_LowParentalLevel = 5,
    DVD_ERROR_MacrovisionFail = 6,
    DVD_ERROR_IncompatibleSystemAndDecoderRegions = 7,
    DVD_ERROR_IncompatibleDiscAndDecoderRegions = 8,
    DVD_ERROR_CopyProtectOutputFail = 9,
    DVD_ERROR_CopyProtectOutputNotSupported = 10,
} DVD_ERROR;

typedef enum {
    DVD_WARNING_InvalidDVD1_0Disc = 1,
    DVD_WARNING_FormatNotSupported = 2,
    DVD_WARNING_IllegalNavCommand = 3,
    DVD_WARNING_Open = 4,
    DVD_WARNING_Seek = 5,
    DVD_WARNING_Read = 6,
} DVD_WARNING;

typedef enum {
    DVD_PB_STOPPED_Other = 0,
    DVD_PB_STOPPED_NoBranch = 1,
    DVD_PB_STOPPED_NoFirstPlayDomain = 2,
    DVD_PB_STOPPED_StopCommand = 3,
    DVD_PB_STOPPED_Reset = 4,
    DVD_PB_STOPPED_DiscEjected = 5,
    DVD_PB_STOPPED_IllegalNavCommand = 6,
    DVD_PB_STOPPED_PlayPeriodAutoStop = 7,
    DVD_PB_STOPPED_PlayChapterAutoStop = 8,
    DVD_PB_STOPPED_ParentalFailure = 9,
    DVD_PB_STOPPED_RegionFailure = 10,
    DVD_PB_STOPPED_MacrovisionFailure = 11,
    DVD_PB_STOPPED_DiscReadError = 12,
    DVD_PB_STOPPED_CopyProtectFailure = 13,
    DVD_PB_STOPPED_CopyProtectOutputFailure = 14,
    DVD_PB_STOPPED_CopyProtectOutputNotSupported = 15,
} DVD_PB_STOPPED;

typedef int AMGETERRORTEXTPROCA;

typedef int AMGETERRORTEXTPROCW;

typedef enum {
    SNDDEV_ERROR_Open = 1,
    SNDDEV_ERROR_Close = 2,
    SNDDEV_ERROR_GetCaps = 3,
    SNDDEV_ERROR_PrepareHeader = 4,
    SNDDEV_ERROR_UnprepareHeader = 5,
    SNDDEV_ERROR_Reset = 6,
    SNDDEV_ERROR_Restart = 7,
    SNDDEV_ERROR_GetPosition = 8,
    SNDDEV_ERROR_Write = 9,
    SNDDEV_ERROR_Pause = 10,
    SNDDEV_ERROR_Stop = 11,
    SNDDEV_ERROR_Start = 12,
    SNDDEV_ERROR_AddBuffer = 13,
    SNDDEV_ERROR_Query = 14,
} SNDDEV_ERR;

typedef enum {
    MPT_INT = 0,
    MPT_FLOAT = 1,
    MPT_BOOL = 2,
    MPT_ENUM = 3,
    MPT_MAX = 4,
} MP_TYPE;

typedef enum {
    MP_CURVE_JUMP = 1,
    MP_CURVE_LINEAR = 2,
    MP_CURVE_SQUARE = 4,
    MP_CURVE_INVSQUARE = 8,
    MP_CURVE_SINE = 16,
} MP_CURVE_TYPE;

typedef int MP_PARAMINFO;

typedef int MP_ENVELOPE_SEGMENT;

typedef int IMediaParamInfo;

typedef int IMediaParams;

typedef int DMO_PARTIAL_MEDIATYPE;

typedef enum {
    DMO_REGISTERF_IS_KEYED = 1,
} DMO_REGISTER_FLAGS;

typedef enum {
    DMO_ENUMF_INCLUDE_KEYED = 1,
} DMO_ENUM_FLAGS;

typedef int DMO_MEDIA_TYPE;

typedef int IMediaBuffer;

typedef int DMO_OUTPUT_DATA_BUFFER;

typedef int IMediaObject;

typedef int IEnumDMO;

typedef int IMediaObjectInPlace;

typedef int IDMOQualityControl;

typedef int IDMOVideoOutputOptimizations;

typedef int DXVA_COPPSetProtectionLevelCmdData;

typedef enum {
    COPP_HDCP_Level0 = 0,
    COPP_HDCP_LevelMin = 0,
    COPP_HDCP_Level1 = 1,
    COPP_HDCP_LevelMax = 1,
    COPP_HDCP_ForceDWORD = 2147483647,
} COPP_HDCP_Protection_Level;

typedef enum {
    COPP_CGMSA_Disabled = 0,
    COPP_CGMSA_LevelMin = 0,
    COPP_CGMSA_CopyFreely = 1,
    COPP_CGMSA_CopyNoMore = 2,
    COPP_CGMSA_CopyOneGeneration = 3,
    COPP_CGMSA_CopyNever = 4,
    COPP_CGMSA_RedistributionControlRequired = 8,
    COPP_CGMSA_LevelMax = 12,
    COPP_CGMSA_ForceDWORD = 2147483647,
} COPP_CGMSA_Protection_Level;

typedef enum {
    COPP_ACP_Level0 = 0,
    COPP_ACP_LevelMin = 0,
    COPP_ACP_Level1 = 1,
    COPP_ACP_Level2 = 2,
    COPP_ACP_Level3 = 3,
    COPP_ACP_LevelMax = 3,
    COPP_ACP_ForceDWORD = 2147483647,
} COPP_ACP_Protection_Level;

typedef int DXVA_COPPSetSignalingCmdData;

typedef enum {
    COPP_ProtectionStandard_Unknown = -2147483648,
    COPP_ProtectionStandard_None = 0,
    COPP_ProtectionStandard_IEC61880_525i = 1,
    COPP_ProtectionStandard_IEC61880_2_525i = 2,
    COPP_ProtectionStandard_IEC62375_625p = 4,
    COPP_ProtectionStandard_EIA608B_525 = 8,
    COPP_ProtectionStandard_EN300294_625i = 16,
    COPP_ProtectionStandard_CEA805A_TypeA_525p = 32,
    COPP_ProtectionStandard_CEA805A_TypeA_750p = 64,
    COPP_ProtectionStandard_CEA805A_TypeA_1125i = 128,
    COPP_ProtectionStandard_CEA805A_TypeB_525p = 256,
    COPP_ProtectionStandard_CEA805A_TypeB_750p = 512,
    COPP_ProtectionStandard_CEA805A_TypeB_1125i = 1024,
    COPP_ProtectionStandard_ARIBTRB15_525i = 2048,
    COPP_ProtectionStandard_ARIBTRB15_525p = 4096,
    COPP_ProtectionStandard_ARIBTRB15_750p = 8192,
    COPP_ProtectionStandard_ARIBTRB15_1125i = 16384,
    COPP_ProtectionStandard_Mask = -2147450881,
    COPP_ProtectionStandard_Reserved = 2147450880,
} COPP_TVProtectionStandard;

typedef enum {
    COPP_AspectRatio_EN300294_FullFormat4by3 = 0,
    COPP_AspectRatio_EN300294_Box14by9Center = 1,
    COPP_AspectRatio_EN300294_Box14by9Top = 2,
    COPP_AspectRatio_EN300294_Box16by9Center = 3,
    COPP_AspectRatio_EN300294_Box16by9Top = 4,
    COPP_AspectRatio_EN300294_BoxGT16by9Center = 5,
    COPP_AspectRatio_EN300294_FullFormat4by3ProtectedCenter = 6,
    COPP_AspectRatio_EN300294_FullFormat16by9Anamorphic = 7,
    COPP_AspectRatio_ForceDWORD = 2147483647,
} COPP_ImageAspectRatio_EN300294;

typedef enum {
    COPP_StatusNormal = 0,
    COPP_LinkLost = 1,
    COPP_RenegotiationRequired = 2,
    COPP_StatusFlagsReserved = -4,
} COPP_StatusFlags;

typedef int DXVA_COPPStatusData;

typedef int DXVA_COPPStatusDisplayData;

typedef enum {
    COPP_HDCPRepeater = 1,
    COPP_HDCPFlagsReserved = -2,
} COPP_StatusHDCPFlags;

typedef int DXVA_COPPStatusHDCPKeyData;

typedef enum {
    COPP_ConnectorType_Unknown = -1,
    COPP_ConnectorType_VGA = 0,
    COPP_ConnectorType_SVideo = 1,
    COPP_ConnectorType_CompositeVideo = 2,
    COPP_ConnectorType_ComponentVideo = 3,
    COPP_ConnectorType_DVI = 4,
    COPP_ConnectorType_HDMI = 5,
    COPP_ConnectorType_LVDS = 6,
    COPP_ConnectorType_TMDS = 7,
    COPP_ConnectorType_D_JPN = 8,
    COPP_ConnectorType_Internal = -2147483648,
    COPP_ConnectorType_ForceDWORD = 2147483647,
} COPP_ConnectorType;

typedef enum {
    COPP_BusType_Unknown = 0,
    COPP_BusType_PCI = 1,
    COPP_BusType_PCIX = 2,
    COPP_BusType_PCIExpress = 3,
    COPP_BusType_AGP = 4,
    COPP_BusType_Integrated = -2147483648,
    COPP_BusType_ForceDWORD = 2147483647,
} COPP_BusType;

typedef int DXVA_COPPStatusSignalingCmdData;

typedef int SystemTuningSpaces;

typedef int TuningSpace;

typedef int ChannelIDTuningSpace;

typedef int ATSCTuningSpace;

typedef int DigitalCableTuningSpace;

typedef int AnalogRadioTuningSpace;

typedef int AuxInTuningSpace;

typedef int AnalogTVTuningSpace;

typedef int DVBTuningSpace;

typedef int DVBSTuningSpace;

typedef int ComponentTypes;

typedef int ComponentType;

typedef int LanguageComponentType;

typedef int MPEG2ComponentType;

typedef int ATSCComponentType;

typedef int Components;

typedef int Component;

typedef int MPEG2Component;

typedef int AnalogAudioComponentType;

typedef int TuneRequest;

typedef int ChannelIDTuneRequest;

typedef int ChannelTuneRequest;

typedef int ATSCChannelTuneRequest;

typedef int DigitalCableTuneRequest;

typedef int MPEG2TuneRequest;

typedef int MPEG2TuneRequestFactory;

typedef int Locator;

typedef int DigitalLocator;

typedef int AnalogLocator;

typedef int ATSCLocator;

typedef int DigitalCableLocator;

typedef int DVBTLocator;

typedef int DVBTLocator2;

typedef int DVBSLocator;

typedef int DVBCLocator;

typedef int ISDBSLocator;

typedef int DVBTuneRequest;

typedef int CreatePropBagOnRegKey;

typedef int BroadcastEventService;

typedef int TunerMarshaler;

typedef int PersistTuneXmlUtility;

typedef int ESEventService;

typedef int ESEventFactory;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ICreatePropBagOnRegKey;

typedef enum {
    DISPID_TUNER_TS_UNIQUENAME = 1,
    DISPID_TUNER_TS_FRIENDLYNAME = 2,
    DISPID_TUNER_TS_CLSID = 3,
    DISPID_TUNER_TS_NETWORKTYPE = 4,
    DISPID_TUNER_TS__NETWORKTYPE = 5,
    DISPID_TUNER_TS_CREATETUNEREQUEST = 6,
    DISPID_TUNER_TS_ENUMCATEGORYGUIDS = 7,
    DISPID_TUNER_TS_ENUMDEVICEMONIKERS = 8,
    DISPID_TUNER_TS_DEFAULTPREFERREDCOMPONENTTYPES = 9,
    DISPID_TUNER_TS_FREQMAP = 10,
    DISPID_TUNER_TS_DEFLOCATOR = 11,
    DISPID_TUNER_TS_CLONE = 12,
    DISPID_TUNER_TR_TUNINGSPACE = 1,
    DISPID_TUNER_TR_COMPONENTS = 2,
    DISPID_TUNER_TR_CLONE = 3,
    DISPID_TUNER_TR_LOCATOR = 4,
    DISPID_TUNER_CT_CATEGORY = 1,
    DISPID_TUNER_CT_MEDIAMAJORTYPE = 2,
    DISPID_TUNER_CT__MEDIAMAJORTYPE = 3,
    DISPID_TUNER_CT_MEDIASUBTYPE = 4,
    DISPID_TUNER_CT__MEDIASUBTYPE = 5,
    DISPID_TUNER_CT_MEDIAFORMATTYPE = 6,
    DISPID_TUNER_CT__MEDIAFORMATTYPE = 7,
    DISPID_TUNER_CT_MEDIATYPE = 8,
    DISPID_TUNER_CT_CLONE = 9,
    DISPID_TUNER_LCT_LANGID = 100,
    DISPID_TUNER_MP2CT_TYPE = 200,
    DISPID_TUNER_ATSCCT_FLAGS = 300,
    DISPID_TUNER_L_CARRFREQ = 1,
    DISPID_TUNER_L_INNERFECMETHOD = 2,
    DISPID_TUNER_L_INNERFECRATE = 3,
    DISPID_TUNER_L_OUTERFECMETHOD = 4,
    DISPID_TUNER_L_OUTERFECRATE = 5,
    DISPID_TUNER_L_MOD = 6,
    DISPID_TUNER_L_SYMRATE = 7,
    DISPID_TUNER_L_CLONE = 8,
    DISPID_TUNER_L_ATSC_PHYS_CHANNEL = 201,
    DISPID_TUNER_L_ATSC_TSID = 202,
    DISPID_TUNER_L_ATSC_MP2_PROGNO = 203,
    DISPID_TUNER_L_DVBT_BANDWIDTH = 301,
    DISPID_TUNER_L_DVBT_LPINNERFECMETHOD = 302,
    DISPID_TUNER_L_DVBT_LPINNERFECRATE = 303,
    DISPID_TUNER_L_DVBT_GUARDINTERVAL = 304,
    DISPID_TUNER_L_DVBT_HALPHA = 305,
    DISPID_TUNER_L_DVBT_TRANSMISSIONMODE = 306,
    DISPID_TUNER_L_DVBT_INUSE = 307,
    DISPID_TUNER_L_DVBT2_PHYSICALLAYERPIPEID = 351,
    DISPID_TUNER_L_DVBS_POLARISATION = 401,
    DISPID_TUNER_L_DVBS_WEST = 402,
    DISPID_TUNER_L_DVBS_ORBITAL = 403,
    DISPID_TUNER_L_DVBS_AZIMUTH = 404,
    DISPID_TUNER_L_DVBS_ELEVATION = 405,
    DISPID_TUNER_L_DVBS2_DISEQ_LNB_SOURCE = 406,
    DISPID_TUNER_TS_DVBS2_LOW_OSC_FREQ_OVERRIDE = 407,
    DISPID_TUNER_TS_DVBS2_HI_OSC_FREQ_OVERRIDE = 408,
    DISPID_TUNER_TS_DVBS2_LNB_SWITCH_FREQ_OVERRIDE = 409,
    DISPID_TUNER_TS_DVBS2_SPECTRAL_INVERSION_OVERRIDE = 410,
    DISPID_TUNER_L_DVBS2_ROLLOFF = 411,
    DISPID_TUNER_L_DVBS2_PILOT = 412,
    DISPID_TUNER_L_ANALOG_STANDARD = 601,
    DISPID_TUNER_L_DTV_O_MAJOR_CHANNEL = 701,
    DISPID_TUNER_C_TYPE = 1,
    DISPID_TUNER_C_STATUS = 2,
    DISPID_TUNER_C_LANGID = 3,
    DISPID_TUNER_C_DESCRIPTION = 4,
    DISPID_TUNER_C_CLONE = 5,
    DISPID_TUNER_C_MP2_PID = 101,
    DISPID_TUNER_C_MP2_PCRPID = 102,
    DISPID_TUNER_C_MP2_PROGNO = 103,
    DISPID_TUNER_C_ANALOG_AUDIO = 201,
    DISPID_TUNER_TS_DVB_SYSTEMTYPE = 101,
    DISPID_TUNER_TS_DVB2_NETWORK_ID = 102,
    DISPID_TUNER_TS_DVBS_LOW_OSC_FREQ = 1001,
    DISPID_TUNER_TS_DVBS_HI_OSC_FREQ = 1002,
    DISPID_TUNER_TS_DVBS_LNB_SWITCH_FREQ = 1003,
    DISPID_TUNER_TS_DVBS_INPUT_RANGE = 1004,
    DISPID_TUNER_TS_DVBS_SPECTRAL_INVERSION = 1005,
    DISPID_TUNER_TS_AR_MINFREQUENCY = 101,
    DISPID_TUNER_TS_AR_MAXFREQUENCY = 102,
    DISPID_TUNER_TS_AR_STEP = 103,
    DISPID_TUNER_TS_AR_COUNTRYCODE = 104,
    DISPID_TUNER_TS_AUX_COUNTRYCODE = 101,
    DISPID_TUNER_TS_ATV_MINCHANNEL = 101,
    DISPID_TUNER_TS_ATV_MAXCHANNEL = 102,
    DISPID_TUNER_TS_ATV_INPUTTYPE = 103,
    DISPID_TUNER_TS_ATV_COUNTRYCODE = 104,
    DISPID_TUNER_TS_ATSC_MINMINORCHANNEL = 201,
    DISPID_TUNER_TS_ATSC_MAXMINORCHANNEL = 202,
    DISPID_TUNER_TS_ATSC_MINPHYSCHANNEL = 203,
    DISPID_TUNER_TS_ATSC_MAXPHYSCHANNEL = 204,
    DISPID_TUNER_TS_DC_MINMAJORCHANNEL = 301,
    DISPID_TUNER_TS_DC_MAXMAJORCHANNEL = 302,
    DISPID_TUNER_TS_DC_MINSOURCEID = 303,
    DISPID_TUNER_TS_DC_MAXSOURCEID = 304,
    DISPID_CHTUNER_ATVAC_CHANNEL = 101,
    DISPID_CHTUNER_ATVDC_SYSTEM = 101,
    DISPID_CHTUNER_ATVDC_CONTENT = 102,
    DISPID_CHTUNER_CIDTR_CHANNELID = 101,
    DISPID_CHTUNER_CTR_CHANNEL = 101,
    DISPID_CHTUNER_ACTR_MINOR_CHANNEL = 201,
    DISPID_CHTUNER_DCTR_MAJOR_CHANNEL = 301,
    DISPID_CHTUNER_DCTR_SRCID = 302,
    DISPID_DVBTUNER_DVBC_ATTRIBUTESVALID = 101,
    DISPID_DVBTUNER_DVBC_PID = 102,
    DISPID_DVBTUNER_DVBC_TAG = 103,
    DISPID_DVBTUNER_DVBC_COMPONENTTYPE = 104,
    DISPID_DVBTUNER_ONID = 101,
    DISPID_DVBTUNER_TSID = 102,
    DISPID_DVBTUNER_SID = 103,
    DISPID_MP2TUNER_TSID = 101,
    DISPID_MP2TUNER_PROGNO = 102,
    DISPID_MP2TUNERFACTORY_CREATETUNEREQUEST = 1,
} DISPID_TUNER;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ITuningSpaces;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ITuningSpaceContainer;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ITuningSpace;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IEnumTuningSpaces;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDVBTuningSpace;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDVBTuningSpace2;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDVBSTuningSpace;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IAuxInTuningSpace;

typedef int IAuxInTuningSpace2;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IAnalogTVTuningSpace;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IATSCTuningSpace;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IDigitalCableTuningSpace;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IAnalogRadioTuningSpace;

typedef int IAnalogRadioTuningSpace2;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ITuneRequest;

// TODO: this type is limited to platform 'windows6.1'
typedef int IChannelIDTuneRequest;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IChannelTuneRequest;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IATSCChannelTuneRequest;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IDigitalCableTuneRequest;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDVBTuneRequest;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMPEG2TuneRequest;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMPEG2TuneRequestFactory;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMPEG2TuneRequestSupport;

typedef int ITunerCap;

// TODO: this type is limited to platform 'windows6.1'
typedef int ITunerCapEx;

typedef int ITuner;

typedef int IScanningTuner;

typedef int IScanningTunerEx;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IComponentType;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ILanguageComponentType;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMPEG2ComponentType;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IATSCComponentType;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IEnumComponentTypes;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IComponentTypes;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IComponent;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IAnalogAudioComponentType;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMPEG2Component;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IEnumComponents;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IComponents;

typedef int IComponentsOld;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ILocator;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IAnalogLocator;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IDigitalLocator;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IATSCLocator;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IATSCLocator2;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IDigitalCableLocator;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDVBTLocator;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDVBTLocator2;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDVBSLocator;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDVBSLocator2;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDVBCLocator;

typedef int IISDBSLocator;

// TODO: this type is limited to platform 'windows6.1'
typedef int IESOpenMmiEvent;

// TODO: this type is limited to platform 'windows6.1'
typedef int IESCloseMmiEvent;

// TODO: this type is limited to platform 'windows6.1'
typedef int IESValueUpdatedEvent;

// TODO: this type is limited to platform 'windows6.1'
typedef int IESRequestTunerEvent;

// TODO: this type is limited to platform 'windows6.1'
typedef int IESIsdbCasResponseEvent;

typedef int IGpnvsCommonBase;

typedef int IESEventFactory;

// TODO: this type is limited to platform 'windows6.1'
typedef int IESLicenseRenewalResultEvent;

// TODO: this type is limited to platform 'windows6.1'
typedef int IESFileExpiryDateEvent;

// TODO: this type is limited to platform 'windows6.1'
typedef int IESEventService;

// TODO: this type is limited to platform 'windows6.1'
typedef int IESEventServiceConfiguration;

typedef int IRegisterTuner;

typedef int IBDAComparable;

// TODO: this type is limited to platform 'windows6.1'
typedef int IPersistTuneXml;

// TODO: this type is limited to platform 'windows6.1'
typedef int IPersistTuneXmlUtility;

// TODO: this type is limited to platform 'windows6.1'
typedef int IPersistTuneXmlUtility2;

// TODO: this type is limited to platform 'windows6.1'
typedef int IBDACreateTuneRequestEx;

typedef int XDSToRat;

typedef int EvalRat;

typedef int ETFilter;

typedef int DTFilter;

typedef int XDSCodec;

typedef int CXDSData;

typedef enum {
    MPAA = 0,
    US_TV = 1,
    Canadian_English = 2,
    Canadian_French = 3,
    Reserved4 = 4,
    System5 = 5,
    System6 = 6,
    Reserved7 = 7,
    PBDA = 8,
    AgeBased = 9,
    TvRat_kSystems = 10,
    TvRat_SystemDontKnow = 255,
} EnTvRat_System;

typedef enum {
    TvRat_0 = 0,
    TvRat_1 = 1,
    TvRat_2 = 2,
    TvRat_3 = 3,
    TvRat_4 = 4,
    TvRat_5 = 5,
    TvRat_6 = 6,
    TvRat_7 = 7,
    TvRat_8 = 8,
    TvRat_9 = 9,
    TvRat_10 = 10,
    TvRat_11 = 11,
    TvRat_12 = 12,
    TvRat_13 = 13,
    TvRat_14 = 14,
    TvRat_15 = 15,
    TvRat_16 = 16,
    TvRat_17 = 17,
    TvRat_18 = 18,
    TvRat_19 = 19,
    TvRat_20 = 20,
    TvRat_21 = 21,
    TvRat_kLevels = 22,
    TvRat_Unblock = -1,
    TvRat_LevelDontKnow = 255,
} EnTvRat_GenericLevel;

typedef enum {
    MPAA_NotApplicable = 0,
    MPAA_G = 1,
    MPAA_PG = 2,
    MPAA_PG13 = 3,
    MPAA_R = 4,
    MPAA_NC17 = 5,
    MPAA_X = 6,
    MPAA_NotRated = 7,
} EnTvRat_MPAA;

typedef enum {
    US_TV_None = 0,
    US_TV_Y = 1,
    US_TV_Y7 = 2,
    US_TV_G = 3,
    US_TV_PG = 4,
    US_TV_14 = 5,
    US_TV_MA = 6,
    US_TV_None7 = 7,
} EnTvRat_US_TV;

typedef enum {
    CAE_TV_Exempt = 0,
    CAE_TV_C = 1,
    CAE_TV_C8 = 2,
    CAE_TV_G = 3,
    CAE_TV_PG = 4,
    CAE_TV_14 = 5,
    CAE_TV_18 = 6,
    CAE_TV_Reserved = 7,
} EnTvRat_CAE_TV;

typedef enum {
    CAF_TV_Exempt = 0,
    CAF_TV_G = 1,
    CAF_TV_8 = 2,
    CAF_TV_13 = 3,
    CAF_TV_16 = 4,
    CAF_TV_18 = 5,
    CAF_TV_Reserved6 = 6,
    CAF_TV_Reserved = 7,
} EnTvRat_CAF_TV;

typedef enum {
    BfAttrNone = 0,
    BfIsBlocked = 1,
    BfIsAttr_1 = 2,
    BfIsAttr_2 = 4,
    BfIsAttr_3 = 8,
    BfIsAttr_4 = 16,
    BfIsAttr_5 = 32,
    BfIsAttr_6 = 64,
    BfIsAttr_7 = 128,
    BfValidAttrSubmask = 255,
} BfEnTvRat_GenericAttributes;

typedef enum {
    US_TV_IsBlocked = 1,
    US_TV_IsViolent = 2,
    US_TV_IsSexualSituation = 4,
    US_TV_IsAdultLanguage = 8,
    US_TV_IsSexuallySuggestiveDialog = 16,
    US_TV_ValidAttrSubmask = 31,
} BfEnTvRat_Attributes_US_TV;

typedef enum {
    MPAA_IsBlocked = 1,
    MPAA_ValidAttrSubmask = 1,
} BfEnTvRat_Attributes_MPAA;

typedef enum {
    CAE_IsBlocked = 1,
    CAE_ValidAttrSubmask = 1,
} BfEnTvRat_Attributes_CAE_TV;

typedef enum {
    CAF_IsBlocked = 1,
    CAF_ValidAttrSubmask = 1,
} BfEnTvRat_Attributes_CAF_TV;

typedef enum {
    FORMATNOTSUPPORTED_CLEAR = 0,
    FORMATNOTSUPPORTED_NOTSUPPORTED = 1,
} FormatNotSupportedEvents;

typedef int WMDRMProtectionInfo;

typedef int BadSampleInfo;

typedef enum {
    PROT_COPY_FREE = 1,
    PROT_COPY_ONCE = 2,
    PROT_COPY_NEVER = 3,
    PROT_COPY_NEVER_REALLY = 4,
    PROT_COPY_NO_MORE = 5,
    PROT_COPY_FREE_CIT = 6,
    PROT_COPY_BF = 7,
    PROT_COPY_CN_RECORDING_STOP = 8,
    PROT_COPY_FREE_SECURE = 9,
    PROT_COPY_INVALID = 50,
} ProtType;

typedef enum {
    ENCDEC_CPEVENT = 0,
    ENCDEC_RECORDING_STATUS = 1,
} EncDecEvents;

typedef enum {
    RECORDING_STOPPED = 0,
    RECORDING_STARTED = 1,
} CPRecordingStatus;

typedef enum {
    CPEVENT_BITSHIFT_RATINGS = 0,
    CPEVENT_BITSHIFT_COPP = 1,
    CPEVENT_BITSHIFT_LICENSE = 2,
    CPEVENT_BITSHIFT_ROLLBACK = 3,
    CPEVENT_BITSHIFT_SAC = 4,
    CPEVENT_BITSHIFT_DOWNRES = 5,
    CPEVENT_BITSHIFT_STUBLIB = 6,
    CPEVENT_BITSHIFT_UNTRUSTEDGRAPH = 7,
    CPEVENT_BITSHIFT_PENDING_CERTIFICATE = 8,
    CPEVENT_BITSHIFT_NO_PLAYREADY = 9,
} CPEventBitShift;

typedef enum {
    CPEVENT_NONE = 0,
    CPEVENT_RATINGS = 1,
    CPEVENT_COPP = 2,
    CPEVENT_LICENSE = 3,
    CPEVENT_ROLLBACK = 4,
    CPEVENT_SAC = 5,
    CPEVENT_DOWNRES = 6,
    CPEVENT_STUBLIB = 7,
    CPEVENT_UNTRUSTEDGRAPH = 8,
    CPEVENT_PROTECTWINDOWED = 9,
} CPEvents;

typedef enum {
    REVOKED_COPP = 0,
    REVOKED_SAC = 1,
    REVOKED_APP_STUB = 2,
    REVOKED_SECURE_PIPELINE = 3,
    REVOKED_MAX_TYPES = 4,
} RevokedComponent;

typedef enum {
    EnTag_Remove = 0,
    EnTag_Once = 1,
    EnTag_Repeat = 2,
} EnTag_Mode;

typedef enum {
    COPP_Unknown = -1,
    COPP_BadDriver = 0,
    COPP_NoCardHDCPSupport = 1,
    COPP_NoMonitorHDCPSupport = 2,
    COPP_BadCertificate = 3,
    COPP_InvalidBusProtection = 4,
    COPP_AeroGlassOff = 5,
    COPP_RogueApp = 6,
    COPP_ForbiddenVideo = 7,
    COPP_Activate = 8,
    COPP_DigitalAudioUnprotected = 9,
} COPPEventBlockReason;

typedef enum {
    LIC_BadLicense = 0,
    LIC_NeedIndiv = 1,
    LIC_Expired = 2,
    LIC_NeedActivation = 3,
    LIC_ExtenderBlocked = 4,
} LicenseEventBlockReason;

typedef enum {
    DOWNRES_Always = 0,
    DOWNRES_InWindowOnly = 1,
    DOWNRES_Undefined = 2,
} DownResEventParam;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IETFilterConfig;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDTFilterConfig;

typedef int IXDSCodecConfig;

typedef int IDTFilterLicenseRenewal;

typedef int IPTFilterLicenseRenewal;

typedef int IMceBurnerControl;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IETFilter;

typedef int IETFilterEvents;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDTFilter;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IDTFilter2;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IDTFilter3;

typedef int IDTFilterEvents;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IXDSCodec;

typedef int IXDSCodecEvents;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IXDSToRat;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IEvalRat;

typedef enum {
    dispidName = 0,
    dispidStatus = 1,
    dispidDevImageSourceWidth = 2,
    dispidDevImageSourceHeight = 3,
    dispidDevCountryCode = 4,
    dispidDevOverScan = 5,
    dispidSegment = 6,
    dispidDevVolume = 7,
    dispidDevBalance = 8,
    dispidDevPower = 9,
    dispidTuneChan = 10,
    dispidDevVideoSubchannel = 11,
    dispidDevAudioSubchannel = 12,
    dispidChannelAvailable = 13,
    dispidDevVideoFrequency = 14,
    dispidDevAudioFrequency = 15,
    dispidCount = 16,
    dispidDevFileName = 17,
    dispidVisible = 18,
    dispidOwner = 19,
    dispidMessageDrain = 20,
    dispidViewable = 21,
    dispidDevView = 22,
    dispidKSCat = 23,
    dispidCLSID = 24,
    dispid_KSCat = 25,
    dispid_CLSID = 26,
    dispidTune = 27,
    dispidTS = 28,
    dispidDevSAP = 29,
    dispidClip = 30,
    dispidRequestedClipRect = 31,
    dispidClippedSourceRect = 32,
    dispidAvailableSourceRect = 33,
    dispidMediaPosition = 34,
    dispidDevRun = 35,
    dispidDevPause = 36,
    dispidDevStop = 37,
    dispidCCEnable = 38,
    dispidDevStep = 39,
    dispidDevCanStep = 40,
    dispidSourceSize = 41,
    dispid_playtitle = 42,
    dispid_playchapterintitle = 43,
    dispid_playchapter = 44,
    dispid_playchaptersautostop = 45,
    dispid_playattime = 46,
    dispid_playattimeintitle = 47,
    dispid_playperiodintitleautostop = 48,
    dispid_replaychapter = 49,
    dispid_playprevchapter = 50,
    dispid_playnextchapter = 51,
    dispid_playforwards = 52,
    dispid_playbackwards = 53,
    dispid_stilloff = 54,
    dispid_audiolanguage = 55,
    dispid_showmenu = 56,
    dispid_resume = 57,
    dispid_returnfromsubmenu = 58,
    dispid_buttonsavailable = 59,
    dispid_currentbutton = 60,
    dispid_SelectAndActivateButton = 61,
    dispid_ActivateButton = 62,
    dispid_SelectRightButton = 63,
    dispid_SelectLeftButton = 64,
    dispid_SelectLowerButton = 65,
    dispid_SelectUpperButton = 66,
    dispid_ActivateAtPosition = 67,
    dispid_SelectAtPosition = 68,
    dispid_ButtonAtPosition = 69,
    dispid_NumberOfChapters = 70,
    dispid_TotalTitleTime = 71,
    dispid_TitlesAvailable = 72,
    dispid_VolumesAvailable = 73,
    dispid_CurrentVolume = 74,
    dispid_CurrentDiscSide = 75,
    dispid_CurrentDomain = 76,
    dispid_CurrentChapter = 77,
    dispid_CurrentTitle = 78,
    dispid_CurrentTime = 79,
    dispid_FramesPerSecond = 80,
    dispid_DVDTimeCode2bstr = 81,
    dispid_DVDDirectory = 82,
    dispid_IsSubpictureStreamEnabled = 83,
    dispid_IsAudioStreamEnabled = 84,
    dispid_CurrentSubpictureStream = 85,
    dispid_SubpictureLanguage = 86,
    dispid_CurrentAudioStream = 87,
    dispid_AudioStreamsAvailable = 88,
    dispid_AnglesAvailable = 89,
    dispid_CurrentAngle = 90,
    dispid_CCActive = 91,
    dispid_CurrentCCService = 92,
    dispid_SubpictureStreamsAvailable = 93,
    dispid_SubpictureOn = 94,
    dispid_DVDUniqueID = 95,
    dispid_EnableResetOnStop = 96,
    dispid_AcceptParentalLevelChange = 97,
    dispid_NotifyParentalLevelChange = 98,
    dispid_SelectParentalCountry = 99,
    dispid_SelectParentalLevel = 100,
    dispid_TitleParentalLevels = 101,
    dispid_PlayerParentalCountry = 102,
    dispid_PlayerParentalLevel = 103,
    dispid_Eject = 104,
    dispid_UOPValid = 105,
    dispid_SPRM = 106,
    dispid_GPRM = 107,
    dispid_DVDTextStringType = 108,
    dispid_DVDTextString = 109,
    dispid_DVDTextNumberOfStrings = 110,
    dispid_DVDTextNumberOfLanguages = 111,
    dispid_DVDTextLanguageLCID = 112,
    dispid_RegionChange = 113,
    dispid_DVDAdm = 114,
    dispid_DeleteBookmark = 115,
    dispid_RestoreBookmark = 116,
    dispid_SaveBookmark = 117,
    dispid_SelectDefaultAudioLanguage = 118,
    dispid_SelectDefaultSubpictureLanguage = 119,
    dispid_PreferredSubpictureStream = 120,
    dispid_DefaultMenuLanguage = 121,
    dispid_DefaultSubpictureLanguage = 122,
    dispid_DefaultAudioLanguage = 123,
    dispid_DefaultSubpictureLanguageExt = 124,
    dispid_DefaultAudioLanguageExt = 125,
    dispid_LanguageFromLCID = 126,
    dispid_KaraokeAudioPresentationMode = 127,
    dispid_KaraokeChannelContent = 128,
    dispid_KaraokeChannelAssignment = 129,
    dispid_RestorePreferredSettings = 130,
    dispid_ButtonRect = 131,
    dispid_DVDScreenInMouseCoordinates = 132,
    dispid_CustomCompositorClass = 133,
    dispidCustomCompositorClass = 134,
    dispid_CustomCompositor = 135,
    dispidMixerBitmap = 136,
    dispid_MixerBitmap = 137,
    dispidMixerBitmapOpacity = 138,
    dispidMixerBitmapRect = 139,
    dispidSetupMixerBitmap = 140,
    dispidUsingOverlay = 141,
    dispidDisplayChange = 142,
    dispidRePaint = 143,
    dispid_IsEqualDevice = 144,
    dispidrate = 145,
    dispidposition = 146,
    dispidpositionmode = 147,
    dispidlength = 148,
    dispidChangePassword = 149,
    dispidSaveParentalLevel = 150,
    dispidSaveParentalCountry = 151,
    dispidConfirmPassword = 152,
    dispidGetParentalLevel = 153,
    dispidGetParentalCountry = 154,
    dispidDefaultAudioLCID = 155,
    dispidDefaultSubpictureLCID = 156,
    dispidDefaultMenuLCID = 157,
    dispidBookmarkOnStop = 158,
    dispidMaxVidRect = 159,
    dispidMinVidRect = 160,
    dispidCapture = 161,
    dispid_DecimateInput = 162,
    dispidAlloctor = 163,
    dispid_Allocator = 164,
    dispidAllocPresentID = 165,
    dispidSetAllocator = 166,
    dispid_SetAllocator = 167,
    dispidStreamBufferSinkName = 168,
    dispidStreamBufferSourceName = 169,
    dispidStreamBufferContentRecording = 170,
    dispidStreamBufferReferenceRecording = 171,
    dispidstarttime = 172,
    dispidstoptime = 173,
    dispidrecordingstopped = 174,
    dispidrecordingstarted = 175,
    dispidNameSetLock = 176,
    dispidrecordingtype = 177,
    dispidstart = 178,
    dispidRecordingAttribute = 179,
    dispid_RecordingAttribute = 180,
    dispidSBEConfigure = 181,
    dispid_CurrentRatings = 182,
    dispid_MaxRatingsLevel = 183,
    dispid_audioencoderint = 184,
    dispid_videoencoderint = 185,
    dispidService = 186,
    dispid_BlockUnrated = 187,
    dispid_UnratedDelay = 188,
    dispid_SuppressEffects = 189,
    dispidsbesource = 190,
    dispidSetSinkFilter = 191,
    dispid_SinkStreams = 192,
    dispidTVFormats = 193,
    dispidModes = 194,
    dispidAuxInputs = 195,
    dispidTeleTextFilter = 196,
    dispid_channelchangeint = 197,
    dispidUnlockProfile = 198,
    dispid_AddFilter = 199,
    dispidSetMinSeek = 200,
    dispidRateEx = 201,
    dispidaudiocounter = 202,
    dispidvideocounter = 203,
    dispidcccounter = 204,
    dispidwstcounter = 205,
    dispid_audiocounter = 206,
    dispid_videocounter = 207,
    dispid_cccounter = 208,
    dispid_wstcounter = 209,
    dispidaudioanalysis = 210,
    dispidvideoanalysis = 211,
    dispiddataanalysis = 212,
    dispidaudio_analysis = 213,
    dispidvideo_analysis = 214,
    dispiddata_analysis = 215,
    dispid_resetFilterList = 216,
    dispidDevicePath = 217,
    dispid_SourceFilter = 218,
    dispid__SourceFilter = 219,
    dispidUserEvent = 220,
    dispid_Bookmark = 221,
    LastReservedDeviceDispid = 16383,
} SegDispidList;

typedef enum {
    eventidStateChange = 0,
    eventidOnTuneChanged = 1,
    eventidEndOfMedia = 2,
    eventidDVDNotify = 3,
    eventidPlayForwards = 4,
    eventidPlayBackwards = 5,
    eventidShowMenu = 6,
    eventidResume = 7,
    eventidSelectOrActivateButton = 8,
    eventidStillOff = 9,
    eventidPauseOn = 10,
    eventidChangeCurrentAudioStream = 11,
    eventidChangeCurrentSubpictureStream = 12,
    eventidChangeCurrentAngle = 13,
    eventidPlayAtTimeInTitle = 14,
    eventidPlayAtTime = 15,
    eventidPlayChapterInTitle = 16,
    eventidPlayChapter = 17,
    eventidReplayChapter = 18,
    eventidPlayNextChapter = 19,
    eventidStop = 20,
    eventidReturnFromSubmenu = 21,
    eventidPlayTitle = 22,
    eventidPlayPrevChapter = 23,
    eventidChangeKaraokePresMode = 24,
    eventidChangeVideoPresMode = 25,
    eventidOverlayUnavailable = 26,
    eventidSinkCertificateFailure = 27,
    eventidSinkCertificateSuccess = 28,
    eventidSourceCertificateFailure = 29,
    eventidSourceCertificateSuccess = 30,
    eventidRatingsBlocked = 31,
    eventidRatingsUnlocked = 32,
    eventidRatingsChanged = 33,
    eventidWriteFailure = 34,
    eventidTimeHole = 35,
    eventidStaleDataRead = 36,
    eventidContentBecomingStale = 37,
    eventidStaleFileDeleted = 38,
    eventidEncryptionOn = 39,
    eventidEncryptionOff = 40,
    eventidRateChange = 41,
    eventidLicenseChange = 42,
    eventidCOPPBlocked = 43,
    eventidCOPPUnblocked = 44,
    dispidlicenseerrorcode = 45,
    eventidBroadcastEvent = 46,
    eventidBroadcastEventEx = 47,
    eventidContentPrimarilyAudio = 48,
    dispidAVDecAudioDualMonoEvent = 49,
    dispidAVAudioSampleRateEvent = 50,
    dispidAVAudioChannelConfigEvent = 51,
    dispidAVAudioChannelCountEvent = 52,
    dispidAVDecCommonMeanBitRateEvent = 53,
    dispidAVDDSurroundModeEvent = 54,
    dispidAVDecCommonInputFormatEvent = 55,
    dispidAVDecCommonOutputFormatEvent = 56,
    eventidWriteFailureClear = 57,
    LastReservedDeviceEvent = 16383,
} SegEventidList;

typedef enum {
    FrameMode = 0,
    TenthsSecondsMode = 1,
} PositionModeList;

typedef enum {
    CONTENT = 0,
    REFERENCE = 1,
} RecordingType;

typedef enum {
    None = 0,
    Caption1 = 1,
    Caption2 = 2,
    Text1 = 3,
    Text2 = 4,
    XDS = 5,
} MSVidCCService;
// NOTE: not creating aliases because this enum is 'Scoped'

typedef enum {
    MSVidSink_Video = 1,
    MSVidSink_Audio = 2,
    MSVidSink_Other = 4,
} MSVidSinkStreams;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidRect;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidGraphSegmentContainer;

typedef enum {
    MSVidSEG_SOURCE = 0,
    MSVidSEG_XFORM = 1,
    MSVidSEG_DEST = 2,
} MSVidSegmentType;

typedef int IMSVidGraphSegment;

typedef enum {
    MSVIDCTL_LEFT_BUTTON = 1,
    MSVIDCTL_RIGHT_BUTTON = 2,
    MSVIDCTL_MIDDLE_BUTTON = 4,
    MSVIDCTL_X_BUTTON1 = 8,
    MSVIDCTL_X_BUTTON2 = 16,
    MSVIDCTL_SHIFT = 1,
    MSVIDCTL_CTRL = 2,
    MSVIDCTL_ALT = 4,
} MSVidCtlButtonstate;

typedef int IMSVidGraphSegmentUserInput;

typedef int IMSVidCompositionSegment;

typedef int IEnumMSVidGraphSegment;

typedef int IMSVidVRGraphSegment;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidDevice;

typedef int IMSVidDevice2;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidInputDevice;

typedef int IMSVidDeviceEvent;

typedef int IMSVidInputDeviceEvent;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidVideoInputDevice;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidPlayback;

typedef int IMSVidPlaybackEvent;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidTuner;

typedef int IMSVidTunerEvent;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidAnalogTuner;

typedef int IMSVidAnalogTuner2;

typedef int IMSVidAnalogTunerEvent;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidFilePlayback;

typedef int IMSVidFilePlayback2;

typedef int IMSVidFilePlaybackEvent;

typedef enum {
    dvdMenu_Title = 2,
    dvdMenu_Root = 3,
    dvdMenu_Subpicture = 4,
    dvdMenu_Audio = 5,
    dvdMenu_Angle = 6,
    dvdMenu_Chapter = 7,
} DVDMenuIDConstants;

typedef enum {
    dvdState_Undefined = -2,
    dvdState_Unitialized = -1,
    dvdState_Stopped = 0,
    dvdState_Paused = 1,
    dvdState_Running = 2,
} DVDFilterState;

typedef enum {
    dvdStruct_Volume = 1,
    dvdStruct_Title = 2,
    dvdStruct_ParentalID = 3,
    dvdStruct_PartOfTitle = 4,
    dvdStruct_Cell = 5,
    dvdStream_Audio = 16,
    dvdStream_Subpicture = 17,
    dvdStream_Angle = 18,
    dvdChannel_Audio = 32,
    dvdGeneral_Name = 48,
    dvdGeneral_Comments = 49,
    dvdTitle_Series = 56,
    dvdTitle_Movie = 57,
    dvdTitle_Video = 58,
    dvdTitle_Album = 59,
    dvdTitle_Song = 60,
    dvdTitle_Other = 63,
    dvdTitle_Sub_Series = 64,
    dvdTitle_Sub_Movie = 65,
    dvdTitle_Sub_Video = 66,
    dvdTitle_Sub_Album = 67,
    dvdTitle_Sub_Song = 68,
    dvdTitle_Sub_Other = 71,
    dvdTitle_Orig_Series = 72,
    dvdTitle_Orig_Movie = 73,
    dvdTitle_Orig_Video = 74,
    dvdTitle_Orig_Album = 75,
    dvdTitle_Orig_Song = 76,
    dvdTitle_Orig_Other = 79,
    dvdOther_Scene = 80,
    dvdOther_Cut = 81,
    dvdOther_Take = 82,
} DVDTextStringType;

typedef enum {
    dvdSPExt_NotSpecified = 0,
    dvdSPExt_Caption_Normal = 1,
    dvdSPExt_Caption_Big = 2,
    dvdSPExt_Caption_Children = 3,
    dvdSPExt_CC_Normal = 5,
    dvdSPExt_CC_Big = 6,
    dvdSPExt_CC_Children = 7,
    dvdSPExt_Forced = 9,
    dvdSPExt_DirectorComments_Normal = 13,
    dvdSPExt_DirectorComments_Big = 14,
    dvdSPExt_DirectorComments_Children = 15,
} DVDSPExt;

typedef int IMSVidWebDVD;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMSVidWebDVD2;

typedef int IMSVidWebDVDEvent;

typedef int IMSVidWebDVDAdm;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidOutputDevice;

typedef int IMSVidOutputDeviceEvent;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidFeature;

typedef int IMSVidFeatureEvent;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidEncoder;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidClosedCaptioning;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidClosedCaptioning2;

typedef int IMSVidClosedCaptioning3;

typedef int IMSVidXDS;

typedef int IMSVidXDSEvent;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidDataServices;

typedef int IMSVidDataServicesEvent;

typedef enum {
    sslFullSize = 0,
    sslClipByOverScan = 1,
    sslClipByClipRect = 2,
} SourceSizeList;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidVideoRenderer;

typedef int IMSVidVideoRendererEvent;

typedef int IMSVidGenericSink;

typedef int IMSVidGenericSink2;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidStreamBufferRecordingControl;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidStreamBufferSink;

typedef int IMSVidStreamBufferSink2;

typedef int IMSVidStreamBufferSink3;

typedef int IMSVidStreamBufferSinkEvent;

typedef int IMSVidStreamBufferSinkEvent2;

typedef int IMSVidStreamBufferSinkEvent3;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMSVidStreamBufferSinkEvent4;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidStreamBufferSource;

typedef int IMSVidStreamBufferSource2;

typedef int IMSVidStreamBufferSourceEvent;

typedef int IMSVidStreamBufferSourceEvent2;

typedef int IMSVidStreamBufferSourceEvent3;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMSVidStreamBufferV2SourceEvent;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidVideoRenderer2;

typedef int IMSVidVideoRendererEvent2;

typedef int IMSVidVMR9;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IMSVidEVR;

typedef int IMSVidEVREvent;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidAudioRenderer;

typedef int IMSVidAudioRendererEvent;

// TODO: this type is limited to platform 'windows6.1'
typedef int IMSVidAudioRendererEvent2;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidInputDevices;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidOutputDevices;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidVideoRendererDevices;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidAudioRendererDevices;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidFeatures;

typedef int MSVidAnalogTunerDevice;

typedef int MSVidBDATunerDevice;

typedef int MSVidFilePlaybackDevice;

typedef int MSVidWebDVD;

typedef int MSVidWebDVDAdm;

typedef int MSVidVideoRenderer;

typedef int MSVidVMR9;

typedef int MSVidEVR;

typedef int MSVidAudioRenderer;

typedef int MSVidGenericSink;

typedef int MSVidStreamBufferSink;

typedef int MSVidStreamBufferSource;

typedef int MSVidStreamBufferV2Source;

typedef int MSVidEncoder;

typedef int MSVidITVCapture;

typedef int MSVidITVPlayback;

typedef int MSVidCCA;

typedef int MSVidClosedCaptioning;

typedef int MSVidClosedCaptioningSI;

typedef int MSVidDataServices;

typedef int MSVidXDS;

typedef int MSVidAnalogCaptureToDataServices;

typedef int MSVidDataServicesToStreamBufferSink;

typedef int MSVidDataServicesToXDS;

typedef int MSVidAnalogCaptureToXDS;

typedef int MSVidCtl;

typedef int MSVidInputDevices;

typedef int MSVidOutputDevices;

typedef int MSVidVideoRendererDevices;

typedef int MSVidAudioRendererDevices;

typedef int MSVidFeatures;

typedef int MSVidGenericComposite;

typedef int MSVidAnalogCaptureToOverlayMixer;

typedef int MSVidWebDVDToVideoRenderer;

typedef int MSVidWebDVDToAudioRenderer;

typedef int MSVidMPEG2DecoderToClosedCaptioning;

typedef int MSVidAnalogCaptureToStreamBufferSink;

typedef int MSVidDigitalCaptureToStreamBufferSink;

typedef int MSVidITVToStreamBufferSink;

typedef int MSVidCCAToStreamBufferSink;

typedef int MSVidEncoderToStreamBufferSink;

typedef int MSVidFilePlaybackToVideoRenderer;

typedef int MSVidFilePlaybackToAudioRenderer;

typedef int MSVidAnalogTVToEncoder;

typedef int MSVidStreamBufferSourceToVideoRenderer;

typedef int MSVidAnalogCaptureToCCA;

typedef int MSVidDigitalCaptureToCCA;

typedef int MSVidDigitalCaptureToITV;

typedef int MSVidSBESourceToITV;

typedef int MSVidSBESourceToCC;

typedef int MSVidSBESourceToGenericSink;

typedef int MSVidCCToVMR;

typedef int MSVidCCToAR;

typedef int MSEventBinder;

typedef int MSVidStreamBufferRecordingControl;

typedef int MSVidRect;

typedef int MSVidDevice;

typedef int MSVidDevice2;

typedef int MSVidInputDevice;

typedef int MSVidVideoInputDevice;

typedef int MSVidVideoPlaybackDevice;

typedef int MSVidFeature;

typedef int MSVidOutput;

typedef enum {
    dispidInputs = 0,
    dispidOutputs = 1,
    dispid_Inputs = 2,
    dispid_Outputs = 3,
    dispidVideoRenderers = 4,
    dispidAudioRenderers = 5,
    dispidFeatures = 6,
    dispidInput = 7,
    dispidOutput = 8,
    dispidVideoRenderer = 9,
    dispidAudioRenderer = 10,
    dispidSelectedFeatures = 11,
    dispidView = 12,
    dispidBuild = 13,
    dispidPause = 14,
    dispidRun = 15,
    dispidStop = 16,
    dispidDecompose = 17,
    dispidDisplaySize = 18,
    dispidMaintainAspectRatio = 19,
    dispidColorKey = 20,
    dispidStateChange = 21,
    dispidgetState = 22,
    dispidunbind = 23,
    dispidbind = 24,
    dispidDisableVideo = 25,
    dispidDisableAudio = 26,
    dispidViewNext = 27,
    dispidServiceP = 28,
} MSViddispidList;

typedef enum {
    dslDefaultSize = 0,
    dslSourceSize = 0,
    dslHalfSourceSize = 1,
    dslDoubleSourceSize = 2,
    dslFullScreen = 3,
    dslHalfScreen = 4,
    dslQuarterScreen = 5,
    dslSixteenthScreen = 6,
} DisplaySizeList;

typedef enum {
    STATE_UNBUILT = -1,
    STATE_STOP = 0,
    STATE_PAUSE = 1,
    STATE_PLAY = 2,
} MSVidCtlStateList;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IMSVidCtl;

typedef int IMSEventBinder;

typedef int _IMSVidCtlEvents;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IStreamBufferInitialize;

typedef enum {
    RECORDING_TYPE_CONTENT = 0,
    RECORDING_TYPE_REFERENCE = 1,
} RECORDING_TYPE;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IStreamBufferSink;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IStreamBufferSink2;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IStreamBufferSink3;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IStreamBufferSource;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IStreamBufferRecordControl;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IStreamBufferRecComp;

typedef enum {
    STREAMBUFFER_TYPE_DWORD = 0,
    STREAMBUFFER_TYPE_STRING = 1,
    STREAMBUFFER_TYPE_BINARY = 2,
    STREAMBUFFER_TYPE_BOOL = 3,
    STREAMBUFFER_TYPE_QWORD = 4,
    STREAMBUFFER_TYPE_WORD = 5,
    STREAMBUFFER_TYPE_GUID = 6,
} STREAMBUFFER_ATTR_DATATYPE;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IStreamBufferRecordingAttribute;

typedef int STREAMBUFFER_ATTRIBUTE;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IEnumStreamBufferRecordingAttrib;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IStreamBufferConfigure;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IStreamBufferConfigure2;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int IStreamBufferConfigure3;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IStreamBufferMediaSeeking;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IStreamBufferMediaSeeking2;

typedef int SBE_PIN_DATA;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int IStreamBufferDataCounters;

typedef enum {
    DEF_MODE_PROFILE = 1,
    DEF_MODE_STREAMS = 2,
} CROSSBAR_DEFAULT_FLAGS;

typedef int SBE2_STREAM_DESC;

typedef int DVR_STREAM_DESC;

// TODO: this type is limited to platform 'windows6.1'
typedef int ISBE2GlobalEvent;

// TODO: this type is limited to platform 'windows6.1'
typedef int ISBE2GlobalEvent2;

// TODO: this type is limited to platform 'windows6.1'
typedef int ISBE2SpanningEvent;

// TODO: this type is limited to platform 'windows6.1'
typedef int ISBE2Crossbar;

// TODO: this type is limited to platform 'windows6.1'
typedef int ISBE2StreamMap;

// TODO: this type is limited to platform 'windows6.1'
typedef int ISBE2EnumStream;

// TODO: this type is limited to platform 'windows6.1'
typedef int ISBE2MediaTypeProfile;

// TODO: this type is limited to platform 'windows6.1'
typedef int ISBE2FileScan;

typedef int SectionList;

typedef int Mpeg2Stream;

typedef int Mpeg2Data;

typedef int PID_BITS_MIDL;

typedef int MPEG_HEADER_BITS_MIDL;

typedef int MPEG_HEADER_VERSION_BITS_MIDL;

typedef enum {
    MPEG_SECTION_IS_NEXT = 0,
    MPEG_SECTION_IS_CURRENT = 1,
} MPEG_CURRENT_NEXT_BIT;

typedef int TID_EXTENSION;

typedef int SECTION;

typedef int LONG_SECTION;

typedef int DSMCC_SECTION;

typedef int MPEG_RQST_PACKET;

typedef int MPEG_PACKET_LIST;

typedef int DSMCC_FILTER_OPTIONS;

typedef int ATSC_FILTER_OPTIONS;

typedef int DVB_EIT_FILTER_OPTIONS;

typedef int MPEG2_FILTER;

typedef int MPEG2_FILTER2;

typedef int MPEG_STREAM_BUFFER;

typedef int MPEG_TIME;

typedef int MPEG_DATE;

typedef int MPEG_DATE_AND_TIME;

typedef enum {
    MPEG_CONTEXT_BCS_DEMUX = 0,
    MPEG_CONTEXT_WINSOCK = 1,
} MPEG_CONTEXT_TYPE;

typedef int MPEG_BCS_DEMUX;

typedef int MPEG_WINSOCK;

typedef int MPEG_CONTEXT;

typedef enum {
    MPEG_RQST_UNKNOWN = 0,
    MPEG_RQST_GET_SECTION = 1,
    MPEG_RQST_GET_SECTION_ASYNC = 2,
    MPEG_RQST_GET_TABLE = 3,
    MPEG_RQST_GET_TABLE_ASYNC = 4,
    MPEG_RQST_GET_SECTIONS_STREAM = 5,
    MPEG_RQST_GET_PES_STREAM = 6,
    MPEG_RQST_GET_TS_STREAM = 7,
    MPEG_RQST_START_MPE_STREAM = 8,
} MPEG_REQUEST_TYPE;

typedef int MPEG_SERVICE_REQUEST;

typedef int MPEG_SERVICE_RESPONSE;

typedef int DSMCC_ELEMENT;

typedef int MPE_ELEMENT;

typedef int MPEG_STREAM_FILTER;

typedef int IMpeg2TableFilter;

typedef int Mpeg2TableSampleHdr;

typedef int Mpeg2DataLib;

typedef int IMpeg2Data;

typedef int ISectionList;

typedef int IMpeg2Stream;

typedef int IGenericDescriptor;

typedef int IGenericDescriptor2;

typedef int ProgramElement;

typedef int IPAT;

typedef int ICAT;

typedef int IPMT;

typedef int ITSDT;

// TODO: this type is limited to platform 'windows6.1'
typedef int IPSITables;

typedef int IAtscPsipParser;

typedef int IATSC_MGT;

typedef int IATSC_VCT;

typedef int IATSC_EIT;

typedef int IATSC_ETT;

typedef int IATSC_STT;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int ISCTE_EAS;

typedef int IAtscContentAdvisoryDescriptor;

typedef int ICaptionServiceDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IServiceLocationDescriptor;

typedef int IAttributeSet;

typedef int IAttributeGet;

typedef int UDCR_TAG;

typedef int PIC_SEQ_SAMPLE;

typedef int SAMPLE_SEQ_OFFSET;

typedef enum {
    VA_VIDEO_COMPONENT = 0,
    VA_VIDEO_PAL = 1,
    VA_VIDEO_NTSC = 2,
    VA_VIDEO_SECAM = 3,
    VA_VIDEO_MAC = 4,
    VA_VIDEO_UNSPECIFIED = 5,
} VA_VIDEO_FORMAT;

typedef enum {
    VA_PRIMARIES_ITU_R_BT_709 = 1,
    VA_PRIMARIES_UNSPECIFIED = 2,
    VA_PRIMARIES_ITU_R_BT_470_SYSTEM_M = 4,
    VA_PRIMARIES_ITU_R_BT_470_SYSTEM_B_G = 5,
    VA_PRIMARIES_SMPTE_170M = 6,
    VA_PRIMARIES_SMPTE_240M = 7,
    VA_PRIMARIES_H264_GENERIC_FILM = 8,
} VA_COLOR_PRIMARIES;

typedef enum {
    VA_TRANSFER_CHARACTERISTICS_ITU_R_BT_709 = 1,
    VA_TRANSFER_CHARACTERISTICS_UNSPECIFIED = 2,
    VA_TRANSFER_CHARACTERISTICS_ITU_R_BT_470_SYSTEM_M = 4,
    VA_TRANSFER_CHARACTERISTICS_ITU_R_BT_470_SYSTEM_B_G = 5,
    VA_TRANSFER_CHARACTERISTICS_SMPTE_170M = 6,
    VA_TRANSFER_CHARACTERISTICS_SMPTE_240M = 7,
    VA_TRANSFER_CHARACTERISTICS_LINEAR = 8,
    VA_TRANSFER_CHARACTERISTICS_H264_LOG_100_TO_1 = 9,
    VA_TRANSFER_CHARACTERISTICS_H264_LOG_316_TO_1 = 10,
} VA_TRANSFER_CHARACTERISTICS;

typedef enum {
    VA_MATRIX_COEFF_H264_RGB = 0,
    VA_MATRIX_COEFF_ITU_R_BT_709 = 1,
    VA_MATRIX_COEFF_UNSPECIFIED = 2,
    VA_MATRIX_COEFF_FCC = 4,
    VA_MATRIX_COEFF_ITU_R_BT_470_SYSTEM_B_G = 5,
    VA_MATRIX_COEFF_SMPTE_170M = 6,
    VA_MATRIX_COEFF_SMPTE_240M = 7,
    VA_MATRIX_COEFF_H264_YCgCo = 8,
} VA_MATRIX_COEFFICIENTS;

typedef int VA_OPTIONAL_VIDEO_PROPERTIES;

typedef int TRANSPORT_PROPERTIES;

typedef int PBDA_TAG_ATTRIBUTE;

typedef int CAPTURE_STREAMTIME;

typedef int DSHOW_STREAM_DESC;

typedef int SAMPLE_LIVE_STREAM_TIME;

typedef int TIFLoad;

typedef enum {
    STRCONV_MODE_DVB = 0,
    STRCONV_MODE_DVB_EMPHASIS = 1,
    STRCONV_MODE_DVB_WITHOUT_EMPHASIS = 2,
    STRCONV_MODE_ISDB = 3,
} DVB_STRCONV_MODE;

typedef int IDvbSiParser;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbSiParser2;

typedef int IIsdbSiParser2;

typedef int IDVB_NIT;

typedef int IDVB_SDT;

// TODO: this type is limited to platform 'windows6.1'
typedef int IISDB_SDT;

typedef int IDVB_EIT;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDVB_EIT2;

typedef int IDVB_BAT;

typedef int IDVB_RST;

typedef int IDVB_ST;

typedef int IDVB_TDT;

typedef int IDVB_TOT;

typedef int IDVB_DIT;

typedef int IDVB_SIT;

// TODO: this type is limited to platform 'windows6.1'
typedef int IISDB_BIT;

// TODO: this type is limited to platform 'windows6.1'
typedef int IISDB_NBIT;

// TODO: this type is limited to platform 'windows6.1'
typedef int IISDB_LDT;

// TODO: this type is limited to platform 'windows6.1'
typedef int IISDB_SDTT;

// TODO: this type is limited to platform 'windows6.1'
typedef int IISDB_CDT;

// TODO: this type is limited to platform 'windows6.1'
typedef int IISDB_EMM;

typedef int IDvbServiceAttributeDescriptor;

typedef enum {
    CRID_LOCATION_IN_DESCRIPTOR = 0,
    CRID_LOCATION_IN_CIT = 1,
    CRID_LOCATION_DVB_RESERVED1 = 2,
    CRID_LOCATION_DVB_RESERVED2 = 3,
} CRID_LOCATION;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbContentIdentifierDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbDefaultAuthorityDescriptor;

typedef int IDvbSatelliteDeliverySystemDescriptor;

typedef int IDvbCableDeliverySystemDescriptor;

typedef int IDvbTerrestrialDeliverySystemDescriptor;

typedef int IDvbTerrestrial2DeliverySystemDescriptor;

typedef int IDvbFrequencyListDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbPrivateDataSpecifierDescriptor;

typedef int IDvbLogicalChannelDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbLogicalChannelDescriptor2;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbLogicalChannel2Descriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbHDSimulcastLogicalChannelDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbDataBroadcastIDDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbDataBroadcastDescriptor;

typedef enum {
    DESC_LINKAGE_RESERVED0 = 0,
    DESC_LINKAGE_INFORMATION = 1,
    DESC_LINKAGE_EPG = 2,
    DESC_LINKAGE_CA_REPLACEMENT = 3,
    DESC_LINKAGE_COMPLETE_NET_BOUQUET_SI = 4,
    DESC_LINKAGE_REPLACEMENT = 5,
    DESC_LINKAGE_DATA = 6,
    DESC_LINKAGE_RESERVED1 = 7,
    DESC_LINKAGE_USER = 8,
    DESC_LINKAGE_RESERVED2 = 255,
} DESC_LINKAGE_TYPE;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbLinkageDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbTeletextDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbSubtitlingDescriptor;

typedef int IDvbServiceDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbServiceDescriptor2;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbServiceListDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbMultilingualServiceNameDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbNetworkNameDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbShortEventDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbExtendedEventDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbComponentDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbContentDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDvbParentalRatingDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IIsdbTerrestrialDeliverySystemDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IIsdbTSInformationDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IIsdbDigitalCopyControlDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IIsdbAudioComponentDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IIsdbDataContentDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IIsdbCAContractInformationDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IIsdbEventGroupDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IIsdbComponentGroupDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IIsdbSeriesDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IIsdbDownloadContentDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IIsdbLogoTransmissionDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IIsdbSIParameterDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IIsdbEmergencyInformationDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IIsdbCADescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IIsdbCAServiceDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IIsdbHierarchicalTransmissionDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IPBDASiParser;

// TODO: this type is limited to platform 'windows6.1'
typedef int IPBDA_EIT;

// TODO: this type is limited to platform 'windows6.1'
typedef int IPBDA_Services;

// TODO: this type is limited to platform 'windows6.1'
typedef int IPBDAEntitlementDescriptor;

// TODO: this type is limited to platform 'windows6.1'
typedef int IPBDAAttributesDescriptor;

typedef int IBDA_TIF_REGISTRATION;

typedef int IMPEG2_TIF_CONTROL;

typedef int ITuneRequestInfo;

typedef int ITuneRequestInfoEx;

typedef int ISIInbandEPGEvent;

typedef int ISIInbandEPG;

typedef int IGuideDataEvent;

typedef int IGuideDataProperty;

typedef int IEnumGuideDataProperties;

typedef int IEnumTuneRequests;

typedef int IGuideData;

typedef int IGuideDataLoader;

typedef int KSP_BDA_NODE_PIN;

typedef int KSM_BDA_PIN;

typedef int KSM_BDA_PIN_PAIR;

typedef int KSP_NODE_ESPID;

typedef int KSM_BDA_DEBUG_LEVEL;

typedef int BDA_DEBUG_DATA;

typedef int BDA_EVENT_DATA;

typedef int KSM_BDA_EVENT_COMPLETE;

typedef int KSM_BDA_DRM_SETDRM;

typedef int KSM_BDA_BUFFER;

typedef int KSM_BDA_WMDRM_LICENSE;

typedef int KSM_BDA_WMDRM_RENEWLICENSE;

typedef int KSM_BDA_WMDRMTUNER_PURCHASEENTITLEMENT;

typedef int KSM_BDA_WMDRMTUNER_SETPIDPROTECTION;

typedef int KSM_BDA_WMDRMTUNER_GETPIDPROTECTION;

typedef int KSM_BDA_WMDRMTUNER_SYNCVALUE;

typedef int KSM_BDA_TUNER_TUNEREQUEST;

typedef int KSM_BDA_GPNV_GETVALUE;

typedef int KSM_BDA_GPNV_SETVALUE;

typedef int KSM_BDA_GPNV_NAMEINDEX;

typedef int KSM_BDA_SCAN_CAPABILTIES;

typedef int KSM_BDA_SCAN_FILTER;

typedef int KSM_BDA_SCAN_START;

typedef int KSM_BDA_GDDS_TUNEXMLFROMIDX;

typedef int KSM_BDA_GDDS_SERVICEFROMTUNEXML;

typedef int KSM_BDA_USERACTIVITY_USEREASON;

typedef int KSM_BDA_CAS_ENTITLEMENTTOKEN;

typedef int KSM_BDA_CAS_CAPTURETOKEN;

typedef int KSM_BDA_CAS_OPENBROADCASTMMI;

typedef int KSM_BDA_CAS_CLOSEMMIDIALOG;

typedef int KSM_BDA_ISDBCAS_REQUEST;

typedef int KSM_BDA_TS_SELECTOR_SETTSID;

typedef int KS_DATARANGE_BDA_ANTENNA;

typedef int BDA_TRANSPORT_INFO;

typedef int KS_DATARANGE_BDA_TRANSPORT;

typedef int EVENTID_TuningChanging;

typedef int EVENTID_TuningChanged;

typedef int EVENTID_CandidatePostTuneData;

typedef int EVENTID_CADenialCountChanged;

typedef int EVENTID_SignalStatusChanged;

typedef int EVENTID_NewSignalAcquired;

typedef int EVENTID_EASMessageReceived;

typedef int EVENTID_PSITable;

typedef int EVENTID_ServiceTerminated;

typedef int EVENTID_CardStatusChanged;

typedef int EVENTID_DRMParingStatusChanged;

typedef int EVENTID_DRMParingStepComplete;

typedef int EVENTID_MMIMessage;

typedef int EVENTID_EntitlementChanged;

typedef int EVENTID_STBChannelNumber;

typedef int EVENTID_BDAEventingServicePendingEvent;

typedef int EVENTID_BDAConditionalAccessTAG;

typedef int EVENTTYPE_CASDescrambleFailureEvent;

typedef int EVENTID_CASFailureSpanningEvent;

typedef enum {
    ChannelChangeSpanningEvent_Start = 0,
    ChannelChangeSpanningEvent_End = 2,
} ChannelChangeSpanningEvent_State;

typedef int EVENTID_ChannelChangeSpanningEvent;

typedef int ChannelChangeInfo;

typedef int EVENTID_ChannelTypeSpanningEvent;

typedef enum {
    ChannelTypeNone = 0,
    ChannelTypeOther = 1,
    ChannelTypeVideo = 2,
    ChannelTypeAudio = 4,
    ChannelTypeText = 8,
    ChannelTypeSubtitles = 16,
    ChannelTypeCaptions = 32,
    ChannelTypeSuperimpose = 64,
    ChannelTypeData = 128,
} ChannelType;

typedef int ChannelTypeInfo;

typedef int ChannelInfo;

typedef int EVENTID_ChannelInfoSpanningEvent;

typedef int EVENTID_RRTSpanningEvent;

typedef int SpanningEventDescriptor;

typedef int EVENTID_CSDescriptorSpanningEvent;

typedef int EVENTID_CtxADescriptorSpanningEvent;

typedef int DVBScramblingControlSpanningEvent;

typedef int EVENTID_DVBScramblingControlSpanningEvent;

typedef enum {
    SignalAndServiceStatusSpanningEvent_None = -1,
    SignalAndServiceStatusSpanningEvent_Clear = 0,
    SignalAndServiceStatusSpanningEvent_NoTVSignal = 1,
    SignalAndServiceStatusSpanningEvent_ServiceOffAir = 2,
    SignalAndServiceStatusSpanningEvent_WeakTVSignal = 3,
    SignalAndServiceStatusSpanningEvent_NoSubscription = 4,
    SignalAndServiceStatusSpanningEvent_AllAVScrambled = 5,
} SignalAndServiceStatusSpanningEvent_State;

typedef int EVENTID_SignalAndServiceStatusSpanningEvent;

typedef int SpanningEventEmmMessage;

typedef int EVENTID_EmmMessageSpanningEvent;

typedef int EVENTID_AudioTypeSpanningEvent;

typedef int EVENTID_StreamTypeSpanningEvent;

typedef int EVENTID_ARIBcontentSpanningEvent;

typedef int EVENTID_LanguageSpanningEvent;

typedef int LanguageInfo;

typedef int EVENTID_DualMonoSpanningEvent;

typedef int DualMonoInfo;

typedef int EVENTID_PIDListSpanningEvent;

typedef int PIDListSpanningEvent;

typedef int EVENTID_AudioDescriptorSpanningEvent;

typedef int EVENTID_SubtitleSpanningEvent;

typedef int EVENTID_TeletextSpanningEvent;

typedef int EVENTID_StreamIDSpanningEvent;

typedef int EVENTID_PBDAParentalControlEvent;

typedef int RATING_ATTRIBUTE;

typedef int RATING_SYSTEM;

typedef int RATING_INFO;

typedef int PBDAParentalControl;

typedef int EVENTID_TuneFailureEvent;

typedef int EVENTID_TuneFailureSpanningEvent;

typedef int EVENTID_DvbParentalRatingDescriptor;

typedef int DvbParentalRatingParam;

typedef int DvbParentalRatingDescriptor;

typedef int EVENTID_DFNWithNoActualAVData;

typedef int KSDATAFORMAT_TYPE_BDA_ANTENNA;

typedef int KSDATAFORMAT_SUBTYPE_BDA_MPEG2_TRANSPORT;

typedef int KSDATAFORMAT_SPECIFIER_BDA_TRANSPORT;

typedef int KSDATAFORMAT_TYPE_BDA_IF_SIGNAL;

typedef int KSDATAFORMAT_TYPE_MPEG2_SECTIONS;

typedef int KSDATAFORMAT_SUBTYPE_ATSC_SI;

typedef int KSDATAFORMAT_SUBTYPE_DVB_SI;

typedef int KSDATAFORMAT_SUBTYPE_BDA_OPENCABLE_PSIP;

typedef int KSDATAFORMAT_SUBTYPE_BDA_OPENCABLE_OOB_PSIP;

typedef int KSDATAFORMAT_SUBTYPE_ISDB_SI;

typedef int KSDATAFORMAT_SUBTYPE_PBDA_TRANSPORT_RAW;

typedef int PINNAME_BDA_TRANSPORT;

typedef int PINNAME_BDA_ANALOG_VIDEO;

typedef int PINNAME_BDA_ANALOG_AUDIO;

typedef int PINNAME_BDA_FM_RADIO;

typedef int PINNAME_BDA_IF_PIN;

typedef int PINNAME_BDA_OPENCABLE_PSIP_PIN;

typedef int KSPROPSETID_BdaEthernetFilter;

typedef enum {
    KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_LIST_SIZE = 0,
    KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_LIST = 1,
    KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_MODE = 2,
} KSPROPERTY_BDA_ETHERNET_FILTER;

typedef int KSPROPSETID_BdaIPv4Filter;

typedef enum {
    KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_LIST_SIZE = 0,
    KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_LIST = 1,
    KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_MODE = 2,
} KSPROPERTY_BDA_IPv4_FILTER;

typedef int KSPROPSETID_BdaIPv6Filter;

typedef enum {
    KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_LIST_SIZE = 0,
    KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_LIST = 1,
    KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_MODE = 2,
} KSPROPERTY_BDA_IPv6_FILTER;

typedef int KSPROPSETID_BdaSignalStats;

typedef enum {
    KSPROPERTY_BDA_SIGNAL_STRENGTH = 0,
    KSPROPERTY_BDA_SIGNAL_QUALITY = 1,
    KSPROPERTY_BDA_SIGNAL_PRESENT = 2,
    KSPROPERTY_BDA_SIGNAL_LOCKED = 3,
    KSPROPERTY_BDA_SAMPLE_TIME = 4,
    KSPROPERTY_BDA_SIGNAL_LOCK_CAPS = 5,
    KSPROPERTY_BDA_SIGNAL_LOCK_TYPE = 6,
} KSPROPERTY_BDA_SIGNAL_STATS;

typedef enum {
    Bda_LockType_None = 0,
    Bda_LockType_PLL = 1,
    Bda_LockType_DecoderDemod = 2,
    Bda_LockType_Complete = 128,
} BDA_LockType;

typedef int KSMETHODSETID_BdaChangeSync;

typedef enum {
    KSMETHOD_BDA_START_CHANGES = 0,
    KSMETHOD_BDA_CHECK_CHANGES = 1,
    KSMETHOD_BDA_COMMIT_CHANGES = 2,
    KSMETHOD_BDA_GET_CHANGE_STATE = 3,
} KSMETHOD_BDA_CHANGE_SYNC;

typedef int KSMETHODSETID_BdaDeviceConfiguration;

typedef enum {
    KSMETHOD_BDA_CREATE_PIN_FACTORY = 0,
    KSMETHOD_BDA_DELETE_PIN_FACTORY = 1,
    KSMETHOD_BDA_CREATE_TOPOLOGY = 2,
} KSMETHOD_BDA_DEVICE_CONFIGURATION;

typedef int KSPROPSETID_BdaTopology;

typedef enum {
    KSPROPERTY_BDA_NODE_TYPES = 0,
    KSPROPERTY_BDA_PIN_TYPES = 1,
    KSPROPERTY_BDA_TEMPLATE_CONNECTIONS = 2,
    KSPROPERTY_BDA_NODE_METHODS = 3,
    KSPROPERTY_BDA_NODE_PROPERTIES = 4,
    KSPROPERTY_BDA_NODE_EVENTS = 5,
    KSPROPERTY_BDA_CONTROLLING_PIN_ID = 6,
    KSPROPERTY_BDA_NODE_DESCRIPTORS = 7,
} KSPROPERTY_BDA_TOPOLOGY;

typedef int KSPROPSETID_BdaPinControl;

typedef enum {
    KSPROPERTY_BDA_PIN_ID = 0,
    KSPROPERTY_BDA_PIN_TYPE = 1,
} KSPROPERTY_BDA_PIN_CONTROL;

typedef int KSEVENTSETID_BdaPinEvent;

typedef enum {
    KSEVENT_BDA_PIN_CONNECTED = 0,
    KSEVENT_BDA_PIN_DISCONNECTED = 1,
} KSPROPERTY_BDA_PIN_EVENT;

typedef int KSPROPSETID_BdaVoidTransform;

typedef enum {
    KSPROPERTY_BDA_VOID_TRANSFORM_START = 0,
    KSPROPERTY_BDA_VOID_TRANSFORM_STOP = 1,
} KSPROPERTY_BDA_VOID_TRANSFORM;

typedef int KSPROPSETID_BdaNullTransform;

typedef enum {
    KSPROPERTY_BDA_NULL_TRANSFORM_START = 0,
    KSPROPERTY_BDA_NULL_TRANSFORM_STOP = 1,
} KSPROPERTY_BDA_NULL_TRANSFORM;

typedef int KSPROPSETID_BdaFrequencyFilter;

typedef enum {
    KSPROPERTY_BDA_RF_TUNER_FREQUENCY = 0,
    KSPROPERTY_BDA_RF_TUNER_POLARITY = 1,
    KSPROPERTY_BDA_RF_TUNER_RANGE = 2,
    KSPROPERTY_BDA_RF_TUNER_TRANSPONDER = 3,
    KSPROPERTY_BDA_RF_TUNER_BANDWIDTH = 4,
    KSPROPERTY_BDA_RF_TUNER_FREQUENCY_MULTIPLIER = 5,
    KSPROPERTY_BDA_RF_TUNER_CAPS = 6,
    KSPROPERTY_BDA_RF_TUNER_SCAN_STATUS = 7,
    KSPROPERTY_BDA_RF_TUNER_STANDARD = 8,
    KSPROPERTY_BDA_RF_TUNER_STANDARD_MODE = 9,
} KSPROPERTY_BDA_FREQUENCY_FILTER;

typedef enum {
    Bda_SignalType_Unknown = 0,
    Bda_SignalType_Analog = 1,
    Bda_SignalType_Digital = 2,
} BDA_SignalType;

typedef enum {
    Bda_DigitalStandard_None = 0,
    Bda_DigitalStandard_DVB_T = 1,
    Bda_DigitalStandard_DVB_S = 2,
    Bda_DigitalStandard_DVB_C = 4,
    Bda_DigitalStandard_ATSC = 8,
    Bda_DigitalStandard_ISDB_T = 16,
    Bda_DigitalStandard_ISDB_S = 32,
    Bda_DigitalStandard_ISDB_C = 64,
} BDA_DigitalSignalStandard;

typedef int KSPROPERTY_BDA_RF_TUNER_CAPS_S;

typedef int KSPROPERTY_BDA_RF_TUNER_SCAN_STATUS_S;

typedef int KSPROPERTY_BDA_RF_TUNER_STANDARD_S;

typedef int KSPROPERTY_BDA_RF_TUNER_STANDARD_MODE_S;

typedef int KSEVENTSETID_BdaTunerEvent;

typedef enum {
    KSEVENT_BDA_TUNER_SCAN = 0,
} KSEVENT_BDA_TUNER;

typedef int KSEVENTDATA_BDA_RF_TUNER_SCAN_S;

typedef int KSPROPSETID_BdaLNBInfo;

typedef enum {
    KSPROPERTY_BDA_LNB_LOF_LOW_BAND = 0,
    KSPROPERTY_BDA_LNB_LOF_HIGH_BAND = 1,
    KSPROPERTY_BDA_LNB_SWITCH_FREQUENCY = 2,
} KSPROPERTY_BDA_LNB_INFO;

typedef int KSPROPSETID_BdaDiseqCommand;

typedef enum {
    KSPROPERTY_BDA_DISEQC_ENABLE = 0,
    KSPROPERTY_BDA_DISEQC_LNB_SOURCE = 1,
    KSPROPERTY_BDA_DISEQC_USETONEBURST = 2,
    KSPROPERTY_BDA_DISEQC_REPEATS = 3,
    KSPROPERTY_BDA_DISEQC_SEND = 4,
    KSPROPERTY_BDA_DISEQC_RESPONSE = 5,
} KSPROPERTY_BDA_DISEQC_COMMAND;

typedef int KSEVENTSETID_BdaDiseqCEvent;

typedef enum {
    KSEVENT_BDA_DISEQC_DATA_RECEIVED = 0,
} KSPROPERTY_BDA_DISEQC_EVENT;

typedef int KSPROPSETID_BdaDigitalDemodulator;

typedef enum {
    KSPROPERTY_BDA_MODULATION_TYPE = 0,
    KSPROPERTY_BDA_INNER_FEC_TYPE = 1,
    KSPROPERTY_BDA_INNER_FEC_RATE = 2,
    KSPROPERTY_BDA_OUTER_FEC_TYPE = 3,
    KSPROPERTY_BDA_OUTER_FEC_RATE = 4,
    KSPROPERTY_BDA_SYMBOL_RATE = 5,
    KSPROPERTY_BDA_SPECTRAL_INVERSION = 6,
    KSPROPERTY_BDA_GUARD_INTERVAL = 7,
    KSPROPERTY_BDA_TRANSMISSION_MODE = 8,
    KSPROPERTY_BDA_ROLL_OFF = 9,
    KSPROPERTY_BDA_PILOT = 10,
    KSPROPERTY_BDA_SIGNALTIMEOUTS = 11,
    KSPROPERTY_BDA_PLP_NUMBER = 12,
} KSPROPERTY_BDA_DIGITAL_DEMODULATOR;

typedef int KSPROPSETID_BdaAutodemodulate;

typedef enum {
    KSPROPERTY_BDA_AUTODEMODULATE_START = 0,
    KSPROPERTY_BDA_AUTODEMODULATE_STOP = 1,
} KSPROPERTY_BDA_AUTODEMODULATE;

typedef int KSPROPSETID_BdaTableSection;

typedef enum {
    KSPROPERTY_BDA_TABLE_SECTION = 0,
} KSPROPERTY_IDS_BDA_TABLE;

typedef int KSPROPSETID_BdaPIDFilter;

typedef enum {
    KSPROPERTY_BDA_PIDFILTER_MAP_PIDS = 0,
    KSPROPERTY_BDA_PIDFILTER_UNMAP_PIDS = 1,
    KSPROPERTY_BDA_PIDFILTER_LIST_PIDS = 2,
} KSPROPERTY_BDA_PIDFILTER;

typedef int KSPROPSETID_BdaCA;

typedef enum {
    KSPROPERTY_BDA_ECM_MAP_STATUS = 0,
    KSPROPERTY_BDA_CA_MODULE_STATUS = 1,
    KSPROPERTY_BDA_CA_SMART_CARD_STATUS = 2,
    KSPROPERTY_BDA_CA_MODULE_UI = 3,
    KSPROPERTY_BDA_CA_SET_PROGRAM_PIDS = 4,
    KSPROPERTY_BDA_CA_REMOVE_PROGRAM = 5,
} KSPROPERTY_BDA_CA;

typedef int KSEVENTSETID_BdaCAEvent;

typedef enum {
    KSEVENT_BDA_PROGRAM_FLOW_STATUS_CHANGED = 0,
    KSEVENT_BDA_CA_MODULE_STATUS_CHANGED = 1,
    KSEVENT_BDA_CA_SMART_CARD_STATUS_CHANGED = 2,
    KSEVENT_BDA_CA_MODULE_UI_REQUESTED = 3,
} KSPROPERTY_BDA_CA_EVENT;

typedef int KSMETHODSETID_BdaDrmService;

typedef enum {
    KSMETHOD_BDA_DRM_CURRENT = 0,
    KSMETHOD_BDA_DRM_DRMSTATUS = 1,
} KSMETHOD_BDA_DRM;

typedef int KSMETHODSETID_BdaWmdrmSession;

typedef enum {
    KSMETHOD_BDA_WMDRM_STATUS = 0,
    KSMETHOD_BDA_WMDRM_REVINFO = 1,
    KSMETHOD_BDA_WMDRM_CRL = 2,
    KSMETHOD_BDA_WMDRM_MESSAGE = 3,
    KSMETHOD_BDA_WMDRM_REISSUELICENSE = 4,
    KSMETHOD_BDA_WMDRM_RENEWLICENSE = 5,
    KSMETHOD_BDA_WMDRM_LICENSE = 6,
    KSMETHOD_BDA_WMDRM_KEYINFO = 7,
} KSMETHOD_BDA_WMDRM;

typedef int KSMETHODSETID_BdaWmdrmTuner;

typedef enum {
    KSMETHOD_BDA_WMDRMTUNER_CANCELCAPTURETOKEN = 0,
    KSMETHOD_BDA_WMDRMTUNER_SETPIDPROTECTION = 1,
    KSMETHOD_BDA_WMDRMTUNER_GETPIDPROTECTION = 2,
    KSMETHOD_BDA_WMDRMTUNER_SETSYNCVALUE = 3,
    KSMETHOD_BDA_WMDRMTUNER_STARTCODEPROFILE = 4,
    KSMETHOD_BDA_WMDRMTUNER_PURCHASE_ENTITLEMENT = 5,
} KSMETHOD_BDA_WMDRM_TUNER;

typedef int KSMETHODSETID_BdaEventing;

typedef enum {
    KSMETHOD_BDA_EVENT_DATA = 0,
    KSMETHOD_BDA_EVENT_COMPLETE = 1,
} KSMETHOD_BDA_EVENTING_SERVICE;

typedef int KSEVENTSETID_BdaEvent;

typedef enum {
    KSEVENT_BDA_EVENT_PENDINGEVENT = 0,
} KSEVENT_BDA_EVENT_TYPE;

typedef int KSMETHODSETID_BdaDebug;

typedef enum {
    KSMETHOD_BDA_DEBUG_LEVEL = 0,
    KSMETHOD_BDA_DEBUG_DATA = 1,
} KSMETHOD_BDA_DEBUG_SERVICE;

typedef int KSMETHODSETID_BdaTuner;

typedef enum {
    KSMETHOD_BDA_TUNER_SETTUNER = 0,
    KSMETHOD_BDA_TUNER_GETTUNERSTATE = 1,
    KSMETHOD_BDA_TUNER_SIGNALNOISERATIO = 2,
} KSMETHOD_BDA_TUNER_SERVICE;

typedef int KSMETHODSETID_BdaNameValueA;

typedef int KSMETHODSETID_BdaNameValue;

typedef enum {
    KSMETHOD_BDA_GPNV_GETVALUE = 0,
    KSMETHOD_BDA_GPNV_SETVALUE = 1,
    KSMETHOD_BDA_GPNV_NAMEFROMINDEX = 2,
    KSMETHOD_BDA_GPNV_GETVALUEUPDATENAME = 3,
} KSMETHOD_BDA_GPNV_SERVICE;

typedef int KSMETHODSETID_BdaMux;

typedef enum {
    KSMETHOD_BDA_MUX_GETPIDLIST = 0,
    KSMETHOD_BDA_MUX_SETPIDLIST = 1,
} KSMETHOD_BDA_MUX_SERVICE;

typedef int KSMETHODSETID_BdaScanning;

typedef enum {
    KSMETHOD_BDA_SCAN_CAPABILTIES = 0,
    KSMETHOD_BDA_SCANNING_STATE = 1,
    KSMETHOD_BDA_SCAN_FILTER = 2,
    KSMETHOD_BDA_SCAN_START = 3,
    KSMETHOD_BDA_SCAN_RESUME = 4,
    KSMETHOD_BDA_SCAN_STOP = 5,
} KSMETHOD_BDA_SCAN_SERVICE;

typedef int KSMETHODSETID_BdaGuideDataDeliveryService;

typedef enum {
    KSMETHOD_BDA_GDDS_DATATYPE = 0,
    KSMETHOD_BDA_GDDS_DATA = 1,
    KSMETHOD_BDA_GDDS_TUNEXMLFROMIDX = 2,
    KSMETHOD_BDA_GDDS_GETSERVICES = 3,
    KSMETHOD_BDA_GDDS_SERVICEFROMTUNEXML = 4,
    KSMETHOD_BDA_GDDS_DATAUPDATE = 5,
} KSMETHOD_BDA_GDDS_SERVICE;

typedef int KSMETHODSETID_BdaConditionalAccessService;

typedef enum {
    KSMETHOD_BDA_CAS_CHECKENTITLEMENTTOKEN = 0,
    KSMETHOD_BDA_CAS_SETCAPTURETOKEN = 1,
    KSMETHOD_BDA_CAS_OPENBROADCASTMMI = 2,
    KSMETHOD_BDA_CAS_CLOSEMMIDIALOG = 3,
} KSMETHOD_BDA_CAS_SERVICE;

typedef int KSMETHODSETID_BdaIsdbConditionalAccess;

typedef enum {
    KSMETHOD_BDA_ISDBCAS_SETREQUEST = 0,
    KSMETHOD_BDA_ISDBCAS_RESPONSEDATA = 1,
} KSMETHOD_BDA_ISDB_CAS;

typedef int KSMETHODSETID_BdaTSSelector;

typedef enum {
    KSMETHOD_BDA_TS_SELECTOR_SETTSID = 0,
    KSMETHOD_BDA_TS_SELECTOR_GETTSINFORMATION = 1,
} KSMETHOD_BDA_TS_SELECTOR;

typedef int KSMETHODSETID_BdaUserActivity;

typedef enum {
    KSMETHOD_BDA_USERACTIVITY_USEREASON = 0,
    KSMETHOD_BDA_USERACTIVITY_INTERVAL = 1,
    KSMETHOD_BDA_USERACTIVITY_DETECTED = 2,
} KSMETHOD_BDA_USERACTIVITY_SERVICE;

typedef int KSCATEGORY_BDA_RECEIVER_COMPONENT;

typedef int KSCATEGORY_BDA_NETWORK_TUNER;

typedef int KSCATEGORY_BDA_NETWORK_EPG;

typedef int KSCATEGORY_BDA_IP_SINK;

typedef int KSCATEGORY_BDA_NETWORK_PROVIDER;

typedef int KSCATEGORY_BDA_TRANSPORT_INFORMATION;

typedef int KSNODE_BDA_RF_TUNER;

typedef int KSNODE_BDA_ANALOG_DEMODULATOR;

typedef int KSNODE_BDA_QAM_DEMODULATOR;

typedef int KSNODE_BDA_QPSK_DEMODULATOR;

typedef int KSNODE_BDA_8VSB_DEMODULATOR;

typedef int KSNODE_BDA_COFDM_DEMODULATOR;

typedef int KSNODE_BDA_8PSK_DEMODULATOR;

typedef int KSNODE_BDA_ISDB_T_DEMODULATOR;

typedef int KSNODE_BDA_ISDB_S_DEMODULATOR;

typedef int KSNODE_BDA_OPENCABLE_POD;

typedef int KSNODE_BDA_COMMON_CA_POD;

typedef int KSNODE_BDA_PID_FILTER;

typedef int KSNODE_BDA_IP_SINK;

typedef int KSNODE_BDA_VIDEO_ENCODER;

typedef int KSNODE_BDA_PBDA_CAS;

typedef int KSNODE_BDA_PBDA_ISDBCAS;

typedef int KSNODE_BDA_PBDA_TUNER;

typedef int KSNODE_BDA_PBDA_MUX;

typedef int KSNODE_BDA_PBDA_DRM;

typedef int KSNODE_BDA_DRI_DRM;

typedef int KSNODE_BDA_TS_SELECTOR;

typedef int PINNAME_IPSINK_INPUT;

typedef int KSDATAFORMAT_TYPE_BDA_IP;

typedef int KSDATAFORMAT_SUBTYPE_BDA_IP;

typedef int KSDATAFORMAT_SPECIFIER_BDA_IP;

typedef int KSDATAFORMAT_TYPE_BDA_IP_CONTROL;

typedef int KSDATAFORMAT_SUBTYPE_BDA_IP_CONTROL;

typedef int PINNAME_MPE;

typedef int KSDATAFORMAT_TYPE_MPE;

typedef int DIGITAL_CABLE_NETWORK_TYPE;

typedef int ANALOG_TV_NETWORK_TYPE;

typedef int ANALOG_AUXIN_NETWORK_TYPE;

typedef int ANALOG_FM_NETWORK_TYPE;

typedef int ISDB_TERRESTRIAL_TV_NETWORK_TYPE;

typedef int ISDB_T_NETWORK_TYPE;

typedef int ISDB_SATELLITE_TV_NETWORK_TYPE;

typedef int ISDB_S_NETWORK_TYPE;

typedef int ISDB_CABLE_TV_NETWORK_TYPE;

typedef int DIRECT_TV_SATELLITE_TV_NETWORK_TYPE;

typedef int ECHOSTAR_SATELLITE_TV_NETWORK_TYPE;

typedef int ATSC_TERRESTRIAL_TV_NETWORK_TYPE;

typedef int DVB_TERRESTRIAL_TV_NETWORK_TYPE;

typedef int BSKYB_TERRESTRIAL_TV_NETWORK_TYPE;

typedef int DVB_SATELLITE_TV_NETWORK_TYPE;

typedef int DVB_CABLE_TV_NETWORK_TYPE;

typedef int BDA_DEBUG_DATA_AVAILABLE;

typedef int BDA_DEBUG_DATA_TYPE_STRING;

typedef int EVENTID_BDA_IsdbCASResponse;

typedef int EVENTID_BDA_CASRequestTuner;

typedef int EVENTID_BDA_CASReleaseTuner;

typedef int EVENTID_BDA_CASOpenMMI;

typedef int EVENTID_BDA_CASCloseMMI;

typedef int EVENTID_BDA_CASBroadcastMMI;

typedef int EVENTID_BDA_TunerSignalLock;

typedef int EVENTID_BDA_TunerNoSignal;

typedef int EVENTID_BDA_GPNVValueUpdate;

typedef int EVENTID_BDA_UpdateDrmStatus;

typedef int EVENTID_BDA_UpdateScanState;

typedef int EVENTID_BDA_GuideDataAvailable;

typedef int EVENTID_BDA_GuideServiceInformationUpdated;

typedef int EVENTID_BDA_GuideDataError;

typedef int EVENTID_BDA_DiseqCResponseAvailable;

typedef int EVENTID_BDA_LbigsOpenConnection;

typedef int EVENTID_BDA_LbigsSendData;

typedef int EVENTID_BDA_LbigsCloseConnectionHandle;

typedef int EVENTID_BDA_EncoderSignalLock;

typedef int EVENTID_BDA_FdcStatus;

typedef int EVENTID_BDA_FdcTableSection;

typedef int EVENTID_BDA_TransprtStreamSelectorInfo;

typedef int EVENTID_BDA_RatingPinReset;

typedef int PBDA_ALWAYS_TUNE_IN_MUX;

typedef int PID_BITS;

typedef int MPEG_HEADER_BITS;

typedef int MPEG_HEADER_VERSION_BITS;

typedef int MPEG1WAVEFORMAT;

typedef int MPEGLAYER3WAVEFORMAT;

typedef int HEAACWAVEINFO;

typedef int HEAACWAVEFORMAT;


//--------------------------------------------------------------------------------
// Section: Functions (13)
//--------------------------------------------------------------------------------
/*u32*/void AMGetErrorTextA();

/*u32*/void AMGetErrorTextW();

/*HRESULT*/void DMORegister();

/*HRESULT*/void DMOUnregister();

/*HRESULT*/void DMOEnum();

/*HRESULT*/void DMOGetTypes();

/*HRESULT*/void DMOGetName();

/*HRESULT*/void MoInitMediaType();

/*HRESULT*/void MoFreeMediaType();

/*HRESULT*/void MoCopyMediaType();

/*HRESULT*/void MoCreateMediaType();

/*HRESULT*/void MoDeleteMediaType();

/*HRESULT*/void MoDuplicateMediaType();

