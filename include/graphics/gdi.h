// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (1203)
//--------------------------------------------------------------------------------
#define GDI_ERROR (INT)-1
#define ERROR (UINT)0
#define NULLREGION (UINT)1
#define SIMPLEREGION (UINT)2
#define COMPLEXREGION (UINT)3
#define MAXSTRETCHBLTMODE (UINT)4
#define POLYFILL_LAST (UINT)2
#define LAYOUT_BTT (UINT)2
#define LAYOUT_VBH (UINT)4
#define ASPECT_FILTERING (UINT)1
#define META_SETBKCOLOR (UINT)513
#define META_SETBKMODE (UINT)258
#define META_SETMAPMODE (UINT)259
#define META_SETROP2 (UINT)260
#define META_SETRELABS (UINT)261
#define META_SETPOLYFILLMODE (UINT)262
#define META_SETSTRETCHBLTMODE (UINT)263
#define META_SETTEXTCHAREXTRA (UINT)264
#define META_SETTEXTCOLOR (UINT)521
#define META_SETTEXTJUSTIFICATION (UINT)522
#define META_SETWINDOWORG (UINT)523
#define META_SETWINDOWEXT (UINT)524
#define META_SETVIEWPORTORG (UINT)525
#define META_SETVIEWPORTEXT (UINT)526
#define META_OFFSETWINDOWORG (UINT)527
#define META_SCALEWINDOWEXT (UINT)1040
#define META_OFFSETVIEWPORTORG (UINT)529
#define META_SCALEVIEWPORTEXT (UINT)1042
#define META_LINETO (UINT)531
#define META_MOVETO (UINT)532
#define META_EXCLUDECLIPRECT (UINT)1045
#define META_INTERSECTCLIPRECT (UINT)1046
#define META_ARC (UINT)2071
#define META_ELLIPSE (UINT)1048
#define META_FLOODFILL (UINT)1049
#define META_PIE (UINT)2074
#define META_RECTANGLE (UINT)1051
#define META_ROUNDRECT (UINT)1564
#define META_PATBLT (UINT)1565
#define META_SAVEDC (UINT)30
#define META_SETPIXEL (UINT)1055
#define META_OFFSETCLIPRGN (UINT)544
#define META_TEXTOUT (UINT)1313
#define META_BITBLT (UINT)2338
#define META_STRETCHBLT (UINT)2851
#define META_POLYGON (UINT)804
#define META_POLYLINE (UINT)805
#define META_ESCAPE (UINT)1574
#define META_RESTOREDC (UINT)295
#define META_FILLREGION (UINT)552
#define META_FRAMEREGION (UINT)1065
#define META_INVERTREGION (UINT)298
#define META_PAINTREGION (UINT)299
#define META_SELECTCLIPREGION (UINT)300
#define META_SELECTOBJECT (UINT)301
#define META_SETTEXTALIGN (UINT)302
#define META_CHORD (UINT)2096
#define META_SETMAPPERFLAGS (UINT)561
#define META_EXTTEXTOUT (UINT)2610
#define META_SETDIBTODEV (UINT)3379
#define META_SELECTPALETTE (UINT)564
#define META_REALIZEPALETTE (UINT)53
#define META_ANIMATEPALETTE (UINT)1078
#define META_SETPALENTRIES (UINT)55
#define META_POLYPOLYGON (UINT)1336
#define META_RESIZEPALETTE (UINT)313
#define META_DIBBITBLT (UINT)2368
#define META_DIBSTRETCHBLT (UINT)2881
#define META_DIBCREATEPATTERNBRUSH (UINT)322
#define META_STRETCHDIB (UINT)3907
#define META_EXTFLOODFILL (UINT)1352
#define META_SETLAYOUT (UINT)329
#define META_DELETEOBJECT (UINT)496
#define META_CREATEPALETTE (UINT)247
#define META_CREATEPATTERNBRUSH (UINT)505
#define META_CREATEPENINDIRECT (UINT)762
#define META_CREATEFONTINDIRECT (UINT)763
#define META_CREATEBRUSHINDIRECT (UINT)764
#define META_CREATEREGION (UINT)1791
#define NEWFRAME (UINT)1
#define ABORTDOC (UINT)2
#define NEXTBAND (UINT)3
#define SETCOLORTABLE (UINT)4
#define GETCOLORTABLE (UINT)5
#define FLUSHOUTPUT (UINT)6
#define DRAFTMODE (UINT)7
#define QUERYESCSUPPORT (UINT)8
#define SETABORTPROC (UINT)9
#define STARTDOC (UINT)10
#define ENDDOC (UINT)11
#define GETPHYSPAGESIZE (UINT)12
#define GETPRINTINGOFFSET (UINT)13
#define GETSCALINGFACTOR (UINT)14
#define MFCOMMENT (UINT)15
#define GETPENWIDTH (UINT)16
#define SETCOPYCOUNT (UINT)17
#define SELECTPAPERSOURCE (UINT)18
#define DEVICEDATA (UINT)19
#define PASSTHROUGH (UINT)19
#define GETTECHNOLGY (UINT)20
#define GETTECHNOLOGY (UINT)20
#define SETLINECAP (UINT)21
#define SETLINEJOIN (UINT)22
#define SETMITERLIMIT (UINT)23
#define BANDINFO (UINT)24
#define DRAWPATTERNRECT (UINT)25
#define GETVECTORPENSIZE (UINT)26
#define GETVECTORBRUSHSIZE (UINT)27
#define ENABLEDUPLEX (UINT)28
#define GETSETPAPERBINS (UINT)29
#define GETSETPRINTORIENT (UINT)30
#define ENUMPAPERBINS (UINT)31
#define SETDIBSCALING (UINT)32
#define EPSPRINTING (UINT)33
#define ENUMPAPERMETRICS (UINT)34
#define GETSETPAPERMETRICS (UINT)35
#define POSTSCRIPT_DATA (UINT)37
#define POSTSCRIPT_IGNORE (UINT)38
#define MOUSETRAILS (UINT)39
#define GETDEVICEUNITS (UINT)42
#define GETEXTENDEDTEXTMETRICS (UINT)256
#define GETEXTENTTABLE (UINT)257
#define GETPAIRKERNTABLE (UINT)258
#define GETTRACKKERNTABLE (UINT)259
#define EXTTEXTOUT (UINT)512
#define GETFACENAME (UINT)513
#define DOWNLOADFACE (UINT)514
#define ENABLERELATIVEWIDTHS (UINT)768
#define ENABLEPAIRKERNING (UINT)769
#define SETKERNTRACK (UINT)770
#define SETALLJUSTVALUES (UINT)771
#define SETCHARSET (UINT)772
#define STRETCHBLT (UINT)2048
#define METAFILE_DRIVER (UINT)2049
#define GETSETSCREENPARAMS (UINT)3072
#define QUERYDIBSUPPORT (UINT)3073
#define BEGIN_PATH (UINT)4096
#define CLIP_TO_PATH (UINT)4097
#define END_PATH (UINT)4098
#define EXT_DEVICE_CAPS (UINT)4099
#define RESTORE_CTM (UINT)4100
#define SAVE_CTM (UINT)4101
#define SET_ARC_DIRECTION (UINT)4102
#define SET_BACKGROUND_COLOR (UINT)4103
#define SET_POLY_MODE (UINT)4104
#define SET_SCREEN_ANGLE (UINT)4105
#define SET_SPREAD (UINT)4106
#define TRANSFORM_CTM (UINT)4107
#define SET_CLIP_BOX (UINT)4108
#define SET_BOUNDS (UINT)4109
#define SET_MIRROR_MODE (UINT)4110
#define OPENCHANNEL (UINT)4110
#define DOWNLOADHEADER (UINT)4111
#define CLOSECHANNEL (UINT)4112
#define POSTSCRIPT_PASSTHROUGH (UINT)4115
#define ENCAPSULATED_POSTSCRIPT (UINT)4116
#define POSTSCRIPT_IDENTIFY (UINT)4117
#define POSTSCRIPT_INJECTION (UINT)4118
#define CHECKJPEGFORMAT (UINT)4119
#define CHECKPNGFORMAT (UINT)4120
#define GET_PS_FEATURESETTING (UINT)4121
#define GDIPLUS_TS_QUERYVER (UINT)4122
#define GDIPLUS_TS_RECORD (UINT)4123
#define MILCORE_TS_QUERYVER_RESULT_FALSE (UINT)0
#define MILCORE_TS_QUERYVER_RESULT_TRUE (UINT)2147483647
#define SPCLPASSTHROUGH2 (UINT)4568
#define PSIDENT_GDICENTRIC (UINT)0
#define PSIDENT_PSCENTRIC (UINT)1
#define PSINJECT_DLFONT (UINT)3722304989
#define FEATURESETTING_NUP (UINT)0
#define FEATURESETTING_OUTPUT (UINT)1
#define FEATURESETTING_PSLEVEL (UINT)2
#define FEATURESETTING_CUSTPAPER (UINT)3
#define FEATURESETTING_MIRROR (UINT)4
#define FEATURESETTING_NEGATIVE (UINT)5
#define FEATURESETTING_PROTOCOL (UINT)6
#define FEATURESETTING_PRIVATE_BEGIN (UINT)4096
#define FEATURESETTING_PRIVATE_END (UINT)8191
#define PSPROTOCOL_ASCII (UINT)0
#define PSPROTOCOL_BCP (UINT)1
#define PSPROTOCOL_TBCP (UINT)2
#define PSPROTOCOL_BINARY (UINT)3
#define QDI_SETDIBITS (UINT)1
#define QDI_GETDIBITS (UINT)2
#define QDI_DIBTOSCREEN (UINT)4
#define QDI_STRETCHDIB (UINT)8
#define SP_NOTREPORTED (UINT)16384
#define SP_ERROR (INT)-1
#define SP_APPABORT (INT)-2
#define SP_USERABORT (INT)-3
#define SP_OUTOFDISK (INT)-4
#define SP_OUTOFMEMORY (INT)-5
#define PR_JOBSTATUS (UINT)0
#define LCS_CALIBRATED_RGB (INT)0
#define LCS_GM_BUSINESS (INT)1
#define LCS_GM_GRAPHICS (INT)2
#define LCS_GM_IMAGES (INT)4
#define LCS_GM_ABS_COLORIMETRIC (INT)8
#define CM_OUT_OF_GAMUT (UINT)255
#define CM_IN_GAMUT (UINT)0
#define BI_RGB (INT)0
#define BI_RLE8 (INT)1
#define BI_RLE4 (INT)2
#define BI_BITFIELDS (INT)3
#define BI_JPEG (INT)4
#define BI_PNG (INT)5
#define TMPF_FIXED_PITCH (UINT)1
#define TMPF_VECTOR (UINT)2
#define TMPF_DEVICE (UINT)8
#define TMPF_TRUETYPE (UINT)4
#define NTM_REGULAR (INT)64
#define NTM_BOLD (INT)32
#define NTM_ITALIC (INT)1
#define NTM_NONNEGATIVE_AC (UINT)65536
#define NTM_PS_OPENTYPE (UINT)131072
#define NTM_TT_OPENTYPE (UINT)262144
#define NTM_MULTIPLEMASTER (UINT)524288
#define NTM_TYPE1 (UINT)1048576
#define NTM_DSIG (UINT)2097152
#define LF_FACESIZE (UINT)32
#define LF_FULLFACESIZE (UINT)64
#define OUT_SCREEN_OUTLINE_PRECIS (UINT)9
#define CLEARTYPE_NATURAL_QUALITY (UINT)6
#define DEFAULT_PITCH (UINT)0
#define FIXED_PITCH (UINT)1
#define VARIABLE_PITCH (UINT)2
#define MONO_FONT (UINT)8
#define ANSI_CHARSET (UINT)0
#define DEFAULT_CHARSET (UINT)1
#define SYMBOL_CHARSET (UINT)2
#define SHIFTJIS_CHARSET (UINT)128
#define HANGEUL_CHARSET (UINT)129
#define HANGUL_CHARSET (UINT)129
#define GB2312_CHARSET (UINT)134
#define CHINESEBIG5_CHARSET (UINT)136
#define OEM_CHARSET (UINT)255
#define JOHAB_CHARSET (UINT)130
#define HEBREW_CHARSET (UINT)177
#define ARABIC_CHARSET (UINT)178
#define GREEK_CHARSET (UINT)161
#define TURKISH_CHARSET (UINT)162
#define VIETNAMESE_CHARSET (UINT)163
#define THAI_CHARSET (UINT)222
#define EASTEUROPE_CHARSET (UINT)238
#define RUSSIAN_CHARSET (UINT)204
#define MAC_CHARSET (UINT)77
#define BALTIC_CHARSET (UINT)186
#define FS_LATIN1 (INT)1
#define FS_LATIN2 (INT)2
#define FS_CYRILLIC (INT)4
#define FS_GREEK (INT)8
#define FS_TURKISH (INT)16
#define FS_HEBREW (INT)32
#define FS_ARABIC (INT)64
#define FS_BALTIC (INT)128
#define FS_VIETNAMESE (INT)256
#define FS_THAI (INT)65536
#define FS_JISJAPAN (INT)131072
#define FS_CHINESESIMP (INT)262144
#define FS_WANSUNG (INT)524288
#define FS_CHINESETRAD (INT)1048576
#define FS_JOHAB (INT)2097152
#define FS_SYMBOL (INT)-2147483648
#define FW_DONTCARE (UINT)0
#define FW_THIN (UINT)100
#define FW_EXTRALIGHT (UINT)200
#define FW_LIGHT (UINT)300
#define FW_NORMAL (UINT)400
#define FW_MEDIUM (UINT)500
#define FW_SEMIBOLD (UINT)600
#define FW_BOLD (UINT)700
#define FW_EXTRABOLD (UINT)800
#define FW_HEAVY (UINT)900
#define PANOSE_COUNT (UINT)10
#define PAN_FAMILYTYPE_INDEX (UINT)0
#define PAN_SERIFSTYLE_INDEX (UINT)1
#define PAN_WEIGHT_INDEX (UINT)2
#define PAN_PROPORTION_INDEX (UINT)3
#define PAN_CONTRAST_INDEX (UINT)4
#define PAN_STROKEVARIATION_INDEX (UINT)5
#define PAN_ARMSTYLE_INDEX (UINT)6
#define PAN_LETTERFORM_INDEX (UINT)7
#define PAN_MIDLINE_INDEX (UINT)8
#define PAN_XHEIGHT_INDEX (UINT)9
#define PAN_CULTURE_LATIN (UINT)0
#define PAN_ANY (UINT)0
#define PAN_NO_FIT (UINT)1
#define PAN_FAMILY_TEXT_DISPLAY (UINT)2
#define PAN_FAMILY_SCRIPT (UINT)3
#define PAN_FAMILY_DECORATIVE (UINT)4
#define PAN_FAMILY_PICTORIAL (UINT)5
#define PAN_SERIF_COVE (UINT)2
#define PAN_SERIF_OBTUSE_COVE (UINT)3
#define PAN_SERIF_SQUARE_COVE (UINT)4
#define PAN_SERIF_OBTUSE_SQUARE_COVE (UINT)5
#define PAN_SERIF_SQUARE (UINT)6
#define PAN_SERIF_THIN (UINT)7
#define PAN_SERIF_BONE (UINT)8
#define PAN_SERIF_EXAGGERATED (UINT)9
#define PAN_SERIF_TRIANGLE (UINT)10
#define PAN_SERIF_NORMAL_SANS (UINT)11
#define PAN_SERIF_OBTUSE_SANS (UINT)12
#define PAN_SERIF_PERP_SANS (UINT)13
#define PAN_SERIF_FLARED (UINT)14
#define PAN_SERIF_ROUNDED (UINT)15
#define PAN_WEIGHT_VERY_LIGHT (UINT)2
#define PAN_WEIGHT_LIGHT (UINT)3
#define PAN_WEIGHT_THIN (UINT)4
#define PAN_WEIGHT_BOOK (UINT)5
#define PAN_WEIGHT_MEDIUM (UINT)6
#define PAN_WEIGHT_DEMI (UINT)7
#define PAN_WEIGHT_BOLD (UINT)8
#define PAN_WEIGHT_HEAVY (UINT)9
#define PAN_WEIGHT_BLACK (UINT)10
#define PAN_WEIGHT_NORD (UINT)11
#define PAN_PROP_OLD_STYLE (UINT)2
#define PAN_PROP_MODERN (UINT)3
#define PAN_PROP_EVEN_WIDTH (UINT)4
#define PAN_PROP_EXPANDED (UINT)5
#define PAN_PROP_CONDENSED (UINT)6
#define PAN_PROP_VERY_EXPANDED (UINT)7
#define PAN_PROP_VERY_CONDENSED (UINT)8
#define PAN_PROP_MONOSPACED (UINT)9
#define PAN_CONTRAST_NONE (UINT)2
#define PAN_CONTRAST_VERY_LOW (UINT)3
#define PAN_CONTRAST_LOW (UINT)4
#define PAN_CONTRAST_MEDIUM_LOW (UINT)5
#define PAN_CONTRAST_MEDIUM (UINT)6
#define PAN_CONTRAST_MEDIUM_HIGH (UINT)7
#define PAN_CONTRAST_HIGH (UINT)8
#define PAN_CONTRAST_VERY_HIGH (UINT)9
#define PAN_STROKE_GRADUAL_DIAG (UINT)2
#define PAN_STROKE_GRADUAL_TRAN (UINT)3
#define PAN_STROKE_GRADUAL_VERT (UINT)4
#define PAN_STROKE_GRADUAL_HORZ (UINT)5
#define PAN_STROKE_RAPID_VERT (UINT)6
#define PAN_STROKE_RAPID_HORZ (UINT)7
#define PAN_STROKE_INSTANT_VERT (UINT)8
#define PAN_STRAIGHT_ARMS_HORZ (UINT)2
#define PAN_STRAIGHT_ARMS_WEDGE (UINT)3
#define PAN_STRAIGHT_ARMS_VERT (UINT)4
#define PAN_STRAIGHT_ARMS_SINGLE_SERIF (UINT)5
#define PAN_STRAIGHT_ARMS_DOUBLE_SERIF (UINT)6
#define PAN_BENT_ARMS_HORZ (UINT)7
#define PAN_BENT_ARMS_WEDGE (UINT)8
#define PAN_BENT_ARMS_VERT (UINT)9
#define PAN_BENT_ARMS_SINGLE_SERIF (UINT)10
#define PAN_BENT_ARMS_DOUBLE_SERIF (UINT)11
#define PAN_LETT_NORMAL_CONTACT (UINT)2
#define PAN_LETT_NORMAL_WEIGHTED (UINT)3
#define PAN_LETT_NORMAL_BOXED (UINT)4
#define PAN_LETT_NORMAL_FLATTENED (UINT)5
#define PAN_LETT_NORMAL_ROUNDED (UINT)6
#define PAN_LETT_NORMAL_OFF_CENTER (UINT)7
#define PAN_LETT_NORMAL_SQUARE (UINT)8
#define PAN_LETT_OBLIQUE_CONTACT (UINT)9
#define PAN_LETT_OBLIQUE_WEIGHTED (UINT)10
#define PAN_LETT_OBLIQUE_BOXED (UINT)11
#define PAN_LETT_OBLIQUE_FLATTENED (UINT)12
#define PAN_LETT_OBLIQUE_ROUNDED (UINT)13
#define PAN_LETT_OBLIQUE_OFF_CENTER (UINT)14
#define PAN_LETT_OBLIQUE_SQUARE (UINT)15
#define PAN_MIDLINE_STANDARD_TRIMMED (UINT)2
#define PAN_MIDLINE_STANDARD_POINTED (UINT)3
#define PAN_MIDLINE_STANDARD_SERIFED (UINT)4
#define PAN_MIDLINE_HIGH_TRIMMED (UINT)5
#define PAN_MIDLINE_HIGH_POINTED (UINT)6
#define PAN_MIDLINE_HIGH_SERIFED (UINT)7
#define PAN_MIDLINE_CONSTANT_TRIMMED (UINT)8
#define PAN_MIDLINE_CONSTANT_POINTED (UINT)9
#define PAN_MIDLINE_CONSTANT_SERIFED (UINT)10
#define PAN_MIDLINE_LOW_TRIMMED (UINT)11
#define PAN_MIDLINE_LOW_POINTED (UINT)12
#define PAN_MIDLINE_LOW_SERIFED (UINT)13
#define PAN_XHEIGHT_CONSTANT_SMALL (UINT)2
#define PAN_XHEIGHT_CONSTANT_STD (UINT)3
#define PAN_XHEIGHT_CONSTANT_LARGE (UINT)4
#define PAN_XHEIGHT_DUCKING_SMALL (UINT)5
#define PAN_XHEIGHT_DUCKING_STD (UINT)6
#define PAN_XHEIGHT_DUCKING_LARGE (UINT)7
#define ELF_VENDOR_SIZE (UINT)4
#define ELF_VERSION (UINT)0
#define ELF_CULTURE_LATIN (UINT)0
#define RASTER_FONTTYPE (UINT)1
#define DEVICE_FONTTYPE (UINT)2
#define TRUETYPE_FONTTYPE (UINT)4
#define PC_RESERVED (UINT)1
#define PC_EXPLICIT (UINT)2
#define PC_NOCOLLAPSE (UINT)4
#define BKMODE_LAST (UINT)2
#define GM_LAST (UINT)2
#define PT_CLOSEFIGURE (UINT)1
#define PT_LINETO (UINT)2
#define PT_BEZIERTO (UINT)4
#define PT_MOVETO (UINT)6
#define ABSOLUTE (UINT)1
#define RELATIVE (UINT)2
#define STOCK_LAST (UINT)19
#define CLR_INVALID (UINT)4294967295
#define BS_SOLID (UINT)0
#define BS_NULL (UINT)1
#define BS_HATCHED (UINT)2
#define BS_PATTERN (UINT)3
#define BS_INDEXED (UINT)4
#define BS_DIBPATTERN (UINT)5
#define BS_DIBPATTERNPT (UINT)6
#define BS_PATTERN8X8 (UINT)7
#define BS_DIBPATTERN8X8 (UINT)8
#define BS_MONOPATTERN (UINT)9
#define HS_API_MAX (UINT)12
#define DT_PLOTTER (UINT)0
#define DT_RASDISPLAY (UINT)1
#define DT_RASPRINTER (UINT)2
#define DT_RASCAMERA (UINT)3
#define DT_CHARSTREAM (UINT)4
#define DT_METAFILE (UINT)5
#define DT_DISPFILE (UINT)6
#define CC_NONE (UINT)0
#define CC_CIRCLES (UINT)1
#define CC_PIE (UINT)2
#define CC_CHORD (UINT)4
#define CC_ELLIPSES (UINT)8
#define CC_WIDE (UINT)16
#define CC_STYLED (UINT)32
#define CC_WIDESTYLED (UINT)64
#define CC_INTERIORS (UINT)128
#define CC_ROUNDRECT (UINT)256
#define LC_NONE (UINT)0
#define LC_POLYLINE (UINT)2
#define LC_MARKER (UINT)4
#define LC_POLYMARKER (UINT)8
#define LC_WIDE (UINT)16
#define LC_STYLED (UINT)32
#define LC_WIDESTYLED (UINT)64
#define LC_INTERIORS (UINT)128
#define PC_NONE (UINT)0
#define PC_POLYGON (UINT)1
#define PC_RECTANGLE (UINT)2
#define PC_WINDPOLYGON (UINT)4
#define PC_TRAPEZOID (UINT)4
#define PC_SCANLINE (UINT)8
#define PC_WIDE (UINT)16
#define PC_STYLED (UINT)32
#define PC_WIDESTYLED (UINT)64
#define PC_INTERIORS (UINT)128
#define PC_POLYPOLYGON (UINT)256
#define PC_PATHS (UINT)512
#define CP_NONE (UINT)0
#define CP_RECTANGLE (UINT)1
#define CP_REGION (UINT)2
#define TC_OP_CHARACTER (UINT)1
#define TC_OP_STROKE (UINT)2
#define TC_CP_STROKE (UINT)4
#define TC_CR_90 (UINT)8
#define TC_CR_ANY (UINT)16
#define TC_SF_X_YINDEP (UINT)32
#define TC_SA_DOUBLE (UINT)64
#define TC_SA_INTEGER (UINT)128
#define TC_SA_CONTIN (UINT)256
#define TC_EA_DOUBLE (UINT)512
#define TC_IA_ABLE (UINT)1024
#define TC_UA_ABLE (UINT)2048
#define TC_SO_ABLE (UINT)4096
#define TC_RA_ABLE (UINT)8192
#define TC_VA_ABLE (UINT)16384
#define TC_RESERVED (UINT)32768
#define TC_SCROLLBLT (UINT)65536
#define RC_BITBLT (UINT)1
#define RC_BANDING (UINT)2
#define RC_SCALING (UINT)4
#define RC_BITMAP64 (UINT)8
#define RC_GDI20_OUTPUT (UINT)16
#define RC_GDI20_STATE (UINT)32
#define RC_SAVEBITMAP (UINT)64
#define RC_DI_BITMAP (UINT)128
#define RC_PALETTE (UINT)256
#define RC_DIBTODEV (UINT)512
#define RC_BIGFONT (UINT)1024
#define RC_STRETCHBLT (UINT)2048
#define RC_FLOODFILL (UINT)4096
#define RC_STRETCHDIB (UINT)8192
#define RC_OP_DX_OUTPUT (UINT)16384
#define RC_DEVBITS (UINT)32768
#define SB_NONE (UINT)0
#define SB_CONST_ALPHA (UINT)1
#define SB_PIXEL_ALPHA (UINT)2
#define SB_PREMULT_ALPHA (UINT)4
#define SB_GRAD_RECT (UINT)16
#define SB_GRAD_TRI (UINT)32
#define CM_NONE (UINT)0
#define CM_DEVICE_ICM (UINT)1
#define CM_GAMMA_RAMP (UINT)2
#define CM_CMYK_COLOR (UINT)4
#define SYSPAL_ERROR (UINT)0
#define CBM_INIT (INT)4
#define CCHFORMNAME (UINT)32
#define DM_SPECVERSION (UINT)1025
#define DM_ORIENTATION (INT)1
#define DM_PAPERSIZE (INT)2
#define DM_PAPERLENGTH (INT)4
#define DM_PAPERWIDTH (INT)8
#define DM_SCALE (INT)16
#define DM_POSITION (INT)32
#define DM_NUP (INT)64
#define DM_DISPLAYORIENTATION (INT)128
#define DM_COPIES (INT)256
#define DM_DEFAULTSOURCE (INT)512
#define DM_PRINTQUALITY (INT)1024
#define DM_COLOR (INT)2048
#define DM_DUPLEX (INT)4096
#define DM_YRESOLUTION (INT)8192
#define DM_TTOPTION (INT)16384
#define DM_COLLATE (INT)32768
#define DM_FORMNAME (INT)65536
#define DM_LOGPIXELS (INT)131072
#define DM_BITSPERPEL (INT)262144
#define DM_PELSWIDTH (INT)524288
#define DM_PELSHEIGHT (INT)1048576
#define DM_DISPLAYFLAGS (INT)2097152
#define DM_DISPLAYFREQUENCY (INT)4194304
#define DM_ICMMETHOD (INT)8388608
#define DM_ICMINTENT (INT)16777216
#define DM_MEDIATYPE (INT)33554432
#define DM_DITHERTYPE (INT)67108864
#define DM_PANNINGWIDTH (INT)134217728
#define DM_PANNINGHEIGHT (INT)268435456
#define DM_DISPLAYFIXEDOUTPUT (INT)536870912
#define DMORIENT_PORTRAIT (UINT)1
#define DMORIENT_LANDSCAPE (UINT)2
#define DMPAPER_LETTER (UINT)1
#define DMPAPER_LETTERSMALL (UINT)2
#define DMPAPER_TABLOID (UINT)3
#define DMPAPER_LEDGER (UINT)4
#define DMPAPER_LEGAL (UINT)5
#define DMPAPER_STATEMENT (UINT)6
#define DMPAPER_EXECUTIVE (UINT)7
#define DMPAPER_A3 (UINT)8
#define DMPAPER_A4 (UINT)9
#define DMPAPER_A4SMALL (UINT)10
#define DMPAPER_A5 (UINT)11
#define DMPAPER_B4 (UINT)12
#define DMPAPER_B5 (UINT)13
#define DMPAPER_FOLIO (UINT)14
#define DMPAPER_QUARTO (UINT)15
#define DMPAPER_10X14 (UINT)16
#define DMPAPER_11X17 (UINT)17
#define DMPAPER_NOTE (UINT)18
#define DMPAPER_ENV_9 (UINT)19
#define DMPAPER_ENV_10 (UINT)20
#define DMPAPER_ENV_11 (UINT)21
#define DMPAPER_ENV_12 (UINT)22
#define DMPAPER_ENV_14 (UINT)23
#define DMPAPER_CSHEET (UINT)24
#define DMPAPER_DSHEET (UINT)25
#define DMPAPER_ESHEET (UINT)26
#define DMPAPER_ENV_DL (UINT)27
#define DMPAPER_ENV_C5 (UINT)28
#define DMPAPER_ENV_C3 (UINT)29
#define DMPAPER_ENV_C4 (UINT)30
#define DMPAPER_ENV_C6 (UINT)31
#define DMPAPER_ENV_C65 (UINT)32
#define DMPAPER_ENV_B4 (UINT)33
#define DMPAPER_ENV_B5 (UINT)34
#define DMPAPER_ENV_B6 (UINT)35
#define DMPAPER_ENV_ITALY (UINT)36
#define DMPAPER_ENV_MONARCH (UINT)37
#define DMPAPER_ENV_PERSONAL (UINT)38
#define DMPAPER_FANFOLD_US (UINT)39
#define DMPAPER_FANFOLD_STD_GERMAN (UINT)40
#define DMPAPER_FANFOLD_LGL_GERMAN (UINT)41
#define DMPAPER_ISO_B4 (UINT)42
#define DMPAPER_JAPANESE_POSTCARD (UINT)43
#define DMPAPER_9X11 (UINT)44
#define DMPAPER_10X11 (UINT)45
#define DMPAPER_15X11 (UINT)46
#define DMPAPER_ENV_INVITE (UINT)47
#define DMPAPER_RESERVED_48 (UINT)48
#define DMPAPER_RESERVED_49 (UINT)49
#define DMPAPER_LETTER_EXTRA (UINT)50
#define DMPAPER_LEGAL_EXTRA (UINT)51
#define DMPAPER_TABLOID_EXTRA (UINT)52
#define DMPAPER_A4_EXTRA (UINT)53
#define DMPAPER_LETTER_TRANSVERSE (UINT)54
#define DMPAPER_A4_TRANSVERSE (UINT)55
#define DMPAPER_LETTER_EXTRA_TRANSVERSE (UINT)56
#define DMPAPER_A_PLUS (UINT)57
#define DMPAPER_B_PLUS (UINT)58
#define DMPAPER_LETTER_PLUS (UINT)59
#define DMPAPER_A4_PLUS (UINT)60
#define DMPAPER_A5_TRANSVERSE (UINT)61
#define DMPAPER_B5_TRANSVERSE (UINT)62
#define DMPAPER_A3_EXTRA (UINT)63
#define DMPAPER_A5_EXTRA (UINT)64
#define DMPAPER_B5_EXTRA (UINT)65
#define DMPAPER_A2 (UINT)66
#define DMPAPER_A3_TRANSVERSE (UINT)67
#define DMPAPER_A3_EXTRA_TRANSVERSE (UINT)68
#define DMPAPER_DBL_JAPANESE_POSTCARD (UINT)69
#define DMPAPER_A6 (UINT)70
#define DMPAPER_JENV_KAKU2 (UINT)71
#define DMPAPER_JENV_KAKU3 (UINT)72
#define DMPAPER_JENV_CHOU3 (UINT)73
#define DMPAPER_JENV_CHOU4 (UINT)74
#define DMPAPER_LETTER_ROTATED (UINT)75
#define DMPAPER_A3_ROTATED (UINT)76
#define DMPAPER_A4_ROTATED (UINT)77
#define DMPAPER_A5_ROTATED (UINT)78
#define DMPAPER_B4_JIS_ROTATED (UINT)79
#define DMPAPER_B5_JIS_ROTATED (UINT)80
#define DMPAPER_JAPANESE_POSTCARD_ROTATED (UINT)81
#define DMPAPER_DBL_JAPANESE_POSTCARD_ROTATED (UINT)82
#define DMPAPER_A6_ROTATED (UINT)83
#define DMPAPER_JENV_KAKU2_ROTATED (UINT)84
#define DMPAPER_JENV_KAKU3_ROTATED (UINT)85
#define DMPAPER_JENV_CHOU3_ROTATED (UINT)86
#define DMPAPER_JENV_CHOU4_ROTATED (UINT)87
#define DMPAPER_B6_JIS (UINT)88
#define DMPAPER_B6_JIS_ROTATED (UINT)89
#define DMPAPER_12X11 (UINT)90
#define DMPAPER_JENV_YOU4 (UINT)91
#define DMPAPER_JENV_YOU4_ROTATED (UINT)92
#define DMPAPER_P16K (UINT)93
#define DMPAPER_P32K (UINT)94
#define DMPAPER_P32KBIG (UINT)95
#define DMPAPER_PENV_1 (UINT)96
#define DMPAPER_PENV_2 (UINT)97
#define DMPAPER_PENV_3 (UINT)98
#define DMPAPER_PENV_4 (UINT)99
#define DMPAPER_PENV_5 (UINT)100
#define DMPAPER_PENV_6 (UINT)101
#define DMPAPER_PENV_7 (UINT)102
#define DMPAPER_PENV_8 (UINT)103
#define DMPAPER_PENV_9 (UINT)104
#define DMPAPER_PENV_10 (UINT)105
#define DMPAPER_P16K_ROTATED (UINT)106
#define DMPAPER_P32K_ROTATED (UINT)107
#define DMPAPER_P32KBIG_ROTATED (UINT)108
#define DMPAPER_PENV_1_ROTATED (UINT)109
#define DMPAPER_PENV_2_ROTATED (UINT)110
#define DMPAPER_PENV_3_ROTATED (UINT)111
#define DMPAPER_PENV_4_ROTATED (UINT)112
#define DMPAPER_PENV_5_ROTATED (UINT)113
#define DMPAPER_PENV_6_ROTATED (UINT)114
#define DMPAPER_PENV_7_ROTATED (UINT)115
#define DMPAPER_PENV_8_ROTATED (UINT)116
#define DMPAPER_PENV_9_ROTATED (UINT)117
#define DMPAPER_PENV_10_ROTATED (UINT)118
#define DMPAPER_USER (UINT)256
#define DMBIN_UPPER (UINT)1
#define DMBIN_ONLYONE (UINT)1
#define DMBIN_LOWER (UINT)2
#define DMBIN_MIDDLE (UINT)3
#define DMBIN_MANUAL (UINT)4
#define DMBIN_ENVELOPE (UINT)5
#define DMBIN_ENVMANUAL (UINT)6
#define DMBIN_AUTO (UINT)7
#define DMBIN_TRACTOR (UINT)8
#define DMBIN_SMALLFMT (UINT)9
#define DMBIN_LARGEFMT (UINT)10
#define DMBIN_LARGECAPACITY (UINT)11
#define DMBIN_CASSETTE (UINT)14
#define DMBIN_FORMSOURCE (UINT)15
#define DMBIN_USER (UINT)256
#define DMRES_DRAFT (INT)-1
#define DMRES_LOW (INT)-2
#define DMRES_MEDIUM (INT)-3
#define DMRES_HIGH (INT)-4
#define DMCOLOR_MONOCHROME (UINT)1
#define DMCOLOR_COLOR (UINT)2
#define DMDUP_SIMPLEX (UINT)1
#define DMDUP_VERTICAL (UINT)2
#define DMDUP_HORIZONTAL (UINT)3
#define DMTT_BITMAP (UINT)1
#define DMTT_DOWNLOAD (UINT)2
#define DMTT_SUBDEV (UINT)3
#define DMTT_DOWNLOAD_OUTLINE (UINT)4
#define DMCOLLATE_FALSE (UINT)0
#define DMCOLLATE_TRUE (UINT)1
#define DMDO_DEFAULT (UINT)0
#define DMDO_90 (UINT)1
#define DMDO_180 (UINT)2
#define DMDO_270 (UINT)3
#define DMDFO_DEFAULT (UINT)0
#define DMDFO_STRETCH (UINT)1
#define DMDFO_CENTER (UINT)2
#define DM_INTERLACED (UINT)2
#define DMDISPLAYFLAGS_TEXTMODE (UINT)4
#define DMNUP_SYSTEM (UINT)1
#define DMNUP_ONEUP (UINT)2
#define DMICMMETHOD_NONE (UINT)1
#define DMICMMETHOD_SYSTEM (UINT)2
#define DMICMMETHOD_DRIVER (UINT)3
#define DMICMMETHOD_DEVICE (UINT)4
#define DMICMMETHOD_USER (UINT)256
#define DMICM_SATURATE (UINT)1
#define DMICM_CONTRAST (UINT)2
#define DMICM_COLORIMETRIC (UINT)3
#define DMICM_ABS_COLORIMETRIC (UINT)4
#define DMICM_USER (UINT)256
#define DMMEDIA_STANDARD (UINT)1
#define DMMEDIA_TRANSPARENCY (UINT)2
#define DMMEDIA_GLOSSY (UINT)3
#define DMMEDIA_USER (UINT)256
#define DMDITHER_NONE (UINT)1
#define DMDITHER_COARSE (UINT)2
#define DMDITHER_FINE (UINT)3
#define DMDITHER_LINEART (UINT)4
#define DMDITHER_ERRORDIFFUSION (UINT)5
#define DMDITHER_RESERVED6 (UINT)6
#define DMDITHER_RESERVED7 (UINT)7
#define DMDITHER_RESERVED8 (UINT)8
#define DMDITHER_RESERVED9 (UINT)9
#define DMDITHER_GRAYSCALE (UINT)10
#define DMDITHER_USER (UINT)256
#define DISPLAY_DEVICE_ATTACHED_TO_DESKTOP (UINT)1
#define DISPLAY_DEVICE_MULTI_DRIVER (UINT)2
#define DISPLAY_DEVICE_PRIMARY_DEVICE (UINT)4
#define DISPLAY_DEVICE_MIRRORING_DRIVER (UINT)8
#define DISPLAY_DEVICE_VGA_COMPATIBLE (UINT)16
#define DISPLAY_DEVICE_REMOVABLE (UINT)32
#define DISPLAY_DEVICE_ACC_DRIVER (UINT)64
#define DISPLAY_DEVICE_MODESPRUNED (UINT)134217728
#define DISPLAY_DEVICE_RDPUDD (UINT)16777216
#define DISPLAY_DEVICE_REMOTE (UINT)67108864
#define DISPLAY_DEVICE_DISCONNECT (UINT)33554432
#define DISPLAY_DEVICE_TS_COMPATIBLE (UINT)2097152
#define DISPLAY_DEVICE_UNSAFE_MODES_ON (UINT)524288
#define DISPLAY_DEVICE_ACTIVE (UINT)1
#define DISPLAY_DEVICE_ATTACHED (UINT)2
#define DISPLAYCONFIG_MAXPATH (UINT)1024
#define DISPLAYCONFIG_PATH_MODE_IDX_INVALID (UINT)4294967295
#define DISPLAYCONFIG_PATH_TARGET_MODE_IDX_INVALID (UINT)65535
#define DISPLAYCONFIG_PATH_DESKTOP_IMAGE_IDX_INVALID (UINT)65535
#define DISPLAYCONFIG_PATH_SOURCE_MODE_IDX_INVALID (UINT)65535
#define DISPLAYCONFIG_PATH_CLONE_GROUP_INVALID (UINT)65535
#define DISPLAYCONFIG_SOURCE_IN_USE (UINT)1
#define DISPLAYCONFIG_TARGET_IN_USE (UINT)1
#define DISPLAYCONFIG_TARGET_FORCIBLE (UINT)2
#define DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_BOOT (UINT)4
#define DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_PATH (UINT)8
#define DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_SYSTEM (UINT)16
#define DISPLAYCONFIG_TARGET_IS_HMD (UINT)32
#define DISPLAYCONFIG_PATH_ACTIVE (UINT)1
#define DISPLAYCONFIG_PATH_PREFERRED_UNSCALED (UINT)4
#define DISPLAYCONFIG_PATH_SUPPORT_VIRTUAL_MODE (UINT)8
#define DISPLAYCONFIG_PATH_VALID_FLAGS (UINT)13
#define QDC_ALL_PATHS (UINT)1
#define QDC_ONLY_ACTIVE_PATHS (UINT)2
#define QDC_DATABASE_CURRENT (UINT)4
#define QDC_VIRTUAL_MODE_AWARE (UINT)16
#define QDC_INCLUDE_HMD (UINT)32
#define SDC_TOPOLOGY_INTERNAL (UINT)1
#define SDC_TOPOLOGY_CLONE (UINT)2
#define SDC_TOPOLOGY_EXTEND (UINT)4
#define SDC_TOPOLOGY_EXTERNAL (UINT)8
#define SDC_TOPOLOGY_SUPPLIED (UINT)16
#define SDC_USE_SUPPLIED_DISPLAY_CONFIG (UINT)32
#define SDC_VALIDATE (UINT)64
#define SDC_APPLY (UINT)128
#define SDC_NO_OPTIMIZATION (UINT)256
#define SDC_SAVE_TO_DATABASE (UINT)512
#define SDC_ALLOW_CHANGES (UINT)1024
#define SDC_PATH_PERSIST_IF_REQUIRED (UINT)2048
#define SDC_FORCE_MODE_ENUMERATION (UINT)4096
#define SDC_ALLOW_PATH_ORDER_CHANGES (UINT)8192
#define SDC_VIRTUAL_MODE_AWARE (UINT)32768
#define RDH_RECTANGLES (UINT)1
#define SYSRGN (UINT)4
#define TT_POLYGON_TYPE (UINT)24
#define TT_PRIM_LINE (UINT)1
#define TT_PRIM_QSPLINE (UINT)2
#define TT_PRIM_CSPLINE (UINT)3
#define GCP_DBCS (UINT)1
#define GCP_ERROR (UINT)32768
#define FLI_MASK (UINT)4155
#define FLI_GLYPHS (INT)262144
#define GCP_JUSTIFYIN (INT)2097152
#define GCPCLASS_LATIN (UINT)1
#define GCPCLASS_HEBREW (UINT)2
#define GCPCLASS_ARABIC (UINT)2
#define GCPCLASS_NEUTRAL (UINT)3
#define GCPCLASS_LOCALNUMBER (UINT)4
#define GCPCLASS_LATINNUMBER (UINT)5
#define GCPCLASS_LATINNUMERICTERMINATOR (UINT)6
#define GCPCLASS_LATINNUMERICSEPARATOR (UINT)7
#define GCPCLASS_NUMERICSEPARATOR (UINT)8
#define GCPCLASS_PREBOUNDLTR (UINT)128
#define GCPCLASS_PREBOUNDRTL (UINT)64
#define GCPCLASS_POSTBOUNDLTR (UINT)32
#define GCPCLASS_POSTBOUNDRTL (UINT)16
#define GCPGLYPH_LINKBEFORE (UINT)32768
#define GCPGLYPH_LINKAFTER (UINT)16384
#define TT_AVAILABLE (UINT)1
#define TT_ENABLED (UINT)2
#define PFD_TYPE_RGBA (UINT)0
#define PFD_TYPE_COLORINDEX (UINT)1
#define PFD_MAIN_PLANE (UINT)0
#define PFD_OVERLAY_PLANE (UINT)1
#define PFD_UNDERLAY_PLANE (INT)-1
#define PFD_DOUBLEBUFFER (UINT)1
#define PFD_STEREO (UINT)2
#define PFD_DRAW_TO_WINDOW (UINT)4
#define PFD_DRAW_TO_BITMAP (UINT)8
#define PFD_SUPPORT_GDI (UINT)16
#define PFD_SUPPORT_OPENGL (UINT)32
#define PFD_GENERIC_FORMAT (UINT)64
#define PFD_NEED_PALETTE (UINT)128
#define PFD_NEED_SYSTEM_PALETTE (UINT)256
#define PFD_SWAP_EXCHANGE (UINT)512
#define PFD_SWAP_COPY (UINT)1024
#define PFD_SWAP_LAYER_BUFFERS (UINT)2048
#define PFD_GENERIC_ACCELERATED (UINT)4096
#define PFD_SUPPORT_DIRECTDRAW (UINT)8192
#define PFD_DIRECT3D_ACCELERATED (UINT)16384
#define PFD_SUPPORT_COMPOSITION (UINT)32768
#define PFD_DEPTH_DONTCARE (UINT)536870912
#define PFD_DOUBLEBUFFER_DONTCARE (UINT)1073741824
#define PFD_STEREO_DONTCARE (UINT)2147483648
#define DC_BINADJUST (UINT)19
#define DC_EMF_COMPLIANT (UINT)20
#define DC_DATATYPE_PRODUCED (UINT)21
#define DC_MANUFACTURER (UINT)23
#define DC_MODEL (UINT)24
#define PRINTRATEUNIT_PPM (UINT)1
#define PRINTRATEUNIT_CPS (UINT)2
#define PRINTRATEUNIT_LPM (UINT)3
#define PRINTRATEUNIT_IPM (UINT)4
#define DCTT_BITMAP (INT)1
#define DCTT_DOWNLOAD (INT)2
#define DCTT_SUBDEV (INT)4
#define DCTT_DOWNLOAD_OUTLINE (INT)8
#define DCBA_FACEUPNONE (UINT)0
#define DCBA_FACEUPCENTER (UINT)1
#define DCBA_FACEUPLEFT (UINT)2
#define DCBA_FACEUPRIGHT (UINT)3
#define DCBA_FACEDOWNNONE (UINT)256
#define DCBA_FACEDOWNCENTER (UINT)257
#define DCBA_FACEDOWNLEFT (UINT)258
#define DCBA_FACEDOWNRIGHT (UINT)259
#define GS_8BIT_INDICES (UINT)1
#define GGI_MARK_NONEXISTING_GLYPHS (UINT)1
#define MM_MAX_NUMAXES (UINT)16
#define MM_MAX_AXES_NAMELEN (UINT)16
#define GDIREGISTERDDRAWPACKETVERSION (UINT)1
#define AC_SRC_OVER (UINT)0
#define AC_SRC_ALPHA (UINT)1
#define GRADIENT_FILL_OP_FLAG (UINT)255
#define CA_NEGATIVE (UINT)1
#define CA_LOG_FILTER (UINT)2
#define ILLUMINANT_DEVICE_DEFAULT (UINT)0
#define ILLUMINANT_A (UINT)1
#define ILLUMINANT_B (UINT)2
#define ILLUMINANT_C (UINT)3
#define ILLUMINANT_D50 (UINT)4
#define ILLUMINANT_D55 (UINT)5
#define ILLUMINANT_D65 (UINT)6
#define ILLUMINANT_D75 (UINT)7
#define ILLUMINANT_F2 (UINT)8
#define DI_APPBANDING (UINT)1
#define DI_ROPS_READ_DESTINATION (UINT)2
#define FONTMAPPER_MAX (UINT)10
#define ICM_OFF (UINT)1
#define ICM_ON (UINT)2
#define ICM_QUERY (UINT)3
#define ICM_DONE_OUTSIDEDC (UINT)4
#define ENHMETA_SIGNATURE (UINT)1179469088
#define ENHMETA_STOCK_OBJECT (UINT)2147483648
#define EMR_HEADER (UINT)1
#define EMR_POLYBEZIER (UINT)2
#define EMR_POLYGON (UINT)3
#define EMR_POLYLINE (UINT)4
#define EMR_POLYBEZIERTO (UINT)5
#define EMR_POLYLINETO (UINT)6
#define EMR_POLYPOLYLINE (UINT)7
#define EMR_POLYPOLYGON (UINT)8
#define EMR_SETWINDOWEXTEX (UINT)9
#define EMR_SETWINDOWORGEX (UINT)10
#define EMR_SETVIEWPORTEXTEX (UINT)11
#define EMR_SETVIEWPORTORGEX (UINT)12
#define EMR_SETBRUSHORGEX (UINT)13
#define EMR_EOF (UINT)14
#define EMR_SETPIXELV (UINT)15
#define EMR_SETMAPPERFLAGS (UINT)16
#define EMR_SETMAPMODE (UINT)17
#define EMR_SETBKMODE (UINT)18
#define EMR_SETPOLYFILLMODE (UINT)19
#define EMR_SETROP2 (UINT)20
#define EMR_SETSTRETCHBLTMODE (UINT)21
#define EMR_SETTEXTALIGN (UINT)22
#define EMR_SETCOLORADJUSTMENT (UINT)23
#define EMR_SETTEXTCOLOR (UINT)24
#define EMR_SETBKCOLOR (UINT)25
#define EMR_OFFSETCLIPRGN (UINT)26
#define EMR_MOVETOEX (UINT)27
#define EMR_SETMETARGN (UINT)28
#define EMR_EXCLUDECLIPRECT (UINT)29
#define EMR_INTERSECTCLIPRECT (UINT)30
#define EMR_SCALEVIEWPORTEXTEX (UINT)31
#define EMR_SCALEWINDOWEXTEX (UINT)32
#define EMR_SAVEDC (UINT)33
#define EMR_RESTOREDC (UINT)34
#define EMR_SETWORLDTRANSFORM (UINT)35
#define EMR_MODIFYWORLDTRANSFORM (UINT)36
#define EMR_SELECTOBJECT (UINT)37
#define EMR_CREATEPEN (UINT)38
#define EMR_CREATEBRUSHINDIRECT (UINT)39
#define EMR_DELETEOBJECT (UINT)40
#define EMR_ANGLEARC (UINT)41
#define EMR_ELLIPSE (UINT)42
#define EMR_RECTANGLE (UINT)43
#define EMR_ROUNDRECT (UINT)44
#define EMR_ARC (UINT)45
#define EMR_CHORD (UINT)46
#define EMR_PIE (UINT)47
#define EMR_SELECTPALETTE (UINT)48
#define EMR_CREATEPALETTE (UINT)49
#define EMR_SETPALETTEENTRIES (UINT)50
#define EMR_RESIZEPALETTE (UINT)51
#define EMR_REALIZEPALETTE (UINT)52
#define EMR_EXTFLOODFILL (UINT)53
#define EMR_LINETO (UINT)54
#define EMR_ARCTO (UINT)55
#define EMR_POLYDRAW (UINT)56
#define EMR_SETARCDIRECTION (UINT)57
#define EMR_SETMITERLIMIT (UINT)58
#define EMR_BEGINPATH (UINT)59
#define EMR_ENDPATH (UINT)60
#define EMR_CLOSEFIGURE (UINT)61
#define EMR_FILLPATH (UINT)62
#define EMR_STROKEANDFILLPATH (UINT)63
#define EMR_STROKEPATH (UINT)64
#define EMR_FLATTENPATH (UINT)65
#define EMR_WIDENPATH (UINT)66
#define EMR_SELECTCLIPPATH (UINT)67
#define EMR_ABORTPATH (UINT)68
#define EMR_GDICOMMENT (UINT)70
#define EMR_FILLRGN (UINT)71
#define EMR_FRAMERGN (UINT)72
#define EMR_INVERTRGN (UINT)73
#define EMR_PAINTRGN (UINT)74
#define EMR_EXTSELECTCLIPRGN (UINT)75
#define EMR_BITBLT (UINT)76
#define EMR_STRETCHBLT (UINT)77
#define EMR_MASKBLT (UINT)78
#define EMR_PLGBLT (UINT)79
#define EMR_SETDIBITSTODEVICE (UINT)80
#define EMR_STRETCHDIBITS (UINT)81
#define EMR_EXTCREATEFONTINDIRECTW (UINT)82
#define EMR_EXTTEXTOUTA (UINT)83
#define EMR_EXTTEXTOUTW (UINT)84
#define EMR_POLYBEZIER16 (UINT)85
#define EMR_POLYGON16 (UINT)86
#define EMR_POLYLINE16 (UINT)87
#define EMR_POLYBEZIERTO16 (UINT)88
#define EMR_POLYLINETO16 (UINT)89
#define EMR_POLYPOLYLINE16 (UINT)90
#define EMR_POLYPOLYGON16 (UINT)91
#define EMR_POLYDRAW16 (UINT)92
#define EMR_CREATEMONOBRUSH (UINT)93
#define EMR_CREATEDIBPATTERNBRUSHPT (UINT)94
#define EMR_EXTCREATEPEN (UINT)95
#define EMR_POLYTEXTOUTA (UINT)96
#define EMR_POLYTEXTOUTW (UINT)97
#define EMR_SETICMMODE (UINT)98
#define EMR_CREATECOLORSPACE (UINT)99
#define EMR_SETCOLORSPACE (UINT)100
#define EMR_DELETECOLORSPACE (UINT)101
#define EMR_GLSRECORD (UINT)102
#define EMR_GLSBOUNDEDRECORD (UINT)103
#define EMR_PIXELFORMAT (UINT)104
#define EMR_RESERVED_105 (UINT)105
#define EMR_RESERVED_106 (UINT)106
#define EMR_RESERVED_107 (UINT)107
#define EMR_RESERVED_108 (UINT)108
#define EMR_RESERVED_109 (UINT)109
#define EMR_RESERVED_110 (UINT)110
#define EMR_COLORCORRECTPALETTE (UINT)111
#define EMR_SETICMPROFILEA (UINT)112
#define EMR_SETICMPROFILEW (UINT)113
#define EMR_ALPHABLEND (UINT)114
#define EMR_SETLAYOUT (UINT)115
#define EMR_TRANSPARENTBLT (UINT)116
#define EMR_RESERVED_117 (UINT)117
#define EMR_GRADIENTFILL (UINT)118
#define EMR_RESERVED_119 (UINT)119
#define EMR_RESERVED_120 (UINT)120
#define EMR_COLORMATCHTOTARGETW (UINT)121
#define EMR_CREATECOLORSPACEW (UINT)122
#define EMR_MIN (UINT)1
#define EMR_MAX (UINT)122
#define SETICMPROFILE_EMBEDED (UINT)1
#define CREATECOLORSPACE_EMBEDED (UINT)1
#define COLORMATCHTOTARGET_EMBEDED (UINT)1
#define GDICOMMENT_IDENTIFIER (UINT)1128875079
#define GDICOMMENT_WINDOWS_METAFILE (UINT)2147483649
#define GDICOMMENT_BEGINGROUP (UINT)2
#define GDICOMMENT_ENDGROUP (UINT)3
#define GDICOMMENT_MULTIFORMATS (UINT)1073741828
#define EPS_SIGNATURE (UINT)1179865157
#define GDICOMMENT_UNICODE_STRING (UINT)64
#define GDICOMMENT_UNICODE_END (UINT)128
#define WGL_FONT_LINES (UINT)0
#define WGL_FONT_POLYGONS (UINT)1
#define LPD_DOUBLEBUFFER (UINT)1
#define LPD_STEREO (UINT)2
#define LPD_SUPPORT_GDI (UINT)16
#define LPD_SUPPORT_OPENGL (UINT)32
#define LPD_SHARE_DEPTH (UINT)64
#define LPD_SHARE_STENCIL (UINT)128
#define LPD_SHARE_ACCUM (UINT)256
#define LPD_SWAP_EXCHANGE (UINT)512
#define LPD_SWAP_COPY (UINT)1024
#define LPD_TRANSPARENT (UINT)4096
#define LPD_TYPE_RGBA (UINT)0
#define LPD_TYPE_COLORINDEX (UINT)1
#define WGL_SWAP_MAIN_PLANE (UINT)1
#define WGL_SWAP_OVERLAY1 (UINT)2
#define WGL_SWAP_OVERLAY2 (UINT)4
#define WGL_SWAP_OVERLAY3 (UINT)8
#define WGL_SWAP_OVERLAY4 (UINT)16
#define WGL_SWAP_OVERLAY5 (UINT)32
#define WGL_SWAP_OVERLAY6 (UINT)64
#define WGL_SWAP_OVERLAY7 (UINT)128
#define WGL_SWAP_OVERLAY8 (UINT)256
#define WGL_SWAP_OVERLAY9 (UINT)512
#define WGL_SWAP_OVERLAY10 (UINT)1024
#define WGL_SWAP_OVERLAY11 (UINT)2048
#define WGL_SWAP_OVERLAY12 (UINT)4096
#define WGL_SWAP_OVERLAY13 (UINT)8192
#define WGL_SWAP_OVERLAY14 (UINT)16384
#define WGL_SWAP_OVERLAY15 (UINT)32768
#define WGL_SWAP_UNDERLAY1 (UINT)65536
#define WGL_SWAP_UNDERLAY2 (UINT)131072
#define WGL_SWAP_UNDERLAY3 (UINT)262144
#define WGL_SWAP_UNDERLAY4 (UINT)524288
#define WGL_SWAP_UNDERLAY5 (UINT)1048576
#define WGL_SWAP_UNDERLAY6 (UINT)2097152
#define WGL_SWAP_UNDERLAY7 (UINT)4194304
#define WGL_SWAP_UNDERLAY8 (UINT)8388608
#define WGL_SWAP_UNDERLAY9 (UINT)16777216
#define WGL_SWAP_UNDERLAY10 (UINT)33554432
#define WGL_SWAP_UNDERLAY11 (UINT)67108864
#define WGL_SWAP_UNDERLAY12 (UINT)134217728
#define WGL_SWAP_UNDERLAY13 (UINT)268435456
#define WGL_SWAP_UNDERLAY14 (UINT)536870912
#define WGL_SWAP_UNDERLAY15 (UINT)1073741824
#define WGL_SWAPMULTIPLE_MAX (UINT)16
#define SELECTDIB (UINT)41
#define TTFCFP_SUBSET (UINT)0
#define TTFCFP_SUBSET1 (UINT)1
#define TTFCFP_DELTA (UINT)2
#define TTFCFP_APPLE_PLATFORMID (UINT)1
#define TTFCFP_MS_PLATFORMID (UINT)3
#define TTFCFP_DONT_CARE (UINT)65535
#define TTFCFP_LANG_KEEP_ALL (UINT)0
#define TTFCFP_FLAGS_SUBSET (UINT)1
#define TTFCFP_FLAGS_COMPRESS (UINT)2
#define TTFCFP_FLAGS_TTC (UINT)4
#define TTFCFP_FLAGS_GLYPHLIST (UINT)8
#define TTFMFP_SUBSET (UINT)0
#define TTFMFP_SUBSET1 (UINT)1
#define TTFMFP_DELTA (UINT)2
#define ERR_GENERIC (UINT)1000
#define ERR_READOUTOFBOUNDS (UINT)1001
#define ERR_WRITEOUTOFBOUNDS (UINT)1002
#define ERR_READCONTROL (UINT)1003
#define ERR_WRITECONTROL (UINT)1004
#define ERR_MEM (UINT)1005
#define ERR_FORMAT (UINT)1006
#define ERR_WOULD_GROW (UINT)1007
#define ERR_VERSION (UINT)1008
#define ERR_NO_GLYPHS (UINT)1009
#define ERR_INVALID_MERGE_FORMATS (UINT)1010
#define ERR_INVALID_MERGE_CHECKSUMS (UINT)1011
#define ERR_INVALID_MERGE_NUMGLYPHS (UINT)1012
#define ERR_INVALID_DELTA_FORMAT (UINT)1013
#define ERR_NOT_TTC (UINT)1014
#define ERR_INVALID_TTC_INDEX (UINT)1015
#define ERR_MISSING_CMAP (UINT)1030
#define ERR_MISSING_GLYF (UINT)1031
#define ERR_MISSING_HEAD (UINT)1032
#define ERR_MISSING_HHEA (UINT)1033
#define ERR_MISSING_HMTX (UINT)1034
#define ERR_MISSING_LOCA (UINT)1035
#define ERR_MISSING_MAXP (UINT)1036
#define ERR_MISSING_NAME (UINT)1037
#define ERR_MISSING_POST (UINT)1038
#define ERR_MISSING_OS2 (UINT)1039
#define ERR_MISSING_VHEA (UINT)1040
#define ERR_MISSING_VMTX (UINT)1041
#define ERR_MISSING_HHEA_OR_VHEA (UINT)1042
#define ERR_MISSING_HMTX_OR_VMTX (UINT)1043
#define ERR_MISSING_EBDT (UINT)1044
#define ERR_INVALID_CMAP (UINT)1060
#define ERR_INVALID_GLYF (UINT)1061
#define ERR_INVALID_HEAD (UINT)1062
#define ERR_INVALID_HHEA (UINT)1063
#define ERR_INVALID_HMTX (UINT)1064
#define ERR_INVALID_LOCA (UINT)1065
#define ERR_INVALID_MAXP (UINT)1066
#define ERR_INVALID_NAME (UINT)1067
#define ERR_INVALID_POST (UINT)1068
#define ERR_INVALID_OS2 (UINT)1069
#define ERR_INVALID_VHEA (UINT)1070
#define ERR_INVALID_VMTX (UINT)1071
#define ERR_INVALID_HHEA_OR_VHEA (UINT)1072
#define ERR_INVALID_HMTX_OR_VMTX (UINT)1073
#define ERR_INVALID_TTO (UINT)1080
#define ERR_INVALID_GSUB (UINT)1081
#define ERR_INVALID_GPOS (UINT)1082
#define ERR_INVALID_GDEF (UINT)1083
#define ERR_INVALID_JSTF (UINT)1084
#define ERR_INVALID_BASE (UINT)1085
#define ERR_INVALID_EBLC (UINT)1086
#define ERR_INVALID_LTSH (UINT)1087
#define ERR_INVALID_VDMX (UINT)1088
#define ERR_INVALID_HDMX (UINT)1089
#define ERR_PARAMETER0 (UINT)1100
#define ERR_PARAMETER1 (UINT)1101
#define ERR_PARAMETER2 (UINT)1102
#define ERR_PARAMETER3 (UINT)1103
#define ERR_PARAMETER4 (UINT)1104
#define ERR_PARAMETER5 (UINT)1105
#define ERR_PARAMETER6 (UINT)1106
#define ERR_PARAMETER7 (UINT)1107
#define ERR_PARAMETER8 (UINT)1108
#define ERR_PARAMETER9 (UINT)1109
#define ERR_PARAMETER10 (UINT)1110
#define ERR_PARAMETER11 (UINT)1111
#define ERR_PARAMETER12 (UINT)1112
#define ERR_PARAMETER13 (UINT)1113
#define ERR_PARAMETER14 (UINT)1114
#define ERR_PARAMETER15 (UINT)1115
#define ERR_PARAMETER16 (UINT)1116
#define CHARSET_DEFAULT (UINT)1
#define CHARSET_GLYPHIDX (UINT)3
#define TTEMBED_FAILIFVARIATIONSIMULATED (UINT)16
#define TTEMBED_WEBOBJECT (UINT)128
#define TTEMBED_XORENCRYPTDATA (UINT)268435456
#define TTEMBED_VARIATIONSIMULATED (UINT)1
#define TTEMBED_EUDCEMBEDDED (UINT)2
#define TTEMBED_SUBSETCANCEL (UINT)4
#define TTLOAD_PRIVATE (UINT)1
#define TTLOAD_EUDC_OVERWRITE (UINT)2
#define TTLOAD_EUDC_SET (UINT)4
#define TTDELETE_DONTREMOVEFONT (UINT)1
#define E_NONE (INT)0
#define E_API_NOTIMPL (INT)1
#define E_CHARCODECOUNTINVALID (INT)2
#define E_CHARCODESETINVALID (INT)3
#define E_DEVICETRUETYPEFONT (INT)4
#define E_HDCINVALID (INT)6
#define E_NOFREEMEMORY (INT)7
#define E_FONTREFERENCEINVALID (INT)8
#define E_NOTATRUETYPEFONT (INT)10
#define E_ERRORACCESSINGFONTDATA (INT)12
#define E_ERRORACCESSINGFACENAME (INT)13
#define E_ERRORUNICODECONVERSION (INT)17
#define E_ERRORCONVERTINGCHARS (INT)18
#define E_EXCEPTION (INT)19
#define E_RESERVEDPARAMNOTNULL (INT)20
#define E_CHARSETINVALID (INT)21
#define E_FILE_NOT_FOUND (INT)23
#define E_TTC_INDEX_OUT_OF_RANGE (INT)24
#define E_INPUTPARAMINVALID (INT)25
#define E_ERRORCOMPRESSINGFONTDATA (INT)256
#define E_FONTDATAINVALID (INT)258
#define E_NAMECHANGEFAILED (INT)259
#define E_FONTNOTEMBEDDABLE (INT)260
#define E_PRIVSINVALID (INT)261
#define E_SUBSETTINGFAILED (INT)262
#define E_READFROMSTREAMFAILED (INT)263
#define E_SAVETOSTREAMFAILED (INT)264
#define E_NOOS2 (INT)265
#define E_T2NOFREEMEMORY (INT)266
#define E_ERRORREADINGFONTDATA (INT)267
#define E_FLAGSINVALID (INT)268
#define E_ERRORCREATINGFONTFILE (INT)269
#define E_FONTALREADYEXISTS (INT)270
#define E_FONTNAMEALREADYEXISTS (INT)271
#define E_FONTINSTALLFAILED (INT)272
#define E_ERRORDECOMPRESSINGFONTDATA (INT)273
#define E_ERRORACCESSINGEXCLUDELIST (INT)274
#define E_FACENAMEINVALID (INT)275
#define E_STREAMINVALID (INT)276
#define E_STATUSINVALID (INT)277
#define E_PRIVSTATUSINVALID (INT)278
#define E_PERMISSIONSINVALID (INT)279
#define E_PBENABLEDINVALID (INT)280
#define E_SUBSETTINGEXCEPTION (INT)281
#define E_SUBSTRING_TEST_FAIL (INT)282
#define E_FONTVARIATIONSIMULATED (INT)283
#define E_FONTFAMILYNAMENOTINFULL (INT)285
#define E_ADDFONTFAILED (INT)512
#define E_COULDNTCREATETEMPFILE (INT)513
#define E_FONTFILECREATEFAILED (INT)515
#define E_WINDOWSAPI (INT)516
#define E_FONTFILENOTFOUND (INT)517
#define E_RESOURCEFILECREATEFAILED (INT)518
#define E_ERROREXPANDINGFONTDATA (INT)519
#define E_ERRORGETTINGDC (INT)520
#define E_EXCEPTIONINDECOMPRESSION (INT)521
#define E_EXCEPTIONINCOMPRESSION (INT)522

//--------------------------------------------------------------------------------
// Section: Types (240)
//--------------------------------------------------------------------------------
typedef enum {
    R2_BLACK = 1,
    R2_NOTMERGEPEN = 2,
    R2_MASKNOTPEN = 3,
    R2_NOTCOPYPEN = 4,
    R2_MASKPENNOT = 5,
    R2_NOT = 6,
    R2_XORPEN = 7,
    R2_NOTMASKPEN = 8,
    R2_MASKPEN = 9,
    R2_NOTXORPEN = 10,
    R2_NOP = 11,
    R2_MERGENOTPEN = 12,
    R2_COPYPEN = 13,
    R2_MERGEPENNOT = 14,
    R2_MERGEPEN = 15,
    R2_WHITE = 16,
    R2_LAST = 16,
} R2_MODE;

typedef enum {
    RGN_AND = 1,
    RGN_OR = 2,
    RGN_XOR = 3,
    RGN_DIFF = 4,
    RGN_COPY = 5,
    RGN_MIN = 1,
    RGN_MAX = 5,
} RGN_COMBINE_MODE;

typedef enum {
    ETO_OPAQUE = 2,
    ETO_CLIPPED = 4,
    ETO_GLYPH_INDEX = 16,
    ETO_RTLREADING = 128,
    ETO_NUMERICSLOCAL = 1024,
    ETO_NUMERICSLATIN = 2048,
    ETO_IGNORELANGUAGE = 4096,
    ETO_PDY = 8192,
    ETO_REVERSE_INDEX_MAP = 65536,
} ETO_OPTIONS;

typedef enum {
    OBJ_PEN = 1,
    OBJ_BRUSH = 2,
    OBJ_DC = 3,
    OBJ_METADC = 4,
    OBJ_PAL = 5,
    OBJ_FONT = 6,
    OBJ_BITMAP = 7,
    OBJ_REGION = 8,
    OBJ_METAFILE = 9,
    OBJ_MEMDC = 10,
    OBJ_EXTPEN = 11,
    OBJ_ENHMETADC = 12,
    OBJ_ENHMETAFILE = 13,
    OBJ_COLORSPACE = 14,
} OBJ_TYPE;

typedef enum {
    SRCCOPY = 13369376,
    SRCPAINT = 15597702,
    SRCAND = 8913094,
    SRCINVERT = 6684742,
    SRCERASE = 4457256,
    NOTSRCCOPY = 3342344,
    NOTSRCERASE = 1114278,
    MERGECOPY = 12583114,
    MERGEPAINT = 12255782,
    PATCOPY = 15728673,
    PATPAINT = 16452105,
    PATINVERT = 5898313,
    DSTINVERT = 5570569,
    BLACKNESS = 66,
    WHITENESS = 16711778,
    NOMIRRORBITMAP = 2147483648,
    CAPTUREBLT = 1073741824,
} ROP_CODE;

typedef enum {
    DIB_RGB_COLORS = 0,
    DIB_PAL_COLORS = 1,
} DIB_USAGE;

typedef enum {
    BDR_RAISEDOUTER = 1,
    BDR_SUNKENOUTER = 2,
    BDR_RAISEDINNER = 4,
    BDR_SUNKENINNER = 8,
    BDR_OUTER = 3,
    BDR_INNER = 12,
    BDR_RAISED = 5,
    BDR_SUNKEN = 10,
    EDGE_RAISED = 5,
    EDGE_SUNKEN = 10,
    EDGE_ETCHED = 6,
    EDGE_BUMP = 9,
} DRAWEDGE_FLAGS;

typedef enum {
    DFC_CAPTION = 1,
    DFC_MENU = 2,
    DFC_SCROLL = 3,
    DFC_BUTTON = 4,
    DFC_POPUPMENU = 5,
} DFC_TYPE;

typedef enum {
    DFCS_CAPTIONCLOSE = 0,
    DFCS_CAPTIONMIN = 1,
    DFCS_CAPTIONMAX = 2,
    DFCS_CAPTIONRESTORE = 3,
    DFCS_CAPTIONHELP = 4,
    DFCS_MENUARROW = 0,
    DFCS_MENUCHECK = 1,
    DFCS_MENUBULLET = 2,
    DFCS_MENUARROWRIGHT = 4,
    DFCS_SCROLLUP = 0,
    DFCS_SCROLLDOWN = 1,
    DFCS_SCROLLLEFT = 2,
    DFCS_SCROLLRIGHT = 3,
    DFCS_SCROLLCOMBOBOX = 5,
    DFCS_SCROLLSIZEGRIP = 8,
    DFCS_SCROLLSIZEGRIPRIGHT = 16,
    DFCS_BUTTONCHECK = 0,
    DFCS_BUTTONRADIOIMAGE = 1,
    DFCS_BUTTONRADIOMASK = 2,
    DFCS_BUTTONRADIO = 4,
    DFCS_BUTTON3STATE = 8,
    DFCS_BUTTONPUSH = 16,
    DFCS_INACTIVE = 256,
    DFCS_PUSHED = 512,
    DFCS_CHECKED = 1024,
    DFCS_TRANSPARENT = 2048,
    DFCS_HOT = 4096,
    DFCS_ADJUSTRECT = 8192,
    DFCS_FLAT = 16384,
    DFCS_MONO = 32768,
} DFCS_STATE;

typedef enum {
    CDS_FULLSCREEN = 4,
    CDS_GLOBAL = 8,
    CDS_NORESET = 268435456,
    CDS_RESET = 1073741824,
    CDS_SET_PRIMARY = 16,
    CDS_TEST = 2,
    CDS_UPDATEREGISTRY = 1,
    CDS_VIDEOPARAMETERS = 32,
    CDS_ENABLE_UNSAFE_MODES = 256,
    CDS_DISABLE_UNSAFE_MODES = 512,
    CDS_RESET_EX = 536870912,
} CDS_TYPE;

typedef enum {
    DISP_CHANGE_SUCCESSFUL = 0,
    DISP_CHANGE_RESTART = 1,
    DISP_CHANGE_FAILED = -1,
    DISP_CHANGE_BADMODE = -2,
    DISP_CHANGE_NOTUPDATED = -3,
    DISP_CHANGE_BADFLAGS = -4,
    DISP_CHANGE_BADPARAM = -5,
    DISP_CHANGE_BADDUALVIEW = -6,
} DISP_CHANGE;

typedef enum {
    DST_COMPLEX = 0,
    DST_TEXT = 1,
    DST_PREFIXTEXT = 2,
    DST_ICON = 3,
    DST_BITMAP = 4,
    DSS_NORMAL = 0,
    DSS_UNION = 16,
    DSS_DISABLED = 32,
    DSS_MONO = 128,
    DSS_HIDEPREFIX = 512,
    DSS_PREFIXONLY = 1024,
    DSS_RIGHT = 32768,
} DRAWSTATE_FLAGS;

typedef enum {
    RDW_INVALIDATE = 1,
    RDW_INTERNALPAINT = 2,
    RDW_ERASE = 4,
    RDW_VALIDATE = 8,
    RDW_NOINTERNALPAINT = 16,
    RDW_NOERASE = 32,
    RDW_NOCHILDREN = 64,
    RDW_ALLCHILDREN = 128,
    RDW_UPDATENOW = 256,
    RDW_ERASENOW = 512,
    RDW_FRAME = 1024,
    RDW_NOFRAME = 2048,
} REDRAW_WINDOW_FLAGS;

typedef enum {
    ENUM_CURRENT_SETTINGS = 4294967295,
    ENUM_REGISTRY_SETTINGS = 4294967294,
} ENUM_DISPLAY_SETTINGS_MODE;

typedef enum {
    PS_GEOMETRIC = 65536,
    PS_COSMETIC = 0,
    PS_SOLID = 0,
    PS_DASH = 1,
    PS_DOT = 2,
    PS_DASHDOT = 3,
    PS_DASHDOTDOT = 4,
    PS_NULL = 5,
    PS_INSIDEFRAME = 6,
    PS_USERSTYLE = 7,
    PS_ALTERNATE = 8,
    PS_STYLE_MASK = 15,
    PS_ENDCAP_ROUND = 0,
    PS_ENDCAP_SQUARE = 256,
    PS_ENDCAP_FLAT = 512,
    PS_ENDCAP_MASK = 3840,
    PS_JOIN_ROUND = 0,
    PS_JOIN_BEVEL = 4096,
    PS_JOIN_MITER = 8192,
    PS_JOIN_MASK = 61440,
    PS_TYPE_MASK = 983040,
} PEN_STYLE;

typedef enum {
    TTEMBED_EMBEDEUDC = 32,
    TTEMBED_RAW = 0,
    TTEMBED_SUBSET = 1,
    TTEMBED_TTCOMPRESSED = 4,
} TTEMBED_FLAGS;

typedef enum {
    DT_BOTTOM = 8,
    DT_CALCRECT = 1024,
    DT_CENTER = 1,
    DT_EDITCONTROL = 8192,
    DT_END_ELLIPSIS = 32768,
    DT_EXPANDTABS = 64,
    DT_EXTERNALLEADING = 512,
    DT_HIDEPREFIX = 1048576,
    DT_INTERNAL = 4096,
    DT_LEFT = 0,
    DT_MODIFYSTRING = 65536,
    DT_NOCLIP = 256,
    DT_NOFULLWIDTHCHARBREAK = 524288,
    DT_NOPREFIX = 2048,
    DT_PATH_ELLIPSIS = 16384,
    DT_PREFIXONLY = 2097152,
    DT_RIGHT = 2,
    DT_RTLREADING = 131072,
    DT_SINGLELINE = 32,
    DT_TABSTOP = 128,
    DT_TOP = 0,
    DT_VCENTER = 4,
    DT_WORDBREAK = 16,
    DT_WORD_ELLIPSIS = 262144,
} DRAW_TEXT_FORMAT;

typedef enum {
    CHARSET_UNICODE = 1,
    CHARSET_SYMBOL = 2,
} EMBED_FONT_CHARSET;

typedef enum {
    DCX_WINDOW = 1,
    DCX_CACHE = 2,
    DCX_PARENTCLIP = 32,
    DCX_CLIPSIBLINGS = 16,
    DCX_CLIPCHILDREN = 8,
    DCX_NORESETATTRS = 4,
    DCX_LOCKWINDOWUPDATE = 1024,
    DCX_EXCLUDERGN = 64,
    DCX_INTERSECTRGN = 128,
    DCX_INTERSECTUPDATE = 512,
    DCX_VALIDATE = 2097152,
} GET_DCX_FLAGS;

typedef enum {
    GGO_BEZIER = 3,
    GGO_BITMAP = 1,
    GGO_GLYPH_INDEX = 128,
    GGO_GRAY2_BITMAP = 4,
    GGO_GRAY4_BITMAP = 5,
    GGO_GRAY8_BITMAP = 6,
    GGO_METRICS = 0,
    GGO_NATIVE = 2,
    GGO_UNHINTED = 256,
} GET_GLYPH_OUTLINE_FORMAT;

typedef enum {
    DCB_ACCUMULATE = 2,
    DCB_DISABLE = 8,
    DCB_ENABLE = 4,
    DCB_RESET = 1,
} SET_BOUNDS_RECT_FLAGS;

typedef enum {
    BLACK_BRUSH = 4,
    DKGRAY_BRUSH = 3,
    DC_BRUSH = 18,
    GRAY_BRUSH = 2,
    HOLLOW_BRUSH = 5,
    LTGRAY_BRUSH = 1,
    NULL_BRUSH = 5,
    WHITE_BRUSH = 0,
    BLACK_PEN = 7,
    DC_PEN = 19,
    NULL_PEN = 8,
    WHITE_PEN = 6,
    ANSI_FIXED_FONT = 11,
    ANSI_VAR_FONT = 12,
    DEVICE_DEFAULT_FONT = 14,
    DEFAULT_GUI_FONT = 17,
    OEM_FIXED_FONT = 10,
    SYSTEM_FONT = 13,
    SYSTEM_FIXED_FONT = 16,
    DEFAULT_PALETTE = 15,
} GET_STOCK_OBJECT_FLAGS;

typedef enum {
    MWT_IDENTITY = 1,
    MWT_LEFTMULTIPLY = 2,
    MWT_RIGHTMULTIPLY = 3,
} MODIFY_WORLD_TRANSFORM_MODE;

typedef enum {
    CLIP_CHARACTER_PRECIS = 1,
    CLIP_DEFAULT_PRECIS = 0,
    CLIP_DFA_DISABLE = 64,
    CLIP_EMBEDDED = 128,
    CLIP_LH_ANGLES = 16,
    CLIP_MASK = 15,
    CLIP_STROKE_PRECIS = 2,
    CLIP_TT_ALWAYS = 32,
} FONT_CLIP_PRECISION;

typedef enum {
    ALTERNATE = 1,
    WINDING = 2,
} CREATE_POLYGON_RGN_MODE;

typedef enum {
    EMBED_PREVIEWPRINT = 1,
    EMBED_EDITABLE = 2,
    EMBED_INSTALLABLE = 3,
    EMBED_NOEMBEDDING = 4,
} EMBEDDED_FONT_PRIV_STATUS;

typedef enum {
    MONITOR_DEFAULTTONEAREST = 2,
    MONITOR_DEFAULTTONULL = 0,
    MONITOR_DEFAULTTOPRIMARY = 1,
} MONITOR_FROM_FLAGS;

typedef enum {
    FR_PRIVATE = 16,
    FR_NOT_ENUM = 32,
} FONT_RESOURCE_CHARACTERISTICS;

typedef enum {
    LAYOUT_BITMAPORIENTATIONPRESERVED = 8,
    LAYOUT_RTL = 1,
} DC_LAYOUT;

typedef enum {
    DRIVERVERSION = 0,
    TECHNOLOGY = 2,
    HORZSIZE = 4,
    VERTSIZE = 6,
    HORZRES = 8,
    VERTRES = 10,
    BITSPIXEL = 12,
    PLANES = 14,
    NUMBRUSHES = 16,
    NUMPENS = 18,
    NUMMARKERS = 20,
    NUMFONTS = 22,
    NUMCOLORS = 24,
    PDEVICESIZE = 26,
    CURVECAPS = 28,
    LINECAPS = 30,
    POLYGONALCAPS = 32,
    TEXTCAPS = 34,
    CLIPCAPS = 36,
    RASTERCAPS = 38,
    ASPECTX = 40,
    ASPECTY = 42,
    ASPECTXY = 44,
    LOGPIXELSX = 88,
    LOGPIXELSY = 90,
    SIZEPALETTE = 104,
    NUMRESERVED = 106,
    COLORRES = 108,
    PHYSICALWIDTH = 110,
    PHYSICALHEIGHT = 111,
    PHYSICALOFFSETX = 112,
    PHYSICALOFFSETY = 113,
    SCALINGFACTORX = 114,
    SCALINGFACTORY = 115,
    VREFRESH = 116,
    DESKTOPVERTRES = 117,
    DESKTOPHORZRES = 118,
    BLTALIGNMENT = 119,
    SHADEBLENDCAPS = 120,
    COLORMGMTCAPS = 121,
} GET_DEVICE_CAPS_INDEX;

typedef enum {
    OUT_CHARACTER_PRECIS = 2,
    OUT_DEFAULT_PRECIS = 0,
    OUT_DEVICE_PRECIS = 5,
    OUT_OUTLINE_PRECIS = 8,
    OUT_PS_ONLY_PRECIS = 10,
    OUT_RASTER_PRECIS = 6,
    OUT_STRING_PRECIS = 1,
    OUT_STROKE_PRECIS = 3,
    OUT_TT_ONLY_PRECIS = 7,
    OUT_TT_PRECIS = 4,
} FONT_OUTPUT_PRECISION;

typedef enum {
    AD_COUNTERCLOCKWISE = 1,
    AD_CLOCKWISE = 2,
} ARC_DIRECTION;

typedef enum {
    TTLOAD_FONT_SUBSETTED = 1,
    TTLOAD_FONT_IN_SYSSTARTUP = 2,
} TTLOAD_EMBEDDED_FONT_STATUS;

typedef enum {
    BLACKONWHITE = 1,
    COLORONCOLOR = 3,
    HALFTONE = 4,
    STRETCH_ANDSCANS = 1,
    STRETCH_DELETESCANS = 3,
    STRETCH_HALFTONE = 4,
    STRETCH_ORSCANS = 2,
    WHITEONBLACK = 2,
} STRETCH_BLT_MODE;

typedef enum {
    ANTIALIASED_QUALITY = 4,
    CLEARTYPE_QUALITY = 5,
    DEFAULT_QUALITY = 0,
    DRAFT_QUALITY = 1,
    NONANTIALIASED_QUALITY = 3,
    PROOF_QUALITY = 2,
} FONT_QUALITY;

typedef enum {
    OPAQUE = 2,
    TRANSPARENT = 1,
} BACKGROUND_MODE;

typedef enum {
    GCP_CLASSIN = 524288,
    GCP_DIACRITIC = 256,
    GCP_DISPLAYZWG = 4194304,
    GCP_GLYPHSHAPE = 16,
    GCP_JUSTIFY = 65536,
    GCP_KASHIDA = 1024,
    GCP_LIGATE = 32,
    GCP_MAXEXTENT = 1048576,
    GCP_NEUTRALOVERRIDE = 33554432,
    GCP_NUMERICOVERRIDE = 16777216,
    GCP_NUMERICSLATIN = 67108864,
    GCP_NUMERICSLOCAL = 134217728,
    GCP_REORDER = 2,
    GCP_SYMSWAPOFF = 8388608,
    GCP_USEKERNING = 8,
} GET_CHARACTER_PLACEMENT_FLAGS;

typedef enum {
    BF_ADJUST = 8192,
    BF_BOTTOM = 8,
    BF_BOTTOMLEFT = 9,
    BF_BOTTOMRIGHT = 12,
    BF_DIAGONAL = 16,
    BF_DIAGONAL_ENDBOTTOMLEFT = 25,
    BF_DIAGONAL_ENDBOTTOMRIGHT = 28,
    BF_DIAGONAL_ENDTOPLEFT = 19,
    BF_DIAGONAL_ENDTOPRIGHT = 22,
    BF_FLAT = 16384,
    BF_LEFT = 1,
    BF_MIDDLE = 2048,
    BF_MONO = 32768,
    BF_RECT = 15,
    BF_RIGHT = 4,
    BF_SOFT = 4096,
    BF_TOP = 2,
    BF_TOPLEFT = 3,
    BF_TOPRIGHT = 6,
} DRAW_EDGE_FLAGS;

typedef enum {
    LICENSE_PREVIEWPRINT = 4,
    LICENSE_EDITABLE = 8,
    LICENSE_INSTALLABLE = 0,
    LICENSE_NOEMBEDDING = 2,
    LICENSE_DEFAULT = 0,
} FONT_LICENSE_PRIVS;

typedef enum {
    GRADIENT_FILL_RECT_H = 0,
    GRADIENT_FILL_RECT_V = 1,
    GRADIENT_FILL_TRIANGLE = 2,
} GRADIENT_FILL;

typedef enum {
    TTFCFP_STD_MAC_CHAR_SET = 0,
    TTFCFP_SYMBOL_CHAR_SET = 0,
    TTFCFP_UNICODE_CHAR_SET = 1,
} CREATE_FONT_PACKAGE_SUBSET_ENCODING;

typedef enum {
    FLOODFILLBORDER = 0,
    FLOODFILLSURFACE = 1,
} EXT_FLOOD_FILL_TYPE;

typedef enum {
    HS_BDIAGONAL = 3,
    HS_CROSS = 4,
    HS_DIAGCROSS = 5,
    HS_FDIAGONAL = 2,
    HS_HORIZONTAL = 0,
    HS_VERTICAL = 1,
} HATCH_BRUSH_STYLE;

typedef enum {
    DC_ACTIVE = 1,
    DC_BUTTONS = 4096,
    DC_GRADIENT = 32,
    DC_ICON = 4,
    DC_INBUTTON = 16,
    DC_SMALLCAP = 2,
    DC_TEXT = 8,
} DRAW_CAPTION_FLAGS;

typedef enum {
    SYSPAL_NOSTATIC = 2,
    SYSPAL_NOSTATIC256 = 3,
    SYSPAL_STATIC = 1,
} SYSTEM_PALETTE_USE;

typedef enum {
    GM_COMPATIBLE = 1,
    GM_ADVANCED = 2,
} GRAPHICS_MODE;

typedef enum {
    FF_DECORATIVE = 80,
    FF_DONTCARE = 0,
    FF_MODERN = 48,
    FF_ROMAN = 16,
    FF_SCRIPT = 64,
    FF_SWISS = 32,
} FONT_PITCH_AND_FAMILY;

typedef enum {
    TTFCFP_UNICODE_PLATFORMID = 0,
    TTFCFP_ISO_PLATFORMID = 2,
} CREATE_FONT_PACKAGE_SUBSET_PLATFORM;

typedef enum {
    MM_ANISOTROPIC = 8,
    MM_HIENGLISH = 5,
    MM_HIMETRIC = 3,
    MM_ISOTROPIC = 7,
    MM_LOENGLISH = 4,
    MM_LOMETRIC = 2,
    MM_TEXT = 1,
    MM_TWIPS = 6,
} HDC_MAP_MODE;

typedef int HDC;

typedef int CreatedHDC;

typedef int HBITMAP;

typedef int HRGN;

typedef int HPEN;

typedef int HBRUSH;

typedef int HFONT;

typedef int HMETAFILE;

typedef int HENHMETAFILE;

typedef int HPALETTE;

typedef int HdcMetdataFileHandle;

typedef int HdcMetdataEnhFileHandle;

typedef int HGDIOBJ;

typedef int HMONITOR;

typedef int XFORM;

typedef int BITMAP;

typedef int RGBTRIPLE;

typedef int RGBQUAD;

typedef int BITMAPCOREHEADER;

typedef int BITMAPINFOHEADER;

typedef int BITMAPV4HEADER;

typedef int BITMAPV5HEADER;

typedef int BITMAPINFO;

typedef int BITMAPCOREINFO;

typedef int BITMAPFILEHEADER;

typedef int HANDLETABLE;

typedef int METARECORD;

typedef int METAHEADER;

typedef int ENHMETARECORD;

typedef int ENHMETAHEADER;

typedef int TEXTMETRICA;

typedef int TEXTMETRICW;

typedef int NEWTEXTMETRICA;

typedef int NEWTEXTMETRICW;

typedef int NEWTEXTMETRICEXA;

typedef int NEWTEXTMETRICEXW;

typedef int PELARRAY;

typedef int LOGBRUSH;

typedef int LOGBRUSH32;

typedef int LOGPEN;

typedef int EXTLOGPEN;

typedef int EXTLOGPEN32;

typedef int PALETTEENTRY;

typedef int LOGPALETTE;

typedef int LOGFONTA;

typedef int LOGFONTW;

typedef int ENUMLOGFONTA;

typedef int ENUMLOGFONTW;

typedef int ENUMLOGFONTEXA;

typedef int ENUMLOGFONTEXW;

typedef int PANOSE;

typedef int EXTLOGFONTA;

typedef int EXTLOGFONTW;

typedef int DISPLAY_DEVICEA;

typedef int DISPLAY_DEVICEW;

typedef enum {
    DISPLAYCONFIG_COLOR_ENCODING_RGB = 0,
    DISPLAYCONFIG_COLOR_ENCODING_YCBCR444 = 1,
    DISPLAYCONFIG_COLOR_ENCODING_YCBCR422 = 2,
    DISPLAYCONFIG_COLOR_ENCODING_YCBCR420 = 3,
    DISPLAYCONFIG_COLOR_ENCODING_INTENSITY = 4,
    DISPLAYCONFIG_COLOR_ENCODING_FORCE_UINT32 = -1,
} DISPLAYCONFIG_COLOR_ENCODING;

typedef int DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO;

typedef int DISPLAYCONFIG_SET_ADVANCED_COLOR_STATE;

typedef int DISPLAYCONFIG_SDR_WHITE_LEVEL;

typedef int RGNDATAHEADER;

typedef int RGNDATA;

typedef int ABC;

typedef int ABCFLOAT;

typedef int OUTLINETEXTMETRICA;

typedef int OUTLINETEXTMETRICW;

typedef int POLYTEXTA;

typedef int POLYTEXTW;

typedef int FIXED;

typedef int MAT2;

typedef int GLYPHMETRICS;

typedef int POINTFX;

typedef int TTPOLYCURVE;

typedef int TTPOLYGONHEADER;

typedef int GCP_RESULTSA;

typedef int GCP_RESULTSW;

typedef int RASTERIZER_STATUS;

typedef int FONTENUMPROCA;

typedef int FONTENUMPROCW;

typedef int GOBJENUMPROC;

typedef int LINEDDAPROC;

typedef int LPFNDEVMODE;

typedef int LPFNDEVCAPS;

typedef int WCRANGE;

typedef int GLYPHSET;

typedef int DESIGNVECTOR;

typedef int AXISINFOA;

typedef int AXISINFOW;

typedef int AXESLISTA;

typedef int AXESLISTW;

typedef int ENUMLOGFONTEXDVA;

typedef int ENUMLOGFONTEXDVW;

typedef int ENUMTEXTMETRICA;

typedef int ENUMTEXTMETRICW;

typedef int TRIVERTEX;

typedef int GRADIENT_TRIANGLE;

typedef int GRADIENT_RECT;

typedef int BLENDFUNCTION;

typedef int MFENUMPROC;

typedef int ENHMFENUMPROC;

typedef int DIBSECTION;

typedef int COLORADJUSTMENT;

typedef int KERNINGPAIR;

typedef int EMR;

typedef int EMRTEXT;

typedef int ABORTPATH;

typedef int EMRSELECTCLIPPATH;

typedef int EMRSETMITERLIMIT;

typedef int EMRRESTOREDC;

typedef int EMRSETARCDIRECTION;

typedef int EMRSETMAPPERFLAGS;

typedef int EMRSETTEXTCOLOR;

typedef int EMRSELECTOBJECT;

typedef int EMRSELECTPALETTE;

typedef int EMRRESIZEPALETTE;

typedef int EMRSETPALETTEENTRIES;

typedef int EMRSETCOLORADJUSTMENT;

typedef int EMRGDICOMMENT;

typedef int EMREOF;

typedef int EMRLINETO;

typedef int EMROFFSETCLIPRGN;

typedef int EMRFILLPATH;

typedef int EMREXCLUDECLIPRECT;

typedef int EMRSETVIEWPORTORGEX;

typedef int EMRSETVIEWPORTEXTEX;

typedef int EMRSCALEVIEWPORTEXTEX;

typedef int EMRSETWORLDTRANSFORM;

typedef int EMRMODIFYWORLDTRANSFORM;

typedef int EMRSETPIXELV;

typedef int EMREXTFLOODFILL;

typedef int EMRELLIPSE;

typedef int EMRROUNDRECT;

typedef int EMRARC;

typedef int EMRANGLEARC;

typedef int EMRPOLYLINE;

typedef int EMRPOLYLINE16;

typedef int EMRPOLYDRAW;

typedef int EMRPOLYDRAW16;

typedef int EMRPOLYPOLYLINE;

typedef int EMRPOLYPOLYLINE16;

typedef int EMRINVERTRGN;

typedef int EMRFILLRGN;

typedef int EMRFRAMERGN;

typedef int EMREXTSELECTCLIPRGN;

typedef int EMREXTTEXTOUTA;

typedef int EMRPOLYTEXTOUTA;

typedef int EMRBITBLT;

typedef int EMRSTRETCHBLT;

typedef int EMRMASKBLT;

typedef int EMRPLGBLT;

typedef int EMRSETDIBITSTODEVICE;

typedef int EMRSTRETCHDIBITS;

typedef int EMREXTCREATEFONTINDIRECTW;

typedef int EMRCREATEPALETTE;

typedef int EMRCREATEPEN;

typedef int EMREXTCREATEPEN;

typedef int EMRCREATEBRUSHINDIRECT;

typedef int EMRCREATEMONOBRUSH;

typedef int EMRCREATEDIBPATTERNBRUSHPT;

typedef int EMRFORMAT;

typedef int EMRGLSRECORD;

typedef int EMRGLSBOUNDEDRECORD;

typedef int EMRPIXELFORMAT;

typedef int EMRCREATECOLORSPACE;

typedef int EMRSETCOLORSPACE;

typedef int EMREXTESCAPE;

typedef int EMRNAMEDESCAPE;

typedef int EMRSETICMPROFILE;

typedef int EMRCREATECOLORSPACEW;

typedef int COLORMATCHTOTARGET;

typedef int COLORCORRECTPALETTE;

typedef int EMRALPHABLEND;

typedef int EMRGRADIENTFILL;

typedef int EMRTRANSPARENTBLT;

typedef int WGLSWAP;

typedef int CFP_ALLOCPROC;

typedef int CFP_REALLOCPROC;

typedef int CFP_FREEPROC;

typedef int READEMBEDPROC;

typedef int WRITEEMBEDPROC;

typedef int TTLOADINFO;

typedef int TTEMBEDINFO;

typedef int TTVALIDATIONTESTSPARAMS;

typedef int TTVALIDATIONTESTSPARAMSEX;

typedef int GRAYSTRINGPROC;

typedef int DRAWSTATEPROC;

typedef int PAINTSTRUCT;

typedef int DRAWTEXTPARAMS;

typedef int MONITORINFO;

typedef int MONITORINFOEXA;

typedef int MONITORINFOEXW;

typedef int MONITORENUMPROC;


//--------------------------------------------------------------------------------
// Section: Functions (395)
//--------------------------------------------------------------------------------
/*i32*/void GetObjectA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void AddFontResourceA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void AddFontResourceW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void AnimatePalette();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void Arc();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void BitBlt();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void CancelDC();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void Chord();

// TODO: this type is limited to platform 'windows5.0'
/*HMETAFILE*/void CloseMetaFile();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void CombineRgn();

// TODO: this type is limited to platform 'windows5.0'
/*HMETAFILE*/void CopyMetaFileA();

// TODO: this type is limited to platform 'windows5.0'
/*HMETAFILE*/void CopyMetaFileW();

// TODO: this type is limited to platform 'windows5.0'
/*HBITMAP*/void CreateBitmap();

// TODO: this type is limited to platform 'windows5.0'
/*HBITMAP*/void CreateBitmapIndirect();

// TODO: this type is limited to platform 'windows5.0'
/*HBRUSH*/void CreateBrushIndirect();

// TODO: this type is limited to platform 'windows5.0'
/*HBITMAP*/void CreateCompatibleBitmap();

// TODO: this type is limited to platform 'windows5.0'
/*HBITMAP*/void CreateDiscardableBitmap();

// TODO: this type is limited to platform 'windows5.0'
/*CreatedHDC*/void CreateCompatibleDC();

// TODO: this type is limited to platform 'windows5.0'
/*CreatedHDC*/void CreateDCA();

// TODO: this type is limited to platform 'windows5.0'
/*CreatedHDC*/void CreateDCW();

// TODO: this type is limited to platform 'windows5.0'
/*HBITMAP*/void CreateDIBitmap();

// TODO: this type is limited to platform 'windows5.0'
/*HBRUSH*/void CreateDIBPatternBrush();

// TODO: this type is limited to platform 'windows5.0'
/*HBRUSH*/void CreateDIBPatternBrushPt();

// TODO: this type is limited to platform 'windows5.0'
/*HRGN*/void CreateEllipticRgn();

// TODO: this type is limited to platform 'windows5.0'
/*HRGN*/void CreateEllipticRgnIndirect();

// TODO: this type is limited to platform 'windows5.0'
/*HFONT*/void CreateFontIndirectA();

// TODO: this type is limited to platform 'windows5.0'
/*HFONT*/void CreateFontIndirectW();

// TODO: this type is limited to platform 'windows5.0'
/*HFONT*/void CreateFontA();

// TODO: this type is limited to platform 'windows5.0'
/*HFONT*/void CreateFontW();

// TODO: this type is limited to platform 'windows5.0'
/*HBRUSH*/void CreateHatchBrush();

// TODO: this type is limited to platform 'windows5.0'
/*CreatedHDC*/void CreateICA();

// TODO: this type is limited to platform 'windows5.0'
/*CreatedHDC*/void CreateICW();

// TODO: this type is limited to platform 'windows5.0'
/*HdcMetdataFileHandle*/void CreateMetaFileA();

// TODO: this type is limited to platform 'windows5.0'
/*HdcMetdataFileHandle*/void CreateMetaFileW();

// TODO: this type is limited to platform 'windows5.0'
/*HPALETTE*/void CreatePalette();

// TODO: this type is limited to platform 'windows5.0'
/*HPEN*/void CreatePen();

// TODO: this type is limited to platform 'windows5.0'
/*HPEN*/void CreatePenIndirect();

// TODO: this type is limited to platform 'windows5.0'
/*HRGN*/void CreatePolyPolygonRgn();

// TODO: this type is limited to platform 'windows5.0'
/*HBRUSH*/void CreatePatternBrush();

// TODO: this type is limited to platform 'windows5.0'
/*HRGN*/void CreateRectRgn();

// TODO: this type is limited to platform 'windows5.0'
/*HRGN*/void CreateRectRgnIndirect();

// TODO: this type is limited to platform 'windows5.0'
/*HRGN*/void CreateRoundRectRgn();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void CreateScalableFontResourceA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void CreateScalableFontResourceW();

// TODO: this type is limited to platform 'windows5.0'
/*HBRUSH*/void CreateSolidBrush();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DeleteDC();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DeleteMetaFile();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DeleteObject();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void DrawEscape();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void Ellipse();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void EnumFontFamiliesExA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void EnumFontFamiliesExW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void EnumFontFamiliesA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void EnumFontFamiliesW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void EnumFontsA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void EnumFontsW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void EnumObjects();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EqualRgn();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void ExcludeClipRect();

// TODO: this type is limited to platform 'windows5.0'
/*HRGN*/void ExtCreateRegion();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ExtFloodFill();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void FillRgn();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void FloodFill();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void FrameRgn();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetROP2();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetAspectRatioFilterEx();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetBkColor();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetDCBrushColor();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetDCPenColor();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetBkMode();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetBitmapBits();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetBitmapDimensionEx();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetBoundsRect();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetBrushOrgEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCharWidthA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCharWidthW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCharWidth32A();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCharWidth32W();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCharWidthFloatA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCharWidthFloatW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCharABCWidthsA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCharABCWidthsW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCharABCWidthsFloatA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCharABCWidthsFloatW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetClipBox();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetClipRgn();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetMetaRgn();

// TODO: this type is limited to platform 'windows5.0'
/*HGDIOBJ*/void GetCurrentObject();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCurrentPositionEx();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetDeviceCaps();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetDIBits();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetFontData();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetGlyphOutlineA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetGlyphOutlineW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetGraphicsMode();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetMapMode();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetMetaFileBitsEx();

/*HMETAFILE*/void GetMetaFileA();

/*HMETAFILE*/void GetMetaFileW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetNearestColor();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetNearestPaletteIndex();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetObjectType();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetOutlineTextMetricsA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetOutlineTextMetricsW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetPaletteEntries();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetPixel();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetPolyFillMode();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetRasterizerCaps();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetRandomRgn();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetRegionData();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetRgnBox();

// TODO: this type is limited to platform 'windows5.0'
/*HGDIOBJ*/void GetStockObject();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetStretchBltMode();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetSystemPaletteEntries();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetSystemPaletteUse();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetTextCharacterExtra();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetTextAlign();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetTextColor();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetTextExtentPointA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetTextExtentPointW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetTextExtentPoint32A();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetTextExtentPoint32W();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetTextExtentExPointA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetTextExtentExPointW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetFontLanguageInfo();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetCharacterPlacementA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetCharacterPlacementW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetFontUnicodeRanges();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetGlyphIndicesA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetGlyphIndicesW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetTextExtentPointI();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetTextExtentExPointI();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCharWidthI();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCharABCWidthsI();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void AddFontResourceExA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void AddFontResourceExW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void RemoveFontResourceExA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void RemoveFontResourceExW();

// TODO: this type is limited to platform 'windows5.0'
/*HANDLE*/void AddFontMemResourceEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void RemoveFontMemResourceEx();

// TODO: this type is limited to platform 'windows5.0'
/*HFONT*/void CreateFontIndirectExA();

// TODO: this type is limited to platform 'windows5.0'
/*HFONT*/void CreateFontIndirectExW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetViewportExtEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetViewportOrgEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetWindowExtEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetWindowOrgEx();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void IntersectClipRect();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void InvertRgn();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void LineDDA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void LineTo();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void MaskBlt();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PlgBlt();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void OffsetClipRgn();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void OffsetRgn();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PatBlt();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void Pie();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PlayMetaFile();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PaintRgn();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PolyPolygon();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PtInRegion();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PtVisible();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void RectInRegion();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void RectVisible();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void Rectangle();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void RestoreDC();

// TODO: this type is limited to platform 'windows5.0'
/*HDC*/void ResetDCA();

// TODO: this type is limited to platform 'windows5.0'
/*HDC*/void ResetDCW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RealizePalette();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void RemoveFontResourceA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void RemoveFontResourceW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void RoundRect();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ResizePalette();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SaveDC();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SelectClipRgn();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void ExtSelectClipRgn();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SetMetaRgn();

// TODO: this type is limited to platform 'windows5.0'
/*HGDIOBJ*/void SelectObject();

// TODO: this type is limited to platform 'windows5.0'
/*HPALETTE*/void SelectPalette();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SetBkColor();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SetDCBrushColor();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SetDCPenColor();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SetBkMode();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SetBitmapBits();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SetBoundsRect();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SetDIBits();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SetDIBitsToDevice();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SetMapperFlags();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SetGraphicsMode();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SetMapMode();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SetLayout();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetLayout();

// TODO: this type is limited to platform 'windows5.0'
/*HMETAFILE*/void SetMetaFileBitsEx();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SetPaletteEntries();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SetPixel();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetPixelV();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SetPolyFillMode();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void StretchBlt();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetRectRgn();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void StretchDIBits();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SetROP2();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SetStretchBltMode();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SetSystemPaletteUse();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SetTextCharacterExtra();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SetTextColor();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SetTextAlign();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetTextJustification();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void UpdateColors();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void AlphaBlend();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void TransparentBlt();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GradientFill();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GdiAlphaBlend();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GdiTransparentBlt();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GdiGradientFill();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PlayMetaFileRecord();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumMetaFile();

// TODO: this type is limited to platform 'windows5.0'
/*HENHMETAFILE*/void CloseEnhMetaFile();

// TODO: this type is limited to platform 'windows5.0'
/*HENHMETAFILE*/void CopyEnhMetaFileA();

// TODO: this type is limited to platform 'windows5.0'
/*HENHMETAFILE*/void CopyEnhMetaFileW();

// TODO: this type is limited to platform 'windows5.0'
/*HdcMetdataEnhFileHandle*/void CreateEnhMetaFileA();

// TODO: this type is limited to platform 'windows5.0'
/*HdcMetdataEnhFileHandle*/void CreateEnhMetaFileW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DeleteEnhMetaFile();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumEnhMetaFile();

// TODO: this type is limited to platform 'windows5.0'
/*HENHMETAFILE*/void GetEnhMetaFileA();

// TODO: this type is limited to platform 'windows5.0'
/*HENHMETAFILE*/void GetEnhMetaFileW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetEnhMetaFileBits();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetEnhMetaFileDescriptionA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetEnhMetaFileDescriptionW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetEnhMetaFileHeader();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetEnhMetaFilePaletteEntries();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetWinMetaFileBits();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PlayEnhMetaFile();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PlayEnhMetaFileRecord();

// TODO: this type is limited to platform 'windows5.0'
/*HENHMETAFILE*/void SetEnhMetaFileBits();

// TODO: this type is limited to platform 'windows5.0'
/*HENHMETAFILE*/void SetWinMetaFileBits();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GdiComment();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetTextMetricsA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetTextMetricsW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void AngleArc();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PolyPolyline();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetWorldTransform();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetWorldTransform();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ModifyWorldTransform();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void CombineTransform();

// TODO: this type is limited to platform 'windows5.0'
/*HBITMAP*/void CreateDIBSection();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetDIBColorTable();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SetDIBColorTable();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetColorAdjustment();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetColorAdjustment();

// TODO: this type is limited to platform 'windows5.0'
/*HPALETTE*/void CreateHalftonePalette();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void AbortPath();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ArcTo();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void BeginPath();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void CloseFigure();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EndPath();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void FillPath();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void FlattenPath();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetPath();

// TODO: this type is limited to platform 'windows5.0'
/*HRGN*/void PathToRegion();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PolyDraw();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SelectClipPath();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SetArcDirection();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetMiterLimit();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void StrokeAndFillPath();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void StrokePath();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void WidenPath();

// TODO: this type is limited to platform 'windows5.0'
/*HPEN*/void ExtCreatePen();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetMiterLimit();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetArcDirection();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetObjectW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void MoveToEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void TextOutA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void TextOutW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ExtTextOutA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ExtTextOutW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PolyTextOutA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PolyTextOutW();

// TODO: this type is limited to platform 'windows5.0'
/*HRGN*/void CreatePolygonRgn();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DPtoLP();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void LPtoDP();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void Polygon();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void Polyline();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PolyBezier();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PolyBezierTo();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PolylineTo();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetViewportExtEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetViewportOrgEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetWindowExtEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetWindowOrgEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void OffsetViewportOrgEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void OffsetWindowOrgEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ScaleViewportExtEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ScaleWindowExtEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetBitmapDimensionEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetBrushOrgEx();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetTextFaceA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetTextFaceW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetKerningPairsA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetKerningPairsW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetDCOrgEx();

/*BOOL*/void FixBrushOrgEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void UnrealizeObject();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GdiFlush();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GdiSetBatchLimit();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GdiGetBatchLimit();

/*u32*/void wglSwapMultipleBuffers();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void CreateFontPackage();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void MergeFontPackage();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void TTEmbedFont();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void TTEmbedFontFromFileA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void TTLoadEmbeddedFont();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void TTGetEmbeddedFontInfo();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void TTDeleteEmbeddedFont();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void TTGetEmbeddingType();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void TTCharToUnicode();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void TTRunValidationTests();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void TTIsEmbeddingEnabled();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void TTIsEmbeddingEnabledForFacename();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void TTEnableEmbeddingForFacename();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void TTEmbedFontEx();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void TTRunValidationTestsEx();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void TTGetNewFontName();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DrawEdge();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DrawFrameControl();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DrawCaption();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DrawAnimatedRects();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void DrawTextA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void DrawTextW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void DrawTextExA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void DrawTextExW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GrayStringA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GrayStringW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DrawStateA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DrawStateW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void TabbedTextOutA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void TabbedTextOutW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetTabbedTextExtentA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetTabbedTextExtentW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void UpdateWindow();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PaintDesktop();

// TODO: this type is limited to platform 'windows5.0'
/*HWND*/void WindowFromDC();

// TODO: this type is limited to platform 'windows5.0'
/*HDC*/void GetDC();

// TODO: this type is limited to platform 'windows5.0'
/*HDC*/void GetDCEx();

// TODO: this type is limited to platform 'windows5.0'
/*HDC*/void GetWindowDC();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void ReleaseDC();

// TODO: this type is limited to platform 'windows5.0'
/*HDC*/void BeginPaint();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EndPaint();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetUpdateRect();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetUpdateRgn();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SetWindowRgn();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetWindowRgn();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetWindowRgnBox();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void ExcludeUpdateRgn();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void InvalidateRect();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ValidateRect();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void InvalidateRgn();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ValidateRgn();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void RedrawWindow();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void LockWindowUpdate();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ClientToScreen();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void ScreenToClient();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void MapWindowPoints();

// TODO: this type is limited to platform 'windows5.0'
/*HBRUSH*/void GetSysColorBrush();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void DrawFocusRect();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void FillRect();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void FrameRect();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void InvertRect();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetRect();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetRectEmpty();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void CopyRect();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void InflateRect();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IntersectRect();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void UnionRect();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SubtractRect();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void OffsetRect();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsRectEmpty();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EqualRect();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void PtInRect();

// TODO: this type is limited to platform 'windows5.0'
/*HBITMAP*/void LoadBitmapA();

// TODO: this type is limited to platform 'windows5.0'
/*HBITMAP*/void LoadBitmapW();

// TODO: this type is limited to platform 'windows5.0'
/*DISP_CHANGE*/void ChangeDisplaySettingsA();

// TODO: this type is limited to platform 'windows5.0'
/*DISP_CHANGE*/void ChangeDisplaySettingsW();

// TODO: this type is limited to platform 'windows5.0'
/*DISP_CHANGE*/void ChangeDisplaySettingsExA();

// TODO: this type is limited to platform 'windows5.0'
/*DISP_CHANGE*/void ChangeDisplaySettingsExW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumDisplaySettingsA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumDisplaySettingsW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumDisplaySettingsExA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumDisplaySettingsExW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumDisplayDevicesA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumDisplayDevicesW();

// TODO: this type is limited to platform 'windows5.0'
/*HMONITOR*/void MonitorFromPoint();

// TODO: this type is limited to platform 'windows5.0'
/*HMONITOR*/void MonitorFromRect();

// TODO: this type is limited to platform 'windows5.0'
/*HMONITOR*/void MonitorFromWindow();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetMonitorInfoA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetMonitorInfoW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumDisplayMonitors();

