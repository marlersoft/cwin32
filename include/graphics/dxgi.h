// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (79)
//--------------------------------------------------------------------------------
#define _FACDXGI (UINT)2170
#define DXGI_CPU_ACCESS_NONE (UINT)0
#define DXGI_CPU_ACCESS_DYNAMIC (UINT)1
#define DXGI_CPU_ACCESS_READ_WRITE (UINT)2
#define DXGI_CPU_ACCESS_SCRATCH (UINT)3
#define DXGI_CPU_ACCESS_FIELD (UINT)15
#define DXGI_FORMAT_DEFINED (UINT)1
#define DXGI_STANDARD_MULTISAMPLE_QUALITY_PATTERN (UINT)4294967295
#define DXGI_CENTER_MULTISAMPLE_QUALITY_PATTERN (UINT)4294967294
#define DXGI_USAGE_SHADER_INPUT (UINT)16
#define DXGI_USAGE_RENDER_TARGET_OUTPUT (UINT)32
#define DXGI_USAGE_BACK_BUFFER (UINT)64
#define DXGI_USAGE_SHARED (UINT)128
#define DXGI_USAGE_READ_ONLY (UINT)256
#define DXGI_USAGE_DISCARD_ON_PRESENT (UINT)512
#define DXGI_USAGE_UNORDERED_ACCESS (UINT)1024
#define DXGI_MAP_READ (UINT)1
#define DXGI_MAP_WRITE (UINT)2
#define DXGI_MAP_DISCARD (UINT)4
#define DXGI_ENUM_MODES_INTERLACED (UINT)1
#define DXGI_ENUM_MODES_SCALING (UINT)2
#define DXGI_MAX_SWAP_CHAIN_BUFFERS (UINT)16
#define DXGI_PRESENT_TEST (UINT)1
#define DXGI_PRESENT_DO_NOT_SEQUENCE (UINT)2
#define DXGI_PRESENT_RESTART (UINT)4
#define DXGI_PRESENT_DO_NOT_WAIT (UINT)8
#define DXGI_PRESENT_STEREO_PREFER_RIGHT (UINT)16
#define DXGI_PRESENT_STEREO_TEMPORARY_MONO (UINT)32
#define DXGI_PRESENT_RESTRICT_TO_OUTPUT (UINT)64
#define DXGI_PRESENT_USE_DURATION (UINT)256
#define DXGI_PRESENT_ALLOW_TEARING (UINT)512
#define DXGI_MWA_NO_WINDOW_CHANGES (UINT)1
#define DXGI_MWA_NO_ALT_ENTER (UINT)2
#define DXGI_MWA_NO_PRINT_SCREEN (UINT)4
#define DXGI_MWA_VALID (UINT)7
#define DXGI_ENUM_MODES_STEREO (UINT)4
#define DXGI_ENUM_MODES_DISABLED_STEREO (UINT)8
#define DXGI_SHARED_RESOURCE_READ (UINT)2147483648
#define DXGI_SHARED_RESOURCE_WRITE (UINT)1
#define DXGI_DEBUG_BINARY_VERSION (UINT)1
#define DXGI_DEBUG_ALL GUID { "e48ae283-da80-490b-87e6-43e9a9cfda08" }
#define DXGI_DEBUG_DX GUID { "35cdd7fc-13b2-421d-a5d7-7e4451287d64" }
#define DXGI_DEBUG_DXGI GUID { "25cddaa4-b1c6-47e1-ac3e-98875b5a2e2a" }
#define DXGI_DEBUG_APP GUID { "06cd6e01-4219-4ebd-8709-27ed23360c62" }
#define DXGI_INFO_QUEUE_MESSAGE_ID_STRING_FROM_APPLICATION (UINT)0
#define DXGI_INFO_QUEUE_DEFAULT_MESSAGE_COUNT_LIMIT (UINT)1024
#define DXGI_CREATE_FACTORY_DEBUG (UINT)1
#define DXGI_ERROR_INVALID_CALL (HRESULT)(INT)-2005270527
#define DXGI_ERROR_NOT_FOUND (HRESULT)(INT)-2005270526
#define DXGI_ERROR_MORE_DATA (HRESULT)(INT)-2005270525
#define DXGI_ERROR_UNSUPPORTED (HRESULT)(INT)-2005270524
#define DXGI_ERROR_DEVICE_REMOVED (HRESULT)(INT)-2005270523
#define DXGI_ERROR_DEVICE_HUNG (HRESULT)(INT)-2005270522
#define DXGI_ERROR_DEVICE_RESET (HRESULT)(INT)-2005270521
#define DXGI_ERROR_WAS_STILL_DRAWING (HRESULT)(INT)-2005270518
#define DXGI_ERROR_FRAME_STATISTICS_DISJOINT (HRESULT)(INT)-2005270517
#define DXGI_ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE (HRESULT)(INT)-2005270516
#define DXGI_ERROR_DRIVER_INTERNAL_ERROR (HRESULT)(INT)-2005270496
#define DXGI_ERROR_NONEXCLUSIVE (HRESULT)(INT)-2005270495
#define DXGI_ERROR_NOT_CURRENTLY_AVAILABLE (HRESULT)(INT)-2005270494
#define DXGI_ERROR_REMOTE_CLIENT_DISCONNECTED (HRESULT)(INT)-2005270493
#define DXGI_ERROR_REMOTE_OUTOFMEMORY (HRESULT)(INT)-2005270492
#define DXGI_ERROR_ACCESS_LOST (HRESULT)(INT)-2005270490
#define DXGI_ERROR_WAIT_TIMEOUT (HRESULT)(INT)-2005270489
#define DXGI_ERROR_SESSION_DISCONNECTED (HRESULT)(INT)-2005270488
#define DXGI_ERROR_RESTRICT_TO_OUTPUT_STALE (HRESULT)(INT)-2005270487
#define DXGI_ERROR_CANNOT_PROTECT_CONTENT (HRESULT)(INT)-2005270486
#define DXGI_ERROR_ACCESS_DENIED (HRESULT)(INT)-2005270485
#define DXGI_ERROR_NAME_ALREADY_EXISTS (HRESULT)(INT)-2005270484
#define DXGI_ERROR_SDK_COMPONENT_MISSING (HRESULT)(INT)-2005270483
#define DXGI_ERROR_NOT_CURRENT (HRESULT)(INT)-2005270482
#define DXGI_ERROR_HW_PROTECTION_OUTOFMEMORY (HRESULT)(INT)-2005270480
#define DXGI_ERROR_DYNAMIC_CODE_POLICY_VIOLATION (HRESULT)(INT)-2005270479
#define DXGI_ERROR_NON_COMPOSITED_UI (HRESULT)(INT)-2005270478
#define DXGI_ERROR_MODE_CHANGE_IN_PROGRESS (HRESULT)(INT)-2005270491
#define DXGI_ERROR_CACHE_CORRUPT (HRESULT)(INT)-2005270477
#define DXGI_ERROR_CACHE_FULL (HRESULT)(INT)-2005270476
#define DXGI_ERROR_CACHE_HASH_COLLISION (HRESULT)(INT)-2005270475
#define DXGI_ERROR_ALREADY_EXISTS (HRESULT)(INT)-2005270474

//--------------------------------------------------------------------------------
// Section: Types (119)
//--------------------------------------------------------------------------------
typedef int DXGI_RGBA;

typedef enum {
    DXGI_RESOURCE_PRIORITY_MINIMUM = 671088640,
    DXGI_RESOURCE_PRIORITY_LOW = 1342177280,
    DXGI_RESOURCE_PRIORITY_NORMAL = 2013265920,
    DXGI_RESOURCE_PRIORITY_HIGH = 2684354560,
    DXGI_RESOURCE_PRIORITY_MAXIMUM = 3355443200,
} DXGI_RESOURCE_PRIORITY;

typedef int DXGI_RATIONAL;

typedef int DXGI_SAMPLE_DESC;

typedef enum {
    DXGI_COLOR_SPACE_RGB_FULL_G22_NONE_P709 = 0,
    DXGI_COLOR_SPACE_RGB_FULL_G10_NONE_P709 = 1,
    DXGI_COLOR_SPACE_RGB_STUDIO_G22_NONE_P709 = 2,
    DXGI_COLOR_SPACE_RGB_STUDIO_G22_NONE_P2020 = 3,
    DXGI_COLOR_SPACE_RESERVED = 4,
    DXGI_COLOR_SPACE_YCBCR_FULL_G22_NONE_P709_X601 = 5,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_LEFT_P601 = 6,
    DXGI_COLOR_SPACE_YCBCR_FULL_G22_LEFT_P601 = 7,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_LEFT_P709 = 8,
    DXGI_COLOR_SPACE_YCBCR_FULL_G22_LEFT_P709 = 9,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_LEFT_P2020 = 10,
    DXGI_COLOR_SPACE_YCBCR_FULL_G22_LEFT_P2020 = 11,
    DXGI_COLOR_SPACE_RGB_FULL_G2084_NONE_P2020 = 12,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_G2084_LEFT_P2020 = 13,
    DXGI_COLOR_SPACE_RGB_STUDIO_G2084_NONE_P2020 = 14,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_TOPLEFT_P2020 = 15,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_G2084_TOPLEFT_P2020 = 16,
    DXGI_COLOR_SPACE_RGB_FULL_G22_NONE_P2020 = 17,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_GHLG_TOPLEFT_P2020 = 18,
    DXGI_COLOR_SPACE_YCBCR_FULL_GHLG_TOPLEFT_P2020 = 19,
    DXGI_COLOR_SPACE_RGB_STUDIO_G24_NONE_P709 = 20,
    DXGI_COLOR_SPACE_RGB_STUDIO_G24_NONE_P2020 = 21,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_G24_LEFT_P709 = 22,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_G24_LEFT_P2020 = 23,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_G24_TOPLEFT_P2020 = 24,
    DXGI_COLOR_SPACE_CUSTOM = -1,
} DXGI_COLOR_SPACE_TYPE;

typedef enum {
    DXGI_FORMAT_UNKNOWN = 0,
    DXGI_FORMAT_R32G32B32A32_TYPELESS = 1,
    DXGI_FORMAT_R32G32B32A32_FLOAT = 2,
    DXGI_FORMAT_R32G32B32A32_UINT = 3,
    DXGI_FORMAT_R32G32B32A32_SINT = 4,
    DXGI_FORMAT_R32G32B32_TYPELESS = 5,
    DXGI_FORMAT_R32G32B32_FLOAT = 6,
    DXGI_FORMAT_R32G32B32_UINT = 7,
    DXGI_FORMAT_R32G32B32_SINT = 8,
    DXGI_FORMAT_R16G16B16A16_TYPELESS = 9,
    DXGI_FORMAT_R16G16B16A16_FLOAT = 10,
    DXGI_FORMAT_R16G16B16A16_UNORM = 11,
    DXGI_FORMAT_R16G16B16A16_UINT = 12,
    DXGI_FORMAT_R16G16B16A16_SNORM = 13,
    DXGI_FORMAT_R16G16B16A16_SINT = 14,
    DXGI_FORMAT_R32G32_TYPELESS = 15,
    DXGI_FORMAT_R32G32_FLOAT = 16,
    DXGI_FORMAT_R32G32_UINT = 17,
    DXGI_FORMAT_R32G32_SINT = 18,
    DXGI_FORMAT_R32G8X24_TYPELESS = 19,
    DXGI_FORMAT_D32_FLOAT_S8X24_UINT = 20,
    DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS = 21,
    DXGI_FORMAT_X32_TYPELESS_G8X24_UINT = 22,
    DXGI_FORMAT_R10G10B10A2_TYPELESS = 23,
    DXGI_FORMAT_R10G10B10A2_UNORM = 24,
    DXGI_FORMAT_R10G10B10A2_UINT = 25,
    DXGI_FORMAT_R11G11B10_FLOAT = 26,
    DXGI_FORMAT_R8G8B8A8_TYPELESS = 27,
    DXGI_FORMAT_R8G8B8A8_UNORM = 28,
    DXGI_FORMAT_R8G8B8A8_UNORM_SRGB = 29,
    DXGI_FORMAT_R8G8B8A8_UINT = 30,
    DXGI_FORMAT_R8G8B8A8_SNORM = 31,
    DXGI_FORMAT_R8G8B8A8_SINT = 32,
    DXGI_FORMAT_R16G16_TYPELESS = 33,
    DXGI_FORMAT_R16G16_FLOAT = 34,
    DXGI_FORMAT_R16G16_UNORM = 35,
    DXGI_FORMAT_R16G16_UINT = 36,
    DXGI_FORMAT_R16G16_SNORM = 37,
    DXGI_FORMAT_R16G16_SINT = 38,
    DXGI_FORMAT_R32_TYPELESS = 39,
    DXGI_FORMAT_D32_FLOAT = 40,
    DXGI_FORMAT_R32_FLOAT = 41,
    DXGI_FORMAT_R32_UINT = 42,
    DXGI_FORMAT_R32_SINT = 43,
    DXGI_FORMAT_R24G8_TYPELESS = 44,
    DXGI_FORMAT_D24_UNORM_S8_UINT = 45,
    DXGI_FORMAT_R24_UNORM_X8_TYPELESS = 46,
    DXGI_FORMAT_X24_TYPELESS_G8_UINT = 47,
    DXGI_FORMAT_R8G8_TYPELESS = 48,
    DXGI_FORMAT_R8G8_UNORM = 49,
    DXGI_FORMAT_R8G8_UINT = 50,
    DXGI_FORMAT_R8G8_SNORM = 51,
    DXGI_FORMAT_R8G8_SINT = 52,
    DXGI_FORMAT_R16_TYPELESS = 53,
    DXGI_FORMAT_R16_FLOAT = 54,
    DXGI_FORMAT_D16_UNORM = 55,
    DXGI_FORMAT_R16_UNORM = 56,
    DXGI_FORMAT_R16_UINT = 57,
    DXGI_FORMAT_R16_SNORM = 58,
    DXGI_FORMAT_R16_SINT = 59,
    DXGI_FORMAT_R8_TYPELESS = 60,
    DXGI_FORMAT_R8_UNORM = 61,
    DXGI_FORMAT_R8_UINT = 62,
    DXGI_FORMAT_R8_SNORM = 63,
    DXGI_FORMAT_R8_SINT = 64,
    DXGI_FORMAT_A8_UNORM = 65,
    DXGI_FORMAT_R1_UNORM = 66,
    DXGI_FORMAT_R9G9B9E5_SHAREDEXP = 67,
    DXGI_FORMAT_R8G8_B8G8_UNORM = 68,
    DXGI_FORMAT_G8R8_G8B8_UNORM = 69,
    DXGI_FORMAT_BC1_TYPELESS = 70,
    DXGI_FORMAT_BC1_UNORM = 71,
    DXGI_FORMAT_BC1_UNORM_SRGB = 72,
    DXGI_FORMAT_BC2_TYPELESS = 73,
    DXGI_FORMAT_BC2_UNORM = 74,
    DXGI_FORMAT_BC2_UNORM_SRGB = 75,
    DXGI_FORMAT_BC3_TYPELESS = 76,
    DXGI_FORMAT_BC3_UNORM = 77,
    DXGI_FORMAT_BC3_UNORM_SRGB = 78,
    DXGI_FORMAT_BC4_TYPELESS = 79,
    DXGI_FORMAT_BC4_UNORM = 80,
    DXGI_FORMAT_BC4_SNORM = 81,
    DXGI_FORMAT_BC5_TYPELESS = 82,
    DXGI_FORMAT_BC5_UNORM = 83,
    DXGI_FORMAT_BC5_SNORM = 84,
    DXGI_FORMAT_B5G6R5_UNORM = 85,
    DXGI_FORMAT_B5G5R5A1_UNORM = 86,
    DXGI_FORMAT_B8G8R8A8_UNORM = 87,
    DXGI_FORMAT_B8G8R8X8_UNORM = 88,
    DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM = 89,
    DXGI_FORMAT_B8G8R8A8_TYPELESS = 90,
    DXGI_FORMAT_B8G8R8A8_UNORM_SRGB = 91,
    DXGI_FORMAT_B8G8R8X8_TYPELESS = 92,
    DXGI_FORMAT_B8G8R8X8_UNORM_SRGB = 93,
    DXGI_FORMAT_BC6H_TYPELESS = 94,
    DXGI_FORMAT_BC6H_UF16 = 95,
    DXGI_FORMAT_BC6H_SF16 = 96,
    DXGI_FORMAT_BC7_TYPELESS = 97,
    DXGI_FORMAT_BC7_UNORM = 98,
    DXGI_FORMAT_BC7_UNORM_SRGB = 99,
    DXGI_FORMAT_AYUV = 100,
    DXGI_FORMAT_Y410 = 101,
    DXGI_FORMAT_Y416 = 102,
    DXGI_FORMAT_NV12 = 103,
    DXGI_FORMAT_P010 = 104,
    DXGI_FORMAT_P016 = 105,
    DXGI_FORMAT_420_OPAQUE = 106,
    DXGI_FORMAT_YUY2 = 107,
    DXGI_FORMAT_Y210 = 108,
    DXGI_FORMAT_Y216 = 109,
    DXGI_FORMAT_NV11 = 110,
    DXGI_FORMAT_AI44 = 111,
    DXGI_FORMAT_IA44 = 112,
    DXGI_FORMAT_P8 = 113,
    DXGI_FORMAT_A8P8 = 114,
    DXGI_FORMAT_B4G4R4A4_UNORM = 115,
    DXGI_FORMAT_P208 = 130,
    DXGI_FORMAT_V208 = 131,
    DXGI_FORMAT_V408 = 132,
    DXGI_FORMAT_SAMPLER_FEEDBACK_MIN_MIP_OPAQUE = 189,
    DXGI_FORMAT_SAMPLER_FEEDBACK_MIP_REGION_USED_OPAQUE = 190,
    DXGI_FORMAT_FORCE_UINT = 4294967295,
} DXGI_FORMAT;

typedef int DXGI_RGB;

typedef int DXGI_GAMMA_CONTROL;

typedef int DXGI_GAMMA_CONTROL_CAPABILITIES;

typedef enum {
    DXGI_MODE_SCANLINE_ORDER_UNSPECIFIED = 0,
    DXGI_MODE_SCANLINE_ORDER_PROGRESSIVE = 1,
    DXGI_MODE_SCANLINE_ORDER_UPPER_FIELD_FIRST = 2,
    DXGI_MODE_SCANLINE_ORDER_LOWER_FIELD_FIRST = 3,
} DXGI_MODE_SCANLINE_ORDER;

typedef enum {
    DXGI_MODE_SCALING_UNSPECIFIED = 0,
    DXGI_MODE_SCALING_CENTERED = 1,
    DXGI_MODE_SCALING_STRETCHED = 2,
} DXGI_MODE_SCALING;

typedef enum {
    DXGI_MODE_ROTATION_UNSPECIFIED = 0,
    DXGI_MODE_ROTATION_IDENTITY = 1,
    DXGI_MODE_ROTATION_ROTATE90 = 2,
    DXGI_MODE_ROTATION_ROTATE180 = 3,
    DXGI_MODE_ROTATION_ROTATE270 = 4,
} DXGI_MODE_ROTATION;

typedef int DXGI_MODE_DESC;

typedef int DXGI_JPEG_DC_HUFFMAN_TABLE;

typedef int DXGI_JPEG_AC_HUFFMAN_TABLE;

typedef int DXGI_JPEG_QUANTIZATION_TABLE;

typedef int DXGI_FRAME_STATISTICS;

typedef int DXGI_MAPPED_RECT;

typedef int DXGI_ADAPTER_DESC;

typedef int DXGI_OUTPUT_DESC;

typedef int DXGI_SHARED_RESOURCE;

typedef enum {
    DXGI_RESIDENCY_FULLY_RESIDENT = 1,
    DXGI_RESIDENCY_RESIDENT_IN_SHARED_MEMORY = 2,
    DXGI_RESIDENCY_EVICTED_TO_DISK = 3,
} DXGI_RESIDENCY;

typedef int DXGI_SURFACE_DESC;

typedef enum {
    DXGI_SWAP_EFFECT_DISCARD = 0,
    DXGI_SWAP_EFFECT_SEQUENTIAL = 1,
    DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL = 3,
    DXGI_SWAP_EFFECT_FLIP_DISCARD = 4,
} DXGI_SWAP_EFFECT;

typedef enum {
    DXGI_SWAP_CHAIN_FLAG_NONPREROTATED = 1,
    DXGI_SWAP_CHAIN_FLAG_ALLOW_MODE_SWITCH = 2,
    DXGI_SWAP_CHAIN_FLAG_GDI_COMPATIBLE = 4,
    DXGI_SWAP_CHAIN_FLAG_RESTRICTED_CONTENT = 8,
    DXGI_SWAP_CHAIN_FLAG_RESTRICT_SHARED_RESOURCE_DRIVER = 16,
    DXGI_SWAP_CHAIN_FLAG_DISPLAY_ONLY = 32,
    DXGI_SWAP_CHAIN_FLAG_FRAME_LATENCY_WAITABLE_OBJECT = 64,
    DXGI_SWAP_CHAIN_FLAG_FOREGROUND_LAYER = 128,
    DXGI_SWAP_CHAIN_FLAG_FULLSCREEN_VIDEO = 256,
    DXGI_SWAP_CHAIN_FLAG_YUV_VIDEO = 512,
    DXGI_SWAP_CHAIN_FLAG_HW_PROTECTED = 1024,
    DXGI_SWAP_CHAIN_FLAG_ALLOW_TEARING = 2048,
    DXGI_SWAP_CHAIN_FLAG_RESTRICTED_TO_ALL_HOLOGRAPHIC_DISPLAYS = 4096,
} DXGI_SWAP_CHAIN_FLAG;

typedef int DXGI_SWAP_CHAIN_DESC;

typedef int IDXGIObject;

typedef int IDXGIDeviceSubObject;

typedef int IDXGIResource;

typedef int IDXGIKeyedMutex;

typedef int IDXGISurface;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDXGISurface1;

typedef int IDXGIAdapter;

typedef int IDXGIOutput;

typedef int IDXGISwapChain;

typedef int IDXGIFactory;

typedef int IDXGIDevice;

typedef enum {
    DXGI_ADAPTER_FLAG_NONE = 0,
    DXGI_ADAPTER_FLAG_REMOTE = 1,
    DXGI_ADAPTER_FLAG_SOFTWARE = 2,
} DXGI_ADAPTER_FLAG;

typedef int DXGI_ADAPTER_DESC1;

typedef int DXGI_DISPLAY_COLOR_SPACE;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDXGIFactory1;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDXGIAdapter1;

// TODO: this type is limited to platform 'windows6.1'
typedef int IDXGIDevice1;

// TODO: this type is limited to platform 'windows8.0'
typedef int IDXGIDisplayControl;

typedef int DXGI_OUTDUPL_MOVE_RECT;

typedef int DXGI_OUTDUPL_DESC;

typedef int DXGI_OUTDUPL_POINTER_POSITION;

typedef enum {
    DXGI_OUTDUPL_POINTER_SHAPE_TYPE_MONOCHROME = 1,
    DXGI_OUTDUPL_POINTER_SHAPE_TYPE_COLOR = 2,
    DXGI_OUTDUPL_POINTER_SHAPE_TYPE_MASKED_COLOR = 4,
} DXGI_OUTDUPL_POINTER_SHAPE_TYPE;

typedef int DXGI_OUTDUPL_POINTER_SHAPE_INFO;

typedef int DXGI_OUTDUPL_FRAME_INFO;

// TODO: this type is limited to platform 'windows8.0'
typedef int IDXGIOutputDuplication;

typedef enum {
    DXGI_ALPHA_MODE_UNSPECIFIED = 0,
    DXGI_ALPHA_MODE_PREMULTIPLIED = 1,
    DXGI_ALPHA_MODE_STRAIGHT = 2,
    DXGI_ALPHA_MODE_IGNORE = 3,
    DXGI_ALPHA_MODE_FORCE_DWORD = 4294967295,
} DXGI_ALPHA_MODE;

// TODO: this type is limited to platform 'windows8.0'
typedef int IDXGISurface2;

// TODO: this type is limited to platform 'windows8.0'
typedef int IDXGIResource1;

typedef enum {
    DXGI_OFFER_RESOURCE_PRIORITY_LOW = 1,
    DXGI_OFFER_RESOURCE_PRIORITY_NORMAL = 2,
    DXGI_OFFER_RESOURCE_PRIORITY_HIGH = 3,
} DXGI_OFFER_RESOURCE_PRIORITY;

// TODO: this type is limited to platform 'windows8.0'
typedef int IDXGIDevice2;

typedef int DXGI_MODE_DESC1;

typedef enum {
    DXGI_SCALING_STRETCH = 0,
    DXGI_SCALING_NONE = 1,
    DXGI_SCALING_ASPECT_RATIO_STRETCH = 2,
} DXGI_SCALING;

typedef int DXGI_SWAP_CHAIN_DESC1;

typedef int DXGI_SWAP_CHAIN_FULLSCREEN_DESC;

typedef int DXGI_PRESENT_PARAMETERS;

// TODO: this type is limited to platform 'windows8.0'
typedef int IDXGISwapChain1;

// TODO: this type is limited to platform 'windows8.0'
typedef int IDXGIFactory2;

typedef enum {
    DXGI_GRAPHICS_PREEMPTION_DMA_BUFFER_BOUNDARY = 0,
    DXGI_GRAPHICS_PREEMPTION_PRIMITIVE_BOUNDARY = 1,
    DXGI_GRAPHICS_PREEMPTION_TRIANGLE_BOUNDARY = 2,
    DXGI_GRAPHICS_PREEMPTION_PIXEL_BOUNDARY = 3,
    DXGI_GRAPHICS_PREEMPTION_INSTRUCTION_BOUNDARY = 4,
} DXGI_GRAPHICS_PREEMPTION_GRANULARITY;

typedef enum {
    DXGI_COMPUTE_PREEMPTION_DMA_BUFFER_BOUNDARY = 0,
    DXGI_COMPUTE_PREEMPTION_DISPATCH_BOUNDARY = 1,
    DXGI_COMPUTE_PREEMPTION_THREAD_GROUP_BOUNDARY = 2,
    DXGI_COMPUTE_PREEMPTION_THREAD_BOUNDARY = 3,
    DXGI_COMPUTE_PREEMPTION_INSTRUCTION_BOUNDARY = 4,
} DXGI_COMPUTE_PREEMPTION_GRANULARITY;

typedef int DXGI_ADAPTER_DESC2;

// TODO: this type is limited to platform 'windows8.0'
typedef int IDXGIAdapter2;

// TODO: this type is limited to platform 'windows8.0'
typedef int IDXGIOutput1;

// TODO: this type is limited to platform 'windows8.1'
typedef int IDXGIDevice3;

typedef int DXGI_MATRIX_3X2_F;

// TODO: this type is limited to platform 'windows8.1'
typedef int IDXGISwapChain2;

// TODO: this type is limited to platform 'windows8.1'
typedef int IDXGIOutput2;

// TODO: this type is limited to platform 'windows8.1'
typedef int IDXGIFactory3;

typedef int DXGI_DECODE_SWAP_CHAIN_DESC;

typedef enum {
    DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAG_NOMINAL_RANGE = 1,
    DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAG_BT709 = 2,
    DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAG_xvYCC = 4,
} DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAGS;

// TODO: this type is limited to platform 'windows8.1'
typedef int IDXGIDecodeSwapChain;

// TODO: this type is limited to platform 'windows8.1'
typedef int IDXGIFactoryMedia;

typedef enum {
    DXGI_FRAME_PRESENTATION_MODE_COMPOSED = 0,
    DXGI_FRAME_PRESENTATION_MODE_OVERLAY = 1,
    DXGI_FRAME_PRESENTATION_MODE_NONE = 2,
    DXGI_FRAME_PRESENTATION_MODE_COMPOSITION_FAILURE = 3,
} DXGI_FRAME_PRESENTATION_MODE;

typedef int DXGI_FRAME_STATISTICS_MEDIA;

// TODO: this type is limited to platform 'windows8.1'
typedef int IDXGISwapChainMedia;

typedef enum {
    DXGI_OVERLAY_SUPPORT_FLAG_DIRECT = 1,
    DXGI_OVERLAY_SUPPORT_FLAG_SCALING = 2,
} DXGI_OVERLAY_SUPPORT_FLAG;

// TODO: this type is limited to platform 'windows8.1'
typedef int IDXGIOutput3;

typedef enum {
    DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG_PRESENT = 1,
    DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG_OVERLAY_PRESENT = 2,
} DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IDXGISwapChain3;

typedef enum {
    DXGI_OVERLAY_COLOR_SPACE_SUPPORT_FLAG_PRESENT = 1,
} DXGI_OVERLAY_COLOR_SPACE_SUPPORT_FLAG;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IDXGIOutput4;

typedef int IDXGIFactory4;

typedef enum {
    DXGI_MEMORY_SEGMENT_GROUP_LOCAL = 0,
    DXGI_MEMORY_SEGMENT_GROUP_NON_LOCAL = 1,
} DXGI_MEMORY_SEGMENT_GROUP;

typedef int DXGI_QUERY_VIDEO_MEMORY_INFO;

typedef int IDXGIAdapter3;

typedef enum {
    DXGI_OUTDUPL_COMPOSITED_UI_CAPTURE_ONLY = 1,
} DXGI_OUTDUPL_FLAG;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IDXGIOutput5;

typedef enum {
    DXGI_HDR_METADATA_TYPE_NONE = 0,
    DXGI_HDR_METADATA_TYPE_HDR10 = 1,
    DXGI_HDR_METADATA_TYPE_HDR10PLUS = 2,
} DXGI_HDR_METADATA_TYPE;

typedef int DXGI_HDR_METADATA_HDR10;

typedef int DXGI_HDR_METADATA_HDR10PLUS;

typedef int IDXGISwapChain4;

typedef enum {
    DXGI_OFFER_RESOURCE_FLAG_ALLOW_DECOMMIT = 1,
} DXGI_OFFER_RESOURCE_FLAGS;

typedef enum {
    DXGI_RECLAIM_RESOURCE_RESULT_OK = 0,
    DXGI_RECLAIM_RESOURCE_RESULT_DISCARDED = 1,
    DXGI_RECLAIM_RESOURCE_RESULT_NOT_COMMITTED = 2,
} DXGI_RECLAIM_RESOURCE_RESULTS;

typedef int IDXGIDevice4;

typedef enum {
    DXGI_FEATURE_PRESENT_ALLOW_TEARING = 0,
} DXGI_FEATURE;

typedef int IDXGIFactory5;

typedef enum {
    DXGI_ADAPTER_FLAG3_NONE = 0,
    DXGI_ADAPTER_FLAG3_REMOTE = 1,
    DXGI_ADAPTER_FLAG3_SOFTWARE = 2,
    DXGI_ADAPTER_FLAG3_ACG_COMPATIBLE = 4,
    DXGI_ADAPTER_FLAG3_SUPPORT_MONITORED_FENCES = 8,
    DXGI_ADAPTER_FLAG3_SUPPORT_NON_MONITORED_FENCES = 16,
    DXGI_ADAPTER_FLAG3_KEYED_MUTEX_CONFORMANCE = 32,
    DXGI_ADAPTER_FLAG3_FORCE_DWORD = 4294967295,
} DXGI_ADAPTER_FLAG3;

typedef int DXGI_ADAPTER_DESC3;

typedef int IDXGIAdapter4;

typedef int DXGI_OUTPUT_DESC1;

typedef enum {
    DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAG_FULLSCREEN = 1,
    DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAG_WINDOWED = 2,
    DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAG_CURSOR_STRETCHED = 4,
} DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAGS;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int IDXGIOutput6;

typedef enum {
    DXGI_GPU_PREFERENCE_UNSPECIFIED = 0,
    DXGI_GPU_PREFERENCE_MINIMUM_POWER = 1,
    DXGI_GPU_PREFERENCE_HIGH_PERFORMANCE = 2,
} DXGI_GPU_PREFERENCE;

// TODO: this type is limited to platform 'windows10.0.17134'
typedef int IDXGIFactory6;

// TODO: this type is limited to platform 'windows10.0.17763'
typedef int IDXGIFactory7;

typedef enum {
    DXGI_DEBUG_RLO_SUMMARY = 1,
    DXGI_DEBUG_RLO_DETAIL = 2,
    DXGI_DEBUG_RLO_IGNORE_INTERNAL = 4,
    DXGI_DEBUG_RLO_ALL = 7,
} DXGI_DEBUG_RLO_FLAGS;

typedef enum {
    DXGI_INFO_QUEUE_MESSAGE_CATEGORY_UNKNOWN = 0,
    DXGI_INFO_QUEUE_MESSAGE_CATEGORY_MISCELLANEOUS = 1,
    DXGI_INFO_QUEUE_MESSAGE_CATEGORY_INITIALIZATION = 2,
    DXGI_INFO_QUEUE_MESSAGE_CATEGORY_CLEANUP = 3,
    DXGI_INFO_QUEUE_MESSAGE_CATEGORY_COMPILATION = 4,
    DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_CREATION = 5,
    DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_SETTING = 6,
    DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_GETTING = 7,
    DXGI_INFO_QUEUE_MESSAGE_CATEGORY_RESOURCE_MANIPULATION = 8,
    DXGI_INFO_QUEUE_MESSAGE_CATEGORY_EXECUTION = 9,
    DXGI_INFO_QUEUE_MESSAGE_CATEGORY_SHADER = 10,
} DXGI_INFO_QUEUE_MESSAGE_CATEGORY;

typedef enum {
    DXGI_INFO_QUEUE_MESSAGE_SEVERITY_CORRUPTION = 0,
    DXGI_INFO_QUEUE_MESSAGE_SEVERITY_ERROR = 1,
    DXGI_INFO_QUEUE_MESSAGE_SEVERITY_WARNING = 2,
    DXGI_INFO_QUEUE_MESSAGE_SEVERITY_INFO = 3,
    DXGI_INFO_QUEUE_MESSAGE_SEVERITY_MESSAGE = 4,
} DXGI_INFO_QUEUE_MESSAGE_SEVERITY;

typedef int DXGI_INFO_QUEUE_MESSAGE;

typedef int DXGI_INFO_QUEUE_FILTER_DESC;

typedef int DXGI_INFO_QUEUE_FILTER;

// TODO: this type is limited to platform 'windows8.0'
typedef int IDXGIInfoQueue;

// TODO: this type is limited to platform 'windows8.0'
typedef int IDXGIDebug;

// TODO: this type is limited to platform 'windows8.1'
typedef int IDXGIDebug1;


//--------------------------------------------------------------------------------
// Section: Functions (5)
//--------------------------------------------------------------------------------
/*HRESULT*/void CreateDXGIFactory();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void CreateDXGIFactory1();

// TODO: this type is limited to platform 'windows8.1'
/*HRESULT*/void CreateDXGIFactory2();

// TODO: this type is limited to platform 'windows8.1'
/*HRESULT*/void DXGIGetDebugInterface1();

// TODO: this type is limited to platform 'windows10.0.17134'
/*HRESULT*/void DXGIDeclareAdapterRemovalSupport();

