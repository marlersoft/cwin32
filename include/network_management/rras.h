// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (369)
//--------------------------------------------------------------------------------
#define RASNAP_ProbationTime (UINT)1
#define RASTUNNELENDPOINT_UNKNOWN (UINT)0
#define RASTUNNELENDPOINT_IPv4 (UINT)1
#define RASTUNNELENDPOINT_IPv6 (UINT)2
#define RAS_MaxDeviceType (UINT)16
#define RAS_MaxPhoneNumber (UINT)128
#define RAS_MaxIpAddress (UINT)15
#define RAS_MaxIpxAddress (UINT)21
#define RAS_MaxEntryName (UINT)256
#define RAS_MaxDeviceName (UINT)128
#define RAS_MaxCallbackNumber (UINT)48
#define RAS_MaxAreaCode (UINT)10
#define RAS_MaxPadType (UINT)32
#define RAS_MaxX25Address (UINT)200
#define RAS_MaxFacilities (UINT)200
#define RAS_MaxUserData (UINT)200
#define RAS_MaxReplyMessage (UINT)1024
#define RAS_MaxDnsSuffix (UINT)256
#define RASCF_AllUsers (UINT)1
#define RASCF_GlobalCreds (UINT)2
#define RASCF_OwnerKnown (UINT)4
#define RASCF_OwnerMatch (UINT)8
#define RAS_MaxIDSize (UINT)256
#define RASCS_PAUSED (UINT)4096
#define RASCS_DONE (UINT)8192
#define RASCSS_DONE (UINT)8192
#define RDEOPT_UsePrefixSuffix (UINT)1
#define RDEOPT_PausedStates (UINT)2
#define RDEOPT_IgnoreModemSpeaker (UINT)4
#define RDEOPT_SetModemSpeaker (UINT)8
#define RDEOPT_IgnoreSoftwareCompression (UINT)16
#define RDEOPT_SetSoftwareCompression (UINT)32
#define RDEOPT_DisableConnectedUI (UINT)64
#define RDEOPT_DisableReconnectUI (UINT)128
#define RDEOPT_DisableReconnect (UINT)256
#define RDEOPT_NoUser (UINT)512
#define RDEOPT_PauseOnScript (UINT)1024
#define RDEOPT_Router (UINT)2048
#define RDEOPT_CustomDial (UINT)4096
#define RDEOPT_UseCustomScripting (UINT)8192
#define RDEOPT_InvokeAutoTriggerCredentialUI (UINT)16384
#define RDEOPT_EapInfoCryptInCapable (UINT)32768
#define REN_User (UINT)0
#define REN_AllUsers (UINT)1
#define RASIPO_VJ (UINT)1
#define RASLCPO_PFC (UINT)1
#define RASLCPO_ACFC (UINT)2
#define RASLCPO_SSHF (UINT)4
#define RASLCPO_DES_56 (UINT)8
#define RASLCPO_3_DES (UINT)16
#define RASLCPO_AES_128 (UINT)32
#define RASLCPO_AES_256 (UINT)64
#define RASLCPO_AES_192 (UINT)128
#define RASLCPO_GCM_AES_128 (UINT)256
#define RASLCPO_GCM_AES_192 (UINT)512
#define RASLCPO_GCM_AES_256 (UINT)1024
#define RASCCPCA_MPPC (UINT)6
#define RASCCPCA_STAC (UINT)5
#define RASCCPO_Compression (UINT)1
#define RASCCPO_HistoryLess (UINT)2
#define RASCCPO_Encryption56bit (UINT)16
#define RASCCPO_Encryption40bit (UINT)32
#define RASCCPO_Encryption128bit (UINT)64
#define RASIKEv2_AUTH_MACHINECERTIFICATES (UINT)1
#define RASIKEv2_AUTH_EAP (UINT)2
#define RASIKEv2_AUTH_PSK (UINT)3
#define WM_RASDIALEVENT (UINT)52429
#define ET_None (UINT)0
#define ET_Require (UINT)1
#define ET_RequireMax (UINT)2
#define ET_Optional (UINT)3
#define VS_Default (UINT)0
#define VS_PptpOnly (UINT)1
#define VS_PptpFirst (UINT)2
#define VS_L2tpOnly (UINT)3
#define VS_L2tpFirst (UINT)4
#define VS_SstpOnly (UINT)5
#define VS_SstpFirst (UINT)6
#define VS_Ikev2Only (UINT)7
#define VS_Ikev2First (UINT)8
#define VS_GREOnly (UINT)9
#define VS_PptpSstp (UINT)12
#define VS_L2tpSstp (UINT)13
#define VS_Ikev2Sstp (UINT)14
#define RASEO_UseCountryAndAreaCodes (UINT)1
#define RASEO_SpecificIpAddr (UINT)2
#define RASEO_SpecificNameServers (UINT)4
#define RASEO_IpHeaderCompression (UINT)8
#define RASEO_RemoteDefaultGateway (UINT)16
#define RASEO_DisableLcpExtensions (UINT)32
#define RASEO_TerminalBeforeDial (UINT)64
#define RASEO_TerminalAfterDial (UINT)128
#define RASEO_ModemLights (UINT)256
#define RASEO_SwCompression (UINT)512
#define RASEO_RequireEncryptedPw (UINT)1024
#define RASEO_RequireMsEncryptedPw (UINT)2048
#define RASEO_RequireDataEncryption (UINT)4096
#define RASEO_NetworkLogon (UINT)8192
#define RASEO_UseLogonCredentials (UINT)16384
#define RASEO_PromoteAlternates (UINT)32768
#define RASEO_SecureLocalFiles (UINT)65536
#define RASEO_RequireEAP (UINT)131072
#define RASEO_RequirePAP (UINT)262144
#define RASEO_RequireSPAP (UINT)524288
#define RASEO_Custom (UINT)1048576
#define RASEO_PreviewPhoneNumber (UINT)2097152
#define RASEO_SharedPhoneNumbers (UINT)8388608
#define RASEO_PreviewUserPw (UINT)16777216
#define RASEO_PreviewDomain (UINT)33554432
#define RASEO_ShowDialingProgress (UINT)67108864
#define RASEO_RequireCHAP (UINT)134217728
#define RASEO_RequireMsCHAP (UINT)268435456
#define RASEO_RequireMsCHAP2 (UINT)536870912
#define RASEO_RequireW95MSCHAP (UINT)1073741824
#define RASEO_CustomScript (UINT)2147483648
#define RASEO2_SecureFileAndPrint (UINT)1
#define RASEO2_SecureClientForMSNet (UINT)2
#define RASEO2_DontNegotiateMultilink (UINT)4
#define RASEO2_DontUseRasCredentials (UINT)8
#define RASEO2_UsePreSharedKey (UINT)16
#define RASEO2_Internet (UINT)32
#define RASEO2_DisableNbtOverIP (UINT)64
#define RASEO2_UseGlobalDeviceSettings (UINT)128
#define RASEO2_ReconnectIfDropped (UINT)256
#define RASEO2_SharePhoneNumbers (UINT)512
#define RASEO2_SecureRoutingCompartment (UINT)1024
#define RASEO2_UseTypicalSettings (UINT)2048
#define RASEO2_IPv6SpecificNameServers (UINT)4096
#define RASEO2_IPv6RemoteDefaultGateway (UINT)8192
#define RASEO2_RegisterIpWithDNS (UINT)16384
#define RASEO2_UseDNSSuffixForRegistration (UINT)32768
#define RASEO2_IPv4ExplicitMetric (UINT)65536
#define RASEO2_IPv6ExplicitMetric (UINT)131072
#define RASEO2_DisableIKENameEkuCheck (UINT)262144
#define RASEO2_DisableClassBasedStaticRoute (UINT)524288
#define RASEO2_SpecificIPv6Addr (UINT)1048576
#define RASEO2_DisableMobility (UINT)2097152
#define RASEO2_RequireMachineCertificates (UINT)4194304
#define RASEO2_UsePreSharedKeyForIkev2Initiator (UINT)8388608
#define RASEO2_UsePreSharedKeyForIkev2Responder (UINT)16777216
#define RASEO2_CacheCredentials (UINT)33554432
#define RASEO2_AutoTriggerCapable (UINT)67108864
#define RASEO2_IsThirdPartyProfile (UINT)134217728
#define RASEO2_AuthTypeIsOtp (UINT)268435456
#define RASEO2_IsAlwaysOn (UINT)536870912
#define RASEO2_IsPrivateNetwork (UINT)1073741824
#define RASEO2_PlumbIKEv2TSAsRoutes (UINT)2147483648
#define RASNP_NetBEUI (UINT)1
#define RASNP_Ipx (UINT)2
#define RASNP_Ip (UINT)4
#define RASNP_Ipv6 (UINT)8
#define RASFP_Ppp (UINT)1
#define RASFP_Slip (UINT)2
#define RASFP_Ras (UINT)4
#define RASET_Phone (UINT)1
#define RASET_Vpn (UINT)2
#define RASET_Direct (UINT)3
#define RASET_Internet (UINT)4
#define RASET_Broadband (UINT)5
#define RASCN_Connection (UINT)1
#define RASCN_Disconnection (UINT)2
#define RASCN_BandwidthAdded (UINT)4
#define RASCN_BandwidthRemoved (UINT)8
#define RASCN_Dormant (UINT)16
#define RASCN_ReConnection (UINT)32
#define RASCN_EPDGPacketArrival (UINT)64
#define RASIDS_Disabled (UINT)4294967295
#define RASIDS_UseGlobalValue (UINT)0
#define RASADFLG_PositionDlg (UINT)1
#define RASCM_UserName (UINT)1
#define RASCM_Password (UINT)2
#define RASCM_Domain (UINT)4
#define RASCM_DefaultCreds (UINT)8
#define RASCM_PreSharedKey (UINT)16
#define RASCM_ServerPreSharedKey (UINT)32
#define RASCM_DDMPreSharedKey (UINT)64
#define RASADP_DisableConnectionQuery (UINT)0
#define RASADP_LoginSessionDisable (UINT)1
#define RASADP_SavedAddressesLimit (UINT)2
#define RASADP_FailedConnectionTimeout (UINT)3
#define RASADP_ConnectionQueryTimeout (UINT)4
#define RASEAPF_NonInteractive (UINT)2
#define RASEAPF_Logon (UINT)4
#define RASEAPF_Preview (UINT)8
#define RCD_SingleUser (UINT)0
#define RCD_AllUsers (UINT)1
#define RCD_Eap (UINT)2
#define RCD_Logon (UINT)4
#define RASPBDEVENT_AddEntry (UINT)1
#define RASPBDEVENT_EditEntry (UINT)2
#define RASPBDEVENT_RemoveEntry (UINT)3
#define RASPBDEVENT_DialEntry (UINT)4
#define RASPBDEVENT_EditGlobals (UINT)5
#define RASPBDEVENT_NoUser (UINT)6
#define RASPBDEVENT_NoUserEdit (UINT)7
#define RASNOUSER_SmartCard (UINT)1
#define RASPBDFLAG_PositionDlg (UINT)1
#define RASPBDFLAG_ForceCloseOnDial (UINT)2
#define RASPBDFLAG_NoUser (UINT)16
#define RASPBDFLAG_UpdateDefaults (UINT)2147483648
#define RASEDFLAG_PositionDlg (UINT)1
#define RASEDFLAG_NewEntry (UINT)2
#define RASEDFLAG_CloneEntry (UINT)4
#define RASEDFLAG_NoRename (UINT)8
#define RASEDFLAG_ShellOwned (UINT)1073741824
#define RASEDFLAG_NewPhoneEntry (UINT)16
#define RASEDFLAG_NewTunnelEntry (UINT)32
#define RASEDFLAG_NewDirectEntry (UINT)64
#define RASEDFLAG_NewBroadbandEntry (UINT)128
#define RASEDFLAG_InternetEntry (UINT)256
#define RASEDFLAG_NAT (UINT)512
#define RASEDFLAG_IncomingConnection (UINT)1024
#define RASDDFLAG_PositionDlg (UINT)1
#define RASDDFLAG_NoPrompt (UINT)2
#define RASDDFLAG_AoacRedial (UINT)4
#define RASDDFLAG_LinkFailure (UINT)2147483648
#define PID_IPX (UINT)43
#define PID_IP (UINT)33
#define PID_IPV6 (UINT)87
#define PID_NBF (UINT)63
#define PID_ATALK (UINT)41
#define MPR_INTERFACE_OUT_OF_RESOURCES (UINT)1
#define MPR_INTERFACE_ADMIN_DISABLED (UINT)2
#define MPR_INTERFACE_CONNECTION_FAILURE (UINT)4
#define MPR_INTERFACE_SERVICE_PAUSED (UINT)8
#define MPR_INTERFACE_DIALOUT_HOURS_RESTRICTION (UINT)16
#define MPR_INTERFACE_NO_MEDIA_SENSE (UINT)32
#define MPR_INTERFACE_NO_DEVICE (UINT)64
#define MPRIO_IpSecPreSharedKey (UINT)2147483648
#define MPRIO_RequireMachineCertificates (UINT)16777216
#define MPRIO_UsePreSharedKeyForIkev2Initiator (UINT)33554432
#define MPRIO_UsePreSharedKeyForIkev2Responder (UINT)67108864
#define MPR_ENABLE_RAS_ON_DEVICE (UINT)1
#define MPR_ENABLE_ROUTING_ON_DEVICE (UINT)2
#define IPADDRESSLEN (UINT)15
#define IPXADDRESSLEN (UINT)22
#define ATADDRESSLEN (UINT)32
#define MAXIPADRESSLEN (UINT)64
#define PPP_IPCP_VJ (UINT)1
#define PPP_CCP_COMPRESSION (UINT)1
#define PPP_CCP_ENCRYPTION40BITOLD (UINT)16
#define PPP_CCP_ENCRYPTION40BIT (UINT)32
#define PPP_CCP_ENCRYPTION128BIT (UINT)64
#define PPP_CCP_ENCRYPTION56BIT (UINT)128
#define PPP_CCP_HISTORYLESS (UINT)16777216
#define PPP_LCP_MULTILINK_FRAMING (UINT)1
#define PPP_LCP_PFC (UINT)2
#define PPP_LCP_ACFC (UINT)4
#define PPP_LCP_SSHF (UINT)8
#define PPP_LCP_DES_56 (UINT)16
#define PPP_LCP_3_DES (UINT)32
#define PPP_LCP_AES_128 (UINT)64
#define PPP_LCP_AES_256 (UINT)128
#define PPP_LCP_AES_192 (UINT)256
#define PPP_LCP_GCM_AES_128 (UINT)512
#define PPP_LCP_GCM_AES_192 (UINT)1024
#define PPP_LCP_GCM_AES_256 (UINT)2048
#define RAS_FLAGS_RAS_CONNECTION (UINT)4
#define RASPRIV_NoCallback (UINT)1
#define RASPRIV_AdminSetCallback (UINT)2
#define RASPRIV_CallerSetCallback (UINT)4
#define RASPRIV_DialinPrivilege (UINT)8
#define RASPRIV2_DialinPolicy (UINT)1
#define MPRAPI_IKEV2_AUTH_USING_CERT (UINT)1
#define MPRAPI_IKEV2_AUTH_USING_EAP (UINT)2
#define MPRAPI_PPP_PROJECTION_INFO_TYPE (UINT)1
#define MPRAPI_IKEV2_PROJECTION_INFO_TYPE (UINT)2
#define MPRAPI_RAS_CONNECTION_OBJECT_REVISION_1 (UINT)1
#define MPRAPI_MPR_IF_CUSTOM_CONFIG_OBJECT_REVISION_1 (UINT)1
#define MPRAPI_IF_CUSTOM_CONFIG_FOR_IKEV2 (UINT)1
#define MPRAPI_MPR_IF_CUSTOM_CONFIG_OBJECT_REVISION_3 (UINT)3
#define MPRAPI_MPR_IF_CUSTOM_CONFIG_OBJECT_REVISION_2 (UINT)2
#define MPRAPI_IKEV2_SET_TUNNEL_CONFIG_PARAMS (UINT)1
#define MPRAPI_L2TP_SET_TUNNEL_CONFIG_PARAMS (UINT)1
#define MAX_SSTP_HASH_SIZE (UINT)32
#define MPRAPI_MPR_SERVER_OBJECT_REVISION_1 (UINT)1
#define MPRAPI_MPR_SERVER_OBJECT_REVISION_2 (UINT)2
#define MPRAPI_MPR_SERVER_OBJECT_REVISION_3 (UINT)3
#define MPRAPI_MPR_SERVER_OBJECT_REVISION_4 (UINT)4
#define MPRAPI_MPR_SERVER_OBJECT_REVISION_5 (UINT)5
#define MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_1 (UINT)1
#define MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_2 (UINT)2
#define MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_3 (UINT)3
#define MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_4 (UINT)4
#define MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_5 (UINT)5
#define MPRAPI_SET_CONFIG_PROTOCOL_FOR_PPTP (UINT)1
#define MPRAPI_SET_CONFIG_PROTOCOL_FOR_L2TP (UINT)2
#define MPRAPI_SET_CONFIG_PROTOCOL_FOR_SSTP (UINT)4
#define MPRAPI_SET_CONFIG_PROTOCOL_FOR_IKEV2 (UINT)8
#define MPRAPI_SET_CONFIG_PROTOCOL_FOR_GRE (UINT)16
#define ALLOW_NO_AUTH (UINT)1
#define DO_NOT_ALLOW_NO_AUTH (UINT)0
#define MPRAPI_RAS_UPDATE_CONNECTION_OBJECT_REVISION_1 (UINT)1
#define MPRAPI_ADMIN_DLL_VERSION_1 (UINT)1
#define MPRAPI_ADMIN_DLL_VERSION_2 (UINT)2
#define MGM_JOIN_STATE_FLAG (UINT)1
#define MGM_FORWARD_STATE_FLAG (UINT)2
#define MGM_MFE_STATS_0 (UINT)1
#define MGM_MFE_STATS_1 (UINT)2
#define RTM_MAX_ADDRESS_SIZE (UINT)16
#define RTM_MAX_VIEWS (UINT)32
#define RTM_VIEW_ID_UCAST (UINT)0
#define RTM_VIEW_ID_MCAST (UINT)1
#define RTM_VIEW_MASK_SIZE (UINT)32
#define RTM_VIEW_MASK_NONE (UINT)0
#define RTM_VIEW_MASK_ANY (UINT)0
#define RTM_VIEW_MASK_UCAST (UINT)1
#define RTM_VIEW_MASK_MCAST (UINT)2
#define RTM_VIEW_MASK_ALL (UINT)4294967295
#define IPV6_ADDRESS_LEN_IN_BYTES (UINT)16
#define RTM_DEST_FLAG_NATURAL_NET (UINT)1
#define RTM_DEST_FLAG_FWD_ENGIN_ADD (UINT)2
#define RTM_DEST_FLAG_DONT_FORWARD (UINT)4
#define RTM_ROUTE_STATE_CREATED (UINT)0
#define RTM_ROUTE_STATE_DELETING (UINT)1
#define RTM_ROUTE_STATE_DELETED (UINT)2
#define RTM_ROUTE_FLAGS_MARTIAN (UINT)1
#define RTM_ROUTE_FLAGS_BLACKHOLE (UINT)2
#define RTM_ROUTE_FLAGS_DISCARD (UINT)4
#define RTM_ROUTE_FLAGS_INACTIVE (UINT)8
#define RTM_ROUTE_FLAGS_LOCAL (UINT)16
#define RTM_ROUTE_FLAGS_REMOTE (UINT)32
#define RTM_ROUTE_FLAGS_MYSELF (UINT)64
#define RTM_ROUTE_FLAGS_LOOPBACK (UINT)128
#define RTM_ROUTE_FLAGS_MCAST (UINT)256
#define RTM_ROUTE_FLAGS_LOCAL_MCAST (UINT)512
#define RTM_ROUTE_FLAGS_LIMITED_BC (UINT)1024
#define RTM_ROUTE_FLAGS_ZEROS_NETBC (UINT)4096
#define RTM_ROUTE_FLAGS_ZEROS_SUBNETBC (UINT)8192
#define RTM_ROUTE_FLAGS_ONES_NETBC (UINT)16384
#define RTM_ROUTE_FLAGS_ONES_SUBNETBC (UINT)32768
#define RTM_NEXTHOP_STATE_CREATED (UINT)0
#define RTM_NEXTHOP_STATE_DELETED (UINT)1
#define RTM_NEXTHOP_FLAGS_REMOTE (UINT)1
#define RTM_NEXTHOP_FLAGS_DOWN (UINT)2
#define METHOD_TYPE_ALL_METHODS (UINT)4294967295
#define METHOD_RIP2_NEIGHBOUR_ADDR (UINT)1
#define METHOD_RIP2_OUTBOUND_INTF (UINT)2
#define METHOD_RIP2_ROUTE_TAG (UINT)4
#define METHOD_RIP2_ROUTE_TIMESTAMP (UINT)8
#define METHOD_BGP4_AS_PATH (UINT)1
#define METHOD_BGP4_PEER_ID (UINT)2
#define METHOD_BGP4_PA_ORIGIN (UINT)4
#define METHOD_BGP4_NEXTHOP_ATTR (UINT)8
#define RTM_RESUME_METHODS (UINT)0
#define RTM_BLOCK_METHODS (UINT)1
#define RTM_ROUTE_CHANGE_FIRST (UINT)1
#define RTM_ROUTE_CHANGE_NEW (UINT)2
#define RTM_ROUTE_CHANGE_BEST (UINT)65536
#define RTM_NEXTHOP_CHANGE_NEW (UINT)1
#define RTM_MATCH_NONE (UINT)0
#define RTM_MATCH_OWNER (UINT)1
#define RTM_MATCH_NEIGHBOUR (UINT)2
#define RTM_MATCH_PREF (UINT)4
#define RTM_MATCH_NEXTHOP (UINT)8
#define RTM_MATCH_INTERFACE (UINT)16
#define RTM_MATCH_FULL (UINT)65535
#define RTM_ENUM_START (UINT)0
#define RTM_ENUM_NEXT (UINT)1
#define RTM_ENUM_RANGE (UINT)2
#define RTM_ENUM_ALL_DESTS (UINT)0
#define RTM_ENUM_OWN_DESTS (UINT)16777216
#define RTM_ENUM_ALL_ROUTES (UINT)0
#define RTM_ENUM_OWN_ROUTES (UINT)65536
#define RTM_NUM_CHANGE_TYPES (UINT)3
#define RTM_CHANGE_TYPE_ALL (UINT)1
#define RTM_CHANGE_TYPE_BEST (UINT)2
#define RTM_CHANGE_TYPE_FORWARDING (UINT)4
#define RTM_NOTIFY_ONLY_MARKED_DESTS (UINT)65536

//--------------------------------------------------------------------------------
// Section: Types (239)
//--------------------------------------------------------------------------------
typedef enum {
    MPRDM_DialFirst = 0,
    MPRDM_DialAll = 1,
    MPRDM_DialAsNeeded = 2,
} MPR_INTERFACE_DIAL_MODE;

typedef enum {
    RASEDM_DialAll = 1,
    RASEDM_DialAsNeeded = 2,
} RASENTRY_DIAL_MODE;

typedef enum {
    RAS_FLAGS_PPP_CONNECTION = 1,
    RAS_FLAGS_MESSENGER_PRESENT = 2,
    RAS_FLAGS_QUARANTINE_PRESENT = 8,
    RAS_FLAGS_ARAP_CONNECTION = 16,
    RAS_FLAGS_IKEV2_CONNECTION = 16,
    RAS_FLAGS_DORMANT = 32,
} RAS_FLAGS;

typedef enum {
    MPR_ET_None = 0,
    MPR_ET_Require = 1,
    MPR_ET_RequireMax = 2,
    MPR_ET_Optional = 3,
} MPR_ET;

typedef enum {
    RASLCPAD_CHAP_MD5 = 5,
    RASLCPAD_CHAP_MS = 128,
    RASLCPAD_CHAP_MSV2 = 129,
} RASPPP_PROJECTION_INFO_SERVER_AUTH_DATA;

typedef enum {
    PPP_LCP_PAP = 49187,
    PPP_LCP_CHAP = 49699,
    PPP_LCP_EAP = 49703,
    PPP_LCP_SPAP = 49191,
} PPP_LCP;

typedef enum {
    RASLCPAP_PAP = 49187,
    RASLCPAP_SPAP = 49191,
    RASLCPAP_CHAP = 49699,
    RASLCPAP_EAP = 49703,
} RASPPP_PROJECTION_INFO_SERVER_AUTH_PROTOCOL;

typedef enum {
    PPP_LCP_CHAP_MD5 = 5,
    PPP_LCP_CHAP_MS = 128,
    PPP_LCP_CHAP_MSV2 = 129,
} PPP_LCP_INFO_AUTH_DATA;

typedef enum {
    RASIKEv2_FLAGS_MOBIKESUPPORTED = 1,
    RASIKEv2_FLAGS_BEHIND_NAT = 2,
    RASIKEv2_FLAGS_SERVERBEHIND_NAT = 4,
} RASIKEV_PROJECTION_INFO_FLAGS;

typedef enum {
    MPR_VS_Default = 0,
    MPR_VS_PptpOnly = 1,
    MPR_VS_PptpFirst = 2,
    MPR_VS_L2tpOnly = 3,
    MPR_VS_L2tpFirst = 4,
} MPR_VS;

typedef enum {
    SECURITYMSG_SUCCESS = 1,
    SECURITYMSG_FAILURE = 2,
    SECURITYMSG_ERROR = 3,
} SECURITY_MESSAGE_MSG_ID;

typedef int RASCONNW;

typedef int RASCONNA;

typedef int RASDIALPARAMSW;

typedef int RASDIALPARAMSA;

typedef int RASEAPINFO;

typedef int RASDEVSPECIFICINFO;

typedef int RASDIALEXTENSIONS;

typedef int RASIKEV2_PROJECTION_INFO;

typedef int RASADPARAMS;

typedef int RASCUSTOMSCRIPTEXTENSIONS;

typedef int RASPBDLGW;

typedef int RASPBDLGA;

typedef int RASENTRYDLGW;

typedef int RASENTRYDLGA;

typedef int RASDIALDLG;

typedef int HRASCONN;

typedef enum {
    RASAPIVERSION_500 = 1,
    RASAPIVERSION_501 = 2,
    RASAPIVERSION_600 = 3,
    RASAPIVERSION_601 = 4,
} RASAPIVERSION;

typedef int RASIPADDR;

typedef int RASTUNNELENDPOINT;

typedef enum {
    RASCS_OpenPort = 0,
    RASCS_PortOpened = 1,
    RASCS_ConnectDevice = 2,
    RASCS_DeviceConnected = 3,
    RASCS_AllDevicesConnected = 4,
    RASCS_Authenticate = 5,
    RASCS_AuthNotify = 6,
    RASCS_AuthRetry = 7,
    RASCS_AuthCallback = 8,
    RASCS_AuthChangePassword = 9,
    RASCS_AuthProject = 10,
    RASCS_AuthLinkSpeed = 11,
    RASCS_AuthAck = 12,
    RASCS_ReAuthenticate = 13,
    RASCS_Authenticated = 14,
    RASCS_PrepareForCallback = 15,
    RASCS_WaitForModemReset = 16,
    RASCS_WaitForCallback = 17,
    RASCS_Projected = 18,
    RASCS_StartAuthentication = 19,
    RASCS_CallbackComplete = 20,
    RASCS_LogonNetwork = 21,
    RASCS_SubEntryConnected = 22,
    RASCS_SubEntryDisconnected = 23,
    RASCS_ApplySettings = 24,
    RASCS_Interactive = 4096,
    RASCS_RetryAuthentication = 4097,
    RASCS_CallbackSetByCaller = 4098,
    RASCS_PasswordExpired = 4099,
    RASCS_InvokeEapUI = 4100,
    RASCS_Connected = 8192,
    RASCS_Disconnected = 8193,
} RASCONNSTATE;

typedef enum {
    RASCSS_None = 0,
    RASCSS_Dormant = 1,
    RASCSS_Reconnecting = 2,
    RASCSS_Reconnected = 8192,
} RASCONNSUBSTATE;

typedef int RASCONNSTATUSW;

typedef int RASCONNSTATUSA;

typedef int RASENTRYNAMEW;

typedef int RASENTRYNAMEA;

typedef enum {
    RASP_Amb = 65536,
    RASP_PppNbf = 32831,
    RASP_PppIpx = 32811,
    RASP_PppIp = 32801,
    RASP_PppCcp = 33021,
    RASP_PppLcp = 49185,
    RASP_PppIpv6 = 32855,
} RASPROJECTION;

typedef int RASAMBW;

typedef int RASAMBA;

typedef int RASPPPNBFW;

typedef int RASPPPNBFA;

typedef int RASIPXW;

typedef int RASPPPIPXA;

typedef int RASPPPIPW;

typedef int RASPPPIPA;

typedef int RASPPPIPV6;

typedef int RASPPPLCPW;

typedef int RASPPPLCPA;

typedef int RASPPPCCP;

typedef int RASPPP_PROJECTION_INFO;

typedef enum {
    PROJECTION_INFO_TYPE_PPP = 1,
    PROJECTION_INFO_TYPE_IKEv2 = 2,
} RASPROJECTION_INFO_TYPE;

typedef enum {
    IKEV2_ID_PAYLOAD_TYPE_INVALID = 0,
    IKEV2_ID_PAYLOAD_TYPE_IPV4_ADDR = 1,
    IKEV2_ID_PAYLOAD_TYPE_FQDN = 2,
    IKEV2_ID_PAYLOAD_TYPE_RFC822_ADDR = 3,
    IKEV2_ID_PAYLOAD_TYPE_RESERVED1 = 4,
    IKEV2_ID_PAYLOAD_TYPE_ID_IPV6_ADDR = 5,
    IKEV2_ID_PAYLOAD_TYPE_RESERVED2 = 6,
    IKEV2_ID_PAYLOAD_TYPE_RESERVED3 = 7,
    IKEV2_ID_PAYLOAD_TYPE_RESERVED4 = 8,
    IKEV2_ID_PAYLOAD_TYPE_DER_ASN1_DN = 9,
    IKEV2_ID_PAYLOAD_TYPE_DER_ASN1_GN = 10,
    IKEV2_ID_PAYLOAD_TYPE_KEY_ID = 11,
    IKEV2_ID_PAYLOAD_TYPE_MAX = 12,
} IKEV2_ID_PAYLOAD_TYPE;

typedef int RAS_PROJECTION_INFO;

typedef int RASDIALFUNC;

typedef int RASDIALFUNC1;

typedef int RASDIALFUNC2;

typedef int RASDEVINFOW;

typedef int RASDEVINFOA;

typedef int RASCTRYINFO;

typedef int RASENTRYA;

typedef int RASENTRYW;

typedef int ORASADFUNC;

typedef int RASADFUNCA;

typedef int RASADFUNCW;

typedef int RASSUBENTRYA;

typedef int RASSUBENTRYW;

typedef int RASCREDENTIALSA;

typedef int RASCREDENTIALSW;

typedef int RASAUTODIALENTRYA;

typedef int RASAUTODIALENTRYW;

typedef int RASEAPUSERIDENTITYA;

typedef int RASEAPUSERIDENTITYW;

typedef int PFNRASGETBUFFER;

typedef int PFNRASFREEBUFFER;

typedef int PFNRASSENDBUFFER;

typedef int PFNRASRECEIVEBUFFER;

typedef int PFNRASRETRIEVEBUFFER;

typedef int RasCustomScriptExecuteFn;

typedef int RASCOMMSETTINGS;

typedef int PFNRASSETCOMMSETTINGS;

typedef int RAS_STATS;

typedef int RasCustomHangUpFn;

typedef int RasCustomDialFn;

typedef int RasCustomDeleteEntryNotifyFn;

typedef int RASUPDATECONN;

typedef int RASPBDLGFUNCW;

typedef int RASPBDLGFUNCA;

typedef int RASNOUSERW;

typedef int RASNOUSERA;

typedef int RasCustomDialDlgFn;

typedef int RasCustomEntryDlgFn;

typedef enum {
    ROUTER_IF_TYPE_CLIENT = 0,
    ROUTER_IF_TYPE_HOME_ROUTER = 1,
    ROUTER_IF_TYPE_FULL_ROUTER = 2,
    ROUTER_IF_TYPE_DEDICATED = 3,
    ROUTER_IF_TYPE_INTERNAL = 4,
    ROUTER_IF_TYPE_LOOPBACK = 5,
    ROUTER_IF_TYPE_TUNNEL1 = 6,
    ROUTER_IF_TYPE_DIALOUT = 7,
    ROUTER_IF_TYPE_MAX = 8,
} ROUTER_INTERFACE_TYPE;

typedef enum {
    ROUTER_IF_STATE_UNREACHABLE = 0,
    ROUTER_IF_STATE_DISCONNECTED = 1,
    ROUTER_IF_STATE_CONNECTING = 2,
    ROUTER_IF_STATE_CONNECTED = 3,
} ROUTER_CONNECTION_STATE;

typedef int MPR_INTERFACE_0;

typedef int MPR_IPINIP_INTERFACE_0;

typedef int MPR_INTERFACE_1;

typedef int MPR_INTERFACE_2;

typedef int MPR_INTERFACE_3;

typedef int MPR_DEVICE_0;

typedef int MPR_DEVICE_1;

typedef int MPR_CREDENTIALSEX_0;

typedef int MPR_CREDENTIALSEX_1;

typedef int MPR_TRANSPORT_0;

typedef int MPR_IFTRANSPORT_0;

typedef int MPR_SERVER_0;

typedef int MPR_SERVER_1;

typedef int MPR_SERVER_2;

typedef enum {
    RAS_PORT_NON_OPERATIONAL = 0,
    RAS_PORT_DISCONNECTED = 1,
    RAS_PORT_CALLING_BACK = 2,
    RAS_PORT_LISTENING = 3,
    RAS_PORT_AUTHENTICATING = 4,
    RAS_PORT_AUTHENTICATED = 5,
    RAS_PORT_INITIALIZING = 6,
} RAS_PORT_CONDITION;

typedef enum {
    RAS_HARDWARE_OPERATIONAL = 0,
    RAS_HARDWARE_FAILURE = 1,
} RAS_HARDWARE_CONDITION;

typedef int RAS_PORT_0;

typedef int RAS_PORT_1;

typedef int RAS_PORT_2;

typedef int PPP_NBFCP_INFO;

typedef int PPP_IPCP_INFO;

typedef int PPP_IPCP_INFO2;

typedef int PPP_IPXCP_INFO;

typedef int PPP_ATCP_INFO;

typedef int PPP_IPV6_CP_INFO;

typedef int PPP_INFO;

typedef int PPP_CCP_INFO;

typedef int PPP_LCP_INFO;

typedef int PPP_INFO_2;

typedef int PPP_INFO_3;

typedef int RAS_CONNECTION_0;

typedef int RAS_CONNECTION_1;

typedef int RAS_CONNECTION_2;

typedef enum {
    RAS_QUAR_STATE_NORMAL = 0,
    RAS_QUAR_STATE_QUARANTINE = 1,
    RAS_QUAR_STATE_PROBATION = 2,
    RAS_QUAR_STATE_NOT_CAPABLE = 3,
} RAS_QUARANTINE_STATE;

typedef int RAS_CONNECTION_3;

typedef int RAS_USER_0;

typedef int RAS_USER_1;

typedef int MPR_FILTER_0;

typedef int MPRAPI_OBJECT_HEADER;

typedef enum {
    MPRAPI_OBJECT_TYPE_RAS_CONNECTION_OBJECT = 1,
    MPRAPI_OBJECT_TYPE_MPR_SERVER_OBJECT = 2,
    MPRAPI_OBJECT_TYPE_MPR_SERVER_SET_CONFIG_OBJECT = 3,
    MPRAPI_OBJECT_TYPE_AUTH_VALIDATION_OBJECT = 4,
    MPRAPI_OBJECT_TYPE_UPDATE_CONNECTION_OBJECT = 5,
    MPRAPI_OBJECT_TYPE_IF_CUSTOM_CONFIG_OBJECT = 6,
} MPRAPI_OBJECT_TYPE;

typedef int PPP_PROJECTION_INFO;

typedef int PPP_PROJECTION_INFO2;

typedef int IKEV2_PROJECTION_INFO;

typedef int IKEV2_PROJECTION_INFO2;

typedef int PROJECTION_INFO;

typedef int PROJECTION_INFO2;

typedef int RAS_CONNECTION_EX;

typedef int RAS_CONNECTION_4;

typedef int ROUTER_CUSTOM_IKEv2_POLICY0;

typedef int ROUTER_IKEv2_IF_CUSTOM_CONFIG0;

typedef int MPR_IF_CUSTOMINFOEX0;

typedef int MPR_CERT_EKU;

typedef int VPN_TS_IP_ADDRESS;

typedef enum {
    MPR_VPN_TS_IPv4_ADDR_RANGE = 7,
    MPR_VPN_TS_IPv6_ADDR_RANGE = 8,
} MPR_VPN_TS_TYPE;

typedef int _MPR_VPN_SELECTOR;

typedef int MPR_VPN_TRAFFIC_SELECTORS;

typedef int ROUTER_IKEv2_IF_CUSTOM_CONFIG2;

typedef int MPR_IF_CUSTOMINFOEX2;

typedef int IKEV2_TUNNEL_CONFIG_PARAMS4;

typedef int ROUTER_IKEv2_IF_CUSTOM_CONFIG1;

typedef int MPR_IF_CUSTOMINFOEX1;

typedef int IKEV2_TUNNEL_CONFIG_PARAMS3;

typedef int IKEV2_TUNNEL_CONFIG_PARAMS2;

typedef int L2TP_TUNNEL_CONFIG_PARAMS2;

typedef int L2TP_TUNNEL_CONFIG_PARAMS1;

typedef int IKEV2_CONFIG_PARAMS;

typedef int PPTP_CONFIG_PARAMS;

typedef int L2TP_CONFIG_PARAMS1;

typedef int GRE_CONFIG_PARAMS0;

typedef int L2TP_CONFIG_PARAMS0;

typedef int SSTP_CERT_INFO;

typedef int SSTP_CONFIG_PARAMS;

typedef int MPRAPI_TUNNEL_CONFIG_PARAMS0;

typedef int MPRAPI_TUNNEL_CONFIG_PARAMS1;

typedef int MPR_SERVER_EX0;

typedef int MPR_SERVER_EX1;

typedef int MPR_SERVER_SET_CONFIG_EX0;

typedef int MPR_SERVER_SET_CONFIG_EX1;

typedef int AUTH_VALIDATION_EX;

typedef int RAS_UPDATE_CONNECTION;

typedef int PMPRADMINGETIPADDRESSFORUSER;

typedef int PMPRADMINRELEASEIPADRESS;

typedef int PMPRADMINGETIPV6ADDRESSFORUSER;

typedef int PMPRADMINRELEASEIPV6ADDRESSFORUSER;

typedef int PMPRADMINACCEPTNEWCONNECTION;

typedef int PMPRADMINACCEPTNEWCONNECTION2;

typedef int PMPRADMINACCEPTNEWCONNECTION3;

typedef int PMPRADMINACCEPTNEWLINK;

typedef int PMPRADMINCONNECTIONHANGUPNOTIFICATION;

typedef int PMPRADMINCONNECTIONHANGUPNOTIFICATION2;

typedef int PMPRADMINCONNECTIONHANGUPNOTIFICATION3;

typedef int PMPRADMINLINKHANGUPNOTIFICATION;

typedef int PMPRADMINTERMINATEDLL;

typedef int PMPRADMINACCEPTREAUTHENTICATION;

typedef int PMPRADMINACCEPTNEWCONNECTIONEX;

typedef int PMPRADMINACCEPTREAUTHENTICATIONEX;

typedef int PMPRADMINACCEPTTUNNELENDPOINTCHANGEEX;

typedef int PMPRADMINCONNECTIONHANGUPNOTIFICATIONEX;

typedef int PMPRADMINRASVALIDATEPREAUTHENTICATEDCONNECTIONEX;

typedef int MPRAPI_ADMIN_DLL_CALLBACKS;

typedef int SECURITY_MESSAGE;

typedef int RAS_SECURITY_INFO;

typedef int RASSECURITYPROC;

typedef int MGM_IF_ENTRY;

typedef int PMGM_RPF_CALLBACK;

typedef int PMGM_CREATION_ALERT_CALLBACK;

typedef int PMGM_PRUNE_ALERT_CALLBACK;

typedef int PMGM_JOIN_ALERT_CALLBACK;

typedef int PMGM_WRONG_IF_CALLBACK;

typedef int PMGM_LOCAL_JOIN_CALLBACK;

typedef int PMGM_LOCAL_LEAVE_CALLBACK;

typedef int PMGM_DISABLE_IGMP_CALLBACK;

typedef int PMGM_ENABLE_IGMP_CALLBACK;

typedef int ROUTING_PROTOCOL_CONFIG;

typedef enum {
    ANY_SOURCE = 0,
    ALL_SOURCES = 1,
} MGM_ENUM_TYPES;

typedef int SOURCE_GROUP_ENTRY;

typedef int RTM_REGN_PROFILE;

typedef int RTM_NET_ADDRESS;

typedef int RTM_PREF_INFO;

typedef int RTM_NEXTHOP_LIST;

typedef int RTM_DEST_INFO;

typedef int RTM_ROUTE_INFO;

typedef int RTM_NEXTHOP_INFO;

typedef int RTM_ENTITY_ID;

typedef int RTM_ENTITY_INFO;

typedef enum {
    RTM_ENTITY_REGISTERED = 0,
    RTM_ENTITY_DEREGISTERED = 1,
    RTM_ROUTE_EXPIRED = 2,
    RTM_CHANGE_NOTIFICATION = 3,
} RTM_EVENT_TYPE;

typedef int RTM_EVENT_CALLBACK;

typedef int RTM_ENTITY_METHOD_INPUT;

typedef int RTM_ENTITY_METHOD_OUTPUT;

typedef int RTM_ENTITY_EXPORT_METHOD;

typedef int RTM_ENTITY_EXPORT_METHODS;

typedef int RASCONNW;

typedef int RASCONNA;

typedef int RASDIALPARAMSW;

typedef int RASDIALPARAMSA;

typedef int RASEAPINFO;

typedef int RASDEVSPECIFICINFO;

typedef int RASDIALEXTENSIONS;

typedef int RASIKEV2_PROJECTION_INFO;

typedef int RASADPARAMS;

typedef int RASCUSTOMSCRIPTEXTENSIONS;

typedef int RASPBDLGW;

typedef int RASPBDLGA;

typedef int RASENTRYDLGW;

typedef int RASENTRYDLGA;

typedef int RASDIALDLG;


//--------------------------------------------------------------------------------
// Section: Functions (277)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasDialA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasDialW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasEnumConnectionsA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasEnumConnectionsW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasEnumEntriesA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasEnumEntriesW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetConnectStatusA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetConnectStatusW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetErrorStringA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetErrorStringW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasHangUpA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasHangUpW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetProjectionInfoA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetProjectionInfoW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasCreatePhonebookEntryA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasCreatePhonebookEntryW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasEditPhonebookEntryA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasEditPhonebookEntryW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasSetEntryDialParamsA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasSetEntryDialParamsW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetEntryDialParamsA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetEntryDialParamsW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasEnumDevicesA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasEnumDevicesW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetCountryInfoA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetCountryInfoW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetEntryPropertiesA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetEntryPropertiesW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasSetEntryPropertiesA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasSetEntryPropertiesW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasRenameEntryA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasRenameEntryW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasDeleteEntryA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasDeleteEntryW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasValidateEntryNameA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasValidateEntryNameW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasConnectionNotificationA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasConnectionNotificationW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetSubEntryHandleA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetSubEntryHandleW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetCredentialsA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetCredentialsW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasSetCredentialsA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasSetCredentialsW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetSubEntryPropertiesA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetSubEntryPropertiesW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasSetSubEntryPropertiesA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasSetSubEntryPropertiesW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetAutodialAddressA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetAutodialAddressW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasSetAutodialAddressA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasSetAutodialAddressW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasEnumAutodialAddressesA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasEnumAutodialAddressesW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetAutodialEnableA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetAutodialEnableW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasSetAutodialEnableA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasSetAutodialEnableW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetAutodialParamA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetAutodialParamW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasSetAutodialParamA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasSetAutodialParamW();

/*u32*/void RasGetPCscf();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasInvokeEapUI();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetLinkStatistics();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetConnectionStatistics();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasClearLinkStatistics();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasClearConnectionStatistics();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetEapUserDataA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetEapUserDataW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasSetEapUserDataA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasSetEapUserDataW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetCustomAuthDataA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetCustomAuthDataW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasSetCustomAuthDataA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasSetCustomAuthDataW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetEapUserIdentityW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void RasGetEapUserIdentityA();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void RasFreeEapUserIdentityW();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void RasFreeEapUserIdentityA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void RasDeleteSubEntryA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void RasDeleteSubEntryW();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void RasUpdateConnection();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void RasGetProjectionInfoEx();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void RasPhonebookDlgA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void RasPhonebookDlgW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void RasEntryDlgA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void RasEntryDlgW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void RasDialDlgA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void RasDialDlgW();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void MprAdminConnectionEnumEx();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void MprAdminConnectionGetInfoEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void MprAdminServerGetInfoEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void MprAdminServerSetInfoEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void MprConfigServerGetInfoEx();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void MprConfigServerSetInfoEx();

/*u32*/void MprAdminUpdateConnection();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void MprAdminIsServiceInitialized();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void MprAdminInterfaceSetCustomInfoEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void MprAdminInterfaceGetCustomInfoEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void MprConfigInterfaceGetCustomInfoEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void MprConfigInterfaceSetCustomInfoEx();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void MprAdminConnectionEnum();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void MprAdminPortEnum();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void MprAdminConnectionGetInfo();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void MprAdminPortGetInfo();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void MprAdminConnectionClearStats();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void MprAdminPortClearStats();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void MprAdminPortReset();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void MprAdminPortDisconnect();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void MprAdminConnectionRemoveQuarantine();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void MprAdminUserGetInfo();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void MprAdminUserSetInfo();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void MprAdminSendUserMessage();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void MprAdminGetPDCServer();

// TODO: this type is limited to platform 'windowsServer2000'
/*BOOL*/void MprAdminIsServiceRunning();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminServerConnect();

// TODO: this type is limited to platform 'windowsServer2000'
/*void*/void MprAdminServerDisconnect();

// TODO: this type is limited to platform 'windowsServer2003'
/*u32*/void MprAdminServerGetCredentials();

// TODO: this type is limited to platform 'windowsServer2003'
/*u32*/void MprAdminServerSetCredentials();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminBufferFree();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminGetErrorString();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminServerGetInfo();

// TODO: this type is limited to platform 'windowsServer2003'
/*u32*/void MprAdminServerSetInfo();

// TODO: this type is limited to platform 'windowsServer2003'
/*u32*/void MprAdminEstablishDomainRasServer();

// TODO: this type is limited to platform 'windowsServer2003'
/*u32*/void MprAdminIsDomainRasServer();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminTransportCreate();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminTransportSetInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminTransportGetInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminDeviceEnum();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceGetHandle();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceCreate();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceGetInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceSetInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceDelete();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceDeviceGetInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceDeviceSetInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceTransportRemove();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceTransportAdd();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceTransportGetInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceTransportSetInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceEnum();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceSetCredentials();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceGetCredentials();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceSetCredentialsEx();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceGetCredentialsEx();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceConnect();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceDisconnect();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceUpdateRoutes();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceQueryUpdateResult();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminInterfaceUpdatePhonebookInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminRegisterConnectionNotification();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminDeregisterConnectionNotification();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminMIBServerConnect();

// TODO: this type is limited to platform 'windowsServer2000'
/*void*/void MprAdminMIBServerDisconnect();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminMIBEntryCreate();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminMIBEntryDelete();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminMIBEntrySet();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminMIBEntryGet();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminMIBEntryGetFirst();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminMIBEntryGetNext();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprAdminMIBBufferFree();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigServerInstall();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigServerConnect();

// TODO: this type is limited to platform 'windowsServer2000'
/*void*/void MprConfigServerDisconnect();

/*u32*/void MprConfigServerRefresh();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigBufferFree();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigServerGetInfo();

// TODO: this type is limited to platform 'windowsServer2003'
/*u32*/void MprConfigServerSetInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigServerBackup();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigServerRestore();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigTransportCreate();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigTransportDelete();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigTransportGetHandle();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigTransportSetInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigTransportGetInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigTransportEnum();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigInterfaceCreate();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigInterfaceDelete();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigInterfaceGetHandle();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigInterfaceGetInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigInterfaceSetInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigInterfaceEnum();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigInterfaceTransportAdd();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigInterfaceTransportRemove();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigInterfaceTransportGetHandle();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigInterfaceTransportGetInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigInterfaceTransportSetInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigInterfaceTransportEnum();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigGetFriendlyName();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprConfigGetGuidName();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void MprConfigFilterGetInfo();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void MprConfigFilterSetInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprInfoCreate();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprInfoDelete();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprInfoRemoveAll();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprInfoDuplicate();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprInfoBlockAdd();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprInfoBlockRemove();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprInfoBlockSet();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprInfoBlockFind();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MprInfoBlockQuerySize();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MgmRegisterMProtocol();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MgmDeRegisterMProtocol();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MgmTakeInterfaceOwnership();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MgmReleaseInterfaceOwnership();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MgmGetProtocolOnInterface();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MgmAddGroupMembershipEntry();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MgmDeleteGroupMembershipEntry();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MgmGetMfe();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MgmGetFirstMfe();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MgmGetNextMfe();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MgmGetMfeStats();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MgmGetFirstMfeStats();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MgmGetNextMfeStats();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MgmGroupEnumerationStart();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MgmGroupEnumerationGetNext();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void MgmGroupEnumerationEnd();

/*u32*/void RtmConvertNetAddressToIpv6AddressAndLength();

/*u32*/void RtmConvertIpv6AddressAndLengthToNetAddress();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmRegisterEntity();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmDeregisterEntity();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetRegisteredEntities();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmReleaseEntities();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmLockDestination();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetOpaqueInformationPointer();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetEntityMethods();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmInvokeMethod();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmBlockMethods();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetEntityInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetDestInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetRouteInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetNextHopInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmReleaseEntityInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmReleaseDestInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmReleaseRouteInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmReleaseNextHopInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmAddRouteToDest();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmDeleteRouteToDest();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmHoldDestination();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetRoutePointer();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmLockRoute();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmUpdateAndUnlockRoute();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetExactMatchDestination();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetMostSpecificDestination();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetLessSpecificDestination();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetExactMatchRoute();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmIsBestRoute();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmAddNextHop();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmFindNextHop();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmDeleteNextHop();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetNextHopPointer();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmLockNextHop();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmCreateDestEnum();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetEnumDests();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmReleaseDests();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmCreateRouteEnum();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetEnumRoutes();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmReleaseRoutes();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmCreateNextHopEnum();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetEnumNextHops();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmReleaseNextHops();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmDeleteEnumHandle();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmRegisterForChangeNotification();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetChangedDests();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmReleaseChangedDests();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmIgnoreChangedDests();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetChangeStatus();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmMarkDestForChangeNotification();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmIsMarkedForChangeNotification();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmDeregisterFromChangeNotification();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmCreateRouteList();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmInsertInRouteList();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmCreateRouteListEnum();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmGetListEnumRoutes();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmDeleteRouteList();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void RtmReferenceHandles();

