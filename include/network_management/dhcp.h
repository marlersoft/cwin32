// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (320)
//--------------------------------------------------------------------------------
#define OPTION_PAD (UINT)0
#define OPTION_SUBNET_MASK (UINT)1
#define OPTION_TIME_OFFSET (UINT)2
#define OPTION_ROUTER_ADDRESS (UINT)3
#define OPTION_TIME_SERVERS (UINT)4
#define OPTION_IEN116_NAME_SERVERS (UINT)5
#define OPTION_DOMAIN_NAME_SERVERS (UINT)6
#define OPTION_LOG_SERVERS (UINT)7
#define OPTION_COOKIE_SERVERS (UINT)8
#define OPTION_LPR_SERVERS (UINT)9
#define OPTION_IMPRESS_SERVERS (UINT)10
#define OPTION_RLP_SERVERS (UINT)11
#define OPTION_HOST_NAME (UINT)12
#define OPTION_BOOT_FILE_SIZE (UINT)13
#define OPTION_MERIT_DUMP_FILE (UINT)14
#define OPTION_DOMAIN_NAME (UINT)15
#define OPTION_SWAP_SERVER (UINT)16
#define OPTION_ROOT_DISK (UINT)17
#define OPTION_EXTENSIONS_PATH (UINT)18
#define OPTION_BE_A_ROUTER (UINT)19
#define OPTION_NON_LOCAL_SOURCE_ROUTING (UINT)20
#define OPTION_POLICY_FILTER_FOR_NLSR (UINT)21
#define OPTION_MAX_REASSEMBLY_SIZE (UINT)22
#define OPTION_DEFAULT_TTL (UINT)23
#define OPTION_PMTU_AGING_TIMEOUT (UINT)24
#define OPTION_PMTU_PLATEAU_TABLE (UINT)25
#define OPTION_MTU (UINT)26
#define OPTION_ALL_SUBNETS_MTU (UINT)27
#define OPTION_BROADCAST_ADDRESS (UINT)28
#define OPTION_PERFORM_MASK_DISCOVERY (UINT)29
#define OPTION_BE_A_MASK_SUPPLIER (UINT)30
#define OPTION_PERFORM_ROUTER_DISCOVERY (UINT)31
#define OPTION_ROUTER_SOLICITATION_ADDR (UINT)32
#define OPTION_STATIC_ROUTES (UINT)33
#define OPTION_TRAILERS (UINT)34
#define OPTION_ARP_CACHE_TIMEOUT (UINT)35
#define OPTION_ETHERNET_ENCAPSULATION (UINT)36
#define OPTION_TTL (UINT)37
#define OPTION_KEEP_ALIVE_INTERVAL (UINT)38
#define OPTION_KEEP_ALIVE_DATA_SIZE (UINT)39
#define OPTION_NETWORK_INFO_SERVICE_DOM (UINT)40
#define OPTION_NETWORK_INFO_SERVERS (UINT)41
#define OPTION_NETWORK_TIME_SERVERS (UINT)42
#define OPTION_VENDOR_SPEC_INFO (UINT)43
#define OPTION_NETBIOS_NAME_SERVER (UINT)44
#define OPTION_NETBIOS_DATAGRAM_SERVER (UINT)45
#define OPTION_NETBIOS_NODE_TYPE (UINT)46
#define OPTION_NETBIOS_SCOPE_OPTION (UINT)47
#define OPTION_XWINDOW_FONT_SERVER (UINT)48
#define OPTION_XWINDOW_DISPLAY_MANAGER (UINT)49
#define OPTION_REQUESTED_ADDRESS (UINT)50
#define OPTION_LEASE_TIME (UINT)51
#define OPTION_OK_TO_OVERLAY (UINT)52
#define OPTION_MESSAGE_TYPE (UINT)53
#define OPTION_SERVER_IDENTIFIER (UINT)54
#define OPTION_PARAMETER_REQUEST_LIST (UINT)55
#define OPTION_MESSAGE (UINT)56
#define OPTION_MESSAGE_LENGTH (UINT)57
#define OPTION_RENEWAL_TIME (UINT)58
#define OPTION_REBIND_TIME (UINT)59
#define OPTION_CLIENT_CLASS_INFO (UINT)60
#define OPTION_CLIENT_ID (UINT)61
#define OPTION_TFTP_SERVER_NAME (UINT)66
#define OPTION_BOOTFILE_NAME (UINT)67
#define OPTION_MSFT_IE_PROXY (UINT)252
#define OPTION_END (UINT)255
#define DHCPCAPI_REQUEST_PERSISTENT (UINT)1
#define DHCPCAPI_REQUEST_SYNCHRONOUS (UINT)2
#define DHCPCAPI_REQUEST_ASYNCHRONOUS (UINT)4
#define DHCPCAPI_REQUEST_CANCEL (UINT)8
#define DHCPCAPI_REQUEST_MASK (UINT)15
#define DHCPCAPI_REGISTER_HANDLE_EVENT (UINT)1
#define DHCPCAPI_DEREGISTER_HANDLE_EVENT (UINT)1
#define ERROR_DHCP_REGISTRY_INIT_FAILED (UINT)20000
#define ERROR_DHCP_DATABASE_INIT_FAILED (UINT)20001
#define ERROR_DHCP_RPC_INIT_FAILED (UINT)20002
#define ERROR_DHCP_NETWORK_INIT_FAILED (UINT)20003
#define ERROR_DHCP_SUBNET_EXITS (UINT)20004
#define ERROR_DHCP_SUBNET_NOT_PRESENT (UINT)20005
#define ERROR_DHCP_PRIMARY_NOT_FOUND (UINT)20006
#define ERROR_DHCP_ELEMENT_CANT_REMOVE (UINT)20007
#define ERROR_DHCP_OPTION_EXITS (UINT)20009
#define ERROR_DHCP_OPTION_NOT_PRESENT (UINT)20010
#define ERROR_DHCP_ADDRESS_NOT_AVAILABLE (UINT)20011
#define ERROR_DHCP_RANGE_FULL (UINT)20012
#define ERROR_DHCP_JET_ERROR (UINT)20013
#define ERROR_DHCP_CLIENT_EXISTS (UINT)20014
#define ERROR_DHCP_INVALID_DHCP_MESSAGE (UINT)20015
#define ERROR_DHCP_INVALID_DHCP_CLIENT (UINT)20016
#define ERROR_DHCP_SERVICE_PAUSED (UINT)20017
#define ERROR_DHCP_NOT_RESERVED_CLIENT (UINT)20018
#define ERROR_DHCP_RESERVED_CLIENT (UINT)20019
#define ERROR_DHCP_RANGE_TOO_SMALL (UINT)20020
#define ERROR_DHCP_IPRANGE_EXITS (UINT)20021
#define ERROR_DHCP_RESERVEDIP_EXITS (UINT)20022
#define ERROR_DHCP_INVALID_RANGE (UINT)20023
#define ERROR_DHCP_RANGE_EXTENDED (UINT)20024
#define ERROR_EXTEND_TOO_SMALL (UINT)20025
#define WARNING_EXTENDED_LESS (INT)20026
#define ERROR_DHCP_JET_CONV_REQUIRED (UINT)20027
#define ERROR_SERVER_INVALID_BOOT_FILE_TABLE (UINT)20028
#define ERROR_SERVER_UNKNOWN_BOOT_FILE_NAME (UINT)20029
#define ERROR_DHCP_SUPER_SCOPE_NAME_TOO_LONG (UINT)20030
#define ERROR_DHCP_IP_ADDRESS_IN_USE (UINT)20032
#define ERROR_DHCP_LOG_FILE_PATH_TOO_LONG (UINT)20033
#define ERROR_DHCP_UNSUPPORTED_CLIENT (UINT)20034
#define ERROR_DHCP_JET97_CONV_REQUIRED (UINT)20036
#define ERROR_DHCP_ROGUE_INIT_FAILED (UINT)20037
#define ERROR_DHCP_ROGUE_SAMSHUTDOWN (UINT)20038
#define ERROR_DHCP_ROGUE_NOT_AUTHORIZED (UINT)20039
#define ERROR_DHCP_ROGUE_DS_UNREACHABLE (UINT)20040
#define ERROR_DHCP_ROGUE_DS_CONFLICT (UINT)20041
#define ERROR_DHCP_ROGUE_NOT_OUR_ENTERPRISE (UINT)20042
#define ERROR_DHCP_ROGUE_STANDALONE_IN_DS (UINT)20043
#define ERROR_DHCP_CLASS_NOT_FOUND (UINT)20044
#define ERROR_DHCP_CLASS_ALREADY_EXISTS (UINT)20045
#define ERROR_DHCP_SCOPE_NAME_TOO_LONG (UINT)20046
#define ERROR_DHCP_DEFAULT_SCOPE_EXITS (UINT)20047
#define ERROR_DHCP_CANT_CHANGE_ATTRIBUTE (UINT)20048
#define ERROR_DHCP_IPRANGE_CONV_ILLEGAL (UINT)20049
#define ERROR_DHCP_NETWORK_CHANGED (UINT)20050
#define ERROR_DHCP_CANNOT_MODIFY_BINDINGS (UINT)20051
#define ERROR_DHCP_SUBNET_EXISTS (UINT)20052
#define ERROR_DHCP_MSCOPE_EXISTS (UINT)20053
#define ERROR_MSCOPE_RANGE_TOO_SMALL (UINT)20054
#define ERROR_DHCP_EXEMPTION_EXISTS (UINT)20055
#define ERROR_DHCP_EXEMPTION_NOT_PRESENT (UINT)20056
#define ERROR_DHCP_INVALID_PARAMETER_OPTION32 (UINT)20057
#define ERROR_DDS_NO_DS_AVAILABLE (UINT)20070
#define ERROR_DDS_NO_DHCP_ROOT (UINT)20071
#define ERROR_DDS_UNEXPECTED_ERROR (UINT)20072
#define ERROR_DDS_TOO_MANY_ERRORS (UINT)20073
#define ERROR_DDS_DHCP_SERVER_NOT_FOUND (UINT)20074
#define ERROR_DDS_OPTION_ALREADY_EXISTS (UINT)20075
#define ERROR_DDS_OPTION_DOES_NOT_EXIST (UINT)20076
#define ERROR_DDS_CLASS_EXISTS (UINT)20077
#define ERROR_DDS_CLASS_DOES_NOT_EXIST (UINT)20078
#define ERROR_DDS_SERVER_ALREADY_EXISTS (UINT)20079
#define ERROR_DDS_SERVER_DOES_NOT_EXIST (UINT)20080
#define ERROR_DDS_SERVER_ADDRESS_MISMATCH (UINT)20081
#define ERROR_DDS_SUBNET_EXISTS (UINT)20082
#define ERROR_DDS_SUBNET_HAS_DIFF_SSCOPE (UINT)20083
#define ERROR_DDS_SUBNET_NOT_PRESENT (UINT)20084
#define ERROR_DDS_RESERVATION_NOT_PRESENT (UINT)20085
#define ERROR_DDS_RESERVATION_CONFLICT (UINT)20086
#define ERROR_DDS_POSSIBLE_RANGE_CONFLICT (UINT)20087
#define ERROR_DDS_RANGE_DOES_NOT_EXIST (UINT)20088
#define ERROR_DHCP_DELETE_BUILTIN_CLASS (UINT)20089
#define ERROR_DHCP_INVALID_SUBNET_PREFIX (UINT)20091
#define ERROR_DHCP_INVALID_DELAY (UINT)20092
#define ERROR_DHCP_LINKLAYER_ADDRESS_EXISTS (UINT)20093
#define ERROR_DHCP_LINKLAYER_ADDRESS_RESERVATION_EXISTS (UINT)20094
#define ERROR_DHCP_LINKLAYER_ADDRESS_DOES_NOT_EXIST (UINT)20095
#define ERROR_DHCP_HARDWARE_ADDRESS_TYPE_ALREADY_EXEMPT (UINT)20101
#define ERROR_DHCP_UNDEFINED_HARDWARE_ADDRESS_TYPE (UINT)20102
#define ERROR_DHCP_OPTION_TYPE_MISMATCH (UINT)20103
#define ERROR_DHCP_POLICY_BAD_PARENT_EXPR (UINT)20104
#define ERROR_DHCP_POLICY_EXISTS (UINT)20105
#define ERROR_DHCP_POLICY_RANGE_EXISTS (UINT)20106
#define ERROR_DHCP_POLICY_RANGE_BAD (UINT)20107
#define ERROR_DHCP_RANGE_INVALID_IN_SERVER_POLICY (UINT)20108
#define ERROR_DHCP_INVALID_POLICY_EXPRESSION (UINT)20109
#define ERROR_DHCP_INVALID_PROCESSING_ORDER (UINT)20110
#define ERROR_DHCP_POLICY_NOT_FOUND (UINT)20111
#define ERROR_SCOPE_RANGE_POLICY_RANGE_CONFLICT (UINT)20112
#define ERROR_DHCP_FO_SCOPE_ALREADY_IN_RELATIONSHIP (UINT)20113
#define ERROR_DHCP_FO_RELATIONSHIP_EXISTS (UINT)20114
#define ERROR_DHCP_FO_RELATIONSHIP_DOES_NOT_EXIST (UINT)20115
#define ERROR_DHCP_FO_SCOPE_NOT_IN_RELATIONSHIP (UINT)20116
#define ERROR_DHCP_FO_RELATION_IS_SECONDARY (UINT)20117
#define ERROR_DHCP_FO_NOT_SUPPORTED (UINT)20118
#define ERROR_DHCP_FO_TIME_OUT_OF_SYNC (UINT)20119
#define ERROR_DHCP_FO_STATE_NOT_NORMAL (UINT)20120
#define ERROR_DHCP_NO_ADMIN_PERMISSION (UINT)20121
#define ERROR_DHCP_SERVER_NOT_REACHABLE (UINT)20122
#define ERROR_DHCP_SERVER_NOT_RUNNING (UINT)20123
#define ERROR_DHCP_SERVER_NAME_NOT_RESOLVED (UINT)20124
#define ERROR_DHCP_FO_RELATIONSHIP_NAME_TOO_LONG (UINT)20125
#define ERROR_DHCP_REACHED_END_OF_SELECTION (UINT)20126
#define ERROR_DHCP_FO_ADDSCOPE_LEASES_NOT_SYNCED (UINT)20127
#define ERROR_DHCP_FO_MAX_RELATIONSHIPS (UINT)20128
#define ERROR_DHCP_FO_IPRANGE_TYPE_CONV_ILLEGAL (UINT)20129
#define ERROR_DHCP_FO_MAX_ADD_SCOPES (UINT)20130
#define ERROR_DHCP_FO_BOOT_NOT_SUPPORTED (UINT)20131
#define ERROR_DHCP_FO_RANGE_PART_OF_REL (UINT)20132
#define ERROR_DHCP_FO_SCOPE_SYNC_IN_PROGRESS (UINT)20133
#define ERROR_DHCP_FO_FEATURE_NOT_SUPPORTED (UINT)20134
#define ERROR_DHCP_POLICY_FQDN_RANGE_UNSUPPORTED (UINT)20135
#define ERROR_DHCP_POLICY_FQDN_OPTION_UNSUPPORTED (UINT)20136
#define ERROR_DHCP_POLICY_EDIT_FQDN_UNSUPPORTED (UINT)20137
#define ERROR_DHCP_NAP_NOT_SUPPORTED (UINT)20138
#define ERROR_LAST_DHCP_SERVER_ERROR (UINT)20139
#define DHCP_SUBNET_INFO_VQ_FLAG_QUARANTINE (UINT)1
#define MAX_PATTERN_LENGTH (UINT)255
#define MAC_ADDRESS_LENGTH (UINT)6
#define HWTYPE_ETHERNET_10MB (UINT)1
#define FILTER_STATUS_NONE (UINT)1
#define FILTER_STATUS_FULL_MATCH_IN_ALLOW_LIST (UINT)2
#define FILTER_STATUS_FULL_MATCH_IN_DENY_LIST (UINT)4
#define FILTER_STATUS_WILDCARD_MATCH_IN_ALLOW_LIST (UINT)8
#define FILTER_STATUS_WILDCARD_MATCH_IN_DENY_LIST (UINT)16
#define Set_APIProtocolSupport (UINT)1
#define Set_DatabaseName (UINT)2
#define Set_DatabasePath (UINT)4
#define Set_BackupPath (UINT)8
#define Set_BackupInterval (UINT)16
#define Set_DatabaseLoggingFlag (UINT)32
#define Set_RestoreFlag (UINT)64
#define Set_DatabaseCleanupInterval (UINT)128
#define Set_DebugFlag (UINT)256
#define Set_PingRetries (UINT)512
#define Set_BootFileTable (UINT)1024
#define Set_AuditLogState (UINT)2048
#define Set_QuarantineON (UINT)4096
#define Set_QuarantineDefFail (UINT)8192
#define CLIENT_TYPE_UNSPECIFIED (UINT)0
#define CLIENT_TYPE_DHCP (UINT)1
#define CLIENT_TYPE_BOOTP (UINT)2
#define CLIENT_TYPE_RESERVATION_FLAG (UINT)4
#define CLIENT_TYPE_NONE (UINT)100
#define Set_UnicastFlag (UINT)1
#define Set_RapidCommitFlag (UINT)2
#define Set_PreferredLifetime (UINT)4
#define Set_ValidLifetime (UINT)8
#define Set_T1 (UINT)16
#define Set_T2 (UINT)32
#define Set_PreferredLifetimeIATA (UINT)64
#define Set_ValidLifetimeIATA (UINT)128
#define V5_ADDRESS_STATE_OFFERED (UINT)0
#define V5_ADDRESS_STATE_ACTIVE (UINT)1
#define V5_ADDRESS_STATE_DECLINED (UINT)2
#define V5_ADDRESS_STATE_DOOM (UINT)3
#define V5_ADDRESS_BIT_DELETED (UINT)128
#define V5_ADDRESS_BIT_UNREGISTERED (UINT)64
#define V5_ADDRESS_BIT_BOTH_REC (UINT)32
#define V5_ADDRESS_EX_BIT_DISABLE_PTR_RR (UINT)1
#define DNS_FLAG_ENABLED (UINT)1
#define DNS_FLAG_UPDATE_DOWNLEVEL (UINT)2
#define DNS_FLAG_CLEANUP_EXPIRED (UINT)4
#define DNS_FLAG_UPDATE_BOTH_ALWAYS (UINT)16
#define DNS_FLAG_UPDATE_DHCID (UINT)32
#define DNS_FLAG_DISABLE_PTR_UPDATE (UINT)64
#define DNS_FLAG_HAS_DNS_SUFFIX (UINT)128
#define DHCP_OPT_ENUM_IGNORE_VENDOR (UINT)1
#define DHCP_OPT_ENUM_USE_CLASSNAME (UINT)2
#define DHCP_FLAGS_DONT_ACCESS_DS (UINT)1
#define DHCP_FLAGS_DONT_DO_RPC (UINT)2
#define DHCP_FLAGS_OPTION_IS_VENDOR (UINT)3
#define DHCP_ATTRIB_BOOL_IS_ROGUE (UINT)1
#define DHCP_ATTRIB_BOOL_IS_DYNBOOTP (UINT)2
#define DHCP_ATTRIB_BOOL_IS_PART_OF_DSDC (UINT)3
#define DHCP_ATTRIB_BOOL_IS_BINDING_AWARE (UINT)4
#define DHCP_ATTRIB_BOOL_IS_ADMIN (UINT)5
#define DHCP_ATTRIB_ULONG_RESTORE_STATUS (UINT)6
#define DHCP_ATTRIB_TYPE_BOOL (UINT)1
#define DHCP_ATTRIB_TYPE_ULONG (UINT)2
#define DHCP_ENDPOINT_FLAG_CANT_MODIFY (UINT)1
#define QUARANTIN_OPTION_BASE (UINT)43220
#define QUARANTINE_SCOPE_QUARPROFILE_OPTION (UINT)43221
#define QUARANTINE_CONFIG_OPTION (UINT)43222
#define ADDRESS_TYPE_IANA (UINT)0
#define ADDRESS_TYPE_IATA (UINT)1
#define DHCP_MIN_DELAY (UINT)0
#define DHCP_MAX_DELAY (UINT)1000
#define DHCP_FAILOVER_DELETE_SCOPES (UINT)1
#define DHCP_FAILOVER_MAX_NUM_ADD_SCOPES (UINT)400
#define DHCP_FAILOVER_MAX_NUM_REL (UINT)31
#define MCLT (UINT)1
#define SAFEPERIOD (UINT)2
#define CHANGESTATE (UINT)4
#define PERCENTAGE (UINT)8
#define MODE (UINT)16
#define PREVSTATE (UINT)32
#define SHAREDSECRET (UINT)64
#define DHCP_CONTROL_START (UINT)1
#define DHCP_CONTROL_STOP (UINT)2
#define DHCP_CONTROL_PAUSE (UINT)3
#define DHCP_CONTROL_CONTINUE (UINT)4
#define DHCP_DROP_DUPLICATE (UINT)1
#define DHCP_DROP_NOMEM (UINT)2
#define DHCP_DROP_INTERNAL_ERROR (UINT)3
#define DHCP_DROP_TIMEOUT (UINT)4
#define DHCP_DROP_UNAUTH (UINT)5
#define DHCP_DROP_PAUSED (UINT)6
#define DHCP_DROP_NO_SUBNETS (UINT)7
#define DHCP_DROP_INVALID (UINT)8
#define DHCP_DROP_WRONG_SERVER (UINT)9
#define DHCP_DROP_NOADDRESS (UINT)10
#define DHCP_DROP_PROCESSED (UINT)11
#define DHCP_DROP_GEN_FAILURE (UINT)256
#define DHCP_SEND_PACKET (UINT)268435456
#define DHCP_PROB_CONFLICT (UINT)536870913
#define DHCP_PROB_DECLINE (UINT)536870914
#define DHCP_PROB_RELEASE (UINT)536870915
#define DHCP_PROB_NACKED (UINT)536870916
#define DHCP_GIVE_ADDRESS_NEW (UINT)805306369
#define DHCP_GIVE_ADDRESS_OLD (UINT)805306370
#define DHCP_CLIENT_BOOTP (UINT)805306371
#define DHCP_CLIENT_DHCP (UINT)805306372
#define DHCPV6_OPTION_CLIENTID (UINT)1
#define DHCPV6_OPTION_SERVERID (UINT)2
#define DHCPV6_OPTION_IA_NA (UINT)3
#define DHCPV6_OPTION_IA_TA (UINT)4
#define DHCPV6_OPTION_ORO (UINT)6
#define DHCPV6_OPTION_PREFERENCE (UINT)7
#define DHCPV6_OPTION_UNICAST (UINT)12
#define DHCPV6_OPTION_RAPID_COMMIT (UINT)14
#define DHCPV6_OPTION_USER_CLASS (UINT)15
#define DHCPV6_OPTION_VENDOR_CLASS (UINT)16
#define DHCPV6_OPTION_VENDOR_OPTS (UINT)17
#define DHCPV6_OPTION_RECONF_MSG (UINT)19
#define DHCPV6_OPTION_SIP_SERVERS_NAMES (UINT)21
#define DHCPV6_OPTION_SIP_SERVERS_ADDRS (UINT)22
#define DHCPV6_OPTION_DNS_SERVERS (UINT)23
#define DHCPV6_OPTION_DOMAIN_LIST (UINT)24
#define DHCPV6_OPTION_IA_PD (UINT)25
#define DHCPV6_OPTION_NIS_SERVERS (UINT)27
#define DHCPV6_OPTION_NISP_SERVERS (UINT)28
#define DHCPV6_OPTION_NIS_DOMAIN_NAME (UINT)29
#define DHCPV6_OPTION_NISP_DOMAIN_NAME (UINT)30

//--------------------------------------------------------------------------------
// Section: Types (164)
//--------------------------------------------------------------------------------
typedef int DHCP_SERVER_OPTIONS;

typedef int DHCPV6CAPI_PARAMS;

typedef int DHCPV6CAPI_PARAMS_ARRAY;

typedef int DHCPV6CAPI_CLASSID;

typedef enum {
    STATUS_NO_ERROR = 0,
    STATUS_UNSPECIFIED_FAILURE = 1,
    STATUS_NO_BINDING = 3,
    STATUS_NOPREFIX_AVAIL = 6,
} StatusCode;

typedef int DHCPV6Prefix;

typedef int DHCPV6PrefixLeaseInformation;

typedef int DHCPAPI_PARAMS;

typedef int DHCPCAPI_PARAMS_ARRAY;

typedef int DHCPCAPI_CLASSID;

typedef int LPDHCP_CONTROL;

typedef int LPDHCP_NEWPKT;

typedef int LPDHCP_DROP_SEND;

typedef int LPDHCP_PROB;

typedef int LPDHCP_GIVE_ADDRESS;

typedef int LPDHCP_HANDLE_OPTIONS;

typedef int LPDHCP_DELETE_CLIENT;

typedef int DHCP_CALLOUT_TABLE;

typedef int LPDHCP_ENTRY_POINT_FUNC;

typedef int DATE_TIME;

typedef int DHCP_IP_RANGE;

typedef int DHCP_BINARY_DATA;

typedef int DHCP_HOST_INFO;

typedef enum {
    DhcpFullForce = 0,
    DhcpNoForce = 1,
    DhcpFailoverForce = 2,
} DHCP_FORCE_FLAG;

typedef int DWORD_DWORD;

typedef enum {
    DhcpSubnetEnabled = 0,
    DhcpSubnetDisabled = 1,
    DhcpSubnetEnabledSwitched = 2,
    DhcpSubnetDisabledSwitched = 3,
    DhcpSubnetInvalidState = 4,
} DHCP_SUBNET_STATE;

typedef int DHCP_SUBNET_INFO;

typedef int DHCP_SUBNET_INFO_VQ;

typedef int DHCP_IP_ARRAY;

typedef int DHCP_IP_CLUSTER;

typedef int DHCP_IP_RESERVATION;

typedef enum {
    DhcpIpRanges = 0,
    DhcpSecondaryHosts = 1,
    DhcpReservedIps = 2,
    DhcpExcludedIpRanges = 3,
    DhcpIpUsedClusters = 4,
    DhcpIpRangesDhcpOnly = 5,
    DhcpIpRangesDhcpBootp = 6,
    DhcpIpRangesBootpOnly = 7,
} DHCP_SUBNET_ELEMENT_TYPE;

typedef int DHCP_SUBNET_ELEMENT_DATA;

typedef int DHCP_SUBNET_ELEMENT_UNION;

typedef int DHCP_SUBNET_ELEMENT_INFO_ARRAY;

typedef int DHCP_IPV6_ADDRESS;

typedef enum {
    Deny = 0,
    Allow = 1,
} DHCP_FILTER_LIST_TYPE;

typedef int DHCP_ADDR_PATTERN;

typedef int DHCP_FILTER_ADD_INFO;

typedef int DHCP_FILTER_GLOBAL_INFO;

typedef int DHCP_FILTER_RECORD;

typedef int DHCP_FILTER_ENUM_INFO;

typedef enum {
    DhcpByteOption = 0,
    DhcpWordOption = 1,
    DhcpDWordOption = 2,
    DhcpDWordDWordOption = 3,
    DhcpIpAddressOption = 4,
    DhcpStringDataOption = 5,
    DhcpBinaryDataOption = 6,
    DhcpEncapsulatedDataOption = 7,
    DhcpIpv6AddressOption = 8,
} DHCP_OPTION_DATA_TYPE;

typedef int DHCP_OPTION_DATA_ELEMENT;

typedef int DHCP_OPTION_ELEMENT_UNION;

typedef int DHCP_OPTION_DATA;

typedef enum {
    DhcpUnaryElementTypeOption = 0,
    DhcpArrayTypeOption = 1,
} DHCP_OPTION_TYPE;

typedef int DHCP_OPTION;

typedef int DHCP_OPTION_ARRAY;

typedef int DHCP_OPTION_VALUE;

typedef int DHCP_OPTION_VALUE_ARRAY;

typedef enum {
    DhcpDefaultOptions = 0,
    DhcpGlobalOptions = 1,
    DhcpSubnetOptions = 2,
    DhcpReservedOptions = 3,
    DhcpMScopeOptions = 4,
} DHCP_OPTION_SCOPE_TYPE;

typedef int DHCP_RESERVED_SCOPE;

typedef int DHCP_OPTION_SCOPE_INFO;

typedef enum {
    DhcpDefaultOptions6 = 0,
    DhcpScopeOptions6 = 1,
    DhcpReservedOptions6 = 2,
    DhcpGlobalOptions6 = 3,
} DHCP_OPTION_SCOPE_TYPE6;

typedef int DHCP_RESERVED_SCOPE6;

typedef int DHCP_OPTION_SCOPE_INFO6;

typedef int DHCP_OPTION_SCOPE_UNION6;

typedef int DHCP_OPTION_LIST;

typedef int DHCP_CLIENT_INFO;

typedef int DHCP_CLIENT_INFO_ARRAY;

typedef enum {
    NOQUARANTINE = 0,
    RESTRICTEDACCESS = 1,
    DROPPACKET = 2,
    PROBATION = 3,
    EXEMPT = 4,
    DEFAULTQUARSETTING = 5,
    NOQUARINFO = 6,
} QuarantineStatus;

typedef int DHCP_CLIENT_INFO_VQ;

typedef int DHCP_CLIENT_INFO_ARRAY_VQ;

typedef int DHCP_CLIENT_FILTER_STATUS_INFO;

typedef int DHCP_CLIENT_FILTER_STATUS_INFO_ARRAY;

typedef int DHCP_CLIENT_INFO_PB;

typedef int DHCP_CLIENT_INFO_PB_ARRAY;

typedef enum {
    DhcpClientIpAddress = 0,
    DhcpClientHardwareAddress = 1,
    DhcpClientName = 2,
} DHCP_SEARCH_INFO_TYPE;

typedef int DHCP_SEARCH_INFO;

typedef int DHCP_CLIENT_SEARCH_UNION;

typedef enum {
    DhcpPropTypeByte = 0,
    DhcpPropTypeWord = 1,
    DhcpPropTypeDword = 2,
    DhcpPropTypeString = 3,
    DhcpPropTypeBinary = 4,
} DHCP_PROPERTY_TYPE;

typedef enum {
    DhcpPropIdPolicyDnsSuffix = 0,
    DhcpPropIdClientAddressStateEx = 1,
} DHCP_PROPERTY_ID;

typedef int DHCP_PROPERTY;

typedef int DHCP_PROPERTY_ARRAY;

typedef int DHCP_CLIENT_INFO_EX;

typedef int DHCP_CLIENT_INFO_EX_ARRAY;

typedef int SCOPE_MIB_INFO;

typedef int DHCP_MIB_INFO;

typedef int SCOPE_MIB_INFO_VQ;

typedef int DHCP_MIB_INFO_VQ;

typedef int SCOPE_MIB_INFO_V5;

typedef int DHCP_MIB_INFO_V5;

typedef int DHCP_SERVER_CONFIG_INFO;

typedef enum {
    DhcpRegistryFix = 0,
    DhcpDatabaseFix = 1,
} DHCP_SCAN_FLAG;

typedef int DHCP_SCAN_ITEM;

typedef int DHCP_SCAN_LIST;

typedef int DHCP_CLASS_INFO;

typedef int DHCP_CLASS_INFO_ARRAY;

typedef int DHCP_CLASS_INFO_V6;

typedef int DHCP_CLASS_INFO_ARRAY_V6;

typedef int DHCP_SERVER_SPECIFIC_STRINGS;

typedef int DHCP_IP_RESERVATION_V4;

typedef int DHCP_IP_RESERVATION_INFO;

typedef int DHCP_RESERVATION_INFO_ARRAY;

typedef int DHCP_SUBNET_ELEMENT_DATA_V4;

typedef int DHCP_SUBNET_ELEMENT_UNION_V4;

typedef int DHCP_SUBNET_ELEMENT_INFO_ARRAY_V4;

typedef int DHCP_CLIENT_INFO_V4;

typedef int DHCP_CLIENT_INFO_ARRAY_V4;

typedef int DHCP_SERVER_CONFIG_INFO_V4;

typedef int DHCP_SERVER_CONFIG_INFO_VQ;

typedef int DHCP_SERVER_CONFIG_INFO_V6;

typedef int DHCP_SUPER_SCOPE_TABLE_ENTRY;

typedef int DHCP_SUPER_SCOPE_TABLE;

typedef int DHCP_CLIENT_INFO_V5;

typedef int DHCP_CLIENT_INFO_ARRAY_V5;

typedef int DHCP_ALL_OPTIONS;

typedef int DHCP_ALL_OPTION_VALUES;

typedef int DHCP_ALL_OPTION_VALUES_PB;

typedef int DHCPDS_SERVER;

typedef int DHCPDS_SERVERS;

typedef int DHCP_ATTRIB;

typedef int DHCP_ATTRIB_ARRAY;

typedef int DHCP_BOOTP_IP_RANGE;

typedef int DHCP_SUBNET_ELEMENT_DATA_V5;

typedef int DHCP_SUBNET_ELEMENT_INFO_ARRAY_V5;

typedef int DHCP_PERF_STATS;

typedef int DHCP_BIND_ELEMENT;

typedef int DHCP_BIND_ELEMENT_ARRAY;

typedef int DHCPV6_BIND_ELEMENT;

typedef int DHCPV6_BIND_ELEMENT_ARRAY;

typedef int DHCP_IP_RANGE_V6;

typedef int DHCP_HOST_INFO_V6;

typedef int DHCP_SUBNET_INFO_V6;

typedef int SCOPE_MIB_INFO_V6;

typedef int DHCP_MIB_INFO_V6;

typedef int DHCP_IP_RESERVATION_V6;

typedef enum {
    Dhcpv6IpRanges = 0,
    Dhcpv6ReservedIps = 1,
    Dhcpv6ExcludedIpRanges = 2,
} DHCP_SUBNET_ELEMENT_TYPE_V6;

typedef int DHCP_SUBNET_ELEMENT_DATA_V6;

typedef int DHCP_SUBNET_ELEMENT_UNION_V6;

typedef int DHCP_SUBNET_ELEMENT_INFO_ARRAY_V6;

typedef int DHCP_CLIENT_INFO_V6;

typedef int DHCPV6_IP_ARRAY;

typedef int DHCP_CLIENT_INFO_ARRAY_V6;

typedef enum {
    Dhcpv6ClientIpAddress = 0,
    Dhcpv6ClientDUID = 1,
    Dhcpv6ClientName = 2,
} DHCP_SEARCH_INFO_TYPE_V6;

typedef int DHCP_SEARCH_INFO_V6;

typedef enum {
    DhcpAttrHWAddr = 0,
    DhcpAttrOption = 1,
    DhcpAttrSubOption = 2,
    DhcpAttrFqdn = 3,
    DhcpAttrFqdnSingleLabel = 4,
} DHCP_POL_ATTR_TYPE;

typedef enum {
    DhcpCompEqual = 0,
    DhcpCompNotEqual = 1,
    DhcpCompBeginsWith = 2,
    DhcpCompNotBeginWith = 3,
    DhcpCompEndsWith = 4,
    DhcpCompNotEndWith = 5,
} DHCP_POL_COMPARATOR;

typedef enum {
    DhcpLogicalOr = 0,
    DhcpLogicalAnd = 1,
} DHCP_POL_LOGIC_OPER;

typedef enum {
    DhcpUpdatePolicyName = 1,
    DhcpUpdatePolicyOrder = 2,
    DhcpUpdatePolicyExpr = 4,
    DhcpUpdatePolicyRanges = 8,
    DhcpUpdatePolicyDescr = 16,
    DhcpUpdatePolicyStatus = 32,
    DhcpUpdatePolicyDnsSuffix = 64,
} DHCP_POLICY_FIELDS_TO_UPDATE;

typedef int DHCP_POL_COND;

typedef int DHCP_POL_COND_ARRAY;

typedef int DHCP_POL_EXPR;

typedef int DHCP_POL_EXPR_ARRAY;

typedef int DHCP_IP_RANGE_ARRAY;

typedef int DHCP_POLICY;

typedef int DHCP_POLICY_ARRAY;

typedef int DHCP_POLICY_EX;

typedef int DHCP_POLICY_EX_ARRAY;

typedef enum {
    DhcpStatelessPurgeInterval = 1,
    DhcpStatelessStatus = 2,
} DHCPV6_STATELESS_PARAM_TYPE;

typedef int DHCPV6_STATELESS_PARAMS;

typedef int DHCPV6_STATELESS_SCOPE_STATS;

typedef int DHCPV6_STATELESS_STATS;

typedef enum {
    LoadBalance = 0,
    HotStandby = 1,
} DHCP_FAILOVER_MODE;

typedef enum {
    PrimaryServer = 0,
    SecondaryServer = 1,
} DHCP_FAILOVER_SERVER;

typedef enum {
    NO_STATE = 0,
    INIT = 1,
    STARTUP = 2,
    NORMAL = 3,
    COMMUNICATION_INT = 4,
    PARTNER_DOWN = 5,
    POTENTIAL_CONFLICT = 6,
    CONFLICT_DONE = 7,
    RESOLUTION_INT = 8,
    RECOVER = 9,
    RECOVER_WAIT = 10,
    RECOVER_DONE = 11,
    PAUSED = 12,
    SHUTDOWN = 13,
} FSM_STATE;

typedef int DHCP_FAILOVER_RELATIONSHIP;

typedef int DHCP_FAILOVER_RELATIONSHIP_ARRAY;

typedef int DHCPV4_FAILOVER_CLIENT_INFO;

typedef int DHCPV4_FAILOVER_CLIENT_INFO_ARRAY;

typedef int DHCPV4_FAILOVER_CLIENT_INFO_EX;

typedef int DHCP_FAILOVER_STATISTICS;

typedef int DHCP_SERVER_OPTIONS;


//--------------------------------------------------------------------------------
// Section: Functions (210)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void Dhcpv6CApiInitialize();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void Dhcpv6CApiCleanup();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void Dhcpv6RequestParams();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void Dhcpv6RequestPrefix();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void Dhcpv6RenewPrefix();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void Dhcpv6ReleasePrefix();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void DhcpCApiInitialize();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void DhcpCApiCleanup();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void DhcpRequestParams();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void DhcpUndoRequestParams();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void DhcpRegisterParamChange();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void DhcpDeRegisterParamChange();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void DhcpRemoveDNSRegistrations();

/*u32*/void DhcpGetOriginalSubnetMask();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpAddFilterV4();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpDeleteFilterV4();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpSetFilterV4();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetFilterV4();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpEnumFilterV4();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpCreateSubnet();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpSetSubnetInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpGetSubnetInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpEnumSubnets();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpAddSubnetElement();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpEnumSubnetElements();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpRemoveSubnetElement();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpDeleteSubnet();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpCreateOption();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpSetOptionInfo();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetOptionInfo();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpEnumOptions();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpRemoveOption();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpSetOptionValue();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpSetOptionValues();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpGetOptionValue();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpEnumOptionValues();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpRemoveOptionValue();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpCreateClientInfoVQ();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpSetClientInfoVQ();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetClientInfoVQ();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpEnumSubnetClientsVQ();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpEnumSubnetClientsFilterStatusInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpCreateClientInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpSetClientInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpGetClientInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpDeleteClientInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpEnumSubnetClients();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetClientOptions();

/*u32*/void DhcpGetMibInfo();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpServerSetConfig();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpServerGetConfig();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpScanDatabase();

// TODO: this type is limited to platform 'windowsServer2000'
/*void*/void DhcpRpcFreeMemory();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpGetVersion();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpAddSubnetElementV4();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpEnumSubnetElementsV4();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpRemoveSubnetElementV4();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpCreateClientInfoV4();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpSetClientInfoV4();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetClientInfoV4();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpEnumSubnetClientsV4();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpServerSetConfigV4();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpServerGetConfigV4();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpSetSuperScopeV4();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpDeleteSuperScopeV4();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetSuperScopeInfoV4();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpEnumSubnetClientsV5();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpCreateOptionV5();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpSetOptionInfoV5();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetOptionInfoV5();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpEnumOptionsV5();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpRemoveOptionV5();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpSetOptionValueV5();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpSetOptionValuesV5();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetOptionValueV5();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetOptionValueV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpEnumOptionValuesV5();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpRemoveOptionValueV5();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpCreateClass();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpModifyClass();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpDeleteClass();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetClassInfo();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpEnumClasses();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetAllOptions();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetAllOptionsV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetAllOptionValues();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetAllOptionValuesV6();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpEnumServers();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpAddServer();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpDeleteServer();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpGetServerBindingInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpSetServerBindingInfo();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpAddSubnetElementV5();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpEnumSubnetElementsV5();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpRemoveSubnetElementV5();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4EnumSubnetReservations();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpCreateOptionV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpRemoveOptionV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpEnumOptionsV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpRemoveOptionValueV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetOptionInfoV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpSetOptionInfoV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpSetOptionValueV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetSubnetInfoVQ();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpCreateSubnetVQ();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpSetSubnetInfoVQ();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpEnumOptionValuesV6();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpDsInit();

// TODO: this type is limited to platform 'windowsServer2000'
/*void*/void DhcpDsCleanup();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpSetThreadOptions();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetThreadOptions();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpServerQueryAttribute();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpServerQueryAttributes();

// TODO: this type is limited to platform 'windowsServer2000'
/*u32*/void DhcpServerRedoAuthorization();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpAuditLogSetParams();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpAuditLogGetParams();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpServerQueryDnsRegCredentials();

/*u32*/void DhcpServerSetDnsRegCredentials();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpServerSetDnsRegCredentialsV5();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpServerBackupDatabase();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpServerRestoreDatabase();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpServerSetConfigVQ();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpServerGetConfigVQ();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetServerSpecificStrings();

/*void*/void DhcpServerAuditlogParamsFree();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpCreateSubnetV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpDeleteSubnetV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpEnumSubnetsV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpAddSubnetElementV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpRemoveSubnetElementV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpEnumSubnetElementsV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetSubnetInfoV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpEnumSubnetClientsV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpServerGetConfigV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpServerSetConfigV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpSetSubnetInfoV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetMibInfoV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetServerBindingInfoV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpSetServerBindingInfoV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpSetClientInfoV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetClientInfoV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpDeleteClientInfoV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpCreateClassV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpModifyClassV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpDeleteClassV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpEnumClassesV6();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpSetSubnetDelayOffer();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetSubnetDelayOffer();

// TODO: this type is limited to platform 'windowsServer2008'
/*u32*/void DhcpGetMibInfoV5();

/*u32*/void DhcpAddSecurityGroup();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4GetOptionValue();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4SetOptionValue();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4SetOptionValues();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4RemoveOptionValue();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4GetAllOptionValues();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4FailoverCreateRelationship();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4FailoverSetRelationship();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4FailoverDeleteRelationship();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4FailoverGetRelationship();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4FailoverEnumRelationship();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4FailoverAddScopeToRelationship();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4FailoverDeleteScopeFromRelationship();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4FailoverGetScopeRelationship();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4FailoverGetScopeStatistics();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4FailoverGetClientInfo();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4FailoverGetSystemTime();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4FailoverGetAddressStatus();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4FailoverTriggerAddrAllocation();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpHlprCreateV4Policy();

/*u32*/void DhcpHlprCreateV4PolicyEx();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpHlprAddV4PolicyExpr();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpHlprAddV4PolicyCondition();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpHlprAddV4PolicyRange();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpHlprResetV4PolicyExpr();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpHlprModifyV4PolicyExpr();

// TODO: this type is limited to platform 'windowsServer2012'
/*void*/void DhcpHlprFreeV4Policy();

/*void*/void DhcpHlprFreeV4PolicyArray();

/*void*/void DhcpHlprFreeV4PolicyEx();

/*void*/void DhcpHlprFreeV4PolicyExArray();

/*void*/void DhcpHlprFreeV4DhcpProperty();

/*void*/void DhcpHlprFreeV4DhcpPropertyArray();

/*?*DHCP_PROPERTY*/void DhcpHlprFindV4DhcpProperty();

// TODO: this type is limited to platform 'windowsServer2012'
/*BOOL*/void DhcpHlprIsV4PolicySingleUC();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4QueryPolicyEnforcement();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4SetPolicyEnforcement();

// TODO: this type is limited to platform 'windowsServer2012'
/*BOOL*/void DhcpHlprIsV4PolicyWellFormed();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpHlprIsV4PolicyValid();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4CreatePolicy();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4GetPolicy();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4SetPolicy();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4DeletePolicy();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4EnumPolicies();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4AddPolicyRange();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4RemovePolicyRange();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV6SetStatelessStoreParams();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV6GetStatelessStoreParams();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV6GetStatelessStatistics();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4CreateClientInfo();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4EnumSubnetClients();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4GetClientInfo();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV6CreateClientInfo();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV4GetFreeIPAddress();

// TODO: this type is limited to platform 'windowsServer2012'
/*u32*/void DhcpV6GetFreeIPAddress();

/*u32*/void DhcpV4CreateClientInfoEx();

/*u32*/void DhcpV4EnumSubnetClientsEx();

/*u32*/void DhcpV4GetClientInfoEx();

/*u32*/void DhcpV4CreatePolicyEx();

/*u32*/void DhcpV4GetPolicyEx();

/*u32*/void DhcpV4SetPolicyEx();

/*u32*/void DhcpV4EnumPoliciesEx();

