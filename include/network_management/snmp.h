// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (90)
//--------------------------------------------------------------------------------
#define ASN_UNIVERSAL (UINT)0
#define ASN_APPLICATION (UINT)64
#define ASN_CONTEXT (UINT)128
#define ASN_PRIVATE (UINT)192
#define ASN_PRIMITIVE (UINT)0
#define ASN_CONSTRUCTOR (UINT)32
#define SNMP_ACCESS_NONE (UINT)0
#define SNMP_ACCESS_NOTIFY (UINT)1
#define SNMP_ACCESS_READ_ONLY (UINT)2
#define SNMP_ACCESS_READ_WRITE (UINT)3
#define SNMP_ACCESS_READ_CREATE (UINT)4
#define SNMPAPI_NOERROR (UINT)1
#define SNMPAPI_ERROR (UINT)0
#define SNMP_OUTPUT_TO_EVENTLOG (UINT)4
#define DEFAULT_SNMP_PORT_UDP (UINT)161
#define DEFAULT_SNMP_PORT_IPX (UINT)36879
#define DEFAULT_SNMPTRAP_PORT_UDP (UINT)162
#define DEFAULT_SNMPTRAP_PORT_IPX (UINT)36880
#define SNMP_MAX_OID_LEN (UINT)128
#define SNMP_MEM_ALLOC_ERROR (UINT)1
#define SNMP_BERAPI_INVALID_LENGTH (UINT)10
#define SNMP_BERAPI_INVALID_TAG (UINT)11
#define SNMP_BERAPI_OVERFLOW (UINT)12
#define SNMP_BERAPI_SHORT_BUFFER (UINT)13
#define SNMP_BERAPI_INVALID_OBJELEM (UINT)14
#define SNMP_PDUAPI_UNRECOGNIZED_PDU (UINT)20
#define SNMP_PDUAPI_INVALID_ES (UINT)21
#define SNMP_PDUAPI_INVALID_GT (UINT)22
#define SNMP_AUTHAPI_INVALID_VERSION (UINT)30
#define SNMP_AUTHAPI_INVALID_MSG_TYPE (UINT)31
#define SNMP_AUTHAPI_TRIV_AUTH_FAILED (UINT)32
#define SNMP_MGMTAPI_TIMEOUT (UINT)40
#define SNMP_MGMTAPI_SELECT_FDERRORS (UINT)41
#define SNMP_MGMTAPI_TRAP_ERRORS (UINT)42
#define SNMP_MGMTAPI_TRAP_DUPINIT (UINT)43
#define SNMP_MGMTAPI_NOTRAPS (UINT)44
#define SNMP_MGMTAPI_AGAIN (UINT)45
#define SNMP_MGMTAPI_INVALID_CTL (UINT)46
#define SNMP_MGMTAPI_INVALID_SESSION (UINT)47
#define SNMP_MGMTAPI_INVALID_BUFFER (UINT)48
#define MGMCTL_SETAGENTPORT (UINT)1
#define MAXOBJIDSIZE (UINT)128
#define MAXOBJIDSTRSIZE (UINT)1408
#define SNMPLISTEN_USEENTITY_ADDR (UINT)0
#define SNMPLISTEN_ALL_ADDR (UINT)1
#define SNMP_TRAP_COLDSTART (UINT)0
#define SNMP_TRAP_WARMSTART (UINT)1
#define SNMP_TRAP_LINKDOWN (UINT)2
#define SNMP_TRAP_LINKUP (UINT)3
#define SNMP_TRAP_AUTHFAIL (UINT)4
#define SNMP_TRAP_EGPNEIGHBORLOSS (UINT)5
#define SNMP_TRAP_ENTERPRISESPECIFIC (UINT)6
#define SNMPAPI_NO_SUPPORT (UINT)0
#define SNMPAPI_V1_SUPPORT (UINT)1
#define SNMPAPI_V2_SUPPORT (UINT)2
#define SNMPAPI_M2M_SUPPORT (UINT)3
#define SNMPAPI_FAILURE (UINT)0
#define SNMPAPI_SUCCESS (UINT)1
#define SNMPAPI_ALLOC_ERROR (UINT)2
#define SNMPAPI_CONTEXT_INVALID (UINT)3
#define SNMPAPI_CONTEXT_UNKNOWN (UINT)4
#define SNMPAPI_ENTITY_INVALID (UINT)5
#define SNMPAPI_ENTITY_UNKNOWN (UINT)6
#define SNMPAPI_INDEX_INVALID (UINT)7
#define SNMPAPI_NOOP (UINT)8
#define SNMPAPI_OID_INVALID (UINT)9
#define SNMPAPI_OPERATION_INVALID (UINT)10
#define SNMPAPI_OUTPUT_TRUNCATED (UINT)11
#define SNMPAPI_PDU_INVALID (UINT)12
#define SNMPAPI_SESSION_INVALID (UINT)13
#define SNMPAPI_SYNTAX_INVALID (UINT)14
#define SNMPAPI_VBL_INVALID (UINT)15
#define SNMPAPI_MODE_INVALID (UINT)16
#define SNMPAPI_SIZE_INVALID (UINT)17
#define SNMPAPI_NOT_INITIALIZED (UINT)18
#define SNMPAPI_MESSAGE_INVALID (UINT)19
#define SNMPAPI_HWND_INVALID (UINT)20
#define SNMPAPI_OTHER_ERROR (UINT)99
#define SNMPAPI_TL_NOT_INITIALIZED (UINT)100
#define SNMPAPI_TL_NOT_SUPPORTED (UINT)101
#define SNMPAPI_TL_NOT_AVAILABLE (UINT)102
#define SNMPAPI_TL_RESOURCE_ERROR (UINT)103
#define SNMPAPI_TL_UNDELIVERABLE (UINT)104
#define SNMPAPI_TL_SRC_INVALID (UINT)105
#define SNMPAPI_TL_INVALID_PARAM (UINT)106
#define SNMPAPI_TL_IN_USE (UINT)107
#define SNMPAPI_TL_TIMEOUT (UINT)108
#define SNMPAPI_TL_PDU_TOO_BIG (UINT)109
#define SNMPAPI_TL_OTHER (UINT)199
#define MAXVENDORINFO (UINT)32

//--------------------------------------------------------------------------------
// Section: Types (32)
//--------------------------------------------------------------------------------
typedef enum {
    SNMP_PDU_GET = 160,
    SNMP_PDU_GETNEXT = 161,
    SNMP_PDU_RESPONSE = 162,
    SNMP_PDU_SET = 163,
    SNMP_PDU_GETBULK = 165,
    SNMP_PDU_TRAP = 167,
} SNMP_PDU_TYPE;

typedef enum {
    SNMP_EXTENSION_GET = 160,
    SNMP_EXTENSION_GET_NEXT = 161,
    SNMP_EXTENSION_SET_TEST = 224,
    SNMP_EXTENSION_SET_COMMIT = 163,
    SNMP_EXTENSION_SET_UNDO = 225,
    SNMP_EXTENSION_SET_CLEANUP = 226,
} SNMP_EXTENSION_REQUEST_TYPE;

typedef enum {
    SNMPAPI_TRANSLATED = 0,
    SNMPAPI_UNTRANSLATED_V1 = 1,
    SNMPAPI_UNTRANSLATED_V2 = 2,
} SNMP_API_TRANSLATE_MODE;

typedef enum {
    SNMP_GENERICTRAP_COLDSTART = 0,
    SNMP_GENERICTRAP_WARMSTART = 1,
    SNMP_GENERICTRAP_LINKDOWN = 2,
    SNMP_GENERICTRAP_LINKUP = 3,
    SNMP_GENERICTRAP_AUTHFAILURE = 4,
    SNMP_GENERICTRAP_EGPNEIGHLOSS = 5,
    SNMP_GENERICTRAP_ENTERSPECIFIC = 6,
} SNMP_GENERICTRAP;

typedef enum {
    SNMP_ERRORSTATUS_NOERROR = 0,
    SNMP_ERRORSTATUS_TOOBIG = 1,
    SNMP_ERRORSTATUS_NOSUCHNAME = 2,
    SNMP_ERRORSTATUS_BADVALUE = 3,
    SNMP_ERRORSTATUS_READONLY = 4,
    SNMP_ERRORSTATUS_GENERR = 5,
    SNMP_ERRORSTATUS_NOACCESS = 6,
    SNMP_ERRORSTATUS_WRONGTYPE = 7,
    SNMP_ERRORSTATUS_WRONGLENGTH = 8,
    SNMP_ERRORSTATUS_WRONGENCODING = 9,
    SNMP_ERRORSTATUS_WRONGVALUE = 10,
    SNMP_ERRORSTATUS_NOCREATION = 11,
    SNMP_ERRORSTATUS_INCONSISTENTVALUE = 12,
    SNMP_ERRORSTATUS_RESOURCEUNAVAILABLE = 13,
    SNMP_ERRORSTATUS_COMMITFAILED = 14,
    SNMP_ERRORSTATUS_UNDOFAILED = 15,
    SNMP_ERRORSTATUS_AUTHORIZATIONERROR = 16,
    SNMP_ERRORSTATUS_NOTWRITABLE = 17,
    SNMP_ERRORSTATUS_INCONSISTENTNAME = 18,
} SNMP_ERROR_STATUS;

typedef enum {
    SNMPAPI_ON = 1,
    SNMPAPI_OFF = 0,
} SNMP_STATUS;

typedef enum {
    SNMP_OUTPUT_TO_CONSOLE = 1,
    SNMP_OUTPUT_TO_LOGFILE = 2,
    SNMP_OUTPUT_TO_DEBUGGER = 8,
} SNMP_OUTPUT_LOG_TYPE;

typedef enum {
    SNMP_LOG_SILENT = 0,
    SNMP_LOG_FATAL = 1,
    SNMP_LOG_ERROR = 2,
    SNMP_LOG_WARNING = 3,
    SNMP_LOG_TRACE = 4,
    SNMP_LOG_VERBOSE = 5,
} SNMP_LOG;

typedef enum {
    SNMP_ERROR_NOERROR = 0,
    SNMP_ERROR_TOOBIG = 1,
    SNMP_ERROR_NOSUCHNAME = 2,
    SNMP_ERROR_BADVALUE = 3,
    SNMP_ERROR_READONLY = 4,
    SNMP_ERROR_GENERR = 5,
    SNMP_ERROR_NOACCESS = 6,
    SNMP_ERROR_WRONGTYPE = 7,
    SNMP_ERROR_WRONGLENGTH = 8,
    SNMP_ERROR_WRONGENCODING = 9,
    SNMP_ERROR_WRONGVALUE = 10,
    SNMP_ERROR_NOCREATION = 11,
    SNMP_ERROR_INCONSISTENTVALUE = 12,
    SNMP_ERROR_RESOURCEUNAVAILABLE = 13,
    SNMP_ERROR_COMMITFAILED = 14,
    SNMP_ERROR_UNDOFAILED = 15,
    SNMP_ERROR_AUTHORIZATIONERROR = 16,
    SNMP_ERROR_NOTWRITABLE = 17,
    SNMP_ERROR_INCONSISTENTNAME = 18,
} SNMP_ERROR;

typedef int AsnOctetString;

typedef int AsnObjectIdentifier;

typedef int SnmpVarBindList;

typedef int AsnAny;

typedef int SnmpVarBind;

typedef int PFNSNMPEXTENSIONINIT;

typedef int PFNSNMPEXTENSIONINITEX;

typedef int PFNSNMPEXTENSIONMONITOR;

typedef int PFNSNMPEXTENSIONQUERY;

typedef int PFNSNMPEXTENSIONQUERYEX;

typedef int PFNSNMPEXTENSIONTRAP;

typedef int PFNSNMPEXTENSIONCLOSE;

typedef int smiOCTETS;

typedef int smiOID;

typedef int smiCNTR64;

typedef int smiVALUE;

typedef int smiVENDORINFO;

typedef int SNMPAPI_CALLBACK;

typedef int PFNSNMPSTARTUPEX;

typedef int PFNSNMPCLEANUPEX;

typedef int AsnOctetString;

typedef int AsnObjectIdentifier;

typedef int SnmpVarBindList;


//--------------------------------------------------------------------------------
// Section: Functions (84)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SnmpUtilOidCpy();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SnmpUtilOidAppend();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SnmpUtilOidNCmp();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SnmpUtilOidCmp();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void SnmpUtilOidFree();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SnmpUtilOctetsCmp();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SnmpUtilOctetsNCmp();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SnmpUtilOctetsCpy();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void SnmpUtilOctetsFree();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SnmpUtilAsnAnyCpy();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void SnmpUtilAsnAnyFree();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SnmpUtilVarBindCpy();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void SnmpUtilVarBindFree();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SnmpUtilVarBindListCpy();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void SnmpUtilVarBindListFree();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void SnmpUtilMemFree();

// TODO: this type is limited to platform 'windows5.0'
/*?*c_void*/void SnmpUtilMemAlloc();

// TODO: this type is limited to platform 'windows5.0'
/*?*c_void*/void SnmpUtilMemReAlloc();

// TODO: this type is limited to platform 'windows5.0'
/*PSTR*/void SnmpUtilOidToA();

// TODO: this type is limited to platform 'windows5.0'
/*PSTR*/void SnmpUtilIdsToA();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void SnmpUtilPrintOid();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void SnmpUtilPrintAsnAny();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpSvcGetUptime();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void SnmpSvcSetLogLevel();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void SnmpSvcSetLogType();

// TODO: this type is limited to platform 'windows5.0'
/*void*/void SnmpUtilDbgPrint();

// TODO: this type is limited to platform 'windows5.0'
/*?*c_void*/void SnmpMgrOpen();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SnmpMgrCtl();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SnmpMgrClose();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void SnmpMgrRequest();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SnmpMgrStrToOid();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SnmpMgrOidToStr();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SnmpMgrTrapListen();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SnmpMgrGetTrap();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SnmpMgrGetTrapEx();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpGetTranslateMode();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpSetTranslateMode();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpGetRetransmitMode();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpSetRetransmitMode();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpGetTimeout();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpSetTimeout();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpGetRetry();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpSetRetry();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpGetVendorInfo();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpStartup();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpCleanup();

// TODO: this type is limited to platform 'windows5.0'
/*isize*/void SnmpOpen();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpClose();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpSendMsg();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpRecvMsg();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpRegister();

// TODO: this type is limited to platform 'windows5.0'
/*isize*/void SnmpCreateSession();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpListen();

/*u32*/void SnmpListenEx();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpCancelMsg();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpStartupEx();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpCleanupEx();

// TODO: this type is limited to platform 'windows5.0'
/*isize*/void SnmpStrToEntity();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpEntityToStr();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpFreeEntity();

// TODO: this type is limited to platform 'windows5.0'
/*isize*/void SnmpStrToContext();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpContextToStr();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpFreeContext();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpSetPort();

// TODO: this type is limited to platform 'windows5.0'
/*isize*/void SnmpCreatePdu();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpGetPduData();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpSetPduData();

// TODO: this type is limited to platform 'windows5.0'
/*isize*/void SnmpDuplicatePdu();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpFreePdu();

// TODO: this type is limited to platform 'windows5.0'
/*isize*/void SnmpCreateVbl();

// TODO: this type is limited to platform 'windows5.0'
/*isize*/void SnmpDuplicateVbl();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpFreeVbl();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpCountVbl();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpGetVb();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpSetVb();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpDeleteVb();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpGetLastError();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpStrToOid();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpOidToStr();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpOidCopy();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpOidCompare();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpEncodeMsg();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpDecodeMsg();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void SnmpFreeDescriptor();

