// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (659)
//--------------------------------------------------------------------------------
#define FWPM_NET_EVENT_KEYWORD_INBOUND_MCAST (UINT)1
#define FWPM_NET_EVENT_KEYWORD_INBOUND_BCAST (UINT)2
#define FWPM_NET_EVENT_KEYWORD_CAPABILITY_DROP (UINT)4
#define FWPM_NET_EVENT_KEYWORD_CAPABILITY_ALLOW (UINT)8
#define FWPM_NET_EVENT_KEYWORD_CLASSIFY_ALLOW (UINT)16
#define FWPM_NET_EVENT_KEYWORD_PORT_SCANNING_DROP (UINT)32
#define FWPM_ENGINE_OPTION_PACKET_QUEUE_NONE (UINT)0
#define FWPM_ENGINE_OPTION_PACKET_QUEUE_INBOUND (UINT)1
#define FWPM_ENGINE_OPTION_PACKET_QUEUE_FORWARD (UINT)2
#define FWPM_ENGINE_OPTION_PACKET_BATCH_INBOUND (UINT)4
#define FWPM_SESSION_FLAG_DYNAMIC (UINT)1
#define FWPM_SESSION_FLAG_RESERVED (UINT)268435456
#define FWPM_PROVIDER_FLAG_PERSISTENT (UINT)1
#define FWPM_PROVIDER_FLAG_DISABLED (UINT)16
#define FWPM_PROVIDER_CONTEXT_FLAG_PERSISTENT (UINT)1
#define FWPM_PROVIDER_CONTEXT_FLAG_DOWNLEVEL (UINT)2
#define FWPM_SUBLAYER_FLAG_PERSISTENT (UINT)1
#define FWPM_LAYER_FLAG_KERNEL (UINT)1
#define FWPM_LAYER_FLAG_BUILTIN (UINT)2
#define FWPM_LAYER_FLAG_CLASSIFY_MOSTLY (UINT)4
#define FWPM_LAYER_FLAG_BUFFERED (UINT)8
#define FWPM_CALLOUT_FLAG_PERSISTENT (UINT)65536
#define FWPM_CALLOUT_FLAG_USES_PROVIDER_CONTEXT (UINT)131072
#define FWPM_CALLOUT_FLAG_REGISTERED (UINT)262144
#define FWPM_FILTER_FLAG_HAS_SECURITY_REALM_PROVIDER_CONTEXT (UINT)128
#define FWPM_FILTER_FLAG_SYSTEMOS_ONLY (UINT)256
#define FWPM_FILTER_FLAG_GAMEOS_ONLY (UINT)512
#define FWPM_FILTER_FLAG_SILENT_MODE (UINT)1024
#define FWPM_FILTER_FLAG_IPSEC_NO_ACQUIRE_INITIATE (UINT)2048
#define FWPM_NET_EVENT_FLAG_IP_PROTOCOL_SET (UINT)1
#define FWPM_NET_EVENT_FLAG_LOCAL_ADDR_SET (UINT)2
#define FWPM_NET_EVENT_FLAG_REMOTE_ADDR_SET (UINT)4
#define FWPM_NET_EVENT_FLAG_LOCAL_PORT_SET (UINT)8
#define FWPM_NET_EVENT_FLAG_REMOTE_PORT_SET (UINT)16
#define FWPM_NET_EVENT_FLAG_APP_ID_SET (UINT)32
#define FWPM_NET_EVENT_FLAG_USER_ID_SET (UINT)64
#define FWPM_NET_EVENT_FLAG_SCOPE_ID_SET (UINT)128
#define FWPM_NET_EVENT_FLAG_IP_VERSION_SET (UINT)256
#define FWPM_NET_EVENT_FLAG_REAUTH_REASON_SET (UINT)512
#define FWPM_NET_EVENT_FLAG_PACKAGE_ID_SET (UINT)1024
#define FWPM_NET_EVENT_FLAG_ENTERPRISE_ID_SET (UINT)2048
#define FWPM_NET_EVENT_FLAG_POLICY_FLAGS_SET (UINT)4096
#define FWPM_NET_EVENT_FLAG_EFFECTIVE_NAME_SET (UINT)8192
#define IKEEXT_CERT_HASH_LEN (UINT)20
#define FWPM_NET_EVENT_IKEEXT_MM_FAILURE_FLAG_BENIGN (UINT)1
#define FWPM_NET_EVENT_IKEEXT_MM_FAILURE_FLAG_MULTIPLE (UINT)2
#define FWPM_NET_EVENT_IKEEXT_EM_FAILURE_FLAG_MULTIPLE (UINT)1
#define FWPM_NET_EVENT_IKEEXT_EM_FAILURE_FLAG_BENIGN (UINT)2
#define FWPM_CONNECTION_ENUM_FLAG_QUERY_BYTES_TRANSFERRED (UINT)1
#define FWPS_FILTER_FLAG_CLEAR_ACTION_RIGHT (UINT)1
#define FWPS_FILTER_FLAG_PERMIT_IF_CALLOUT_UNREGISTERED (UINT)2
#define FWPS_FILTER_FLAG_OR_CONDITIONS (UINT)4
#define FWPS_FILTER_FLAG_HAS_SECURITY_REALM_PROVIDER_CONTEXT (UINT)8
#define FWPS_FILTER_FLAG_SILENT_MODE (UINT)16
#define FWPS_FILTER_FLAG_IPSEC_NO_ACQUIRE_INITIATE (UINT)32
#define FWPS_INCOMING_FLAG_CACHE_SAFE (UINT)1
#define FWPS_INCOMING_FLAG_ENFORCE_QUERY (UINT)2
#define FWPS_INCOMING_FLAG_ABSORB (UINT)4
#define FWPS_INCOMING_FLAG_CONNECTION_FAILING_INDICATION (UINT)8
#define FWPS_INCOMING_FLAG_MID_STREAM_INSPECTION (UINT)16
#define FWPS_INCOMING_FLAG_RECLASSIFY (UINT)32
#define FWPS_INCOMING_FLAG_IS_LOOSE_SOURCE_FLOW (UINT)64
#define FWPS_INCOMING_FLAG_IS_LOCAL_ONLY_FLOW (UINT)128
#define FWPS_L2_INCOMING_FLAG_IS_RAW_IPV4_FRAMING (UINT)1
#define FWPS_L2_INCOMING_FLAG_IS_RAW_IPV6_FRAMING (UINT)2
#define FWPS_L2_INCOMING_FLAG_RECLASSIFY_MULTI_DESTINATION (UINT)8
#define FWPS_INCOMING_FLAG_RESERVED0 (UINT)256
#define FWPS_RIGHT_ACTION_WRITE (UINT)1
#define FWPS_CLASSIFY_OUT_FLAG_ABSORB (UINT)1
#define FWPS_CLASSIFY_OUT_FLAG_BUFFER_LIMIT_REACHED (UINT)2
#define FWPS_CLASSIFY_OUT_FLAG_NO_MORE_DATA (UINT)4
#define FWPS_CLASSIFY_OUT_FLAG_ALE_FAST_CACHE_CHECK (UINT)8
#define FWPS_CLASSIFY_OUT_FLAG_ALE_FAST_CACHE_POSSIBLE (UINT)16
#define FWPS_ALE_ENDPOINT_FLAG_IPSEC_SECURED (UINT)1
#define FWP_BYTEMAP_ARRAY64_SIZE (UINT)8
#define FWP_BITMAP_ARRAY64_SIZE (UINT)64
#define FWP_BYTE_ARRAY6_SIZE (UINT)6
#define FWP_V6_ADDR_SIZE (UINT)16
#define FWP_ACTRL_MATCH_FILTER (UINT)1
#define FWP_OPTION_VALUE_ALLOW_MULTICAST_STATE (UINT)0
#define FWP_OPTION_VALUE_DENY_MULTICAST_STATE (UINT)1
#define FWP_OPTION_VALUE_ALLOW_GLOBAL_MULTICAST_STATE (UINT)2
#define FWP_OPTION_VALUE_DISABLE_LOOSE_SOURCE (UINT)0
#define FWP_OPTION_VALUE_ENABLE_LOOSE_SOURCE (UINT)1
#define FWP_OPTION_VALUE_DISABLE_LOCAL_ONLY_MAPPING (UINT)0
#define FWP_OPTION_VALUE_ENABLE_LOCAL_ONLY_MAPPING (UINT)1
#define FWP_ACTION_FLAG_TERMINATING (UINT)4096
#define FWP_ACTION_FLAG_NON_TERMINATING (UINT)8192
#define FWP_ACTION_FLAG_CALLOUT (UINT)16384
#define FWP_ACTION_NONE (UINT)7
#define FWP_ACTION_NONE_NO_MATCH (UINT)8
#define FWP_ACTION_BITMAP_INDEX_SET (UINT)9
#define FWP_CONDITION_FLAG_IS_LOOPBACK (UINT)1
#define FWP_CONDITION_FLAG_IS_IPSEC_SECURED (UINT)2
#define FWP_CONDITION_FLAG_IS_REAUTHORIZE (UINT)4
#define FWP_CONDITION_FLAG_IS_WILDCARD_BIND (UINT)8
#define FWP_CONDITION_FLAG_IS_RAW_ENDPOINT (UINT)16
#define FWP_CONDITION_FLAG_IS_FRAGMENT (UINT)32
#define FWP_CONDITION_FLAG_IS_FRAGMENT_GROUP (UINT)64
#define FWP_CONDITION_FLAG_IS_IPSEC_NATT_RECLASSIFY (UINT)128
#define FWP_CONDITION_FLAG_REQUIRES_ALE_CLASSIFY (UINT)256
#define FWP_CONDITION_FLAG_IS_IMPLICIT_BIND (UINT)512
#define FWP_CONDITION_FLAG_IS_REASSEMBLED (UINT)1024
#define FWP_CONDITION_FLAG_IS_NAME_APP_SPECIFIED (UINT)16384
#define FWP_CONDITION_FLAG_IS_PROMISCUOUS (UINT)32768
#define FWP_CONDITION_FLAG_IS_AUTH_FW (UINT)65536
#define FWP_CONDITION_FLAG_IS_RECLASSIFY (UINT)131072
#define FWP_CONDITION_FLAG_IS_OUTBOUND_PASS_THRU (UINT)262144
#define FWP_CONDITION_FLAG_IS_INBOUND_PASS_THRU (UINT)524288
#define FWP_CONDITION_FLAG_IS_CONNECTION_REDIRECTED (UINT)1048576
#define FWP_CONDITION_FLAG_IS_PROXY_CONNECTION (UINT)2097152
#define FWP_CONDITION_FLAG_IS_APPCONTAINER_LOOPBACK (UINT)4194304
#define FWP_CONDITION_FLAG_IS_NON_APPCONTAINER_LOOPBACK (UINT)8388608
#define FWP_CONDITION_FLAG_IS_RESERVED (UINT)16777216
#define FWP_CONDITION_FLAG_IS_HONORING_POLICY_AUTHORIZE (UINT)33554432
#define FWP_CONDITION_REAUTHORIZE_REASON_POLICY_CHANGE (UINT)1
#define FWP_CONDITION_REAUTHORIZE_REASON_NEW_ARRIVAL_INTERFACE (UINT)2
#define FWP_CONDITION_REAUTHORIZE_REASON_NEW_NEXTHOP_INTERFACE (UINT)4
#define FWP_CONDITION_REAUTHORIZE_REASON_PROFILE_CROSSING (UINT)8
#define FWP_CONDITION_REAUTHORIZE_REASON_CLASSIFY_COMPLETION (UINT)16
#define FWP_CONDITION_REAUTHORIZE_REASON_IPSEC_PROPERTIES_CHANGED (UINT)32
#define FWP_CONDITION_REAUTHORIZE_REASON_MID_STREAM_INSPECTION (UINT)64
#define FWP_CONDITION_REAUTHORIZE_REASON_SOCKET_PROPERTY_CHANGED (UINT)128
#define FWP_CONDITION_REAUTHORIZE_REASON_NEW_INBOUND_MCAST_BCAST_PACKET (UINT)256
#define FWP_CONDITION_REAUTHORIZE_REASON_EDP_POLICY_CHANGED (UINT)512
#define FWP_CONDITION_REAUTHORIZE_REASON_PRECLASSIFY_LOCALADDR_LAYER_CHANGE (UINT)1024
#define FWP_CONDITION_REAUTHORIZE_REASON_PRECLASSIFY_REMOTEADDR_LAYER_CHANGE (UINT)2048
#define FWP_CONDITION_REAUTHORIZE_REASON_PRECLASSIFY_LOCALPORT_LAYER_CHANGE (UINT)4096
#define FWP_CONDITION_REAUTHORIZE_REASON_PRECLASSIFY_REMOTEPORT_LAYER_CHANGE (UINT)8192
#define FWP_CONDITION_REAUTHORIZE_REASON_PROXY_HANDLE_CHANGED (UINT)16384
#define FWP_CONDITION_REAUTHORIZE_REASON_PRECLASSIFY_POLICY_CHANGED (UINT)32768
#define FWP_CONDITION_REAUTHORIZE_REASON_CHECK_OFFLOAD (UINT)65536
#define FWP_CONDITION_SOCKET_PROPERTY_FLAG_IS_SYSTEM_PORT_RPC (UINT)1
#define FWP_CONDITION_SOCKET_PROPERTY_FLAG_ALLOW_EDGE_TRAFFIC (UINT)2
#define FWP_CONDITION_SOCKET_PROPERTY_FLAG_DENY_EDGE_TRAFFIC (UINT)4
#define FWP_CONDITION_L2_IS_NATIVE_ETHERNET (UINT)1
#define FWP_CONDITION_L2_IS_WIFI (UINT)2
#define FWP_CONDITION_L2_IS_MOBILE_BROADBAND (UINT)4
#define FWP_CONDITION_L2_IS_WIFI_DIRECT_DATA (UINT)8
#define FWP_CONDITION_L2_IS_VM2VM (UINT)16
#define FWP_CONDITION_L2_IS_MALFORMED_PACKET (UINT)32
#define FWP_CONDITION_L2_IS_IP_FRAGMENT_GROUP (UINT)64
#define FWP_CONDITION_L2_IF_CONNECTOR_PRESENT (UINT)128
#define FWP_FILTER_ENUM_FLAG_BEST_TERMINATING_MATCH (UINT)1
#define FWP_FILTER_ENUM_FLAG_SORTED (UINT)2
#define FWP_FILTER_ENUM_FLAG_BOOTTIME_ONLY (UINT)4
#define FWP_FILTER_ENUM_FLAG_INCLUDE_BOOTTIME (UINT)8
#define FWP_FILTER_ENUM_FLAG_INCLUDE_DISABLED (UINT)16
#define FWP_FILTER_ENUM_FLAG_RESERVED1 (UINT)32
#define FWP_CALLOUT_FLAG_CONDITIONAL_ON_FLOW (UINT)1
#define FWP_CALLOUT_FLAG_ALLOW_OFFLOAD (UINT)2
#define FWP_CALLOUT_FLAG_ENABLE_COMMIT_ADD_NOTIFY (UINT)4
#define FWP_CALLOUT_FLAG_ALLOW_MID_STREAM_INSPECTION (UINT)8
#define FWP_CALLOUT_FLAG_ALLOW_RECLASSIFY (UINT)16
#define FWP_CALLOUT_FLAG_RESERVED1 (UINT)32
#define FWP_CALLOUT_FLAG_ALLOW_RSC (UINT)64
#define FWP_CALLOUT_FLAG_ALLOW_L2_BATCH_CLASSIFY (UINT)128
#define FWP_CALLOUT_FLAG_ALLOW_USO (UINT)256
#define FWP_CALLOUT_FLAG_ALLOW_URO (UINT)512
#define IKEEXT_CERT_AUTH_FLAG_DISABLE_CRL_CHECK (UINT)2
#define IKEEXT_CERT_AUTH_FLAG_DISABLE_REQUEST_PAYLOAD (UINT)64
#define IKEEXT_KERB_AUTH_FORCE_PROXY_ON_INITIATOR (UINT)4
#define IKEEXT_NTLM_V2_AUTH_DONT_ACCEPT_EXPLICIT_CREDENTIALS (UINT)1
#define IKEEXT_POLICY_FLAG_MOBIKE_NOT_SUPPORTED (UINT)16
#define IKEEXT_POLICY_FLAG_SITE_TO_SITE (UINT)32
#define IKEEXT_POLICY_FLAG_IMS_VPN (UINT)64
#define IKEEXT_POLICY_ENABLE_IKEV2_FRAGMENTATION (UINT)128
#define IKEEXT_POLICY_SUPPORT_LOW_POWER_MODE (UINT)256
#define IKEEXT_CERT_CREDENTIAL_FLAG_NAP_CERT (UINT)1
#define IPSEC_AUTH_CONFIG_HMAC_MD5_96 (UINT)0
#define IPSEC_AUTH_CONFIG_HMAC_SHA_1_96 (UINT)1
#define IPSEC_AUTH_CONFIG_HMAC_SHA_256_128 (UINT)2
#define IPSEC_AUTH_CONFIG_GCM_AES_128 (UINT)3
#define IPSEC_AUTH_CONFIG_GCM_AES_192 (UINT)4
#define IPSEC_AUTH_CONFIG_GCM_AES_256 (UINT)5
#define IPSEC_AUTH_CONFIG_MAX (UINT)6
#define IPSEC_CIPHER_CONFIG_CBC_DES (UINT)1
#define IPSEC_CIPHER_CONFIG_CBC_3DES (UINT)2
#define IPSEC_CIPHER_CONFIG_CBC_AES_128 (UINT)3
#define IPSEC_CIPHER_CONFIG_CBC_AES_192 (UINT)4
#define IPSEC_CIPHER_CONFIG_CBC_AES_256 (UINT)5
#define IPSEC_CIPHER_CONFIG_GCM_AES_128 (UINT)6
#define IPSEC_CIPHER_CONFIG_GCM_AES_192 (UINT)7
#define IPSEC_CIPHER_CONFIG_GCM_AES_256 (UINT)8
#define IPSEC_CIPHER_CONFIG_MAX (UINT)9
#define IPSEC_POLICY_FLAG_KEY_MANAGER_ALLOW_NOTIFY_KEY (UINT)16384
#define IPSEC_POLICY_FLAG_RESERVED1 (UINT)32768
#define IPSEC_POLICY_FLAG_SITE_TO_SITE_TUNNEL (UINT)65536
#define IPSEC_KEYING_POLICY_FLAG_TERMINATING_MATCH (UINT)1
#define IPSEC_SA_BUNDLE_FLAG_NLB (UINT)16
#define IPSEC_SA_BUNDLE_FLAG_NO_MACHINE_LUID_VERIFY (UINT)32
#define IPSEC_SA_BUNDLE_FLAG_NO_IMPERSONATION_LUID_VERIFY (UINT)64
#define IPSEC_SA_BUNDLE_FLAG_NO_EXPLICIT_CRED_MATCH (UINT)128
#define IPSEC_SA_BUNDLE_FLAG_FORCE_INBOUND_CONNECTIONS (UINT)32768
#define IPSEC_SA_BUNDLE_FLAG_FORCE_OUTBOUND_CONNECTIONS (UINT)65536
#define IPSEC_SA_BUNDLE_FLAG_FORWARD_PATH_INITIATOR (UINT)131072
#define IPSEC_SA_BUNDLE_FLAG_ENABLE_OPTIONAL_ASYMMETRIC_IDLE (UINT)262144
#define IPSEC_SA_BUNDLE_FLAG_USING_DICTATED_KEYS (UINT)524288
#define IPSEC_SA_BUNDLE_FLAG_LOCALLY_DICTATED_KEYS (UINT)1048576
#define IPSEC_SA_BUNDLE_FLAG_SA_OFFLOADED (UINT)2097152
#define IPSEC_SA_BUNDLE_FLAG_IP_IN_IP_PKT (UINT)4194304
#define IPSEC_SA_BUNDLE_FLAG_LOW_POWER_MODE_SUPPORT (UINT)8388608
#define IPSEC_DOSP_DSCP_DISABLE_VALUE (UINT)255
#define IPSEC_DOSP_RATE_LIMIT_DISABLE_VALUE (UINT)0
#define IPSEC_KEY_MANAGER_FLAG_DICTATE_KEY (UINT)1
#define _LITTLE_ENDIAN (UINT)1234
#define _BIG_ENDIAN (UINT)4321
#define _PDP_ENDIAN (UINT)3412
#define DL_HEADER_LENGTH_MAXIMUM (UINT)64
#define SNAP_DSAP (UINT)170
#define SNAP_SSAP (UINT)170
#define SNAP_CONTROL (UINT)3
#define SNAP_OUI (UINT)0
#define ETH_LENGTH_OF_HEADER (UINT)14
#define ETH_LENGTH_OF_VLAN_HEADER (UINT)4
#define ETH_LENGTH_OF_SNAP_HEADER (UINT)8
#define ETHERNET_TYPE_MINIMUM (UINT)1536
#define ETHERNET_TYPE_IPV4 (UINT)2048
#define ETHERNET_TYPE_ARP (UINT)2054
#define ETHERNET_TYPE_IPV6 (UINT)34525
#define ETHERNET_TYPE_802_1Q (UINT)33024
#define IP_VER_MASK (UINT)240
#define IPV4_VERSION (UINT)4
#define MAX_IPV4_PACKET (UINT)65535
#define MAX_IPV4_HLEN (UINT)60
#define IPV4_MINIMUM_MTU (UINT)576
#define IPV4_MIN_MINIMUM_MTU (UINT)352
#define SIZEOF_IP_OPT_ROUTING_HEADER (UINT)3
#define SIZEOF_IP_OPT_TIMESTAMP_HEADER (UINT)4
#define SIZEOF_IP_OPT_SECURITY (UINT)11
#define SIZEOF_IP_OPT_STREAMIDENTIFIER (UINT)4
#define SIZEOF_IP_OPT_ROUTERALERT (UINT)4
#define IP4_OFF_MASK (UINT)65311
#define ICMPV4_INVALID_PREFERENCE_LEVEL (UINT)2147483648
#define IGMP_QUERY_TYPE (UINT)17
#define IGMP_VERSION1_REPORT_TYPE (UINT)18
#define IGMP_VERSION2_REPORT_TYPE (UINT)22
#define IGMP_LEAVE_GROUP_TYPE (UINT)23
#define IGMP_VERSION3_REPORT_TYPE (UINT)34
#define IPV6_VERSION (UINT)96
#define IPV6_TRAFFIC_CLASS_MASK (UINT)49167
#define IPV6_FULL_TRAFFIC_CLASS_MASK (UINT)61455
#define IPV6_ECN_MASK (UINT)12288
#define IPV6_FLOW_LABEL_MASK (UINT)4294905600
#define MAX_IPV6_PAYLOAD (UINT)65535
#define IPV6_ECN_SHIFT (UINT)12
#define IPV6_MINIMUM_MTU (UINT)1280
#define IP6F_OFF_MASK (UINT)63743
#define IP6F_RESERVED_MASK (UINT)1536
#define IP6F_MORE_FRAG (UINT)256
#define EXT_LEN_UNIT (UINT)8
#define IP6OPT_TYPE_SKIP (UINT)0
#define IP6OPT_TYPE_DISCARD (UINT)64
#define IP6OPT_TYPE_FORCEICMP (UINT)128
#define IP6OPT_TYPE_ICMP (UINT)192
#define IP6OPT_MUTABLE (UINT)32
#define ICMP6_DST_UNREACH_NOROUTE (UINT)0
#define ICMP6_DST_UNREACH_ADMIN (UINT)1
#define ICMP6_DST_UNREACH_BEYONDSCOPE (UINT)2
#define ICMP6_DST_UNREACH_ADDR (UINT)3
#define ICMP6_DST_UNREACH_NOPORT (UINT)4
#define ICMP6_TIME_EXCEED_TRANSIT (UINT)0
#define ICMP6_TIME_EXCEED_REASSEMBLY (UINT)1
#define ICMP6_PARAMPROB_HEADER (UINT)0
#define ICMP6_PARAMPROB_NEXTHEADER (UINT)1
#define ICMP6_PARAMPROB_OPTION (UINT)2
#define ICMPV6_ECHO_REQUEST_FLAG_REVERSE (UINT)1
#define ND_RA_FLAG_MANAGED (UINT)128
#define ND_RA_FLAG_OTHER (UINT)64
#define ND_RA_FLAG_HOME_AGENT (UINT)32
#define ND_RA_FLAG_PREFERENCE (UINT)24
#define ND_NA_FLAG_ROUTER (UINT)2147483648
#define ND_NA_FLAG_SOLICITED (UINT)1073741824
#define ND_NA_FLAG_OVERRIDE (UINT)536870912
#define ND_OPT_PI_FLAG_ONLINK (UINT)128
#define ND_OPT_PI_FLAG_AUTO (UINT)64
#define ND_OPT_PI_FLAG_ROUTER_ADDR (UINT)32
#define ND_OPT_PI_FLAG_SITE_PREFIX (UINT)16
#define ND_OPT_PI_FLAG_ROUTE (UINT)1
#define ND_OPT_RI_FLAG_PREFERENCE (UINT)24
#define ND_OPT_RDNSS_MIN_LEN (UINT)24
#define ND_OPT_DNSSL_MIN_LEN (UINT)16
#define IN6_EMBEDDEDV4_UOCTET_POSITION (UINT)8
#define IN6_EMBEDDEDV4_BITS_IN_BYTE (UINT)8
#define TH_FIN (UINT)1
#define TH_SYN (UINT)2
#define TH_RST (UINT)4
#define TH_PSH (UINT)8
#define TH_ACK (UINT)16
#define TH_URG (UINT)32
#define TH_ECE (UINT)64
#define TH_CWR (UINT)128
#define TH_OPT_EOL (UINT)0
#define TH_OPT_NOP (UINT)1
#define TH_OPT_MSS (UINT)2
#define TH_OPT_WS (UINT)3
#define TH_OPT_SACK_PERMITTED (UINT)4
#define TH_OPT_SACK (UINT)5
#define TH_OPT_TS (UINT)8
#define TH_OPT_FASTOPEN (UINT)34
#define FWPM_LAYER_INBOUND_IPPACKET_V4 GUID { "c86fd1bf-21cd-497e-a0bb-17425c885c58" }
#define FWPM_LAYER_INBOUND_IPPACKET_V4_DISCARD GUID { "b5a230d0-a8c0-44f2-916e-991b53ded1f7" }
#define FWPM_LAYER_INBOUND_IPPACKET_V6 GUID { "f52032cb-991c-46e7-971d-2601459a91ca" }
#define FWPM_LAYER_INBOUND_IPPACKET_V6_DISCARD GUID { "bb24c279-93b4-47a2-83ad-ae1698b50885" }
#define FWPM_LAYER_OUTBOUND_IPPACKET_V4 GUID { "1e5c9fae-8a84-4135-a331-950b54229ecd" }
#define FWPM_LAYER_OUTBOUND_IPPACKET_V4_DISCARD GUID { "08e4bcb5-b647-48f3-953c-e5ddbd03937e" }
#define FWPM_LAYER_OUTBOUND_IPPACKET_V6 GUID { "a3b3ab6b-3564-488c-9117-f34e82142763" }
#define FWPM_LAYER_OUTBOUND_IPPACKET_V6_DISCARD GUID { "9513d7c4-a934-49dc-91a7-6ccb80cc02e3" }
#define FWPM_LAYER_IPFORWARD_V4 GUID { "a82acc24-4ee1-4ee1-b465-fd1d25cb10a4" }
#define FWPM_LAYER_IPFORWARD_V4_DISCARD GUID { "9e9ea773-2fae-4210-8f17-34129ef369eb" }
#define FWPM_LAYER_IPFORWARD_V6 GUID { "7b964818-19c7-493a-b71f-832c3684d28c" }
#define FWPM_LAYER_IPFORWARD_V6_DISCARD GUID { "31524a5d-1dfe-472f-bb93-518ee945d8a2" }
#define FWPM_LAYER_INBOUND_TRANSPORT_V4 GUID { "5926dfc8-e3cf-4426-a283-dc393f5d0f9d" }
#define FWPM_LAYER_INBOUND_TRANSPORT_V4_DISCARD GUID { "ac4a9833-f69d-4648-b261-6dc84835ef39" }
#define FWPM_LAYER_INBOUND_TRANSPORT_V6 GUID { "634a869f-fc23-4b90-b0c1-bf620a36ae6f" }
#define FWPM_LAYER_INBOUND_TRANSPORT_V6_DISCARD GUID { "2a6ff955-3b2b-49d2-9848-ad9d72dcaab7" }
#define FWPM_LAYER_OUTBOUND_TRANSPORT_V4 GUID { "09e61aea-d214-46e2-9b21-b26b0b2f28c8" }
#define FWPM_LAYER_OUTBOUND_TRANSPORT_V4_DISCARD GUID { "c5f10551-bdb0-43d7-a313-50e211f4d68a" }
#define FWPM_LAYER_OUTBOUND_TRANSPORT_V6 GUID { "e1735bde-013f-4655-b351-a49e15762df0" }
#define FWPM_LAYER_OUTBOUND_TRANSPORT_V6_DISCARD GUID { "f433df69-ccbd-482e-b9b2-57165658c3b3" }
#define FWPM_LAYER_STREAM_V4 GUID { "3b89653c-c170-49e4-b1cd-e0eeeee19a3e" }
#define FWPM_LAYER_STREAM_V4_DISCARD GUID { "25c4c2c2-25ff-4352-82f9-c54a4a4726dc" }
#define FWPM_LAYER_STREAM_V6 GUID { "47c9137a-7ec4-46b3-b6e4-48e926b1eda4" }
#define FWPM_LAYER_STREAM_V6_DISCARD GUID { "10a59fc7-b628-4c41-9eb8-cf37d55103cf" }
#define FWPM_LAYER_DATAGRAM_DATA_V4 GUID { "3d08bf4e-45f6-4930-a922-417098e20027" }
#define FWPM_LAYER_DATAGRAM_DATA_V4_DISCARD GUID { "18e330c6-7248-4e52-aaab-472ed67704fd" }
#define FWPM_LAYER_DATAGRAM_DATA_V6 GUID { "fa45fe2f-3cba-4427-87fc-57b9a4b10d00" }
#define FWPM_LAYER_DATAGRAM_DATA_V6_DISCARD GUID { "09d1dfe1-9b86-4a42-be9d-8c315b92a5d0" }
#define FWPM_LAYER_INBOUND_ICMP_ERROR_V4 GUID { "61499990-3cb6-4e84-b950-53b94b6964f3" }
#define FWPM_LAYER_INBOUND_ICMP_ERROR_V4_DISCARD GUID { "a6b17075-ebaf-4053-a4e7-213c8121ede5" }
#define FWPM_LAYER_INBOUND_ICMP_ERROR_V6 GUID { "65f9bdff-3b2d-4e5d-b8c6-c720651fe898" }
#define FWPM_LAYER_INBOUND_ICMP_ERROR_V6_DISCARD GUID { "a6e7ccc0-08fb-468d-a472-9771d5595e09" }
#define FWPM_LAYER_OUTBOUND_ICMP_ERROR_V4 GUID { "41390100-564c-4b32-bc1d-718048354d7c" }
#define FWPM_LAYER_OUTBOUND_ICMP_ERROR_V4_DISCARD GUID { "b3598d36-0561-4588-a6bf-e955e3f6264b" }
#define FWPM_LAYER_OUTBOUND_ICMP_ERROR_V6 GUID { "7fb03b60-7b8d-4dfa-badd-980176fc4e12" }
#define FWPM_LAYER_OUTBOUND_ICMP_ERROR_V6_DISCARD GUID { "65f2e647-8d0c-4f47-b19b-33a4d3f1357c" }
#define FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V4 GUID { "1247d66d-0b60-4a15-8d44-7155d0f53a0c" }
#define FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V4_DISCARD GUID { "0b5812a2-c3ff-4eca-b88d-c79e20ac6322" }
#define FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V6 GUID { "55a650e1-5f0a-4eca-a653-88f53b26aa8c" }
#define FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V6_DISCARD GUID { "cbc998bb-c51f-4c1a-bb4f-9775fcacab2f" }
#define FWPM_LAYER_ALE_AUTH_LISTEN_V4 GUID { "88bb5dad-76d7-4227-9c71-df0a3ed7be7e" }
#define FWPM_LAYER_ALE_AUTH_LISTEN_V4_DISCARD GUID { "371dfada-9f26-45fd-b4eb-c29eb212893f" }
#define FWPM_LAYER_ALE_AUTH_LISTEN_V6 GUID { "7ac9de24-17dd-4814-b4bd-a9fbc95a321b" }
#define FWPM_LAYER_ALE_AUTH_LISTEN_V6_DISCARD GUID { "60703b07-63c8-48e9-ada3-12b1af40a617" }
#define FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4 GUID { "e1cd9fe7-f4b5-4273-96c0-592e487b8650" }
#define FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4_DISCARD GUID { "9eeaa99b-bd22-4227-919f-0073c63357b1" }
#define FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V6 GUID { "a3b42c97-9f04-4672-b87e-cee9c483257f" }
#define FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V6_DISCARD GUID { "89455b97-dbe1-453f-a224-13da895af396" }
#define FWPM_LAYER_ALE_AUTH_CONNECT_V4 GUID { "c38d57d1-05a7-4c33-904f-7fbceee60e82" }
#define FWPM_LAYER_ALE_AUTH_CONNECT_V4_DISCARD GUID { "d632a801-f5ba-4ad6-96e3-607017d9836a" }
#define FWPM_LAYER_ALE_AUTH_CONNECT_V6 GUID { "4a72393b-319f-44bc-84c3-ba54dcb3b6b4" }
#define FWPM_LAYER_ALE_AUTH_CONNECT_V6_DISCARD GUID { "c97bc3b8-c9a3-4e33-8695-8e17aad4de09" }
#define FWPM_LAYER_ALE_FLOW_ESTABLISHED_V4 GUID { "af80470a-5596-4c13-9992-539e6fe57967" }
#define FWPM_LAYER_ALE_FLOW_ESTABLISHED_V4_DISCARD GUID { "146ae4a9-a1d2-4d43-a31a-4c42682b8e4f" }
#define FWPM_LAYER_ALE_FLOW_ESTABLISHED_V6 GUID { "7021d2b3-dfa4-406e-afeb-6afaf7e70efd" }
#define FWPM_LAYER_ALE_FLOW_ESTABLISHED_V6_DISCARD GUID { "46928636-bbca-4b76-941d-0fa7f5d7d372" }
#define FWPM_LAYER_INBOUND_MAC_FRAME_ETHERNET GUID { "effb7edb-0055-4f9a-a231-4ff8131ad191" }
#define FWPM_LAYER_OUTBOUND_MAC_FRAME_ETHERNET GUID { "694673bc-d6db-4870-adee-0acdbdb7f4b2" }
#define FWPM_LAYER_INBOUND_MAC_FRAME_NATIVE GUID { "d4220bd3-62ce-4f08-ae88-b56e8526df50" }
#define FWPM_LAYER_OUTBOUND_MAC_FRAME_NATIVE GUID { "94c44912-9d6f-4ebf-b995-05ab8a088d1b" }
#define FWPM_LAYER_INGRESS_VSWITCH_ETHERNET GUID { "7d98577a-9a87-41ec-9718-7cf589c9f32d" }
#define FWPM_LAYER_EGRESS_VSWITCH_ETHERNET GUID { "86c872b0-76fa-4b79-93a4-0750530ae292" }
#define FWPM_LAYER_INGRESS_VSWITCH_TRANSPORT_V4 GUID { "b2696ff6-774f-4554-9f7d-3da3945f8e85" }
#define FWPM_LAYER_INGRESS_VSWITCH_TRANSPORT_V6 GUID { "5ee314fc-7d8a-47f4-b7e3-291a36da4e12" }
#define FWPM_LAYER_EGRESS_VSWITCH_TRANSPORT_V4 GUID { "b92350b6-91f0-46b6-bdc4-871dfd4a7c98" }
#define FWPM_LAYER_EGRESS_VSWITCH_TRANSPORT_V6 GUID { "1b2def23-1881-40bd-82f4-4254e63141cb" }
#define FWPM_LAYER_INBOUND_TRANSPORT_FAST GUID { "e41d2719-05c7-40f0-8983-ea8d17bbc2f6" }
#define FWPM_LAYER_OUTBOUND_TRANSPORT_FAST GUID { "13ed4388-a070-4815-9935-7a9be6408b78" }
#define FWPM_LAYER_INBOUND_MAC_FRAME_NATIVE_FAST GUID { "853aaa8e-2b78-4d24-a804-36db08b29711" }
#define FWPM_LAYER_OUTBOUND_MAC_FRAME_NATIVE_FAST GUID { "470df946-c962-486f-9446-8293cbc75eb8" }
#define FWPM_LAYER_IPSEC_KM_DEMUX_V4 GUID { "f02b1526-a459-4a51-b9e3-759de52b9d2c" }
#define FWPM_LAYER_IPSEC_KM_DEMUX_V6 GUID { "2f755cf6-2fd4-4e88-b3e4-a91bca495235" }
#define FWPM_LAYER_IPSEC_V4 GUID { "eda65c74-610d-4bc5-948f-3c4f89556867" }
#define FWPM_LAYER_IPSEC_V6 GUID { "13c48442-8d87-4261-9a29-59d2abc348b4" }
#define FWPM_LAYER_IKEEXT_V4 GUID { "b14b7bdb-dbbd-473e-bed4-8b4708d4f270" }
#define FWPM_LAYER_IKEEXT_V6 GUID { "b64786b3-f687-4eb9-89d2-8ef32acdabe2" }
#define FWPM_LAYER_RPC_UM GUID { "75a89dda-95e4-40f3-adc7-7688a9c847e1" }
#define FWPM_LAYER_RPC_EPMAP GUID { "9247bc61-eb07-47ee-872c-bfd78bfd1616" }
#define FWPM_LAYER_RPC_EP_ADD GUID { "618dffc7-c450-4943-95db-99b4c16a55d4" }
#define FWPM_LAYER_RPC_PROXY_CONN GUID { "94a4b50b-ba5c-4f27-907a-229fac0c2a7a" }
#define FWPM_LAYER_RPC_PROXY_IF GUID { "f8a38615-e12c-41ac-98df-121ad981aade" }
#define FWPM_LAYER_KM_AUTHORIZATION GUID { "4aa226e9-9020-45fb-956a-c0249d841195" }
#define FWPM_LAYER_NAME_RESOLUTION_CACHE_V4 GUID { "0c2aa681-905b-4ccd-a467-4dd811d07b7b" }
#define FWPM_LAYER_NAME_RESOLUTION_CACHE_V6 GUID { "92d592fa-6b01-434a-9dea-d1e96ea97da9" }
#define FWPM_LAYER_ALE_RESOURCE_RELEASE_V4 GUID { "74365cce-ccb0-401a-bfc1-b89934ad7e15" }
#define FWPM_LAYER_ALE_RESOURCE_RELEASE_V6 GUID { "f4e5ce80-edcc-4e13-8a2f-b91454bb057b" }
#define FWPM_LAYER_ALE_ENDPOINT_CLOSURE_V4 GUID { "b4766427-e2a2-467a-bd7e-dbcd1bd85a09" }
#define FWPM_LAYER_ALE_ENDPOINT_CLOSURE_V6 GUID { "bb536ccd-4755-4ba9-9ff7-f9edf8699c7b" }
#define FWPM_LAYER_ALE_CONNECT_REDIRECT_V4 GUID { "c6e63c8c-b784-4562-aa7d-0a67cfcaf9a3" }
#define FWPM_LAYER_ALE_CONNECT_REDIRECT_V6 GUID { "587e54a7-8046-42ba-a0aa-b716250fc7fd" }
#define FWPM_LAYER_ALE_BIND_REDIRECT_V4 GUID { "66978cad-c704-42ac-86ac-7c1a231bd253" }
#define FWPM_LAYER_ALE_BIND_REDIRECT_V6 GUID { "bef02c9c-606b-4536-8c26-1c2fc7b631d4" }
#define FWPM_LAYER_STREAM_PACKET_V4 GUID { "af52d8ec-cb2d-44e5-ad92-f8dc38d2eb29" }
#define FWPM_LAYER_STREAM_PACKET_V6 GUID { "779a8ca3-f099-468f-b5d4-83535c461c02" }
#define FWPM_LAYER_INBOUND_RESERVED2 GUID { "f4fb8d55-c076-46d8-a2c7-6a4c722ca4ed" }
#define FWPM_SUBLAYER_RPC_AUDIT GUID { "758c84f4-fb48-4de9-9aeb-3ed9551ab1fd" }
#define FWPM_SUBLAYER_IPSEC_TUNNEL GUID { "83f299ed-9ff4-4967-aff4-c309f4dab827" }
#define FWPM_SUBLAYER_UNIVERSAL GUID { "eebecc03-ced4-4380-819a-2734397b2b74" }
#define FWPM_SUBLAYER_LIPS GUID { "1b75c0ce-ff60-4711-a70f-b4958cc3b2d0" }
#define FWPM_SUBLAYER_SECURE_SOCKET GUID { "15a66e17-3f3c-4f7b-aa6c-812aa613dd82" }
#define FWPM_SUBLAYER_TCP_CHIMNEY_OFFLOAD GUID { "337608b9-b7d5-4d5f-82f9-3618618bc058" }
#define FWPM_SUBLAYER_INSPECTION GUID { "877519e1-e6a9-41a5-81b4-8c4f118e4a60" }
#define FWPM_SUBLAYER_TEREDO GUID { "ba69dc66-5176-4979-9c89-26a7b46a8327" }
#define FWPM_SUBLAYER_IPSEC_FORWARD_OUTBOUND_TUNNEL GUID { "a5082e73-8f71-4559-8a9a-101cea04ef87" }
#define FWPM_SUBLAYER_IPSEC_DOSP GUID { "e076d572-5d3d-48ef-802b-909eddb098bd" }
#define FWPM_SUBLAYER_TCP_TEMPLATES GUID { "24421dcf-0ac5-4caa-9e14-50f6e3636af0" }
#define FWPM_SUBLAYER_IPSEC_SECURITY_REALM GUID { "37a57701-5884-4964-92b8-3e704688b0ad" }
#define FWPM_CONDITION_INTERFACE_MAC_ADDRESS GUID { "f6e63dce-1f4b-4c6b-b6ef-1165e71f8ee7" }
#define FWPM_CONDITION_MAC_LOCAL_ADDRESS GUID { "d999e981-7948-4c83-b742-c84e3b678f8f" }
#define FWPM_CONDITION_MAC_REMOTE_ADDRESS GUID { "408f2ed4-3a70-4b4d-92a6-415ac20e2f12" }
#define FWPM_CONDITION_ETHER_TYPE GUID { "fd08948d-a219-4d52-bb98-1a5540ee7b4e" }
#define FWPM_CONDITION_VLAN_ID GUID { "938eab21-3618-4e64-9ca5-2141ebda1ca2" }
#define FWPM_CONDITION_VSWITCH_TENANT_NETWORK_ID GUID { "dc04843c-79e6-4e44-a025-65b9bb0f9f94" }
#define FWPM_CONDITION_NDIS_PORT GUID { "db7bb42b-2dac-4cd4-a59a-e0bdce1e6834" }
#define FWPM_CONDITION_NDIS_MEDIA_TYPE GUID { "cb31cef1-791d-473b-89d1-61c5984304a0" }
#define FWPM_CONDITION_NDIS_PHYSICAL_MEDIA_TYPE GUID { "34c79823-c229-44f2-b83c-74020882ae77" }
#define FWPM_CONDITION_L2_FLAGS GUID { "7bc43cbf-37ba-45f1-b74a-82ff518eeb10" }
#define FWPM_CONDITION_MAC_LOCAL_ADDRESS_TYPE GUID { "cc31355c-3073-4ffb-a14f-79415cb1ead1" }
#define FWPM_CONDITION_MAC_REMOTE_ADDRESS_TYPE GUID { "027fedb4-f1c1-4030-b564-ee777fd867ea" }
#define FWPM_CONDITION_ALE_PACKAGE_ID GUID { "71bc78fa-f17c-4997-a602-6abb261f351c" }
#define FWPM_CONDITION_MAC_SOURCE_ADDRESS GUID { "7b795451-f1f6-4d05-b7cb-21779d802336" }
#define FWPM_CONDITION_MAC_DESTINATION_ADDRESS GUID { "04ea2a93-858c-4027-b613-b43180c7859e" }
#define FWPM_CONDITION_MAC_SOURCE_ADDRESS_TYPE GUID { "5c1b72e4-299e-4437-a298-bc3f014b3dc2" }
#define FWPM_CONDITION_MAC_DESTINATION_ADDRESS_TYPE GUID { "ae052932-ef42-4e99-b129-f3b3139e34f7" }
#define FWPM_CONDITION_IP_SOURCE_PORT GUID { "a6afef91-3df4-4730-a214-f5426aebf821" }
#define FWPM_CONDITION_IP_DESTINATION_PORT GUID { "ce6def45-60fb-4a7b-a304-af30a117000e" }
#define FWPM_CONDITION_VSWITCH_ID GUID { "c4a414ba-437b-4de6-9946-d99c1b95b312" }
#define FWPM_CONDITION_VSWITCH_NETWORK_TYPE GUID { "11d48b4b-e77a-40b4-9155-392c906c2608" }
#define FWPM_CONDITION_VSWITCH_SOURCE_INTERFACE_ID GUID { "7f4ef24b-b2c1-4938-ba33-a1ecbed512ba" }
#define FWPM_CONDITION_VSWITCH_DESTINATION_INTERFACE_ID GUID { "8ed48be4-c926-49f6-a4f6-ef3030e3fc16" }
#define FWPM_CONDITION_VSWITCH_SOURCE_VM_ID GUID { "9c2a9ec2-9fc6-42bc-bdd8-406d4da0be64" }
#define FWPM_CONDITION_VSWITCH_DESTINATION_VM_ID GUID { "6106aace-4de1-4c84-9671-3637f8bcf731" }
#define FWPM_CONDITION_VSWITCH_SOURCE_INTERFACE_TYPE GUID { "e6b040a2-edaf-4c36-908b-f2f58ae43807" }
#define FWPM_CONDITION_VSWITCH_DESTINATION_INTERFACE_TYPE GUID { "fa9b3f06-2f1a-4c57-9e68-a7098b28dbfe" }
#define FWPM_CONDITION_ALE_SECURITY_ATTRIBUTE_FQBN_VALUE GUID { "37a57699-5883-4963-92b8-3e704688b0ad" }
#define FWPM_CONDITION_IPSEC_SECURITY_REALM_ID GUID { "37a57700-5884-4964-92b8-3e704688b0ad" }
#define FWPM_CONDITION_ALE_EFFECTIVE_NAME GUID { "b1277b9a-b781-40fc-9671-e5f1b989f34e" }
#define FWPM_CONDITION_IP_LOCAL_ADDRESS GUID { "d9ee00de-c1ef-4617-bfe3-ffd8f5a08957" }
#define FWPM_CONDITION_IP_REMOTE_ADDRESS GUID { "b235ae9a-1d64-49b8-a44c-5ff3d9095045" }
#define FWPM_CONDITION_IP_SOURCE_ADDRESS GUID { "ae96897e-2e94-4bc9-b313-b27ee80e574d" }
#define FWPM_CONDITION_IP_DESTINATION_ADDRESS GUID { "2d79133b-b390-45c6-8699-acaceaafed33" }
#define FWPM_CONDITION_IP_LOCAL_ADDRESS_TYPE GUID { "6ec7f6c4-376b-45d7-9e9c-d337cedcd237" }
#define FWPM_CONDITION_IP_DESTINATION_ADDRESS_TYPE GUID { "1ec1b7c9-4eea-4f5e-b9ef-76beaaaf17ee" }
#define FWPM_CONDITION_BITMAP_IP_LOCAL_ADDRESS GUID { "16ebc3df-957a-452e-a1fc-3d2ff6a730ba" }
#define FWPM_CONDITION_BITMAP_IP_LOCAL_PORT GUID { "9f90a920-c3b5-4569-ba31-8bd3910dc656" }
#define FWPM_CONDITION_BITMAP_IP_REMOTE_ADDRESS GUID { "33f00e25-8eec-4531-a005-41b911f62452" }
#define FWPM_CONDITION_BITMAP_IP_REMOTE_PORT GUID { "2663d549-aaf2-46a2-8666-1e7667f86985" }
#define FWPM_CONDITION_IP_NEXTHOP_ADDRESS GUID { "eabe448a-a711-4d64-85b7-3f76b65299c7" }
#define FWPM_CONDITION_BITMAP_INDEX_KEY GUID { "0f36514c-3226-4a81-a214-2d518b04d08a" }
#define FWPM_CONDITION_IP_LOCAL_INTERFACE GUID { "4cd62a49-59c3-4969-b7f3-bda5d32890a4" }
#define FWPM_CONDITION_IP_ARRIVAL_INTERFACE GUID { "618a9b6d-386b-4136-ad6e-b51587cfb1cd" }
#define FWPM_CONDITION_ARRIVAL_INTERFACE_TYPE GUID { "89f990de-e798-4e6d-ab76-7c9558292e6f" }
#define FWPM_CONDITION_ARRIVAL_TUNNEL_TYPE GUID { "511166dc-7a8c-4aa7-b533-95ab59fb0340" }
#define FWPM_CONDITION_ARRIVAL_INTERFACE_INDEX GUID { "cc088db3-1792-4a71-b0f9-037d21cd828b" }
#define FWPM_CONDITION_NEXTHOP_SUB_INTERFACE_INDEX GUID { "ef8a6122-0577-45a7-9aaf-825fbeb4fb95" }
#define FWPM_CONDITION_IP_NEXTHOP_INTERFACE GUID { "93ae8f5b-7f6f-4719-98c8-14e97429ef04" }
#define FWPM_CONDITION_NEXTHOP_INTERFACE_TYPE GUID { "97537c6c-d9a3-4767-a381-e942675cd920" }
#define FWPM_CONDITION_NEXTHOP_TUNNEL_TYPE GUID { "72b1a111-987b-4720-99dd-c7c576fa2d4c" }
#define FWPM_CONDITION_NEXTHOP_INTERFACE_INDEX GUID { "138e6888-7ab8-4d65-9ee8-0591bcf6a494" }
#define FWPM_CONDITION_ORIGINAL_PROFILE_ID GUID { "46ea1551-2255-492b-8019-aabeee349f40" }
#define FWPM_CONDITION_CURRENT_PROFILE_ID GUID { "ab3033c9-c0e3-4759-937d-5758c65d4ae3" }
#define FWPM_CONDITION_LOCAL_INTERFACE_PROFILE_ID GUID { "4ebf7562-9f18-4d06-9941-a7a625744d71" }
#define FWPM_CONDITION_ARRIVAL_INTERFACE_PROFILE_ID GUID { "cdfe6aab-c083-4142-8679-c08f95329c61" }
#define FWPM_CONDITION_NEXTHOP_INTERFACE_PROFILE_ID GUID { "d7ff9a56-cdaa-472b-84db-d23963c1d1bf" }
#define FWPM_CONDITION_REAUTHORIZE_REASON GUID { "11205e8c-11ae-457a-8a44-477026dd764a" }
#define FWPM_CONDITION_ORIGINAL_ICMP_TYPE GUID { "076dfdbe-c56c-4f72-ae8a-2cfe7e5c8286" }
#define FWPM_CONDITION_IP_PHYSICAL_ARRIVAL_INTERFACE GUID { "da50d5c8-fa0d-4c89-b032-6e62136d1e96" }
#define FWPM_CONDITION_IP_PHYSICAL_NEXTHOP_INTERFACE GUID { "f09bd5ce-5150-48be-b098-c25152fb1f92" }
#define FWPM_CONDITION_INTERFACE_QUARANTINE_EPOCH GUID { "cce68d5e-053b-43a8-9a6f-33384c28e4f6" }
#define FWPM_CONDITION_INTERFACE_TYPE GUID { "daf8cd14-e09e-4c93-a5ae-c5c13b73ffca" }
#define FWPM_CONDITION_TUNNEL_TYPE GUID { "77a40437-8779-4868-a261-f5a902f1c0cd" }
#define FWPM_CONDITION_IP_FORWARD_INTERFACE GUID { "1076b8a5-6323-4c5e-9810-e8d3fc9e6136" }
#define FWPM_CONDITION_IP_PROTOCOL GUID { "3971ef2b-623e-4f9a-8cb1-6e79b806b9a7" }
#define FWPM_CONDITION_IP_LOCAL_PORT GUID { "0c1ba1af-5765-453f-af22-a8f791ac775b" }
#define FWPM_CONDITION_IP_REMOTE_PORT GUID { "c35a604d-d22b-4e1a-91b4-68f674ee674b" }
#define FWPM_CONDITION_EMBEDDED_LOCAL_ADDRESS_TYPE GUID { "4672a468-8a0a-4202-abb4-849e92e66809" }
#define FWPM_CONDITION_EMBEDDED_REMOTE_ADDRESS GUID { "77ee4b39-3273-4671-b63b-ab6feb66eeb6" }
#define FWPM_CONDITION_EMBEDDED_PROTOCOL GUID { "07784107-a29e-4c7b-9ec7-29c44afafdbc" }
#define FWPM_CONDITION_EMBEDDED_LOCAL_PORT GUID { "bfca394d-acdb-484e-b8e6-2aff79757345" }
#define FWPM_CONDITION_EMBEDDED_REMOTE_PORT GUID { "cae4d6a1-2968-40ed-a4ce-547160dda88d" }
#define FWPM_CONDITION_FLAGS GUID { "632ce23b-5167-435c-86d7-e903684aa80c" }
#define FWPM_CONDITION_DIRECTION GUID { "8784c146-ca97-44d6-9fd1-19fb1840cbf7" }
#define FWPM_CONDITION_INTERFACE_INDEX GUID { "667fd755-d695-434a-8af5-d3835a1259bc" }
#define FWPM_CONDITION_SUB_INTERFACE_INDEX GUID { "0cd42473-d621-4be3-ae8c-72a348d283e1" }
#define FWPM_CONDITION_SOURCE_INTERFACE_INDEX GUID { "2311334d-c92d-45bf-9496-edf447820e2d" }
#define FWPM_CONDITION_SOURCE_SUB_INTERFACE_INDEX GUID { "055edd9d-acd2-4361-8dab-f9525d97662f" }
#define FWPM_CONDITION_DESTINATION_INTERFACE_INDEX GUID { "35cf6522-4139-45ee-a0d5-67b80949d879" }
#define FWPM_CONDITION_DESTINATION_SUB_INTERFACE_INDEX GUID { "2b7d4399-d4c7-4738-a2f5-e994b43da388" }
#define FWPM_CONDITION_ALE_APP_ID GUID { "d78e1e87-8644-4ea5-9437-d809ecefc971" }
#define FWPM_CONDITION_ALE_ORIGINAL_APP_ID GUID { "0e6cd086-e1fb-4212-842f-8a9f993fb3f6" }
#define FWPM_CONDITION_ALE_USER_ID GUID { "af043a0a-b34d-4f86-979c-c90371af6e66" }
#define FWPM_CONDITION_ALE_REMOTE_USER_ID GUID { "f63073b7-0189-4ab0-95a4-6123cbfab862" }
#define FWPM_CONDITION_ALE_REMOTE_MACHINE_ID GUID { "1aa47f51-7f93-4508-a271-81abb00c9cab" }
#define FWPM_CONDITION_ALE_PROMISCUOUS_MODE GUID { "1c974776-7182-46e9-afd3-b02910e30334" }
#define FWPM_CONDITION_ALE_SIO_FIREWALL_SYSTEM_PORT GUID { "b9f4e088-cb98-4efb-a2c7-ad07332643db" }
#define FWPM_CONDITION_ALE_REAUTH_REASON GUID { "b482d227-1979-4a98-8044-18bbe6237542" }
#define FWPM_CONDITION_ALE_NAP_CONTEXT GUID { "46275a9d-c03f-4d77-b784-1c57f4d02753" }
#define FWPM_CONDITION_KM_AUTH_NAP_CONTEXT GUID { "35d0ea0e-15ca-492b-900e-97fd46352cce" }
#define FWPM_CONDITION_REMOTE_USER_TOKEN GUID { "9bf0ee66-06c9-41b9-84da-288cb43af51f" }
#define FWPM_CONDITION_RPC_IF_UUID GUID { "7c9c7d9f-0075-4d35-a0d1-8311c4cf6af1" }
#define FWPM_CONDITION_RPC_IF_VERSION GUID { "eabfd9b7-1262-4a2e-adaa-5f96f6fe326d" }
#define FWPM_CONDITION_RPC_IF_FLAG GUID { "238a8a32-3199-467d-871c-272621ab3896" }
#define FWPM_CONDITION_DCOM_APP_ID GUID { "ff2e7b4d-3112-4770-b636-4d24ae3a6af2" }
#define FWPM_CONDITION_IMAGE_NAME GUID { "d024de4d-deaa-4317-9c85-e40ef6e140c3" }
#define FWPM_CONDITION_RPC_PROTOCOL GUID { "2717bc74-3a35-4ce7-b7ef-c838fabdec45" }
#define FWPM_CONDITION_RPC_AUTH_TYPE GUID { "daba74ab-0d67-43e7-986e-75b84f82f594" }
#define FWPM_CONDITION_RPC_AUTH_LEVEL GUID { "e5a0aed5-59ac-46ea-be05-a5f05ecf446e" }
#define FWPM_CONDITION_SEC_ENCRYPT_ALGORITHM GUID { "0d306ef0-e974-4f74-b5c7-591b0da7d562" }
#define FWPM_CONDITION_SEC_KEY_SIZE GUID { "4772183b-ccf8-4aeb-bce1-c6c6161c8fe4" }
#define FWPM_CONDITION_IP_LOCAL_ADDRESS_V4 GUID { "03a629cb-6e52-49f8-9c41-5709633c09cf" }
#define FWPM_CONDITION_IP_LOCAL_ADDRESS_V6 GUID { "2381be84-7524-45b3-a05b-1e637d9c7a6a" }
#define FWPM_CONDITION_PIPE GUID { "1bd0741d-e3df-4e24-8634-762046eef6eb" }
#define FWPM_CONDITION_IP_REMOTE_ADDRESS_V4 GUID { "1febb610-3bcc-45e1-bc36-2e067e2cb186" }
#define FWPM_CONDITION_IP_REMOTE_ADDRESS_V6 GUID { "246e1d8c-8bee-4018-9b98-31d4582f3361" }
#define FWPM_CONDITION_PROCESS_WITH_RPC_IF_UUID GUID { "e31180a8-bbbd-4d14-a65e-7157b06233bb" }
#define FWPM_CONDITION_RPC_EP_VALUE GUID { "dccea0b9-0886-4360-9c6a-ab043a24fba9" }
#define FWPM_CONDITION_RPC_EP_FLAGS GUID { "218b814a-0a39-49b8-8e71-c20c39c7dd2e" }
#define FWPM_CONDITION_CLIENT_TOKEN GUID { "c228fc1e-403a-4478-be05-c9baa4c05ace" }
#define FWPM_CONDITION_RPC_SERVER_NAME GUID { "b605a225-c3b3-48c7-9833-7aefa9527546" }
#define FWPM_CONDITION_RPC_SERVER_PORT GUID { "8090f645-9ad5-4e3b-9f9f-8023ca097909" }
#define FWPM_CONDITION_RPC_PROXY_AUTH_TYPE GUID { "40953fe2-8565-4759-8488-1771b4b4b5db" }
#define FWPM_CONDITION_CLIENT_CERT_KEY_LENGTH GUID { "a3ec00c7-05f4-4df7-91f2-5f60d91ff443" }
#define FWPM_CONDITION_CLIENT_CERT_OID GUID { "c491ad5e-f882-4283-b916-436b103ff4ad" }
#define FWPM_CONDITION_NET_EVENT_TYPE GUID { "206e9996-490e-40cf-b831-b38641eb6fcb" }
#define FWPM_CONDITION_PEER_NAME GUID { "9b539082-eb90-4186-a6cc-de5b63235016" }
#define FWPM_CONDITION_REMOTE_ID GUID { "f68166fd-0682-4c89-b8f5-86436c7ef9b7" }
#define FWPM_CONDITION_AUTHENTICATION_TYPE GUID { "eb458cd5-da7b-4ef9-8d43-7b0a840332f2" }
#define FWPM_CONDITION_KM_TYPE GUID { "ff0f5f49-0ceb-481b-8638-1479791f3f2c" }
#define FWPM_CONDITION_KM_MODE GUID { "feef4582-ef8f-4f7b-858b-9077d122de47" }
#define FWPM_CONDITION_IPSEC_POLICY_KEY GUID { "ad37dee3-722f-45cc-a4e3-068048124452" }
#define FWPM_CONDITION_QM_MODE GUID { "f64fc6d1-f9cb-43d2-8a5f-e13bc894f265" }
#define FWPM_CONDITION_COMPARTMENT_ID GUID { "35a791ab-04ac-4ff2-a6bb-da6cfac71806" }
#define FWPM_CONDITION_RESERVED0 GUID { "678f4deb-45af-4882-93fe-19d4729d9834" }
#define FWPM_CONDITION_RESERVED1 GUID { "d818f827-5c69-48eb-bf80-d86b17755f97" }
#define FWPM_CONDITION_RESERVED2 GUID { "53d4123d-e15b-4e84-b7a8-dce16f7b62d9" }
#define FWPM_CONDITION_RESERVED3 GUID { "7f6e8ca3-6606-4932-97c7-e1f20710af3b" }
#define FWPM_CONDITION_RESERVED4 GUID { "5f58e642-b937-495e-a94b-f6b051a49250" }
#define FWPM_CONDITION_RESERVED5 GUID { "9ba8f6cd-f77c-43e6-8847-11939dc5db5a" }
#define FWPM_CONDITION_RESERVED6 GUID { "f13d84bd-59d5-44c4-8817-5ecdae1805bd" }
#define FWPM_CONDITION_RESERVED7 GUID { "65a0f930-45dd-4983-aa33-efc7b611af08" }
#define FWPM_CONDITION_RESERVED8 GUID { "4f424974-0c12-4816-9b47-9a547db39a32" }
#define FWPM_CONDITION_RESERVED9 GUID { "ce78e10f-13ff-4c70-8643-36ad1879afa3" }
#define FWPM_CONDITION_RESERVED10 GUID { "b979e282-d621-4c8c-b184-b105a61c36ce" }
#define FWPM_CONDITION_RESERVED11 GUID { "2d62ee4d-023d-411f-9582-43acbb795975" }
#define FWPM_CONDITION_RESERVED12 GUID { "a3677c32-7e35-4ddc-93da-e8c33fc923c7" }
#define FWPM_CONDITION_RESERVED13 GUID { "335a3e90-84aa-42f5-9e6f-59309536a44c" }
#define FWPM_CONDITION_RESERVED14 GUID { "30e44da2-2f1a-4116-a559-f907de83604a" }
#define FWPM_CONDITION_RESERVED15 GUID { "bab8340f-afe0-43d1-80d8-5ca456962de3" }
#define FWPM_PROVIDER_IKEEXT GUID { "10ad9216-ccde-456c-8b16-e9f04e60a90b" }
#define FWPM_PROVIDER_IPSEC_DOSP_CONFIG GUID { "3c6c05a9-c05c-4bb9-8338-2327814ce8bf" }
#define FWPM_PROVIDER_TCP_CHIMNEY_OFFLOAD GUID { "896aa19e-9a34-4bcb-ae79-beb9127c84b9" }
#define FWPM_PROVIDER_TCP_TEMPLATES GUID { "76cfcd30-3394-432d-bed3-441ae50e63c3" }
#define FWPM_CALLOUT_IPSEC_INBOUND_TRANSPORT_V4 GUID { "5132900d-5e84-4b5f-80e4-01741e81ff10" }
#define FWPM_CALLOUT_IPSEC_INBOUND_TRANSPORT_V6 GUID { "49d3ac92-2a6c-4dcf-955f-1c3be009dd99" }
#define FWPM_CALLOUT_IPSEC_OUTBOUND_TRANSPORT_V4 GUID { "4b46bf0a-4523-4e57-aa38-a87987c910d9" }
#define FWPM_CALLOUT_IPSEC_OUTBOUND_TRANSPORT_V6 GUID { "38d87722-ad83-4f11-a91f-df0fb077225b" }
#define FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_V4 GUID { "191a8a46-0bf8-46cf-b045-4b45dfa6a324" }
#define FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_V6 GUID { "80c342e3-1e53-4d6f-9b44-03df5aeee154" }
#define FWPM_CALLOUT_IPSEC_OUTBOUND_TUNNEL_V4 GUID { "70a4196c-835b-4fb0-98e8-075f4d977d46" }
#define FWPM_CALLOUT_IPSEC_OUTBOUND_TUNNEL_V6 GUID { "f1835363-a6a5-4e62-b180-23db789d8da6" }
#define FWPM_CALLOUT_IPSEC_FORWARD_INBOUND_TUNNEL_V4 GUID { "28829633-c4f0-4e66-873f-844db2a899c7" }
#define FWPM_CALLOUT_IPSEC_FORWARD_INBOUND_TUNNEL_V6 GUID { "af50bec2-c686-429a-884d-b74443e7b0b4" }
#define FWPM_CALLOUT_IPSEC_FORWARD_OUTBOUND_TUNNEL_V4 GUID { "fb532136-15cb-440b-937c-1717ca320c40" }
#define FWPM_CALLOUT_IPSEC_FORWARD_OUTBOUND_TUNNEL_V6 GUID { "dae640cc-e021-4bee-9eb6-a48b275c8c1d" }
#define FWPM_CALLOUT_IPSEC_INBOUND_INITIATE_SECURE_V4 GUID { "7dff309b-ba7d-4aba-91aa-ae5c6640c944" }
#define FWPM_CALLOUT_IPSEC_INBOUND_INITIATE_SECURE_V6 GUID { "a9a0d6d9-c58c-474e-8aeb-3cfe99d6d53d" }
#define FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_ALE_ACCEPT_V4 GUID { "3df6e7de-fd20-48f2-9f26-f854444cba79" }
#define FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_ALE_ACCEPT_V6 GUID { "a1e392d3-72ac-47bb-87a7-0122c69434ab" }
#define FWPM_CALLOUT_IPSEC_ALE_CONNECT_V4 GUID { "6ac141fc-f75d-4203-b9c8-48e6149c2712" }
#define FWPM_CALLOUT_IPSEC_ALE_CONNECT_V6 GUID { "4c0dda05-e31f-4666-90b0-b3dfad34129a" }
#define FWPM_CALLOUT_IPSEC_DOSP_FORWARD_V6 GUID { "6d08a342-db9e-4fbe-9ed2-57374ce89f79" }
#define FWPM_CALLOUT_IPSEC_DOSP_FORWARD_V4 GUID { "2fcb56ec-cd37-4b4f-b108-62c2b1850a0c" }
#define FWPM_CALLOUT_WFP_TRANSPORT_LAYER_V4_SILENT_DROP GUID { "eda08606-2494-4d78-89bc-67837c03b969" }
#define FWPM_CALLOUT_WFP_TRANSPORT_LAYER_V6_SILENT_DROP GUID { "8693cc74-a075-4156-b476-9286eece814e" }
#define FWPM_CALLOUT_TCP_CHIMNEY_CONNECT_LAYER_V4 GUID { "f3e10ab3-2c25-4279-ac36-c30fc181bec4" }
#define FWPM_CALLOUT_TCP_CHIMNEY_CONNECT_LAYER_V6 GUID { "39e22085-a341-42fc-a279-aec94e689c56" }
#define FWPM_CALLOUT_TCP_CHIMNEY_ACCEPT_LAYER_V4 GUID { "e183ecb2-3a7f-4b54-8ad9-76050ed880ca" }
#define FWPM_CALLOUT_TCP_CHIMNEY_ACCEPT_LAYER_V6 GUID { "0378cf41-bf98-4603-81f2-7f12586079f6" }
#define FWPM_CALLOUT_SET_OPTIONS_AUTH_CONNECT_LAYER_V4 GUID { "bc582280-1677-41e9-94ab-c2fcb15c2eeb" }
#define FWPM_CALLOUT_SET_OPTIONS_AUTH_CONNECT_LAYER_V6 GUID { "98e5373c-b884-490f-b65f-2f6a4a575195" }
#define FWPM_CALLOUT_SET_OPTIONS_AUTH_RECV_ACCEPT_LAYER_V4 GUID { "2d55f008-0c01-4f92-b26e-a08a94569b8d" }
#define FWPM_CALLOUT_SET_OPTIONS_AUTH_RECV_ACCEPT_LAYER_V6 GUID { "63018537-f281-4dc4-83d3-8dec18b7ade2" }
#define FWPM_CALLOUT_RESERVED_AUTH_CONNECT_LAYER_V4 GUID { "288b524d-0566-4e19-b612-8f441a2e5949" }
#define FWPM_CALLOUT_RESERVED_AUTH_CONNECT_LAYER_V6 GUID { "00b84b92-2b5e-4b71-ab0e-aaca43e387e6" }
#define FWPM_CALLOUT_TEREDO_ALE_RESOURCE_ASSIGNMENT_V6 GUID { "31b95392-066e-42a2-b7db-92f8acdd56f9" }
#define FWPM_CALLOUT_EDGE_TRAVERSAL_ALE_RESOURCE_ASSIGNMENT_V4 GUID { "079b1010-f1c5-4fcd-ae05-da41107abd0b" }
#define FWPM_CALLOUT_TEREDO_ALE_LISTEN_V6 GUID { "81a434e7-f60c-4378-bab8-c625a30f0197" }
#define FWPM_CALLOUT_EDGE_TRAVERSAL_ALE_LISTEN_V4 GUID { "33486ab5-6d5e-4e65-a00b-a7afed0ba9a1" }
#define FWPM_CALLOUT_TCP_TEMPLATES_CONNECT_LAYER_V4 GUID { "215a0b39-4b7e-4eda-8ce4-179679df6224" }
#define FWPM_CALLOUT_TCP_TEMPLATES_CONNECT_LAYER_V6 GUID { "838b37a1-5c12-4d34-8b38-078728b2d25c" }
#define FWPM_CALLOUT_TCP_TEMPLATES_ACCEPT_LAYER_V4 GUID { "2f23f5d0-40c4-4c41-a254-46d8dba8957c" }
#define FWPM_CALLOUT_TCP_TEMPLATES_ACCEPT_LAYER_V6 GUID { "b25152f0-991c-4f53-bbe7-d24b45fe632c" }
#define FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_CONNECT_LAYER_V4 GUID { "5fbfc31d-a51c-44dc-acb6-0624a030a700" }
#define FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_CONNECT_LAYER_V6 GUID { "5fbfc31d-a51c-44dc-acb6-0624a030a701" }
#define FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_RECV_ACCEPT_LAYER_V4 GUID { "5fbfc31d-a51c-44dc-acb6-0624a030a702" }
#define FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_RECV_ACCEPT_LAYER_V6 GUID { "5fbfc31d-a51c-44dc-acb6-0624a030a703" }
#define FWPM_CALLOUT_HTTP_TEMPLATE_SSL_HANDSHAKE GUID { "b3423249-8d09-4858-9210-95c7fda8e30f" }
#define FWPM_PROVIDER_CONTEXT_SECURE_SOCKET_AUTHIP GUID { "b25ea800-0d02-46ed-92bd-7fa84bb73e9d" }
#define FWPM_PROVIDER_CONTEXT_SECURE_SOCKET_IPSEC GUID { "8c2d4144-f8e0-42c0-94ce-7ccfc63b2f9b" }
#define FWPM_KEYING_MODULE_IKE GUID { "a9bbf787-82a8-45bb-a400-5d7e5952c7a9" }
#define FWPM_KEYING_MODULE_AUTHIP GUID { "11e3dae0-dd26-4590-857d-ab4b28d1a095" }
#define FWPM_KEYING_MODULE_IKEV2 GUID { "041792cc-8f07-419d-a394-716968cb1647" }
#define FWPM_AUTO_WEIGHT_BITS (UINT)60
#define FWPM_WEIGHT_RANGE_IPSEC (UINT)0
#define FWPM_WEIGHT_RANGE_IKE_EXEMPTIONS (UINT)12
#define FWPM_ACTRL_ADD (UINT)1
#define FWPM_ACTRL_ADD_LINK (UINT)2
#define FWPM_ACTRL_BEGIN_READ_TXN (UINT)4
#define FWPM_ACTRL_BEGIN_WRITE_TXN (UINT)8
#define FWPM_ACTRL_CLASSIFY (UINT)16
#define FWPM_ACTRL_ENUM (UINT)32
#define FWPM_ACTRL_OPEN (UINT)64
#define FWPM_ACTRL_READ (UINT)128
#define FWPM_ACTRL_READ_STATS (UINT)256
#define FWPM_ACTRL_SUBSCRIBE (UINT)512
#define FWPM_ACTRL_WRITE (UINT)1024
#define FWPM_TXN_READ_ONLY (UINT)1
#define FWPM_TUNNEL_FLAG_POINT_TO_POINT (UINT)1
#define FWPM_TUNNEL_FLAG_ENABLE_VIRTUAL_IF_TUNNELING (UINT)2
#define FWPM_TUNNEL_FLAG_SITE_TO_SITE (UINT)4
#define FWPS_METADATA_FIELD_DISCARD_REASON (UINT)1
#define FWPS_METADATA_FIELD_FLOW_HANDLE (UINT)2
#define FWPS_METADATA_FIELD_IP_HEADER_SIZE (UINT)4
#define FWPS_METADATA_FIELD_PROCESS_PATH (UINT)8
#define FWPS_METADATA_FIELD_TOKEN (UINT)16
#define FWPS_METADATA_FIELD_PROCESS_ID (UINT)32
#define FWPS_METADATA_FIELD_SYSTEM_FLAGS (UINT)64
#define FWPS_METADATA_FIELD_RESERVED (UINT)128
#define FWPS_METADATA_FIELD_SOURCE_INTERFACE_INDEX (UINT)256
#define FWPS_METADATA_FIELD_DESTINATION_INTERFACE_INDEX (UINT)512
#define FWPS_METADATA_FIELD_TRANSPORT_HEADER_SIZE (UINT)1024
#define FWPS_METADATA_FIELD_COMPARTMENT_ID (UINT)2048
#define FWPS_METADATA_FIELD_FRAGMENT_DATA (UINT)4096
#define FWPS_METADATA_FIELD_PATH_MTU (UINT)8192
#define FWPS_METADATA_FIELD_COMPLETION_HANDLE (UINT)16384
#define FWPS_METADATA_FIELD_TRANSPORT_ENDPOINT_HANDLE (UINT)32768
#define FWPS_METADATA_FIELD_TRANSPORT_CONTROL_DATA (UINT)65536
#define FWPS_METADATA_FIELD_REMOTE_SCOPE_ID (UINT)131072
#define FWPS_METADATA_FIELD_PACKET_DIRECTION (UINT)262144
#define FWPS_METADATA_FIELD_PACKET_SYSTEM_CRITICAL (UINT)524288
#define FWPS_METADATA_FIELD_FORWARD_LAYER_OUTBOUND_PASS_THRU (UINT)1048576
#define FWPS_METADATA_FIELD_FORWARD_LAYER_INBOUND_PASS_THRU (UINT)2097152
#define FWPS_METADATA_FIELD_ALE_CLASSIFY_REQUIRED (UINT)4194304
#define FWPS_METADATA_FIELD_TRANSPORT_HEADER_INCLUDE_HEADER (UINT)8388608
#define FWPS_METADATA_FIELD_DESTINATION_PREFIX (UINT)16777216
#define FWPS_METADATA_FIELD_ETHER_FRAME_LENGTH (UINT)33554432
#define FWPS_METADATA_FIELD_PARENT_ENDPOINT_HANDLE (UINT)67108864
#define FWPS_METADATA_FIELD_ICMP_ID_AND_SEQUENCE (UINT)134217728
#define FWPS_METADATA_FIELD_LOCAL_REDIRECT_TARGET_PID (UINT)268435456
#define FWPS_METADATA_FIELD_ORIGINAL_DESTINATION (UINT)536870912
#define FWPS_METADATA_FIELD_REDIRECT_RECORD_HANDLE (UINT)1073741824
#define FWPS_METADATA_FIELD_SUB_PROCESS_TAG (UINT)2147483648
#define FWPS_L2_METADATA_FIELD_ETHERNET_MAC_HEADER_SIZE (UINT)1
#define FWPS_L2_METADATA_FIELD_WIFI_OPERATION_MODE (UINT)2
#define FWPS_L2_METADATA_FIELD_VSWITCH_SOURCE_PORT_ID (UINT)4
#define FWPS_L2_METADATA_FIELD_VSWITCH_SOURCE_NIC_INDEX (UINT)8
#define FWPS_L2_METADATA_FIELD_VSWITCH_PACKET_CONTEXT (UINT)16
#define FWPS_L2_METADATA_FIELD_VSWITCH_DESTINATION_PORT_ID (UINT)32
#define FWPS_L2_METADATA_FIELD_RESERVED (UINT)2147483648

//--------------------------------------------------------------------------------
// Section: Types (345)
//--------------------------------------------------------------------------------
typedef enum {
    IPSEC_SA_BUNDLE_FLAG_ND_SECURE = 1,
    IPSEC_SA_BUNDLE_FLAG_ND_BOUNDARY = 2,
    IPSEC_SA_BUNDLE_FLAG_ND_PEER_NAT_BOUNDARY = 4,
    IPSEC_SA_BUNDLE_FLAG_GUARANTEE_ENCRYPTION = 8,
    IPSEC_SA_BUNDLE_FLAG_ALLOW_NULL_TARGET_NAME_MATCH = 512,
    IPSEC_SA_BUNDLE_FLAG_CLEAR_DF_ON_TUNNEL = 1024,
    IPSEC_SA_BUNDLE_FLAG_ASSUME_UDP_CONTEXT_OUTBOUND = 2048,
    IPSEC_SA_BUNDLE_FLAG_ND_PEER_BOUNDARY = 4096,
    IPSEC_SA_BUNDLE_FLAG_SUPPRESS_DUPLICATE_DELETION = 8192,
    IPSEC_SA_BUNDLE_FLAG_PEER_SUPPORTS_GUARANTEE_ENCRYPTION = 16384,
} IPSEC_SA_BUNDLE_FLAGS;

typedef enum {
    IPSEC_POLICY_FLAG_ND_SECURE = 2,
    IPSEC_POLICY_FLAG_ND_BOUNDARY = 4,
    IPSEC_POLICY_FLAG_NAT_ENCAP_ALLOW_PEER_BEHIND_NAT = 16,
    IPSEC_POLICY_FLAG_NAT_ENCAP_ALLOW_GENERAL_NAT_TRAVERSAL = 32,
    IPSEC_POLICY_FLAG_DONT_NEGOTIATE_SECOND_LIFETIME = 64,
    IPSEC_POLICY_FLAG_DONT_NEGOTIATE_BYTE_LIFETIME = 128,
    IPSEC_POLICY_FLAG_CLEAR_DF_ON_TUNNEL = 8,
    IPSEC_POLICY_FLAG_ENABLE_V6_IN_V4_TUNNELING = 256,
    IPSEC_POLICY_FLAG_ENABLE_SERVER_ADDR_ASSIGNMENT = 512,
    IPSEC_POLICY_FLAG_TUNNEL_ALLOW_OUTBOUND_CLEAR_CONNECTION = 1024,
    IPSEC_POLICY_FLAG_TUNNEL_BYPASS_ALREADY_SECURE_CONNECTION = 2048,
    IPSEC_POLICY_FLAG_TUNNEL_BYPASS_ICMPV6 = 4096,
    IPSEC_POLICY_FLAG_KEY_MANAGER_ALLOW_DICTATE_KEY = 8192,
} IPSEC_POLICY_FLAG;

typedef enum {
    IKEEXT_CERT_AUTH_FLAG_SSL_ONE_WAY = 1,
    IKEEXT_CERT_AUTH_ENABLE_CRL_CHECK_STRONG = 4,
    IKEEXT_CERT_AUTH_DISABLE_SSL_CERT_VALIDATION = 8,
    IKEEXT_CERT_AUTH_ALLOW_HTTP_CERT_LOOKUP = 16,
    IKEEXT_CERT_AUTH_URL_CONTAINS_BUNDLE = 32,
} IKEEXT_CERT_AUTH;

typedef enum {
    IKEEXT_PSK_FLAG_LOCAL_AUTH_ONLY = 1,
    IKEEXT_PSK_FLAG_REMOTE_AUTH_ONLY = 2,
} IKEEXT_PRESHARED_KEY_AUTHENTICATION_FLAGS;

typedef enum {
    IKEEXT_POLICY_FLAG_DISABLE_DIAGNOSTICS = 1,
    IKEEXT_POLICY_FLAG_NO_MACHINE_LUID_VERIFY = 2,
    IKEEXT_POLICY_FLAG_NO_IMPERSONATION_LUID_VERIFY = 4,
    IKEEXT_POLICY_FLAG_ENABLE_OPTIONAL_DH = 8,
} IKEEXT_POLICY_FLAG;

typedef enum {
    FWPM_SUBSCRIPTION_FLAG_NOTIFY_ON_ADD = 1,
    FWPM_SUBSCRIPTION_FLAG_NOTIFY_ON_DELETE = 2,
} FWPM_SUBSCRIPTION_FLAGS;

typedef enum {
    IKEEXT_CERT_FLAG_ENABLE_ACCOUNT_MAPPING = 1,
    IKEEXT_CERT_FLAG_DISABLE_REQUEST_PAYLOAD = 2,
    IKEEXT_CERT_FLAG_USE_NAP_CERTIFICATE = 4,
    IKEEXT_CERT_FLAG_INTERMEDIATE_CA = 8,
    IKEEXT_CERT_FLAG_IGNORE_INIT_CERT_MAP_FAILURE = 16,
    IKEEXT_CERT_FLAG_PREFER_NAP_CERTIFICATE_OUTBOUND = 32,
    IKEEXT_CERT_FLAG_SELECT_NAP_CERTIFICATE = 64,
    IKEEXT_CERT_FLAG_VERIFY_NAP_CERTIFICATE = 128,
    IKEEXT_CERT_FLAG_FOLLOW_RENEWAL_CERTIFICATE = 256,
} IKEEXT_CERT_FLAGS;

typedef enum {
    IPSEC_DOSP_FLAG_ENABLE_IKEV1 = 1,
    IPSEC_DOSP_FLAG_ENABLE_IKEV2 = 2,
    IPSEC_DOSP_FLAG_DISABLE_AUTHIP = 4,
    IPSEC_DOSP_FLAG_DISABLE_DEFAULT_BLOCK = 8,
    IPSEC_DOSP_FLAG_FILTER_BLOCK = 16,
    IPSEC_DOSP_FLAG_FILTER_EXEMPT = 32,
} IPSEC_DOSP_FLAGS;

typedef enum {
    IKEEXT_KERB_AUTH_DISABLE_INITIATOR_TOKEN_GENERATION = 1,
    IKEEXT_KERB_AUTH_DONT_ACCEPT_EXPLICIT_CREDENTIALS = 2,
} IKEEXT_KERBEROS_AUTHENTICATION_FLAGS;

typedef enum {
    IKEEXT_RESERVED_AUTH_DISABLE_INITIATOR_TOKEN_GENERATION = 1,
} IKEEXT_RESERVED_AUTHENTICATION_FLAGS;

typedef enum {
    IKEEXT_EAP_FLAG_LOCAL_AUTH_ONLY = 1,
    IKEEXT_EAP_FLAG_REMOTE_AUTH_ONLY = 2,
} IKEEXT_EAP_AUTHENTICATION_FLAGS;

typedef enum {
    FWPM_FILTER_FLAG_NONE = 0,
    FWPM_FILTER_FLAG_PERSISTENT = 1,
    FWPM_FILTER_FLAG_BOOTTIME = 2,
    FWPM_FILTER_FLAG_HAS_PROVIDER_CONTEXT = 4,
    FWPM_FILTER_FLAG_CLEAR_ACTION_RIGHT = 8,
    FWPM_FILTER_FLAG_PERMIT_IF_CALLOUT_UNREGISTERED = 16,
    FWPM_FILTER_FLAG_DISABLED = 32,
    FWPM_FILTER_FLAG_INDEXED = 64,
} FWPM_FILTER_FLAGS;

typedef enum {
    FWP_DIRECTION_OUTBOUND = 0,
    FWP_DIRECTION_INBOUND = 1,
    FWP_DIRECTION_MAX = 2,
} FWP_DIRECTION;

typedef enum {
    FWP_IP_VERSION_V4 = 0,
    FWP_IP_VERSION_V6 = 1,
    FWP_IP_VERSION_NONE = 2,
    FWP_IP_VERSION_MAX = 3,
} FWP_IP_VERSION;

typedef enum {
    FWP_AF_INET = 0,
    FWP_AF_INET6 = 1,
    FWP_AF_ETHER = 2,
    FWP_AF_NONE = 3,
} FWP_AF;

typedef enum {
    FWP_ETHER_ENCAP_METHOD_ETHER_V2 = 0,
    FWP_ETHER_ENCAP_METHOD_SNAP = 1,
    FWP_ETHER_ENCAP_METHOD_SNAP_W_OUI_ZERO = 3,
} FWP_ETHER_ENCAP_METHOD;

typedef enum {
    FWP_EMPTY = 0,
    FWP_UINT8 = 1,
    FWP_UINT16 = 2,
    FWP_UINT32 = 3,
    FWP_UINT64 = 4,
    FWP_INT8 = 5,
    FWP_INT16 = 6,
    FWP_INT32 = 7,
    FWP_INT64 = 8,
    FWP_FLOAT = 9,
    FWP_DOUBLE = 10,
    FWP_BYTE_ARRAY16_TYPE = 11,
    FWP_BYTE_BLOB_TYPE = 12,
    FWP_SID = 13,
    FWP_SECURITY_DESCRIPTOR_TYPE = 14,
    FWP_TOKEN_INFORMATION_TYPE = 15,
    FWP_TOKEN_ACCESS_INFORMATION_TYPE = 16,
    FWP_UNICODE_STRING_TYPE = 17,
    FWP_BYTE_ARRAY6_TYPE = 18,
    FWP_BITMAP_INDEX_TYPE = 19,
    FWP_BITMAP_ARRAY64_TYPE = 20,
    FWP_SINGLE_DATA_TYPE_MAX = 255,
    FWP_V4_ADDR_MASK = 256,
    FWP_V6_ADDR_MASK = 257,
    FWP_RANGE_TYPE = 258,
    FWP_DATA_TYPE_MAX = 259,
} FWP_DATA_TYPE;

typedef int FWP_BITMAP_ARRAY64_;

typedef int FWP_BYTE_ARRAY6;

typedef int FWP_BYTE_ARRAY16;

typedef int FWP_BYTE_BLOB;

typedef int FWP_TOKEN_INFORMATION;

typedef int FWP_VALUE0;

typedef enum {
    FWP_MATCH_EQUAL = 0,
    FWP_MATCH_GREATER = 1,
    FWP_MATCH_LESS = 2,
    FWP_MATCH_GREATER_OR_EQUAL = 3,
    FWP_MATCH_LESS_OR_EQUAL = 4,
    FWP_MATCH_RANGE = 5,
    FWP_MATCH_FLAGS_ALL_SET = 6,
    FWP_MATCH_FLAGS_ANY_SET = 7,
    FWP_MATCH_FLAGS_NONE_SET = 8,
    FWP_MATCH_EQUAL_CASE_INSENSITIVE = 9,
    FWP_MATCH_NOT_EQUAL = 10,
    FWP_MATCH_PREFIX = 11,
    FWP_MATCH_NOT_PREFIX = 12,
    FWP_MATCH_TYPE_MAX = 13,
} FWP_MATCH_TYPE;

typedef int FWP_V4_ADDR_AND_MASK;

typedef int FWP_V6_ADDR_AND_MASK;

typedef int FWP_RANGE0;

typedef int FWP_CONDITION_VALUE0;

typedef enum {
    FWP_CLASSIFY_OPTION_MULTICAST_STATE = 0,
    FWP_CLASSIFY_OPTION_LOOSE_SOURCE_MAPPING = 1,
    FWP_CLASSIFY_OPTION_UNICAST_LIFETIME = 2,
    FWP_CLASSIFY_OPTION_MCAST_BCAST_LIFETIME = 3,
    FWP_CLASSIFY_OPTION_SECURE_SOCKET_SECURITY_FLAGS = 4,
    FWP_CLASSIFY_OPTION_SECURE_SOCKET_AUTHIP_MM_POLICY_KEY = 5,
    FWP_CLASSIFY_OPTION_SECURE_SOCKET_AUTHIP_QM_POLICY_KEY = 6,
    FWP_CLASSIFY_OPTION_LOCAL_ONLY_MAPPING = 7,
    FWP_CLASSIFY_OPTION_MAX = 8,
} FWP_CLASSIFY_OPTION_TYPE;

typedef enum {
    FWP_VSWITCH_NETWORK_TYPE_UNKNOWN = 0,
    FWP_VSWITCH_NETWORK_TYPE_PRIVATE = 1,
    FWP_VSWITCH_NETWORK_TYPE_INTERNAL = 2,
    FWP_VSWITCH_NETWORK_TYPE_EXTERNAL = 3,
} FWP_VSWITCH_NETWORK_TYPE;

typedef enum {
    FWP_FILTER_ENUM_FULLY_CONTAINED = 0,
    FWP_FILTER_ENUM_OVERLAPPING = 1,
    FWP_FILTER_ENUM_TYPE_MAX = 2,
} FWP_FILTER_ENUM_TYPE;

typedef int FWPM_DISPLAY_DATA0;

typedef int IPSEC_VIRTUAL_IF_TUNNEL_INFO0;

typedef enum {
    IKEEXT_KEY_MODULE_IKE = 0,
    IKEEXT_KEY_MODULE_AUTHIP = 1,
    IKEEXT_KEY_MODULE_IKEV2 = 2,
    IKEEXT_KEY_MODULE_MAX = 3,
} IKEEXT_KEY_MODULE_TYPE;

typedef enum {
    IKEEXT_PRESHARED_KEY = 0,
    IKEEXT_CERTIFICATE = 1,
    IKEEXT_KERBEROS = 2,
    IKEEXT_ANONYMOUS = 3,
    IKEEXT_SSL = 4,
    IKEEXT_NTLM_V2 = 5,
    IKEEXT_IPV6_CGA = 6,
    IKEEXT_CERTIFICATE_ECDSA_P256 = 7,
    IKEEXT_CERTIFICATE_ECDSA_P384 = 8,
    IKEEXT_SSL_ECDSA_P256 = 9,
    IKEEXT_SSL_ECDSA_P384 = 10,
    IKEEXT_EAP = 11,
    IKEEXT_RESERVED = 12,
    IKEEXT_AUTHENTICATION_METHOD_TYPE_MAX = 13,
} IKEEXT_AUTHENTICATION_METHOD_TYPE;

typedef enum {
    IKEEXT_IMPERSONATION_NONE = 0,
    IKEEXT_IMPERSONATION_SOCKET_PRINCIPAL = 1,
    IKEEXT_IMPERSONATION_MAX = 2,
} IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE;

typedef int IKEEXT_PRESHARED_KEY_AUTHENTICATION0;

typedef int IKEEXT_PRESHARED_KEY_AUTHENTICATION1;

typedef int IKEEXT_CERT_ROOT_CONFIG0;

typedef enum {
    IKEEXT_CERT_CONFIG_EXPLICIT_TRUST_LIST = 0,
    IKEEXT_CERT_CONFIG_ENTERPRISE_STORE = 1,
    IKEEXT_CERT_CONFIG_TRUSTED_ROOT_STORE = 2,
    IKEEXT_CERT_CONFIG_UNSPECIFIED = 3,
    IKEEXT_CERT_CONFIG_TYPE_MAX = 4,
} IKEEXT_CERT_CONFIG_TYPE;

typedef int IKEEXT_CERTIFICATE_AUTHENTICATION0;

typedef int IKEEXT_CERTIFICATE_AUTHENTICATION1;

typedef enum {
    IKEEXT_CERT_CRITERIA_DNS = 0,
    IKEEXT_CERT_CRITERIA_UPN = 1,
    IKEEXT_CERT_CRITERIA_RFC822 = 2,
    IKEEXT_CERT_CRITERIA_CN = 3,
    IKEEXT_CERT_CRITERIA_OU = 4,
    IKEEXT_CERT_CRITERIA_O = 5,
    IKEEXT_CERT_CRITERIA_DC = 6,
    IKEEXT_CERT_CRITERIA_NAME_TYPE_MAX = 7,
} IKEEXT_CERT_CRITERIA_NAME_TYPE;

typedef int IKEEXT_CERT_EKUS0;

typedef int IKEEXT_CERT_NAME0;

typedef int IKEEXT_CERTIFICATE_CRITERIA0;

typedef int IKEEXT_CERTIFICATE_AUTHENTICATION2;

typedef int IKEEXT_IPV6_CGA_AUTHENTICATION0;

typedef int IKEEXT_KERBEROS_AUTHENTICATION0;

typedef int IKEEXT_KERBEROS_AUTHENTICATION1;

typedef int IKEEXT_RESERVED_AUTHENTICATION0;

typedef int IKEEXT_NTLM_V2_AUTHENTICATION0;

typedef int IKEEXT_EAP_AUTHENTICATION0;

typedef int IKEEXT_AUTHENTICATION_METHOD0;

typedef int IKEEXT_AUTHENTICATION_METHOD1;

typedef int IKEEXT_AUTHENTICATION_METHOD2;

typedef enum {
    IKEEXT_CIPHER_DES = 0,
    IKEEXT_CIPHER_3DES = 1,
    IKEEXT_CIPHER_AES_128 = 2,
    IKEEXT_CIPHER_AES_192 = 3,
    IKEEXT_CIPHER_AES_256 = 4,
    IKEEXT_CIPHER_AES_GCM_128_16ICV = 5,
    IKEEXT_CIPHER_AES_GCM_256_16ICV = 6,
    IKEEXT_CIPHER_TYPE_MAX = 7,
} IKEEXT_CIPHER_TYPE;

typedef int IKEEXT_CIPHER_ALGORITHM0;

typedef enum {
    IKEEXT_INTEGRITY_MD5 = 0,
    IKEEXT_INTEGRITY_SHA1 = 1,
    IKEEXT_INTEGRITY_SHA_256 = 2,
    IKEEXT_INTEGRITY_SHA_384 = 3,
    IKEEXT_INTEGRITY_TYPE_MAX = 4,
} IKEEXT_INTEGRITY_TYPE;

typedef int IKEEXT_INTEGRITY_ALGORITHM0;

typedef enum {
    IKEEXT_DH_GROUP_NONE = 0,
    IKEEXT_DH_GROUP_1 = 1,
    IKEEXT_DH_GROUP_2 = 2,
    IKEEXT_DH_GROUP_14 = 3,
    IKEEXT_DH_GROUP_2048 = 3,
    IKEEXT_DH_ECP_256 = 4,
    IKEEXT_DH_ECP_384 = 5,
    IKEEXT_DH_GROUP_24 = 6,
    IKEEXT_DH_GROUP_MAX = 7,
} IKEEXT_DH_GROUP;

typedef int IKEEXT_PROPOSAL0;

typedef int IKEEXT_POLICY0;

typedef int IKEEXT_POLICY1;

typedef int IKEEXT_POLICY2;

typedef int IKEEXT_EM_POLICY0;

typedef int IKEEXT_EM_POLICY1;

typedef int IKEEXT_EM_POLICY2;

typedef int IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0;

typedef int IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1;

typedef int IKEEXT_KEYMODULE_STATISTICS0;

typedef int IKEEXT_KEYMODULE_STATISTICS1;

typedef int IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0;

typedef int IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1;

typedef int IKEEXT_COMMON_STATISTICS0;

typedef int IKEEXT_COMMON_STATISTICS1;

typedef int IKEEXT_STATISTICS0;

typedef int IKEEXT_STATISTICS1;

typedef int IKEEXT_TRAFFIC0;

typedef int IKEEXT_COOKIE_PAIR0;

typedef int IKEEXT_CERTIFICATE_CREDENTIAL0;

typedef int IKEEXT_NAME_CREDENTIAL0;

typedef int IKEEXT_CREDENTIAL0;

typedef int IKEEXT_CREDENTIAL_PAIR0;

typedef int IKEEXT_CREDENTIALS0;

typedef int IKEEXT_SA_DETAILS0;

typedef int IKEEXT_CERTIFICATE_CREDENTIAL1;

typedef int IKEEXT_CREDENTIAL1;

typedef int IKEEXT_CREDENTIAL_PAIR1;

typedef int IKEEXT_CREDENTIALS1;

typedef int IKEEXT_SA_DETAILS1;

typedef int IKEEXT_CREDENTIAL2;

typedef int IKEEXT_CREDENTIAL_PAIR2;

typedef int IKEEXT_CREDENTIALS2;

typedef int IKEEXT_SA_DETAILS2;

typedef int IKEEXT_SA_ENUM_TEMPLATE0;

typedef enum {
    IKEEXT_MM_SA_STATE_NONE = 0,
    IKEEXT_MM_SA_STATE_SA_SENT = 1,
    IKEEXT_MM_SA_STATE_SSPI_SENT = 2,
    IKEEXT_MM_SA_STATE_FINAL = 3,
    IKEEXT_MM_SA_STATE_FINAL_SENT = 4,
    IKEEXT_MM_SA_STATE_COMPLETE = 5,
    IKEEXT_MM_SA_STATE_MAX = 6,
} IKEEXT_MM_SA_STATE;

typedef enum {
    IKEEXT_QM_SA_STATE_NONE = 0,
    IKEEXT_QM_SA_STATE_INITIAL = 1,
    IKEEXT_QM_SA_STATE_FINAL = 2,
    IKEEXT_QM_SA_STATE_COMPLETE = 3,
    IKEEXT_QM_SA_STATE_MAX = 4,
} IKEEXT_QM_SA_STATE;

typedef enum {
    IKEEXT_EM_SA_STATE_NONE = 0,
    IKEEXT_EM_SA_STATE_SENT_ATTS = 1,
    IKEEXT_EM_SA_STATE_SSPI_SENT = 2,
    IKEEXT_EM_SA_STATE_AUTH_COMPLETE = 3,
    IKEEXT_EM_SA_STATE_FINAL = 4,
    IKEEXT_EM_SA_STATE_COMPLETE = 5,
    IKEEXT_EM_SA_STATE_MAX = 6,
} IKEEXT_EM_SA_STATE;

typedef enum {
    IKEEXT_SA_ROLE_INITIATOR = 0,
    IKEEXT_SA_ROLE_RESPONDER = 1,
    IKEEXT_SA_ROLE_MAX = 2,
} IKEEXT_SA_ROLE;

typedef int IPSEC_SA_LIFETIME0;

typedef enum {
    IPSEC_TRANSFORM_AH = 1,
    IPSEC_TRANSFORM_ESP_AUTH = 2,
    IPSEC_TRANSFORM_ESP_CIPHER = 3,
    IPSEC_TRANSFORM_ESP_AUTH_AND_CIPHER = 4,
    IPSEC_TRANSFORM_ESP_AUTH_FW = 5,
    IPSEC_TRANSFORM_TYPE_MAX = 6,
} IPSEC_TRANSFORM_TYPE;

typedef enum {
    IPSEC_AUTH_MD5 = 0,
    IPSEC_AUTH_SHA_1 = 1,
    IPSEC_AUTH_SHA_256 = 2,
    IPSEC_AUTH_AES_128 = 3,
    IPSEC_AUTH_AES_192 = 4,
    IPSEC_AUTH_AES_256 = 5,
    IPSEC_AUTH_MAX = 6,
} IPSEC_AUTH_TYPE;

typedef int IPSEC_AUTH_TRANSFORM_ID0;

typedef int IPSEC_AUTH_TRANSFORM0;

typedef enum {
    IPSEC_CIPHER_TYPE_DES = 1,
    IPSEC_CIPHER_TYPE_3DES = 2,
    IPSEC_CIPHER_TYPE_AES_128 = 3,
    IPSEC_CIPHER_TYPE_AES_192 = 4,
    IPSEC_CIPHER_TYPE_AES_256 = 5,
    IPSEC_CIPHER_TYPE_MAX = 6,
} IPSEC_CIPHER_TYPE;

typedef int IPSEC_CIPHER_TRANSFORM_ID0;

typedef int IPSEC_CIPHER_TRANSFORM0;

typedef int IPSEC_AUTH_AND_CIPHER_TRANSFORM0;

typedef int IPSEC_SA_TRANSFORM0;

typedef enum {
    IPSEC_PFS_NONE = 0,
    IPSEC_PFS_1 = 1,
    IPSEC_PFS_2 = 2,
    IPSEC_PFS_2048 = 3,
    IPSEC_PFS_14 = 3,
    IPSEC_PFS_ECP_256 = 4,
    IPSEC_PFS_ECP_384 = 5,
    IPSEC_PFS_MM = 6,
    IPSEC_PFS_24 = 7,
    IPSEC_PFS_MAX = 8,
} IPSEC_PFS_GROUP;

typedef int IPSEC_PROPOSAL0;

typedef int IPSEC_SA_IDLE_TIMEOUT0;

typedef int IPSEC_TRAFFIC_SELECTOR0_;

typedef int IPSEC_TRAFFIC_SELECTOR_POLICY0_;

typedef int IPSEC_TRANSPORT_POLICY0;

typedef int IPSEC_TRANSPORT_POLICY1;

typedef int IPSEC_TRANSPORT_POLICY2;

typedef int IPSEC_TUNNEL_ENDPOINTS0;

typedef int IPSEC_TUNNEL_ENDPOINT0;

typedef int IPSEC_TUNNEL_ENDPOINTS2;

typedef int IPSEC_TUNNEL_ENDPOINTS1;

typedef int IPSEC_TUNNEL_POLICY0;

typedef int IPSEC_TUNNEL_POLICY1;

typedef int IPSEC_TUNNEL_POLICY2;

typedef int IPSEC_TUNNEL_POLICY3_;

typedef int IPSEC_KEYING_POLICY0;

typedef int IPSEC_KEYING_POLICY1;

typedef int IPSEC_AGGREGATE_SA_STATISTICS0;

typedef int IPSEC_ESP_DROP_PACKET_STATISTICS0;

typedef int IPSEC_AH_DROP_PACKET_STATISTICS0;

typedef int IPSEC_AGGREGATE_DROP_PACKET_STATISTICS0;

typedef int IPSEC_AGGREGATE_DROP_PACKET_STATISTICS1;

typedef int IPSEC_TRAFFIC_STATISTICS0;

typedef int IPSEC_TRAFFIC_STATISTICS1;

typedef int IPSEC_STATISTICS0;

typedef int IPSEC_STATISTICS1;

typedef int IPSEC_SA_AUTH_INFORMATION0;

typedef int IPSEC_SA_CIPHER_INFORMATION0;

typedef int IPSEC_SA_AUTH_AND_CIPHER_INFORMATION0;

typedef int IPSEC_SA0;

typedef int IPSEC_KEYMODULE_STATE0;

typedef enum {
    IPSEC_TOKEN_TYPE_MACHINE = 0,
    IPSEC_TOKEN_TYPE_IMPERSONATION = 1,
    IPSEC_TOKEN_TYPE_MAX = 2,
} IPSEC_TOKEN_TYPE;

typedef enum {
    IPSEC_TOKEN_PRINCIPAL_LOCAL = 0,
    IPSEC_TOKEN_PRINCIPAL_PEER = 1,
    IPSEC_TOKEN_PRINCIPAL_MAX = 2,
} IPSEC_TOKEN_PRINCIPAL;

typedef enum {
    IPSEC_TOKEN_MODE_MAIN = 0,
    IPSEC_TOKEN_MODE_EXTENDED = 1,
    IPSEC_TOKEN_MODE_MAX = 2,
} IPSEC_TOKEN_MODE;

typedef int IPSEC_TOKEN0;

typedef int IPSEC_ID0;

typedef int IPSEC_SA_BUNDLE0;

typedef int IPSEC_SA_BUNDLE1;

typedef enum {
    IPSEC_TRAFFIC_TYPE_TRANSPORT = 0,
    IPSEC_TRAFFIC_TYPE_TUNNEL = 1,
    IPSEC_TRAFFIC_TYPE_MAX = 2,
} IPSEC_TRAFFIC_TYPE;

typedef int IPSEC_TRAFFIC0;

typedef int IPSEC_TRAFFIC1;

typedef int IPSEC_V4_UDP_ENCAPSULATION0;

typedef int IPSEC_GETSPI0;

typedef int IPSEC_GETSPI1;

typedef int IPSEC_SA_DETAILS0;

typedef int IPSEC_SA_DETAILS1;

typedef int IPSEC_SA_CONTEXT0;

typedef int IPSEC_SA_CONTEXT1;

typedef int IPSEC_SA_CONTEXT_ENUM_TEMPLATE0;

typedef int IPSEC_SA_ENUM_TEMPLATE0;

typedef int IPSEC_SA_CONTEXT_SUBSCRIPTION0;

typedef enum {
    IPSEC_SA_CONTEXT_EVENT_ADD = 1,
    IPSEC_SA_CONTEXT_EVENT_DELETE = 2,
    IPSEC_SA_CONTEXT_EVENT_MAX = 3,
} IPSEC_SA_CONTEXT_EVENT_TYPE0;

typedef int IPSEC_SA_CONTEXT_CHANGE0;

typedef enum {
    IPSEC_FAILURE_NONE = 0,
    IPSEC_FAILURE_ME = 1,
    IPSEC_FAILURE_PEER = 2,
    IPSEC_FAILURE_POINT_MAX = 3,
} IPSEC_FAILURE_POINT;

typedef int IPSEC_ADDRESS_INFO0;

typedef int IPSEC_DOSP_OPTIONS0;

typedef int IPSEC_DOSP_STATISTICS0;

typedef int IPSEC_DOSP_STATE0;

typedef int IPSEC_DOSP_STATE_ENUM_TEMPLATE0;

typedef int IPSEC_KEY_MANAGER0;

typedef enum {
    DlUnicast = 0,
    DlMulticast = 1,
    DlBroadcast = 2,
} DL_ADDRESS_TYPE;

typedef enum {
    FWPM_CHANGE_ADD = 1,
    FWPM_CHANGE_DELETE = 2,
    FWPM_CHANGE_TYPE_MAX = 3,
} FWPM_CHANGE_TYPE;

typedef enum {
    FWPM_SERVICE_STOPPED = 0,
    FWPM_SERVICE_START_PENDING = 1,
    FWPM_SERVICE_STOP_PENDING = 2,
    FWPM_SERVICE_RUNNING = 3,
    FWPM_SERVICE_STATE_MAX = 4,
} FWPM_SERVICE_STATE;

typedef enum {
    FWPM_ENGINE_COLLECT_NET_EVENTS = 0,
    FWPM_ENGINE_NET_EVENT_MATCH_ANY_KEYWORDS = 1,
    FWPM_ENGINE_NAME_CACHE = 2,
    FWPM_ENGINE_MONITOR_IPSEC_CONNECTIONS = 3,
    FWPM_ENGINE_PACKET_QUEUING = 4,
    FWPM_ENGINE_TXN_WATCHDOG_TIMEOUT_IN_MSEC = 5,
    FWPM_ENGINE_OPTION_MAX = 6,
} FWPM_ENGINE_OPTION;

typedef int FWPM_SESSION0;

typedef int FWPM_SESSION_ENUM_TEMPLATE0;

typedef int FWPM_PROVIDER0;

typedef int FWPM_PROVIDER_ENUM_TEMPLATE0;

typedef int FWPM_PROVIDER_CHANGE0;

typedef int FWPM_PROVIDER_SUBSCRIPTION0;

typedef int FWPM_CLASSIFY_OPTION0;

typedef int FWPM_CLASSIFY_OPTIONS0;

typedef enum {
    FWPM_IPSEC_KEYING_CONTEXT = 0,
    FWPM_IPSEC_IKE_QM_TRANSPORT_CONTEXT = 1,
    FWPM_IPSEC_IKE_QM_TUNNEL_CONTEXT = 2,
    FWPM_IPSEC_AUTHIP_QM_TRANSPORT_CONTEXT = 3,
    FWPM_IPSEC_AUTHIP_QM_TUNNEL_CONTEXT = 4,
    FWPM_IPSEC_IKE_MM_CONTEXT = 5,
    FWPM_IPSEC_AUTHIP_MM_CONTEXT = 6,
    FWPM_CLASSIFY_OPTIONS_CONTEXT = 7,
    FWPM_GENERAL_CONTEXT = 8,
    FWPM_IPSEC_IKEV2_QM_TUNNEL_CONTEXT = 9,
    FWPM_IPSEC_IKEV2_MM_CONTEXT = 10,
    FWPM_IPSEC_DOSP_CONTEXT = 11,
    FWPM_IPSEC_IKEV2_QM_TRANSPORT_CONTEXT = 12,
    FWPM_PROVIDER_CONTEXT_TYPE_MAX = 13,
} FWPM_PROVIDER_CONTEXT_TYPE;

typedef int FWPM_PROVIDER_CONTEXT0;

typedef int FWPM_PROVIDER_CONTEXT1;

typedef int FWPM_PROVIDER_CONTEXT2;

typedef int FWPM_PROVIDER_CONTEXT3_;

typedef int FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0;

typedef int FWPM_PROVIDER_CONTEXT_CHANGE0;

typedef int FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0;

typedef int FWPM_SUBLAYER0;

typedef int FWPM_SUBLAYER_ENUM_TEMPLATE0;

typedef int FWPM_SUBLAYER_CHANGE0;

typedef int FWPM_SUBLAYER_SUBSCRIPTION0;

typedef enum {
    FWPM_FIELD_RAW_DATA = 0,
    FWPM_FIELD_IP_ADDRESS = 1,
    FWPM_FIELD_FLAGS = 2,
    FWPM_FIELD_TYPE_MAX = 3,
} FWPM_FIELD_TYPE;

typedef int FWPM_FIELD0;

typedef int FWPM_LAYER0;

typedef int FWPM_LAYER_ENUM_TEMPLATE0;

typedef int FWPM_CALLOUT0;

typedef int FWPM_CALLOUT_ENUM_TEMPLATE0;

typedef int FWPM_CALLOUT_CHANGE0;

typedef int FWPM_CALLOUT_SUBSCRIPTION0;

typedef int FWPM_ACTION0;

typedef int FWPM_FILTER_CONDITION0;

typedef int FWPM_FILTER0;

typedef int FWPM_FILTER_ENUM_TEMPLATE0;

typedef int FWPM_FILTER_CHANGE0;

typedef int FWPM_FILTER_SUBSCRIPTION0;

typedef int FWPM_LAYER_STATISTICS0;

typedef int FWPM_STATISTICS0;

typedef int FWPM_NET_EVENT_HEADER0;

typedef int FWPM_NET_EVENT_HEADER1;

typedef int FWPM_NET_EVENT_HEADER2;

typedef int FWPM_NET_EVENT_HEADER3;

typedef enum {
    FWPM_NET_EVENT_TYPE_IKEEXT_MM_FAILURE = 0,
    FWPM_NET_EVENT_TYPE_IKEEXT_QM_FAILURE = 1,
    FWPM_NET_EVENT_TYPE_IKEEXT_EM_FAILURE = 2,
    FWPM_NET_EVENT_TYPE_CLASSIFY_DROP = 3,
    FWPM_NET_EVENT_TYPE_IPSEC_KERNEL_DROP = 4,
    FWPM_NET_EVENT_TYPE_IPSEC_DOSP_DROP = 5,
    FWPM_NET_EVENT_TYPE_CLASSIFY_ALLOW = 6,
    FWPM_NET_EVENT_TYPE_CAPABILITY_DROP = 7,
    FWPM_NET_EVENT_TYPE_CAPABILITY_ALLOW = 8,
    FWPM_NET_EVENT_TYPE_CLASSIFY_DROP_MAC = 9,
    FWPM_NET_EVENT_TYPE_LPM_PACKET_ARRIVAL = 10,
    FWPM_NET_EVENT_TYPE_MAX = 11,
} FWPM_NET_EVENT_TYPE;

typedef int FWPM_NET_EVENT_IKEEXT_MM_FAILURE0;

typedef int FWPM_NET_EVENT_IKEEXT_MM_FAILURE1;

typedef int FWPM_NET_EVENT_IKEEXT_MM_FAILURE2_;

typedef int FWPM_NET_EVENT_IKEEXT_QM_FAILURE0;

typedef int FWPM_NET_EVENT_IKEEXT_QM_FAILURE1_;

typedef int FWPM_NET_EVENT_IKEEXT_EM_FAILURE0;

typedef int FWPM_NET_EVENT_IKEEXT_EM_FAILURE1;

typedef int FWPM_NET_EVENT_CLASSIFY_DROP0;

typedef int FWPM_NET_EVENT_CLASSIFY_DROP1;

typedef int FWPM_NET_EVENT_CLASSIFY_DROP2;

typedef int FWPM_NET_EVENT_CLASSIFY_DROP_MAC0;

typedef int FWPM_NET_EVENT_CLASSIFY_ALLOW0;

typedef int FWPM_NET_EVENT_IPSEC_KERNEL_DROP0;

typedef int FWPM_NET_EVENT_IPSEC_DOSP_DROP0;

typedef enum {
    FWPM_APPC_NETWORK_CAPABILITY_INTERNET_CLIENT = 0,
    FWPM_APPC_NETWORK_CAPABILITY_INTERNET_CLIENT_SERVER = 1,
    FWPM_APPC_NETWORK_CAPABILITY_INTERNET_PRIVATE_NETWORK = 2,
} FWPM_APPC_NETWORK_CAPABILITY_TYPE;

typedef int FWPM_NET_EVENT_CAPABILITY_DROP0;

typedef int FWPM_NET_EVENT_CAPABILITY_ALLOW0;

typedef int FWPM_NET_EVENT_LPM_PACKET_ARRIVAL0_;

typedef int FWPM_NET_EVENT0;

typedef int FWPM_NET_EVENT1;

typedef int FWPM_NET_EVENT2;

typedef int FWPM_NET_EVENT3;

typedef int FWPM_NET_EVENT4_;

typedef int FWPM_NET_EVENT5_;

typedef int FWPM_NET_EVENT_ENUM_TEMPLATE0;

typedef int FWPM_NET_EVENT_SUBSCRIPTION0;

typedef enum {
    FWPM_SYSTEM_PORT_RPC_EPMAP = 0,
    FWPM_SYSTEM_PORT_TEREDO = 1,
    FWPM_SYSTEM_PORT_IPHTTPS_IN = 2,
    FWPM_SYSTEM_PORT_IPHTTPS_OUT = 3,
    FWPM_SYSTEM_PORT_TYPE_MAX = 4,
} FWPM_SYSTEM_PORT_TYPE;

typedef int FWPM_SYSTEM_PORTS_BY_TYPE0;

typedef int FWPM_SYSTEM_PORTS0;

typedef int FWPM_CONNECTION0;

typedef int FWPM_CONNECTION_ENUM_TEMPLATE0;

typedef int FWPM_CONNECTION_SUBSCRIPTION0;

typedef enum {
    FWPM_CONNECTION_EVENT_ADD = 0,
    FWPM_CONNECTION_EVENT_DELETE = 1,
    FWPM_CONNECTION_EVENT_MAX = 2,
} FWPM_CONNECTION_EVENT_TYPE;

typedef enum {
    FWPM_VSWITCH_EVENT_FILTER_ADD_TO_INCOMPLETE_LAYER = 0,
    FWPM_VSWITCH_EVENT_FILTER_ENGINE_NOT_IN_REQUIRED_POSITION = 1,
    FWPM_VSWITCH_EVENT_ENABLED_FOR_INSPECTION = 2,
    FWPM_VSWITCH_EVENT_DISABLED_FOR_INSPECTION = 3,
    FWPM_VSWITCH_EVENT_FILTER_ENGINE_REORDER = 4,
    FWPM_VSWITCH_EVENT_MAX = 5,
} FWPM_VSWITCH_EVENT_TYPE;

typedef int FWPM_VSWITCH_EVENT0;

typedef int FWPM_VSWITCH_EVENT_SUBSCRIPTION0;

typedef int FWPM_PROVIDER_CHANGE_CALLBACK0;

typedef int FWPM_PROVIDER_CONTEXT_CHANGE_CALLBACK0;

typedef int FWPM_SUBLAYER_CHANGE_CALLBACK0;

typedef int FWPM_CALLOUT_CHANGE_CALLBACK0;

typedef int FWPM_FILTER_CHANGE_CALLBACK0;

typedef int IPSEC_SA_CONTEXT_CALLBACK0;

typedef int IPSEC_KEY_MANAGER_KEY_DICTATION_CHECK0;

typedef int IPSEC_KEY_MANAGER_DICTATE_KEY0;

typedef int IPSEC_KEY_MANAGER_NOTIFY_KEY0;

typedef int IPSEC_KEY_MANAGER_CALLBACKS0;

typedef int FWPM_NET_EVENT_CALLBACK0;

typedef int FWPM_NET_EVENT_CALLBACK1;

typedef int FWPM_NET_EVENT_CALLBACK2;

typedef int FWPM_NET_EVENT_CALLBACK3;

typedef int FWPM_NET_EVENT_CALLBACK4;

typedef int FWPM_SYSTEM_PORTS_CALLBACK0;

typedef int FWPM_CONNECTION_CALLBACK0;

typedef int FWPM_VSWITCH_EVENT_CALLBACK0;

typedef int DL_OUI;

typedef int DL_EI48;

typedef int DL_EUI48;

typedef int DL_EI64;

typedef int DL_EUI64;

typedef int SNAP_HEADER;

typedef int ETHERNET_HEADER;

typedef int VLAN_TAG;

typedef int ICMP_HEADER;

typedef int ICMP_MESSAGE;

typedef int IPV4_HEADER;

typedef int IPV4_OPTION_HEADER;

typedef enum {
    IP_OPT_EOL = 0,
    IP_OPT_NOP = 1,
    IP_OPT_SECURITY = 130,
    IP_OPT_LSRR = 131,
    IP_OPT_TS = 68,
    IP_OPT_RR = 7,
    IP_OPT_SSRR = 137,
    IP_OPT_SID = 136,
    IP_OPT_ROUTER_ALERT = 148,
    IP_OPT_MULTIDEST = 149,
} IPV4_OPTION_TYPE;

typedef int IPV4_TIMESTAMP_OPTION;

typedef enum {
    IP_OPTION_TIMESTAMP_ONLY = 0,
    IP_OPTION_TIMESTAMP_ADDRESS = 1,
    IP_OPTION_TIMESTAMP_SPECIFIC_ADDRESS = 3,
} IP_OPTION_TIMESTAMP_FLAGS;

typedef int IPV4_ROUTING_HEADER;

typedef enum {
    ICMP4_UNREACH_NET = 0,
    ICMP4_UNREACH_HOST = 1,
    ICMP4_UNREACH_PROTOCOL = 2,
    ICMP4_UNREACH_PORT = 3,
    ICMP4_UNREACH_FRAG_NEEDED = 4,
    ICMP4_UNREACH_SOURCEROUTE_FAILED = 5,
    ICMP4_UNREACH_NET_UNKNOWN = 6,
    ICMP4_UNREACH_HOST_UNKNOWN = 7,
    ICMP4_UNREACH_ISOLATED = 8,
    ICMP4_UNREACH_NET_ADMIN = 9,
    ICMP4_UNREACH_HOST_ADMIN = 10,
    ICMP4_UNREACH_NET_TOS = 11,
    ICMP4_UNREACH_HOST_TOS = 12,
    ICMP4_UNREACH_ADMIN = 13,
} ICMP4_UNREACH_CODE;

typedef enum {
    ICMP4_TIME_EXCEED_TRANSIT = 0,
    ICMP4_TIME_EXCEED_REASSEMBLY = 1,
} ICMP4_TIME_EXCEED_CODE;

typedef int ICMPV4_ROUTER_SOLICIT;

typedef int ICMPV4_ROUTER_ADVERT_HEADER;

typedef int ICMPV4_ROUTER_ADVERT_ENTRY;

typedef int ICMPV4_TIMESTAMP_MESSAGE;

typedef int ICMPV4_ADDRESS_MASK_MESSAGE;

typedef int ARP_HEADER;

typedef enum {
    ARP_REQUEST = 1,
    ARP_RESPONSE = 2,
} ARP_OPCODE;

typedef enum {
    ARP_HW_ENET = 1,
    ARP_HW_802 = 6,
} ARP_HARDWARE_TYPE;

typedef int IGMP_HEADER;

typedef enum {
    IGMP_MAX_RESP_CODE_TYPE_NORMAL = 0,
    IGMP_MAX_RESP_CODE_TYPE_FLOAT = 1,
} IGMP_MAX_RESP_CODE_TYPE;

typedef int IGMPV3_QUERY_HEADER;

typedef int IGMPV3_REPORT_RECORD_HEADER;

typedef int IGMPV3_REPORT_HEADER;

typedef int IPV6_HEADER;

typedef int IPV6_FRAGMENT_HEADER;

typedef int IPV6_EXTENSION_HEADER;

typedef int IPV6_OPTION_HEADER;

typedef enum {
    IP6OPT_PAD1 = 0,
    IP6OPT_PADN = 1,
    IP6OPT_TUNNEL_LIMIT = 4,
    IP6OPT_ROUTER_ALERT = 5,
    IP6OPT_JUMBO = 194,
    IP6OPT_NSAP_ADDR = 195,
} IPV6_OPTION_TYPE;

typedef int IPV6_OPTION_JUMBOGRAM;

typedef int IPV6_OPTION_ROUTER_ALERT;

typedef int IPV6_ROUTING_HEADER;

typedef int nd_router_solicit;

typedef int nd_router_advert;

typedef int IPV6_ROUTER_ADVERTISEMENT_FLAGS;

typedef int nd_neighbor_solicit;

typedef int nd_neighbor_advert;

typedef int IPV6_NEIGHBOR_ADVERTISEMENT_FLAGS;

typedef int nd_redirect;

typedef int nd_opt_hdr;

typedef enum {
    ND_OPT_SOURCE_LINKADDR = 1,
    ND_OPT_TARGET_LINKADDR = 2,
    ND_OPT_PREFIX_INFORMATION = 3,
    ND_OPT_REDIRECTED_HEADER = 4,
    ND_OPT_MTU = 5,
    ND_OPT_NBMA_SHORTCUT_LIMIT = 6,
    ND_OPT_ADVERTISEMENT_INTERVAL = 7,
    ND_OPT_HOME_AGENT_INFORMATION = 8,
    ND_OPT_SOURCE_ADDR_LIST = 9,
    ND_OPT_TARGET_ADDR_LIST = 10,
    ND_OPT_ROUTE_INFO = 24,
    ND_OPT_RDNSS = 25,
    ND_OPT_DNSSL = 31,
} ND_OPTION_TYPE;

typedef int nd_opt_prefix_info;

typedef int nd_opt_rd_hdr;

typedef int nd_opt_mtu;

typedef int nd_opt_route_info;

typedef int nd_opt_rdnss;

typedef int nd_opt_dnssl;

typedef int MLD_HEADER;

typedef enum {
    MLD_MAX_RESP_CODE_TYPE_NORMAL = 0,
    MLD_MAX_RESP_CODE_TYPE_FLOAT = 1,
} MLD_MAX_RESP_CODE_TYPE;

typedef int MLDV2_QUERY_HEADER;

typedef int MLDV2_REPORT_RECORD_HEADER;

typedef int MLDV2_REPORT_HEADER;

typedef int tcp_hdr;

typedef int tcp_opt_mss;

typedef int tcp_opt_ws;

typedef int tcp_opt_sack_permitted;

typedef int tcp_opt_sack;

typedef int tcp_opt_ts;

typedef int tcp_opt_unknown;

typedef int tcp_opt_fastopen;

typedef int DL_TUNNEL_ADDRESS;

typedef enum {
    TUNNEL_SUB_TYPE_NONE = 0,
    TUNNEL_SUB_TYPE_CP = 1,
    TUNNEL_SUB_TYPE_IPTLS = 2,
    TUNNEL_SUB_TYPE_HA = 3,
} TUNNEL_SUB_TYPE;

typedef int DL_TEREDO_ADDRESS;

typedef int DL_TEREDO_ADDRESS_PRV;

typedef int IPTLS_METADATA;

typedef enum {
    MIT_GUID = 1,
    MIT_IF_LUID = 2,
} NPI_MODULEID_TYPE;

typedef int NPI_MODULEID;

typedef enum {
    FallbackIndexTcpFastopen = 0,
    FallbackIndexMax = 1,
} FALLBACK_INDEX;


//--------------------------------------------------------------------------------
// Section: Functions (186)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void FwpmFreeMemory0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmEngineOpen0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmEngineClose0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmEngineGetOption0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmEngineSetOption0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmEngineGetSecurityInfo0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmEngineSetSecurityInfo0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmSessionCreateEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmSessionEnum0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmSessionDestroyEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmTransactionBegin0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmTransactionCommit0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmTransactionAbort0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderAdd0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderDeleteByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderGetByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderCreateEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderEnum0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderDestroyEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderGetSecurityInfoByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderSetSecurityInfoByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderSubscribeChanges0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderUnsubscribeChanges0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderSubscriptionsGet0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderContextAdd0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void FwpmProviderContextAdd1();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmProviderContextAdd2();

/*u32*/void FwpmProviderContextAdd3();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderContextDeleteById0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderContextDeleteByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderContextGetById0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void FwpmProviderContextGetById1();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmProviderContextGetById2();

/*u32*/void FwpmProviderContextGetById3();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderContextGetByKey0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void FwpmProviderContextGetByKey1();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmProviderContextGetByKey2();

/*u32*/void FwpmProviderContextGetByKey3();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderContextCreateEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderContextEnum0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void FwpmProviderContextEnum1();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmProviderContextEnum2();

/*u32*/void FwpmProviderContextEnum3();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderContextDestroyEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderContextGetSecurityInfoByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderContextSetSecurityInfoByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderContextSubscribeChanges0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderContextUnsubscribeChanges0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmProviderContextSubscriptionsGet0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmSubLayerAdd0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmSubLayerDeleteByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmSubLayerGetByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmSubLayerCreateEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmSubLayerEnum0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmSubLayerDestroyEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmSubLayerGetSecurityInfoByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmSubLayerSetSecurityInfoByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmSubLayerSubscribeChanges0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmSubLayerUnsubscribeChanges0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmSubLayerSubscriptionsGet0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmLayerGetById0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmLayerGetByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmLayerCreateEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmLayerEnum0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmLayerDestroyEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmLayerGetSecurityInfoByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmLayerSetSecurityInfoByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmCalloutAdd0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmCalloutDeleteById0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmCalloutDeleteByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmCalloutGetById0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmCalloutGetByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmCalloutCreateEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmCalloutEnum0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmCalloutDestroyEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmCalloutGetSecurityInfoByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmCalloutSetSecurityInfoByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmCalloutSubscribeChanges0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmCalloutUnsubscribeChanges0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmCalloutSubscriptionsGet0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmFilterAdd0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmFilterDeleteById0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmFilterDeleteByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmFilterGetById0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmFilterGetByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmFilterCreateEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmFilterEnum0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmFilterDestroyEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmFilterGetSecurityInfoByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmFilterSetSecurityInfoByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmFilterSubscribeChanges0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmFilterUnsubscribeChanges0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmFilterSubscriptionsGet0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmGetAppIdFromFileName0();

/*u32*/void FwpmBitmapIndexGet0();

/*u32*/void FwpmBitmapIndexFree0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmIPsecTunnelAdd0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void FwpmIPsecTunnelAdd1();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmIPsecTunnelAdd2();

/*u32*/void FwpmIPsecTunnelAdd3();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmIPsecTunnelDeleteByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IPsecGetStatistics0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IPsecGetStatistics1();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IPsecSaContextCreate0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IPsecSaContextCreate1();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IPsecSaContextDeleteById0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IPsecSaContextGetById0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IPsecSaContextGetById1();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IPsecSaContextGetSpi0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IPsecSaContextGetSpi1();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IPsecSaContextSetSpi0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IPsecSaContextAddInbound0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IPsecSaContextAddOutbound0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IPsecSaContextAddInbound1();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IPsecSaContextAddOutbound1();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IPsecSaContextExpire0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IPsecSaContextUpdate0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IPsecSaContextCreateEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IPsecSaContextEnum0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IPsecSaContextEnum1();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IPsecSaContextDestroyEnumHandle0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void IPsecSaContextSubscribe0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void IPsecSaContextUnsubscribe0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void IPsecSaContextSubscriptionsGet0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IPsecSaCreateEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IPsecSaEnum0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IPsecSaEnum1();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IPsecSaDestroyEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IPsecSaDbGetSecurityInfo0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IPsecSaDbSetSecurityInfo0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IPsecDospGetStatistics0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IPsecDospStateCreateEnumHandle0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IPsecDospStateEnum0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IPsecDospStateDestroyEnumHandle0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IPsecDospGetSecurityInfo0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IPsecDospSetSecurityInfo0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void IPsecKeyManagerAddAndRegister0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void IPsecKeyManagerUnregisterAndDelete0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void IPsecKeyManagersGet0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void IPsecKeyManagerGetSecurityInfoByKey0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void IPsecKeyManagerSetSecurityInfoByKey0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IkeextGetStatistics0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IkeextGetStatistics1();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IkeextSaDeleteById0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IkeextSaGetById0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IkeextSaGetById1();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void IkeextSaGetById2();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IkeextSaCreateEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IkeextSaEnum0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void IkeextSaEnum1();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void IkeextSaEnum2();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IkeextSaDestroyEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IkeextSaDbGetSecurityInfo0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void IkeextSaDbSetSecurityInfo0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmNetEventCreateEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmNetEventEnum0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void FwpmNetEventEnum1();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmNetEventEnum2();

// TODO: this type is limited to platform 'windows10.0.14393'
/*u32*/void FwpmNetEventEnum3();

/*u32*/void FwpmNetEventEnum4();

/*u32*/void FwpmNetEventEnum5();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmNetEventDestroyEnumHandle0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmNetEventsGetSecurityInfo0();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void FwpmNetEventsSetSecurityInfo0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void FwpmNetEventSubscribe0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void FwpmNetEventUnsubscribe0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void FwpmNetEventSubscriptionsGet0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmNetEventSubscribe1();

// TODO: this type is limited to platform 'windows10.0.14393'
/*u32*/void FwpmNetEventSubscribe2();

/*u32*/void FwpmNetEventSubscribe3();

/*u32*/void FwpmNetEventSubscribe4();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void FwpmSystemPortsGet0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void FwpmSystemPortsSubscribe0();

// TODO: this type is limited to platform 'windows6.1'
/*u32*/void FwpmSystemPortsUnsubscribe0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmConnectionGetById0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmConnectionEnum0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmConnectionCreateEnumHandle0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmConnectionDestroyEnumHandle0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmConnectionGetSecurityInfo0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmConnectionSetSecurityInfo0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmConnectionSubscribe0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmConnectionUnsubscribe0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmvSwitchEventSubscribe0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmvSwitchEventUnsubscribe0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmvSwitchEventsGetSecurityInfo0();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void FwpmvSwitchEventsSetSecurityInfo0();

