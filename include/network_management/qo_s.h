// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (199)
//--------------------------------------------------------------------------------
#define QOS_MAX_OBJECT_STRING_LENGTH (UINT)256
#define QOS_TRAFFIC_GENERAL_ID_BASE (UINT)4000
#define SERVICETYPE_NOTRAFFIC (UINT)0
#define SERVICETYPE_BESTEFFORT (UINT)1
#define SERVICETYPE_CONTROLLEDLOAD (UINT)2
#define SERVICETYPE_GUARANTEED (UINT)3
#define SERVICETYPE_NETWORK_UNAVAILABLE (UINT)4
#define SERVICETYPE_GENERAL_INFORMATION (UINT)5
#define SERVICETYPE_NOCHANGE (UINT)6
#define SERVICETYPE_NONCONFORMING (UINT)9
#define SERVICETYPE_NETWORK_CONTROL (UINT)10
#define SERVICETYPE_QUALITATIVE (UINT)13
#define SERVICE_BESTEFFORT (UINT)2147549184
#define SERVICE_CONTROLLEDLOAD (UINT)2147614720
#define SERVICE_GUARANTEED (UINT)2147745792
#define SERVICE_QUALITATIVE (UINT)2149580800
#define SERVICE_NO_TRAFFIC_CONTROL (UINT)2164260864
#define SERVICE_NO_QOS_SIGNALING (UINT)1073741824
#define QOS_NOT_SPECIFIED (UINT)4294967295
#define POSITIVE_INFINITY_RATE (UINT)4294967294
#define QOS_GENERAL_ID_BASE (UINT)2000
#define TC_NONCONF_BORROW (UINT)0
#define TC_NONCONF_SHAPE (UINT)1
#define TC_NONCONF_DISCARD (UINT)2
#define TC_NONCONF_BORROW_PLUS (UINT)3
#define SESSFLG_E_Police (UINT)1
#define Opt_Share_mask (UINT)24
#define Opt_Distinct (UINT)8
#define Opt_Shared (UINT)16
#define Opt_SndSel_mask (UINT)7
#define Opt_Wildcard (UINT)1
#define Opt_Explicit (UINT)2
#define ERROR_SPECF_InPlace (UINT)1
#define ERROR_SPECF_NotGuilty (UINT)2
#define ERR_FORWARD_OK (UINT)32768
#define ERR_Usage_globl (UINT)0
#define ERR_Usage_local (UINT)16
#define ERR_Usage_serv (UINT)17
#define ERR_global_mask (UINT)4095
#define GENERAL_INFO (UINT)1
#define GUARANTEED_SERV (UINT)2
#define PREDICTIVE_SERV (UINT)3
#define CONTROLLED_DELAY_SERV (UINT)4
#define CONTROLLED_LOAD_SERV (UINT)5
#define QUALITATIVE_SERV (UINT)6
#define INTSERV_VERS_MASK (UINT)240
#define INTSERV_VERSION0 (UINT)0
#define ISSH_BREAK_BIT (UINT)128
#define ISPH_FLG_INV (UINT)128
#define RSVP_PATH (UINT)1
#define RSVP_RESV (UINT)2
#define RSVP_PATH_ERR (UINT)3
#define RSVP_RESV_ERR (UINT)4
#define RSVP_PATH_TEAR (UINT)5
#define RSVP_RESV_TEAR (UINT)6
#define RSVP_Err_NONE (UINT)0
#define RSVP_Erv_Nonev (UINT)0
#define RSVP_Err_ADMISSION (UINT)1
#define RSVP_Erv_Other (UINT)0
#define RSVP_Erv_DelayBnd (UINT)1
#define RSVP_Erv_Bandwidth (UINT)2
#define RSVP_Erv_MTU (UINT)3
#define RSVP_Erv_Flow_Rate (UINT)32769
#define RSVP_Erv_Bucket_szie (UINT)32770
#define RSVP_Erv_Peak_Rate (UINT)32771
#define RSVP_Erv_Min_Policied_size (UINT)32772
#define RSVP_Err_POLICY (UINT)2
#define POLICY_ERRV_NO_MORE_INFO (UINT)1
#define POLICY_ERRV_UNSUPPORTED_CREDENTIAL_TYPE (UINT)2
#define POLICY_ERRV_INSUFFICIENT_PRIVILEGES (UINT)3
#define POLICY_ERRV_EXPIRED_CREDENTIALS (UINT)4
#define POLICY_ERRV_IDENTITY_CHANGED (UINT)5
#define POLICY_ERRV_UNKNOWN (UINT)0
#define POLICY_ERRV_GLOBAL_DEF_FLOW_COUNT (UINT)1
#define POLICY_ERRV_GLOBAL_GRP_FLOW_COUNT (UINT)2
#define POLICY_ERRV_GLOBAL_USER_FLOW_COUNT (UINT)3
#define POLICY_ERRV_GLOBAL_UNAUTH_USER_FLOW_COUNT (UINT)4
#define POLICY_ERRV_SUBNET_DEF_FLOW_COUNT (UINT)5
#define POLICY_ERRV_SUBNET_GRP_FLOW_COUNT (UINT)6
#define POLICY_ERRV_SUBNET_USER_FLOW_COUNT (UINT)7
#define POLICY_ERRV_SUBNET_UNAUTH_USER_FLOW_COUNT (UINT)8
#define POLICY_ERRV_GLOBAL_DEF_FLOW_DURATION (UINT)9
#define POLICY_ERRV_GLOBAL_GRP_FLOW_DURATION (UINT)10
#define POLICY_ERRV_GLOBAL_USER_FLOW_DURATION (UINT)11
#define POLICY_ERRV_GLOBAL_UNAUTH_USER_FLOW_DURATION (UINT)12
#define POLICY_ERRV_SUBNET_DEF_FLOW_DURATION (UINT)13
#define POLICY_ERRV_SUBNET_GRP_FLOW_DURATION (UINT)14
#define POLICY_ERRV_SUBNET_USER_FLOW_DURATION (UINT)15
#define POLICY_ERRV_SUBNET_UNAUTH_USER_FLOW_DURATION (UINT)16
#define POLICY_ERRV_GLOBAL_DEF_FLOW_RATE (UINT)17
#define POLICY_ERRV_GLOBAL_GRP_FLOW_RATE (UINT)18
#define POLICY_ERRV_GLOBAL_USER_FLOW_RATE (UINT)19
#define POLICY_ERRV_GLOBAL_UNAUTH_USER_FLOW_RATE (UINT)20
#define POLICY_ERRV_SUBNET_DEF_FLOW_RATE (UINT)21
#define POLICY_ERRV_SUBNET_GRP_FLOW_RATE (UINT)22
#define POLICY_ERRV_SUBNET_USER_FLOW_RATE (UINT)23
#define POLICY_ERRV_SUBNET_UNAUTH_USER_FLOW_RATE (UINT)24
#define POLICY_ERRV_GLOBAL_DEF_PEAK_RATE (UINT)25
#define POLICY_ERRV_GLOBAL_GRP_PEAK_RATE (UINT)26
#define POLICY_ERRV_GLOBAL_USER_PEAK_RATE (UINT)27
#define POLICY_ERRV_GLOBAL_UNAUTH_USER_PEAK_RATE (UINT)28
#define POLICY_ERRV_SUBNET_DEF_PEAK_RATE (UINT)29
#define POLICY_ERRV_SUBNET_GRP_PEAK_RATE (UINT)30
#define POLICY_ERRV_SUBNET_USER_PEAK_RATE (UINT)31
#define POLICY_ERRV_SUBNET_UNAUTH_USER_PEAK_RATE (UINT)32
#define POLICY_ERRV_GLOBAL_DEF_SUM_FLOW_RATE (UINT)33
#define POLICY_ERRV_GLOBAL_GRP_SUM_FLOW_RATE (UINT)34
#define POLICY_ERRV_GLOBAL_USER_SUM_FLOW_RATE (UINT)35
#define POLICY_ERRV_GLOBAL_UNAUTH_USER_SUM_FLOW_RATE (UINT)36
#define POLICY_ERRV_SUBNET_DEF_SUM_FLOW_RATE (UINT)37
#define POLICY_ERRV_SUBNET_GRP_SUM_FLOW_RATE (UINT)38
#define POLICY_ERRV_SUBNET_USER_SUM_FLOW_RATE (UINT)39
#define POLICY_ERRV_SUBNET_UNAUTH_USER_SUM_FLOW_RATE (UINT)40
#define POLICY_ERRV_GLOBAL_DEF_SUM_PEAK_RATE (UINT)41
#define POLICY_ERRV_GLOBAL_GRP_SUM_PEAK_RATE (UINT)42
#define POLICY_ERRV_GLOBAL_USER_SUM_PEAK_RATE (UINT)43
#define POLICY_ERRV_GLOBAL_UNAUTH_USER_SUM_PEAK_RATE (UINT)44
#define POLICY_ERRV_SUBNET_DEF_SUM_PEAK_RATE (UINT)45
#define POLICY_ERRV_SUBNET_GRP_SUM_PEAK_RATE (UINT)46
#define POLICY_ERRV_SUBNET_USER_SUM_PEAK_RATE (UINT)47
#define POLICY_ERRV_SUBNET_UNAUTH_USER_SUM_PEAK_RATE (UINT)48
#define POLICY_ERRV_UNKNOWN_USER (UINT)49
#define POLICY_ERRV_NO_PRIVILEGES (UINT)50
#define POLICY_ERRV_EXPIRED_USER_TOKEN (UINT)51
#define POLICY_ERRV_NO_RESOURCES (UINT)52
#define POLICY_ERRV_PRE_EMPTED (UINT)53
#define POLICY_ERRV_USER_CHANGED (UINT)54
#define POLICY_ERRV_NO_ACCEPTS (UINT)55
#define POLICY_ERRV_NO_MEMORY (UINT)56
#define POLICY_ERRV_CRAZY_FLOWSPEC (UINT)57
#define RSVP_Err_NO_PATH (UINT)3
#define RSVP_Err_NO_SENDER (UINT)4
#define RSVP_Err_BAD_STYLE (UINT)5
#define RSVP_Err_UNKNOWN_STYLE (UINT)6
#define RSVP_Err_BAD_DSTPORT (UINT)7
#define RSVP_Err_BAD_SNDPORT (UINT)8
#define RSVP_Err_AMBIG_FILTER (UINT)9
#define RSVP_Err_PREEMPTED (UINT)12
#define RSVP_Err_UNKN_OBJ_CLASS (UINT)13
#define RSVP_Err_UNKNOWN_CTYPE (UINT)14
#define RSVP_Err_API_ERROR (UINT)20
#define RSVP_Err_TC_ERROR (UINT)21
#define RSVP_Erv_Conflict_Serv (UINT)1
#define RSVP_Erv_No_Serv (UINT)2
#define RSVP_Erv_Crazy_Flowspec (UINT)3
#define RSVP_Erv_Crazy_Tspec (UINT)4
#define RSVP_Err_TC_SYS_ERROR (UINT)22
#define RSVP_Err_RSVP_SYS_ERROR (UINT)23
#define RSVP_Erv_MEMORY (UINT)1
#define RSVP_Erv_API (UINT)2
#define LPM_PE_USER_IDENTITY (UINT)2
#define LPM_PE_APP_IDENTITY (UINT)3
#define ERROR_NO_MORE_INFO (UINT)1
#define UNSUPPORTED_CREDENTIAL_TYPE (UINT)2
#define INSUFFICIENT_PRIVILEGES (UINT)3
#define EXPIRED_CREDENTIAL (UINT)4
#define IDENTITY_CHANGED (UINT)5
#define LPM_OK (UINT)0
#define INV_LPM_HANDLE (UINT)1
#define LPM_TIME_OUT (UINT)2
#define INV_REQ_HANDLE (UINT)3
#define DUP_RESULTS (UINT)4
#define INV_RESULTS (UINT)5
#define LPM_PE_ALL_TYPES (UINT)0
#define LPM_API_VERSION_1 (UINT)1
#define PCM_VERSION_1 (UINT)1
#define LPV_RESERVED (UINT)0
#define LPV_MIN_PRIORITY (UINT)1
#define LPV_MAX_PRIORITY (UINT)65280
#define LPV_DROP_MSG (UINT)65533
#define LPV_DONT_CARE (UINT)65534
#define LPV_REJECT (UINT)65535
#define FORCE_IMMEDIATE_REFRESH (UINT)1
#define LPM_RESULT_READY (UINT)0
#define LPM_RESULT_DEFER (UINT)1
#define RCVD_PATH_TEAR (UINT)1
#define RCVD_RESV_TEAR (UINT)2
#define ADM_CTRL_FAILED (UINT)3
#define STATE_TIMEOUT (UINT)4
#define FLOW_DURATION (UINT)5
#define RESOURCES_ALLOCATED (UINT)1
#define RESOURCES_MODIFIED (UINT)2
#define CURRENT_TCI_VERSION (UINT)2
#define TC_NOTIFY_IFC_UP (UINT)1
#define TC_NOTIFY_IFC_CLOSE (UINT)2
#define TC_NOTIFY_IFC_CHANGE (UINT)3
#define TC_NOTIFY_PARAM_CHANGED (UINT)4
#define TC_NOTIFY_FLOW_CLOSE (UINT)5
#define MAX_STRING_LENGTH (UINT)256
#define QOS_OUTGOING_DEFAULT_MINIMUM_BANDWIDTH (UINT)4294967295
#define QOS_QUERYFLOW_FRESH (UINT)1
#define QOS_NON_ADAPTIVE_FLOW (UINT)2
#define IS_GUAR_RSPEC (INT)130
#define GUAR_ADSPARM_C (INT)131
#define GUAR_ADSPARM_D (INT)132
#define GUAR_ADSPARM_Ctot (INT)133
#define GUAR_ADSPARM_Dtot (INT)134
#define GUAR_ADSPARM_Csum (INT)135
#define GUAR_ADSPARM_Dsum (INT)136

//--------------------------------------------------------------------------------
// Section: Types (81)
//--------------------------------------------------------------------------------
typedef int LPM_HANDLE;

typedef int RHANDLE;

typedef int FLOWSPEC;

typedef int QOS_OBJECT_HDR;

typedef int QOS_SD_MODE;

typedef int QOS_SHAPING_RATE;

typedef int RsvpObjHdr;

typedef int Session_IPv4;

typedef int RSVP_SESSION;

typedef int Rsvp_Hop_IPv4;

typedef int RSVP_HOP;

typedef int RESV_STYLE;

typedef int Filter_Spec_IPv4;

typedef int Filter_Spec_IPv4GPI;

typedef int FILTER_SPEC;

typedef int Scope_list_ipv4;

typedef int RSVP_SCOPE;

typedef int Error_Spec_IPv4;

typedef int ERROR_SPEC;

typedef int POLICY_DATA;

typedef int POLICY_ELEMENT;

typedef enum {
    IS_WKP_HOP_CNT = 4,
    IS_WKP_PATH_BW = 6,
    IS_WKP_MIN_LATENCY = 8,
    IS_WKP_COMPOSED_MTU = 10,
    IS_WKP_TB_TSPEC = 127,
    IS_WKP_Q_TSPEC = 128,
} int_serv_wkp;

typedef int IntServMainHdr;

typedef int IntServServiceHdr;

typedef int IntServParmHdr;

typedef int GenTspecParms;

typedef int GenTspec;

typedef int QualTspecParms;

typedef int QualTspec;

typedef int QualAppFlowSpec;

typedef int IntServTspecBody;

typedef int SENDER_TSPEC;

typedef int CtrlLoadFlowspec;

typedef int GuarRspec;

typedef int GuarFlowSpec;

typedef int IntServFlowSpec;

typedef int IS_FLOWSPEC;

typedef int flow_desc;

typedef int Gads_parms_t;

typedef int GenAdspecParams;

typedef int IS_ADSPEC_BODY;

typedef int ADSPEC;

typedef int ID_ERROR_OBJECT;

typedef int RSVP_MSG_OBJS;

typedef int PALLOCMEM;

typedef int PFREEMEM;

typedef int policy_decision;

typedef int CBADMITRESULT;

typedef int CBGETRSVPOBJECTS;

typedef int LPM_INIT_INFO;

typedef int lpmiptable;

typedef enum {
    QOSTrafficTypeBestEffort = 0,
    QOSTrafficTypeBackground = 1,
    QOSTrafficTypeExcellentEffort = 2,
    QOSTrafficTypeAudioVideo = 3,
    QOSTrafficTypeVoice = 4,
    QOSTrafficTypeControl = 5,
} QOS_TRAFFIC_TYPE;

typedef enum {
    QOSSetTrafficType = 0,
    QOSSetOutgoingRate = 1,
    QOSSetOutgoingDSCPValue = 2,
} QOS_SET_FLOW;

typedef int QOS_PACKET_PRIORITY;

typedef int QOS_FLOW_FUNDAMENTALS;

typedef enum {
    QOSFlowRateNotApplicable = 0,
    QOSFlowRateContentChange = 1,
    QOSFlowRateCongestion = 2,
    QOSFlowRateHigherContentEncoding = 3,
    QOSFlowRateUserCaused = 4,
} QOS_FLOWRATE_REASON;

typedef enum {
    QOSShapeOnly = 0,
    QOSShapeAndMark = 1,
    QOSUseNonConformantMarkings = 2,
} QOS_SHAPING;

typedef int QOS_FLOWRATE_OUTGOING;

typedef enum {
    QOSQueryFlowFundamentals = 0,
    QOSQueryPacketPriority = 1,
    QOSQueryOutgoingRate = 2,
} QOS_QUERY_FLOW;

typedef enum {
    QOSNotifyCongested = 0,
    QOSNotifyUncongested = 1,
    QOSNotifyAvailable = 2,
} QOS_NOTIFY_FLOW;

typedef int QOS_VERSION;

typedef int QOS_FRIENDLY_NAME;

typedef int QOS_TRAFFIC_CLASS;

typedef int QOS_DS_CLASS;

typedef int QOS_DIFFSERV;

typedef int QOS_DIFFSERV_RULE;

typedef int QOS_TCP_TRAFFIC;

typedef int TCI_NOTIFY_HANDLER;

typedef int TCI_ADD_FLOW_COMPLETE_HANDLER;

typedef int TCI_MOD_FLOW_COMPLETE_HANDLER;

typedef int TCI_DEL_FLOW_COMPLETE_HANDLER;

typedef int TCI_CLIENT_FUNC_LIST;

typedef int ADDRESS_LIST_DESCRIPTOR;

typedef int TC_IFC_DESCRIPTOR;

typedef int TC_SUPPORTED_INFO_BUFFER;

typedef int TC_GEN_FILTER;

typedef int TC_GEN_FLOW;

typedef int IP_PATTERN;

typedef int IPX_PATTERN;

typedef int ENUMERATION_BUFFER;

typedef int QOS;


//--------------------------------------------------------------------------------
// Section: Functions (31)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void QOSCreateHandle();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void QOSCloseHandle();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void QOSStartTrackingClient();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void QOSStopTrackingClient();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void QOSEnumerateFlows();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void QOSAddSocketToFlow();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void QOSRemoveSocketFromFlow();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void QOSSetFlow();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void QOSQueryFlow();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void QOSNotifyFlow();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void QOSCancel();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcRegisterClient();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcEnumerateInterfaces();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcOpenInterfaceA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcOpenInterfaceW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcCloseInterface();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcQueryInterface();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcSetInterface();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcQueryFlowA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcQueryFlowW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcSetFlowA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcSetFlowW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcAddFlow();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcGetFlowNameA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcGetFlowNameW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcModifyFlow();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcAddFilter();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcDeregisterClient();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcDeleteFlow();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcDeleteFilter();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void TcEnumerateFlows();

