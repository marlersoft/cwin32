// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (82)
//--------------------------------------------------------------------------------
#define WNGETCON_CONNECTED (UINT)0
#define WNGETCON_DISCONNECTED (UINT)1
#define WNNC_SPEC_VERSION (UINT)1
#define WNNC_SPEC_VERSION51 (UINT)327681
#define WNNC_NET_TYPE (UINT)2
#define WNNC_NET_NONE (UINT)0
#define WNNC_DRIVER_VERSION (UINT)3
#define WNNC_USER (UINT)4
#define WNNC_USR_GETUSER (UINT)1
#define WNNC_CONNECTION (UINT)6
#define WNNC_CON_ADDCONNECTION (UINT)1
#define WNNC_CON_CANCELCONNECTION (UINT)2
#define WNNC_CON_GETCONNECTIONS (UINT)4
#define WNNC_CON_ADDCONNECTION3 (UINT)8
#define WNNC_CON_ADDCONNECTION4 (UINT)16
#define WNNC_CON_GETPERFORMANCE (UINT)64
#define WNNC_CON_DEFER (UINT)128
#define WNNC_DIALOG (UINT)8
#define WNNC_DLG_DEVICEMODE (UINT)1
#define WNNC_DLG_PROPERTYDIALOG (UINT)32
#define WNNC_DLG_SEARCHDIALOG (UINT)64
#define WNNC_DLG_FORMATNETWORKNAME (UINT)128
#define WNNC_DLG_PERMISSIONEDITOR (UINT)256
#define WNNC_DLG_GETRESOURCEPARENT (UINT)512
#define WNNC_DLG_GETRESOURCEINFORMATION (UINT)2048
#define WNNC_ADMIN (UINT)9
#define WNNC_ADM_GETDIRECTORYTYPE (UINT)1
#define WNNC_ADM_DIRECTORYNOTIFY (UINT)2
#define WNNC_ENUMERATION (UINT)11
#define WNNC_ENUM_GLOBAL (UINT)1
#define WNNC_ENUM_LOCAL (UINT)2
#define WNNC_ENUM_CONTEXT (UINT)4
#define WNNC_ENUM_SHAREABLE (UINT)8
#define WNNC_START (UINT)12
#define WNNC_WAIT_FOR_START (UINT)1
#define WNNC_CONNECTION_FLAGS (UINT)13
#define WNTYPE_DRIVE (UINT)1
#define WNTYPE_FILE (UINT)2
#define WNTYPE_PRINTER (UINT)3
#define WNTYPE_COMM (UINT)4
#define WNSRCH_REFRESH_FIRST_LEVEL (UINT)1
#define WNDT_NORMAL (UINT)0
#define WNDT_NETWORK (UINT)1
#define WN_NETWORK_CLASS (UINT)1
#define WN_CREDENTIAL_CLASS (UINT)2
#define WN_PRIMARY_AUTHENT_CLASS (UINT)4
#define WN_SERVICE_CLASS (UINT)8
#define WN_VALID_LOGON_ACCOUNT (UINT)1
#define WN_NT_PASSWORD_CHANGED (UINT)2
#define NOTIFY_PRE (UINT)1
#define NOTIFY_POST (UINT)2
#define WNPERMC_PERM (UINT)1
#define WNPERMC_AUDIT (UINT)2
#define WNPERMC_OWNER (UINT)4
#define RESOURCE_RECENT (UINT)4
#define RESOURCETYPE_RESERVED (UINT)8
#define RESOURCETYPE_UNKNOWN (UINT)4294967295
#define RESOURCEUSAGE_NOLOCALDEVICE (UINT)4
#define RESOURCEUSAGE_SIBLING (UINT)8
#define RESOURCEUSAGE_RESERVED (UINT)2147483648
#define RESOURCEDISPLAYTYPE_NETWORK (UINT)6
#define RESOURCEDISPLAYTYPE_ROOT (UINT)7
#define RESOURCEDISPLAYTYPE_SHAREADMIN (UINT)8
#define RESOURCEDISPLAYTYPE_DIRECTORY (UINT)9
#define RESOURCEDISPLAYTYPE_NDSCONTAINER (UINT)11
#define NETPROPERTY_PERSISTENT (UINT)1
#define CONNECT_NEED_DRIVE (UINT)32
#define CONNECT_REFCOUNT (UINT)64
#define CONNECT_LOCALDRIVE (UINT)256
#define CONNECT_CURRENT_MEDIA (UINT)512
#define CONNECT_RESERVED (UINT)4278190080
#define CONNECT_CRED_RESET (UINT)8192
#define CONNECT_REQUIRE_INTEGRITY (UINT)16384
#define CONNECT_REQUIRE_PRIVACY (UINT)32768
#define CONNECT_WRITE_THROUGH_SEMANTICS (UINT)65536
#define CONNECT_COMPRESS_NETWORK_TRAFFIC (UINT)131072
#define WNFMT_INENUM (UINT)16
#define WNFMT_CONNECTION (UINT)32
#define WNCON_FORNETCARD (UINT)1
#define WNCON_NOTROUTED (UINT)2
#define WNCON_SLOWLINK (UINT)4
#define WNCON_DYNAMIC (UINT)8

//--------------------------------------------------------------------------------
// Section: Types (58)
//--------------------------------------------------------------------------------
typedef enum {
    UNIVERSAL_NAME_INFO_LEVEL = 1,
    REMOTE_NAME_INFO_LEVEL = 2,
} UNC_INFO_LEVEL;

typedef enum {
    WNPERM_DLG_PERM = 0,
    WNPERM_DLG_AUDIT = 1,
    WNPERM_DLG_OWNER = 2,
} WNPERM_DLG;

typedef enum {
    RESOURCEUSAGE_NONE = 0,
    RESOURCEUSAGE_CONNECTABLE = 1,
    RESOURCEUSAGE_CONTAINER = 2,
    RESOURCEUSAGE_ATTACHED = 16,
    RESOURCEUSAGE_ALL = 19,
} WNET_OPEN_ENUM_USAGE;

typedef enum {
    CONNECT_INTERACTIVE = 8,
    CONNECT_PROMPT = 16,
    CONNECT_REDIRECT = 128,
    CONNECT_UPDATE_PROFILE = 1,
    CONNECT_COMMANDLINE = 2048,
    CONNECT_CMD_SAVECRED = 4096,
    CONNECT_TEMPORARY = 4,
    CONNECT_DEFERRED = 1024,
    CONNECT_UPDATE_RECENT = 2,
} NET_USE_CONNECT_FLAGS;

typedef enum {
    WNPS_FILE = 0,
    WNPS_DIR = 1,
    WNPS_MULT = 2,
} NP_PROPERTY_DIALOG_SELECTION;

typedef enum {
    WNDN_MKDIR = 1,
    WNDN_RMDIR = 2,
    WNDN_MVDIR = 3,
} NPDIRECTORY_NOTIFY_OPERATION;

typedef enum {
    RESOURCETYPE_ANY = 0,
    RESOURCETYPE_DISK = 1,
    RESOURCETYPE_PRINT = 2,
} NET_RESOURCE_TYPE;

typedef enum {
    WNFMT_MULTILINE = 1,
    WNFMT_ABBREVIATED = 2,
} NETWORK_NAME_FORMAT_FLAGS;

typedef enum {
    RESOURCE_CONNECTED = 1,
    RESOURCE_CONTEXT = 5,
    RESOURCE_GLOBALNET = 2,
    RESOURCE_REMEMBERED = 3,
} NET_RESOURCE_SCOPE;

typedef enum {
    NETINFO_DLL16 = 1,
    NETINFO_DISKRED = 4,
    NETINFO_PRINTERRED = 8,
} NETINFOSTRUCT_CHARACTERISTICS;

typedef enum {
    CONNDLG_RO_PATH = 1,
    CONNDLG_CONN_POINT = 2,
    CONNDLG_USE_MRU = 4,
    CONNDLG_HIDE_BOX = 8,
    CONNDLG_PERSIST = 16,
    CONNDLG_NOT_PERSIST = 32,
} CONNECTDLGSTRUCT_FLAGS;

typedef enum {
    DISC_UPDATE_PROFILE = 1,
    DISC_NO_FORCE = 64,
} DISCDLGSTRUCT_FLAGS;

typedef int NetEnumHandle;

typedef int NETRESOURCEA;

typedef int NETRESOURCEW;

typedef int CONNECTDLGSTRUCTA;

typedef int CONNECTDLGSTRUCTW;

typedef int DISCDLGSTRUCTA;

typedef int DISCDLGSTRUCTW;

typedef int UNIVERSAL_NAME_INFOA;

typedef int UNIVERSAL_NAME_INFOW;

typedef int REMOTE_NAME_INFOA;

typedef int REMOTE_NAME_INFOW;

typedef int NETINFOSTRUCT;

typedef int NETCONNECTINFOSTRUCT;

typedef int PF_NPAddConnection;

typedef int PF_NPAddConnection3;

typedef int PF_NPAddConnection4;

typedef int PF_NPCancelConnection;

typedef int PF_NPGetConnection;

typedef int PF_NPGetConnection3;

typedef int PF_NPGetUniversalName;

typedef int PF_NPGetConnectionPerformance;

typedef int PF_NPOpenEnum;

typedef int PF_NPEnumResource;

typedef int PF_NPCloseEnum;

typedef int PF_NPGetCaps;

typedef int PF_NPGetUser;

typedef int PF_NPGetPersistentUseOptionsForConnection;

typedef int PF_NPDeviceMode;

typedef int PF_NPSearchDialog;

typedef int PF_NPGetResourceParent;

typedef int PF_NPGetResourceInformation;

typedef int PF_NPFormatNetworkName;

typedef int PF_NPGetPropertyText;

typedef int PF_NPPropertyDialog;

typedef int PF_NPGetDirectoryType;

typedef int PF_NPDirectoryNotify;

typedef int PF_NPLogonNotify;

typedef int PF_NPPasswordChangeNotify;

typedef int NOTIFYINFO;

typedef int NOTIFYADD;

typedef int NOTIFYCANCEL;

typedef int PF_AddConnectNotify;

typedef int PF_CancelConnectNotify;

typedef int PF_NPFMXGetPermCaps;

typedef int PF_NPFMXEditPerm;

typedef int PF_NPFMXGetPermHelp;


//--------------------------------------------------------------------------------
// Section: Functions (64)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetAddConnectionA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetAddConnectionW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetAddConnection2A();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetAddConnection2W();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetAddConnection3A();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetAddConnection3W();

/*u32*/void WNetAddConnection4A();

/*u32*/void WNetAddConnection4W();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetCancelConnectionA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetCancelConnectionW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetCancelConnection2A();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetCancelConnection2W();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetGetConnectionA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetGetConnectionW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetUseConnectionA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetUseConnectionW();

/*u32*/void WNetUseConnection4A();

/*u32*/void WNetUseConnection4W();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetConnectionDialog();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetDisconnectDialog();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetConnectionDialog1A();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetConnectionDialog1W();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetDisconnectDialog1A();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetDisconnectDialog1W();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetOpenEnumA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetOpenEnumW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetEnumResourceA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetEnumResourceW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetCloseEnum();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetGetResourceParentA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetGetResourceParentW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetGetResourceInformationA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetGetResourceInformationW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetGetUniversalNameA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetGetUniversalNameW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetGetUserA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetGetUserW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetGetProviderNameA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetGetProviderNameW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetGetNetworkInformationA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetGetNetworkInformationW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetGetLastErrorA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void WNetGetLastErrorW();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void MultinetGetConnectionPerformanceA();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void MultinetGetConnectionPerformanceW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void NPAddConnection();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void NPAddConnection3();

/*u32*/void NPAddConnection4();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void NPCancelConnection();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void NPGetConnection();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void NPGetConnection3();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void NPGetUniversalName();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void NPGetConnectionPerformance();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void NPOpenEnum();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void NPEnumResource();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void NPCloseEnum();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void NPGetCaps();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void NPGetUser();

/*u32*/void NPGetPersistentUseOptionsForConnection();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void NPGetResourceParent();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void NPGetResourceInformation();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void NPFormatNetworkName();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void WNetSetLastErrorA();

/*void*/void WNetSetLastErrorW();

