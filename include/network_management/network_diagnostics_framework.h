// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (30)
//--------------------------------------------------------------------------------
#define NDF_ERROR_START (UINT)63744
#define NDF_E_LENGTH_EXCEEDED (HRESULT)(INT)-2146895616
#define NDF_E_NOHELPERCLASS (HRESULT)(INT)-2146895615
#define NDF_E_CANCELLED (HRESULT)(INT)-2146895614
#define NDF_E_DISABLED (HRESULT)(INT)-2146895612
#define NDF_E_BAD_PARAM (HRESULT)(INT)-2146895611
#define NDF_E_VALIDATION (HRESULT)(INT)-2146895610
#define NDF_E_UNKNOWN (HRESULT)(INT)-2146895609
#define NDF_E_PROBLEM_PRESENT (HRESULT)(INT)-2146895608
#define RF_WORKAROUND (UINT)536870912
#define RF_USER_ACTION (UINT)268435456
#define RF_USER_CONFIRMATION (UINT)134217728
#define RF_INFORMATION_ONLY (UINT)33554432
#define RF_UI_ONLY (UINT)16777216
#define RF_SHOW_EVENTS (UINT)8388608
#define RF_VALIDATE_HELPTOPIC (UINT)4194304
#define RF_REPRO (UINT)2097152
#define RF_CONTACT_ADMIN (UINT)131072
#define RF_RESERVED (UINT)1073741824
#define RF_RESERVED_CA (UINT)2147483648
#define RF_RESERVED_LNI (UINT)65536
#define RCF_ISLEAF (UINT)1
#define RCF_ISCONFIRMED (UINT)2
#define RCF_ISTHIRDPARTY (UINT)4
#define DF_IMPERSONATION (UINT)2147483648
#define DF_TRACELESS (UINT)1073741824
#define NDF_INBOUND_FLAG_EDGETRAVERSAL (UINT)1
#define NDF_INBOUND_FLAG_HEALTHCHECK (UINT)2
#define NDF_ADD_CAPTURE_TRACE (UINT)1
#define NDF_APPLY_INCLUSION_LIST_FILTER (UINT)2

//--------------------------------------------------------------------------------
// Section: Types (25)
//--------------------------------------------------------------------------------
typedef enum {
    AT_INVALID = 0,
    AT_BOOLEAN = 1,
    AT_INT8 = 2,
    AT_UINT8 = 3,
    AT_INT16 = 4,
    AT_UINT16 = 5,
    AT_INT32 = 6,
    AT_UINT32 = 7,
    AT_INT64 = 8,
    AT_UINT64 = 9,
    AT_STRING = 10,
    AT_GUID = 11,
    AT_LIFE_TIME = 12,
    AT_SOCKADDR = 13,
    AT_OCTET_STRING = 14,
} ATTRIBUTE_TYPE;

typedef int OCTET_STRING;

typedef int LIFE_TIME;

typedef int DIAG_SOCKADDR;

typedef int HELPER_ATTRIBUTE;

typedef enum {
    RS_SYSTEM = 0,
    RS_USER = 1,
    RS_APPLICATION = 2,
    RS_PROCESS = 3,
} REPAIR_SCOPE;

typedef enum {
    RR_NOROLLBACK = 0,
    RR_ROLLBACK = 1,
    RR_NORISK = 2,
} REPAIR_RISK;

typedef enum {
    UIT_INVALID = 0,
    UIT_NONE = 1,
    UIT_SHELL_COMMAND = 2,
    UIT_HELP_PANE = 3,
    UIT_DUI = 4,
} UI_INFO_TYPE;

typedef int ShellCommandInfo;

typedef int UiInfo;

typedef int RepairInfo;

typedef int RepairInfoEx;

typedef int RootCauseInfo;

typedef enum {
    DS_NOT_IMPLEMENTED = 0,
    DS_CONFIRMED = 1,
    DS_REJECTED = 2,
    DS_INDETERMINATE = 3,
    DS_DEFERRED = 4,
    DS_PASSTHROUGH = 5,
} DIAGNOSIS_STATUS;

typedef enum {
    RS_NOT_IMPLEMENTED = 0,
    RS_REPAIRED = 1,
    RS_UNREPAIRED = 2,
    RS_DEFERRED = 3,
    RS_USER_ACTION = 4,
} REPAIR_STATUS;

typedef enum {
    PT_INVALID = 0,
    PT_LOW_HEALTH = 1,
    PT_LOWER_HEALTH = 2,
    PT_DOWN_STREAM_HEALTH = 4,
    PT_HIGH_UTILIZATION = 8,
    PT_HIGHER_UTILIZATION = 16,
    PT_UP_STREAM_UTILIZATION = 32,
} PROBLEM_TYPE;

typedef int HYPOTHESIS;

typedef int HelperAttributeInfo;

typedef int DiagnosticsInfo;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int INetDiagHelper;

typedef int HypothesisResult;

// TODO: this type is limited to platform 'windows6.1'
typedef int INetDiagHelperUtilFactory;

// TODO: this type is limited to platform 'windows6.1'
typedef int INetDiagHelperEx;

// TODO: this type is limited to platform 'windows6.0.6000'
typedef int INetDiagHelperInfo;

typedef int INetDiagExtensibleHelper;


//--------------------------------------------------------------------------------
// Section: Functions (16)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void NdfCreateIncident();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void NdfCreateWinSockIncident();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void NdfCreateWebIncident();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void NdfCreateWebIncidentEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void NdfCreateSharingIncident();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void NdfCreateDNSIncident();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void NdfCreateConnectivityIncident();

// TODO: this type is limited to platform 'windows8.0'
/*HRESULT*/void NdfCreateNetConnectionIncident();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void NdfCreatePnrpIncident();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void NdfCreateGroupingIncident();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void NdfExecuteDiagnosis();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void NdfCloseIncident();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void NdfDiagnoseIncident();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void NdfRepairIncident();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void NdfCancelIncident();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void NdfGetTraceFile();

