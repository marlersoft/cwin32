// NOTE: this file is autogenerated, DO NOT MODIFY
#include "bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (1332)
//--------------------------------------------------------------------------------
#define ALL_SERVICE_TYPES (UINT)0
#define HIGHLEVEL_SERVICE_TYPES (UINT)1
#define LOWLEVEL_SERVICE_TYPES (UINT)2
#define ALL_SERVICES (UINT)0
#define ONLINE_SERVICES (UINT)1
#define OFFLINE_SERVICES (UINT)2
#define MAX_LEADBYTES (UINT)12
#define MAX_DEFAULTCHAR (UINT)2
#define HIGH_SURROGATE_START (UINT)55296
#define HIGH_SURROGATE_END (UINT)56319
#define LOW_SURROGATE_START (UINT)56320
#define LOW_SURROGATE_END (UINT)57343
#define WC_COMPOSITECHECK (UINT)512
#define WC_DISCARDNS (UINT)16
#define WC_SEPCHARS (UINT)32
#define WC_DEFAULTCHAR (UINT)64
#define WC_ERR_INVALID_CHARS (UINT)128
#define WC_NO_BEST_FIT_CHARS (UINT)1024
#define CT_CTYPE1 (UINT)1
#define CT_CTYPE2 (UINT)2
#define CT_CTYPE3 (UINT)4
#define C1_UPPER (UINT)1
#define C1_LOWER (UINT)2
#define C1_DIGIT (UINT)4
#define C1_SPACE (UINT)8
#define C1_PUNCT (UINT)16
#define C1_CNTRL (UINT)32
#define C1_BLANK (UINT)64
#define C1_XDIGIT (UINT)128
#define C1_ALPHA (UINT)256
#define C1_DEFINED (UINT)512
#define C2_LEFTTORIGHT (UINT)1
#define C2_RIGHTTOLEFT (UINT)2
#define C2_EUROPENUMBER (UINT)3
#define C2_EUROPESEPARATOR (UINT)4
#define C2_EUROPETERMINATOR (UINT)5
#define C2_ARABICNUMBER (UINT)6
#define C2_COMMONSEPARATOR (UINT)7
#define C2_BLOCKSEPARATOR (UINT)8
#define C2_SEGMENTSEPARATOR (UINT)9
#define C2_WHITESPACE (UINT)10
#define C2_OTHERNEUTRAL (UINT)11
#define C2_NOTAPPLICABLE (UINT)0
#define C3_NONSPACING (UINT)1
#define C3_DIACRITIC (UINT)2
#define C3_VOWELMARK (UINT)4
#define C3_SYMBOL (UINT)8
#define C3_KATAKANA (UINT)16
#define C3_HIRAGANA (UINT)32
#define C3_HALFWIDTH (UINT)64
#define C3_FULLWIDTH (UINT)128
#define C3_IDEOGRAPH (UINT)256
#define C3_KASHIDA (UINT)512
#define C3_LEXICAL (UINT)1024
#define C3_HIGHSURROGATE (UINT)2048
#define C3_LOWSURROGATE (UINT)4096
#define C3_ALPHA (UINT)32768
#define C3_NOTAPPLICABLE (UINT)0
#define LCMAP_LOWERCASE (UINT)256
#define LCMAP_UPPERCASE (UINT)512
#define LCMAP_TITLECASE (UINT)768
#define LCMAP_SORTKEY (UINT)1024
#define LCMAP_BYTEREV (UINT)2048
#define LCMAP_HIRAGANA (UINT)1048576
#define LCMAP_KATAKANA (UINT)2097152
#define LCMAP_HALFWIDTH (UINT)4194304
#define LCMAP_FULLWIDTH (UINT)8388608
#define LCMAP_LINGUISTIC_CASING (UINT)16777216
#define LCMAP_SIMPLIFIED_CHINESE (UINT)33554432
#define LCMAP_TRADITIONAL_CHINESE (UINT)67108864
#define LCMAP_SORTHANDLE (UINT)536870912
#define LCMAP_HASH (UINT)262144
#define FIND_STARTSWITH (UINT)1048576
#define FIND_ENDSWITH (UINT)2097152
#define FIND_FROMSTART (UINT)4194304
#define FIND_FROMEND (UINT)8388608
#define LCID_ALTERNATE_SORTS (UINT)4
#define LOCALE_ALL (UINT)0
#define LOCALE_WINDOWS (UINT)1
#define LOCALE_SUPPLEMENTAL (UINT)2
#define LOCALE_ALTERNATE_SORTS (UINT)4
#define LOCALE_REPLACEMENT (UINT)8
#define LOCALE_NEUTRALDATA (UINT)16
#define LOCALE_SPECIFICDATA (UINT)32
#define CSTR_LESS_THAN (UINT)1
#define CSTR_EQUAL (UINT)2
#define CSTR_GREATER_THAN (UINT)3
#define CP_ACP (UINT)0
#define CP_OEMCP (UINT)1
#define CP_MACCP (UINT)2
#define CP_THREAD_ACP (UINT)3
#define CP_SYMBOL (UINT)42
#define CP_UTF7 (UINT)65000
#define CP_UTF8 (UINT)65001
#define CTRY_DEFAULT (UINT)0
#define CTRY_ALBANIA (UINT)355
#define CTRY_ALGERIA (UINT)213
#define CTRY_ARGENTINA (UINT)54
#define CTRY_ARMENIA (UINT)374
#define CTRY_AUSTRALIA (UINT)61
#define CTRY_AUSTRIA (UINT)43
#define CTRY_AZERBAIJAN (UINT)994
#define CTRY_BAHRAIN (UINT)973
#define CTRY_BELARUS (UINT)375
#define CTRY_BELGIUM (UINT)32
#define CTRY_BELIZE (UINT)501
#define CTRY_BOLIVIA (UINT)591
#define CTRY_BRAZIL (UINT)55
#define CTRY_BRUNEI_DARUSSALAM (UINT)673
#define CTRY_BULGARIA (UINT)359
#define CTRY_CANADA (UINT)2
#define CTRY_CARIBBEAN (UINT)1
#define CTRY_CHILE (UINT)56
#define CTRY_COLOMBIA (UINT)57
#define CTRY_COSTA_RICA (UINT)506
#define CTRY_CROATIA (UINT)385
#define CTRY_CZECH (UINT)420
#define CTRY_DENMARK (UINT)45
#define CTRY_DOMINICAN_REPUBLIC (UINT)1
#define CTRY_ECUADOR (UINT)593
#define CTRY_EGYPT (UINT)20
#define CTRY_EL_SALVADOR (UINT)503
#define CTRY_ESTONIA (UINT)372
#define CTRY_FAEROE_ISLANDS (UINT)298
#define CTRY_FINLAND (UINT)358
#define CTRY_FRANCE (UINT)33
#define CTRY_GEORGIA (UINT)995
#define CTRY_GERMANY (UINT)49
#define CTRY_GREECE (UINT)30
#define CTRY_GUATEMALA (UINT)502
#define CTRY_HONDURAS (UINT)504
#define CTRY_HONG_KONG (UINT)852
#define CTRY_HUNGARY (UINT)36
#define CTRY_ICELAND (UINT)354
#define CTRY_INDIA (UINT)91
#define CTRY_INDONESIA (UINT)62
#define CTRY_IRAN (UINT)981
#define CTRY_IRAQ (UINT)964
#define CTRY_IRELAND (UINT)353
#define CTRY_ISRAEL (UINT)972
#define CTRY_ITALY (UINT)39
#define CTRY_JAMAICA (UINT)1
#define CTRY_JAPAN (UINT)81
#define CTRY_JORDAN (UINT)962
#define CTRY_KAZAKSTAN (UINT)7
#define CTRY_KENYA (UINT)254
#define CTRY_KUWAIT (UINT)965
#define CTRY_KYRGYZSTAN (UINT)996
#define CTRY_LATVIA (UINT)371
#define CTRY_LEBANON (UINT)961
#define CTRY_LIBYA (UINT)218
#define CTRY_LIECHTENSTEIN (UINT)41
#define CTRY_LITHUANIA (UINT)370
#define CTRY_LUXEMBOURG (UINT)352
#define CTRY_MACAU (UINT)853
#define CTRY_MACEDONIA (UINT)389
#define CTRY_MALAYSIA (UINT)60
#define CTRY_MALDIVES (UINT)960
#define CTRY_MEXICO (UINT)52
#define CTRY_MONACO (UINT)33
#define CTRY_MONGOLIA (UINT)976
#define CTRY_MOROCCO (UINT)212
#define CTRY_NETHERLANDS (UINT)31
#define CTRY_NEW_ZEALAND (UINT)64
#define CTRY_NICARAGUA (UINT)505
#define CTRY_NORWAY (UINT)47
#define CTRY_OMAN (UINT)968
#define CTRY_PAKISTAN (UINT)92
#define CTRY_PANAMA (UINT)507
#define CTRY_PARAGUAY (UINT)595
#define CTRY_PERU (UINT)51
#define CTRY_PHILIPPINES (UINT)63
#define CTRY_POLAND (UINT)48
#define CTRY_PORTUGAL (UINT)351
#define CTRY_PRCHINA (UINT)86
#define CTRY_PUERTO_RICO (UINT)1
#define CTRY_QATAR (UINT)974
#define CTRY_ROMANIA (UINT)40
#define CTRY_RUSSIA (UINT)7
#define CTRY_SAUDI_ARABIA (UINT)966
#define CTRY_SERBIA (UINT)381
#define CTRY_SINGAPORE (UINT)65
#define CTRY_SLOVAK (UINT)421
#define CTRY_SLOVENIA (UINT)386
#define CTRY_SOUTH_AFRICA (UINT)27
#define CTRY_SOUTH_KOREA (UINT)82
#define CTRY_SPAIN (UINT)34
#define CTRY_SWEDEN (UINT)46
#define CTRY_SWITZERLAND (UINT)41
#define CTRY_SYRIA (UINT)963
#define CTRY_TAIWAN (UINT)886
#define CTRY_TATARSTAN (UINT)7
#define CTRY_THAILAND (UINT)66
#define CTRY_TRINIDAD_Y_TOBAGO (UINT)1
#define CTRY_TUNISIA (UINT)216
#define CTRY_TURKEY (UINT)90
#define CTRY_UAE (UINT)971
#define CTRY_UKRAINE (UINT)380
#define CTRY_UNITED_KINGDOM (UINT)44
#define CTRY_UNITED_STATES (UINT)1
#define CTRY_URUGUAY (UINT)598
#define CTRY_UZBEKISTAN (UINT)7
#define CTRY_VENEZUELA (UINT)58
#define CTRY_VIET_NAM (UINT)84
#define CTRY_YEMEN (UINT)967
#define CTRY_ZIMBABWE (UINT)263
#define LOCALE_NOUSEROVERRIDE (UINT)2147483648
#define LOCALE_USE_CP_ACP (UINT)1073741824
#define LOCALE_RETURN_NUMBER (UINT)536870912
#define LOCALE_RETURN_GENITIVE_NAMES (UINT)268435456
#define LOCALE_ALLOW_NEUTRAL_NAMES (UINT)134217728
#define LOCALE_SLOCALIZEDDISPLAYNAME (UINT)2
#define LOCALE_SENGLISHDISPLAYNAME (UINT)114
#define LOCALE_SNATIVEDISPLAYNAME (UINT)115
#define LOCALE_SLOCALIZEDLANGUAGENAME (UINT)111
#define LOCALE_SENGLISHLANGUAGENAME (UINT)4097
#define LOCALE_SNATIVELANGUAGENAME (UINT)4
#define LOCALE_SLOCALIZEDCOUNTRYNAME (UINT)6
#define LOCALE_SENGLISHCOUNTRYNAME (UINT)4098
#define LOCALE_SNATIVECOUNTRYNAME (UINT)8
#define LOCALE_IDIALINGCODE (UINT)5
#define LOCALE_SLIST (UINT)12
#define LOCALE_IMEASURE (UINT)13
#define LOCALE_SDECIMAL (UINT)14
#define LOCALE_STHOUSAND (UINT)15
#define LOCALE_SGROUPING (UINT)16
#define LOCALE_IDIGITS (UINT)17
#define LOCALE_ILZERO (UINT)18
#define LOCALE_INEGNUMBER (UINT)4112
#define LOCALE_SNATIVEDIGITS (UINT)19
#define LOCALE_SCURRENCY (UINT)20
#define LOCALE_SINTLSYMBOL (UINT)21
#define LOCALE_SMONDECIMALSEP (UINT)22
#define LOCALE_SMONTHOUSANDSEP (UINT)23
#define LOCALE_SMONGROUPING (UINT)24
#define LOCALE_ICURRDIGITS (UINT)25
#define LOCALE_ICURRENCY (UINT)27
#define LOCALE_INEGCURR (UINT)28
#define LOCALE_SSHORTDATE (UINT)31
#define LOCALE_SLONGDATE (UINT)32
#define LOCALE_STIMEFORMAT (UINT)4099
#define LOCALE_SAM (UINT)40
#define LOCALE_SPM (UINT)41
#define LOCALE_ICALENDARTYPE (UINT)4105
#define LOCALE_IOPTIONALCALENDAR (UINT)4107
#define LOCALE_IFIRSTDAYOFWEEK (UINT)4108
#define LOCALE_IFIRSTWEEKOFYEAR (UINT)4109
#define LOCALE_SDAYNAME1 (UINT)42
#define LOCALE_SDAYNAME2 (UINT)43
#define LOCALE_SDAYNAME3 (UINT)44
#define LOCALE_SDAYNAME4 (UINT)45
#define LOCALE_SDAYNAME5 (UINT)46
#define LOCALE_SDAYNAME6 (UINT)47
#define LOCALE_SDAYNAME7 (UINT)48
#define LOCALE_SABBREVDAYNAME1 (UINT)49
#define LOCALE_SABBREVDAYNAME2 (UINT)50
#define LOCALE_SABBREVDAYNAME3 (UINT)51
#define LOCALE_SABBREVDAYNAME4 (UINT)52
#define LOCALE_SABBREVDAYNAME5 (UINT)53
#define LOCALE_SABBREVDAYNAME6 (UINT)54
#define LOCALE_SABBREVDAYNAME7 (UINT)55
#define LOCALE_SMONTHNAME1 (UINT)56
#define LOCALE_SMONTHNAME2 (UINT)57
#define LOCALE_SMONTHNAME3 (UINT)58
#define LOCALE_SMONTHNAME4 (UINT)59
#define LOCALE_SMONTHNAME5 (UINT)60
#define LOCALE_SMONTHNAME6 (UINT)61
#define LOCALE_SMONTHNAME7 (UINT)62
#define LOCALE_SMONTHNAME8 (UINT)63
#define LOCALE_SMONTHNAME9 (UINT)64
#define LOCALE_SMONTHNAME10 (UINT)65
#define LOCALE_SMONTHNAME11 (UINT)66
#define LOCALE_SMONTHNAME12 (UINT)67
#define LOCALE_SMONTHNAME13 (UINT)4110
#define LOCALE_SABBREVMONTHNAME1 (UINT)68
#define LOCALE_SABBREVMONTHNAME2 (UINT)69
#define LOCALE_SABBREVMONTHNAME3 (UINT)70
#define LOCALE_SABBREVMONTHNAME4 (UINT)71
#define LOCALE_SABBREVMONTHNAME5 (UINT)72
#define LOCALE_SABBREVMONTHNAME6 (UINT)73
#define LOCALE_SABBREVMONTHNAME7 (UINT)74
#define LOCALE_SABBREVMONTHNAME8 (UINT)75
#define LOCALE_SABBREVMONTHNAME9 (UINT)76
#define LOCALE_SABBREVMONTHNAME10 (UINT)77
#define LOCALE_SABBREVMONTHNAME11 (UINT)78
#define LOCALE_SABBREVMONTHNAME12 (UINT)79
#define LOCALE_SABBREVMONTHNAME13 (UINT)4111
#define LOCALE_SPOSITIVESIGN (UINT)80
#define LOCALE_SNEGATIVESIGN (UINT)81
#define LOCALE_IPOSSIGNPOSN (UINT)82
#define LOCALE_INEGSIGNPOSN (UINT)83
#define LOCALE_IPOSSYMPRECEDES (UINT)84
#define LOCALE_IPOSSEPBYSPACE (UINT)85
#define LOCALE_INEGSYMPRECEDES (UINT)86
#define LOCALE_INEGSEPBYSPACE (UINT)87
#define LOCALE_FONTSIGNATURE (UINT)88
#define LOCALE_SISO639LANGNAME (UINT)89
#define LOCALE_SISO3166CTRYNAME (UINT)90
#define LOCALE_IPAPERSIZE (UINT)4106
#define LOCALE_SENGCURRNAME (UINT)4103
#define LOCALE_SNATIVECURRNAME (UINT)4104
#define LOCALE_SYEARMONTH (UINT)4102
#define LOCALE_SSORTNAME (UINT)4115
#define LOCALE_IDIGITSUBSTITUTION (UINT)4116
#define LOCALE_SNAME (UINT)92
#define LOCALE_SDURATION (UINT)93
#define LOCALE_SSHORTESTDAYNAME1 (UINT)96
#define LOCALE_SSHORTESTDAYNAME2 (UINT)97
#define LOCALE_SSHORTESTDAYNAME3 (UINT)98
#define LOCALE_SSHORTESTDAYNAME4 (UINT)99
#define LOCALE_SSHORTESTDAYNAME5 (UINT)100
#define LOCALE_SSHORTESTDAYNAME6 (UINT)101
#define LOCALE_SSHORTESTDAYNAME7 (UINT)102
#define LOCALE_SISO639LANGNAME2 (UINT)103
#define LOCALE_SISO3166CTRYNAME2 (UINT)104
#define LOCALE_SNAN (UINT)105
#define LOCALE_SPOSINFINITY (UINT)106
#define LOCALE_SNEGINFINITY (UINT)107
#define LOCALE_SSCRIPTS (UINT)108
#define LOCALE_SPARENT (UINT)109
#define LOCALE_SCONSOLEFALLBACKNAME (UINT)110
#define LOCALE_IREADINGLAYOUT (UINT)112
#define LOCALE_INEUTRAL (UINT)113
#define LOCALE_INEGATIVEPERCENT (UINT)116
#define LOCALE_IPOSITIVEPERCENT (UINT)117
#define LOCALE_SPERCENT (UINT)118
#define LOCALE_SPERMILLE (UINT)119
#define LOCALE_SMONTHDAY (UINT)120
#define LOCALE_SSHORTTIME (UINT)121
#define LOCALE_SOPENTYPELANGUAGETAG (UINT)122
#define LOCALE_SSORTLOCALE (UINT)123
#define LOCALE_SRELATIVELONGDATE (UINT)124
#define LOCALE_SSHORTESTAM (UINT)126
#define LOCALE_SSHORTESTPM (UINT)127
#define LOCALE_IDEFAULTCODEPAGE (UINT)11
#define LOCALE_IDEFAULTANSICODEPAGE (UINT)4100
#define LOCALE_IDEFAULTMACCODEPAGE (UINT)4113
#define LOCALE_IDEFAULTEBCDICCODEPAGE (UINT)4114
#define LOCALE_ILANGUAGE (UINT)1
#define LOCALE_SABBREVLANGNAME (UINT)3
#define LOCALE_SABBREVCTRYNAME (UINT)7
#define LOCALE_IGEOID (UINT)91
#define LOCALE_IDEFAULTLANGUAGE (UINT)9
#define LOCALE_IDEFAULTCOUNTRY (UINT)10
#define LOCALE_IINTLCURRDIGITS (UINT)26
#define LOCALE_SDATE (UINT)29
#define LOCALE_STIME (UINT)30
#define LOCALE_IDATE (UINT)33
#define LOCALE_ILDATE (UINT)34
#define LOCALE_ITIME (UINT)35
#define LOCALE_ITIMEMARKPOSN (UINT)4101
#define LOCALE_ICENTURY (UINT)36
#define LOCALE_ITLZERO (UINT)37
#define LOCALE_IDAYLZERO (UINT)38
#define LOCALE_IMONLZERO (UINT)39
#define LOCALE_SKEYBOARDSTOINSTALL (UINT)94
#define CAL_ICALINTVALUE (UINT)1
#define CAL_SCALNAME (UINT)2
#define CAL_IYEAROFFSETRANGE (UINT)3
#define CAL_SERASTRING (UINT)4
#define CAL_SSHORTDATE (UINT)5
#define CAL_SLONGDATE (UINT)6
#define CAL_SDAYNAME1 (UINT)7
#define CAL_SDAYNAME2 (UINT)8
#define CAL_SDAYNAME3 (UINT)9
#define CAL_SDAYNAME4 (UINT)10
#define CAL_SDAYNAME5 (UINT)11
#define CAL_SDAYNAME6 (UINT)12
#define CAL_SDAYNAME7 (UINT)13
#define CAL_SABBREVDAYNAME1 (UINT)14
#define CAL_SABBREVDAYNAME2 (UINT)15
#define CAL_SABBREVDAYNAME3 (UINT)16
#define CAL_SABBREVDAYNAME4 (UINT)17
#define CAL_SABBREVDAYNAME5 (UINT)18
#define CAL_SABBREVDAYNAME6 (UINT)19
#define CAL_SABBREVDAYNAME7 (UINT)20
#define CAL_SMONTHNAME1 (UINT)21
#define CAL_SMONTHNAME2 (UINT)22
#define CAL_SMONTHNAME3 (UINT)23
#define CAL_SMONTHNAME4 (UINT)24
#define CAL_SMONTHNAME5 (UINT)25
#define CAL_SMONTHNAME6 (UINT)26
#define CAL_SMONTHNAME7 (UINT)27
#define CAL_SMONTHNAME8 (UINT)28
#define CAL_SMONTHNAME9 (UINT)29
#define CAL_SMONTHNAME10 (UINT)30
#define CAL_SMONTHNAME11 (UINT)31
#define CAL_SMONTHNAME12 (UINT)32
#define CAL_SMONTHNAME13 (UINT)33
#define CAL_SABBREVMONTHNAME1 (UINT)34
#define CAL_SABBREVMONTHNAME2 (UINT)35
#define CAL_SABBREVMONTHNAME3 (UINT)36
#define CAL_SABBREVMONTHNAME4 (UINT)37
#define CAL_SABBREVMONTHNAME5 (UINT)38
#define CAL_SABBREVMONTHNAME6 (UINT)39
#define CAL_SABBREVMONTHNAME7 (UINT)40
#define CAL_SABBREVMONTHNAME8 (UINT)41
#define CAL_SABBREVMONTHNAME9 (UINT)42
#define CAL_SABBREVMONTHNAME10 (UINT)43
#define CAL_SABBREVMONTHNAME11 (UINT)44
#define CAL_SABBREVMONTHNAME12 (UINT)45
#define CAL_SABBREVMONTHNAME13 (UINT)46
#define CAL_SYEARMONTH (UINT)47
#define CAL_ITWODIGITYEARMAX (UINT)48
#define CAL_SSHORTESTDAYNAME1 (UINT)49
#define CAL_SSHORTESTDAYNAME2 (UINT)50
#define CAL_SSHORTESTDAYNAME3 (UINT)51
#define CAL_SSHORTESTDAYNAME4 (UINT)52
#define CAL_SSHORTESTDAYNAME5 (UINT)53
#define CAL_SSHORTESTDAYNAME6 (UINT)54
#define CAL_SSHORTESTDAYNAME7 (UINT)55
#define CAL_SMONTHDAY (UINT)56
#define CAL_SABBREVERASTRING (UINT)57
#define CAL_SRELATIVELONGDATE (UINT)58
#define CAL_SENGLISHERANAME (UINT)59
#define CAL_SENGLISHABBREVERANAME (UINT)60
#define CAL_SJAPANESEERAFIRSTYEAR (UINT)61
#define ENUM_ALL_CALENDARS (UINT)4294967295
#define CAL_GREGORIAN (UINT)1
#define CAL_GREGORIAN_US (UINT)2
#define CAL_JAPAN (UINT)3
#define CAL_TAIWAN (UINT)4
#define CAL_KOREA (UINT)5
#define CAL_HIJRI (UINT)6
#define CAL_THAI (UINT)7
#define CAL_HEBREW (UINT)8
#define CAL_GREGORIAN_ME_FRENCH (UINT)9
#define CAL_GREGORIAN_ARABIC (UINT)10
#define CAL_GREGORIAN_XLIT_ENGLISH (UINT)11
#define CAL_GREGORIAN_XLIT_FRENCH (UINT)12
#define CAL_PERSIAN (UINT)22
#define CAL_UMALQURA (UINT)23
#define LGRPID_WESTERN_EUROPE (UINT)1
#define LGRPID_CENTRAL_EUROPE (UINT)2
#define LGRPID_BALTIC (UINT)3
#define LGRPID_GREEK (UINT)4
#define LGRPID_CYRILLIC (UINT)5
#define LGRPID_TURKIC (UINT)6
#define LGRPID_TURKISH (UINT)6
#define LGRPID_JAPANESE (UINT)7
#define LGRPID_KOREAN (UINT)8
#define LGRPID_TRADITIONAL_CHINESE (UINT)9
#define LGRPID_SIMPLIFIED_CHINESE (UINT)10
#define LGRPID_THAI (UINT)11
#define LGRPID_HEBREW (UINT)12
#define LGRPID_ARABIC (UINT)13
#define LGRPID_VIETNAMESE (UINT)14
#define LGRPID_INDIC (UINT)15
#define LGRPID_GEORGIAN (UINT)16
#define LGRPID_ARMENIAN (UINT)17
#define MUI_LANGUAGE_ID (UINT)4
#define MUI_LANGUAGE_NAME (UINT)8
#define MUI_MERGE_SYSTEM_FALLBACK (UINT)16
#define MUI_MERGE_USER_FALLBACK (UINT)32
#define MUI_THREAD_LANGUAGES (UINT)64
#define MUI_CONSOLE_FILTER (UINT)256
#define MUI_COMPLEX_SCRIPT_FILTER (UINT)512
#define MUI_RESET_FILTERS (UINT)1
#define MUI_USER_PREFERRED_UI_LANGUAGES (UINT)16
#define MUI_USE_INSTALLED_LANGUAGES (UINT)32
#define MUI_USE_SEARCH_ALL_LANGUAGES (UINT)64
#define MUI_LANG_NEUTRAL_PE_FILE (UINT)256
#define MUI_NON_LANG_NEUTRAL_FILE (UINT)512
#define MUI_MACHINE_LANGUAGE_SETTINGS (UINT)1024
#define MUI_FILETYPE_NOT_LANGUAGE_NEUTRAL (UINT)1
#define MUI_FILETYPE_LANGUAGE_NEUTRAL_MAIN (UINT)2
#define MUI_FILETYPE_LANGUAGE_NEUTRAL_MUI (UINT)4
#define MUI_QUERY_TYPE (UINT)1
#define MUI_QUERY_CHECKSUM (UINT)2
#define MUI_QUERY_LANGUAGE_NAME (UINT)4
#define MUI_QUERY_RESOURCE_TYPES (UINT)8
#define MUI_FILEINFO_VERSION (UINT)1
#define MUI_FULL_LANGUAGE (UINT)1
#define MUI_PARTIAL_LANGUAGE (UINT)2
#define MUI_LIP_LANGUAGE (UINT)4
#define MUI_LANGUAGE_INSTALLED (UINT)32
#define MUI_LANGUAGE_LICENSED (UINT)64
#define GEOID_NOT_AVAILABLE (INT)-1
#define IDN_ALLOW_UNASSIGNED (UINT)1
#define IDN_USE_STD3_ASCII_RULES (UINT)2
#define IDN_EMAIL_ADDRESS (UINT)4
#define IDN_RAW_PUNYCODE (UINT)8
#define VS_ALLOW_LATIN (UINT)1
#define GSS_ALLOW_INHERITED_COMMON (UINT)1
#define MUI_FORMAT_REG_COMPAT (UINT)1
#define MUI_FORMAT_INF_COMPAT (UINT)2
#define MUI_VERIFY_FILE_EXISTS (UINT)4
#define MUI_SKIP_STRING_CACHE (UINT)8
#define MUI_IMMUTABLE_LOOKUP (UINT)16
#define CLSID_VERSION_DEPENDENT_MSIME_JAPANESE GUID { "6a91029e-aa49-471b-aee7-7d332785660d" }
#define IFEC_S_ALREADY_DEFAULT (HRESULT)(INT)291840
#define FELANG_REQ_CONV (UINT)65536
#define FELANG_REQ_RECONV (UINT)131072
#define FELANG_REQ_REV (UINT)196608
#define FELANG_CMODE_MONORUBY (UINT)2
#define FELANG_CMODE_NOPRUNING (UINT)4
#define FELANG_CMODE_KATAKANAOUT (UINT)8
#define FELANG_CMODE_HIRAGANAOUT (UINT)0
#define FELANG_CMODE_HALFWIDTHOUT (UINT)16
#define FELANG_CMODE_FULLWIDTHOUT (UINT)32
#define FELANG_CMODE_BOPOMOFO (UINT)64
#define FELANG_CMODE_HANGUL (UINT)128
#define FELANG_CMODE_PINYIN (UINT)256
#define FELANG_CMODE_PRECONV (UINT)512
#define FELANG_CMODE_RADICAL (UINT)1024
#define FELANG_CMODE_UNKNOWNREADING (UINT)2048
#define FELANG_CMODE_MERGECAND (UINT)4096
#define FELANG_CMODE_ROMAN (UINT)8192
#define FELANG_CMODE_BESTFIRST (UINT)16384
#define FELANG_CMODE_USENOREVWORDS (UINT)32768
#define FELANG_CMODE_NONE (UINT)16777216
#define FELANG_CMODE_PLAURALCLAUSE (UINT)33554432
#define FELANG_CMODE_SINGLECONVERT (UINT)67108864
#define FELANG_CMODE_AUTOMATIC (UINT)134217728
#define FELANG_CMODE_PHRASEPREDICT (UINT)268435456
#define FELANG_CMODE_CONVERSATION (UINT)536870912
#define FELANG_CMODE_NOINVISIBLECHAR (UINT)1073741824
#define E_NOCAND (UINT)48
#define E_NOTENOUGH_BUFFER (UINT)49
#define E_NOTENOUGH_WDD (UINT)50
#define E_LARGEINPUT (UINT)51
#define FELANG_CLMN_WBREAK (UINT)1
#define FELANG_CLMN_NOWBREAK (UINT)2
#define FELANG_CLMN_PBREAK (UINT)4
#define FELANG_CLMN_NOPBREAK (UINT)8
#define FELANG_CLMN_FIXR (UINT)16
#define FELANG_CLMN_FIXD (UINT)32
#define FELANG_INVALD_PO (UINT)65535
#define IFED_POS_NONE (UINT)0
#define IFED_POS_NOUN (UINT)1
#define IFED_POS_VERB (UINT)2
#define IFED_POS_ADJECTIVE (UINT)4
#define IFED_POS_ADJECTIVE_VERB (UINT)8
#define IFED_POS_ADVERB (UINT)16
#define IFED_POS_ADNOUN (UINT)32
#define IFED_POS_CONJUNCTION (UINT)64
#define IFED_POS_INTERJECTION (UINT)128
#define IFED_POS_INDEPENDENT (UINT)255
#define IFED_POS_INFLECTIONALSUFFIX (UINT)256
#define IFED_POS_PREFIX (UINT)512
#define IFED_POS_SUFFIX (UINT)1024
#define IFED_POS_AFFIX (UINT)1536
#define IFED_POS_TANKANJI (UINT)2048
#define IFED_POS_IDIOMS (UINT)4096
#define IFED_POS_SYMBOLS (UINT)8192
#define IFED_POS_PARTICLE (UINT)16384
#define IFED_POS_AUXILIARY_VERB (UINT)32768
#define IFED_POS_SUB_VERB (UINT)65536
#define IFED_POS_DEPENDENT (UINT)114688
#define IFED_POS_ALL (UINT)131071
#define IFED_SELECT_NONE (UINT)0
#define IFED_SELECT_READING (UINT)1
#define IFED_SELECT_DISPLAY (UINT)2
#define IFED_SELECT_POS (UINT)4
#define IFED_SELECT_COMMENT (UINT)8
#define IFED_SELECT_ALL (UINT)15
#define IFED_REG_NONE (UINT)0
#define IFED_REG_USER (UINT)1
#define IFED_REG_AUTO (UINT)2
#define IFED_REG_GRAMMAR (UINT)4
#define IFED_REG_ALL (UINT)7
#define IFED_TYPE_NONE (UINT)0
#define IFED_TYPE_GENERAL (UINT)1
#define IFED_TYPE_NAMEPLACE (UINT)2
#define IFED_TYPE_SPEECH (UINT)4
#define IFED_TYPE_REVERSE (UINT)8
#define IFED_TYPE_ENGLISH (UINT)16
#define IFED_TYPE_ALL (UINT)31
#define IFED_S_MORE_ENTRIES (HRESULT)(INT)291328
#define IFED_S_EMPTY_DICTIONARY (HRESULT)(INT)291329
#define IFED_S_WORD_EXISTS (HRESULT)(INT)291330
#define IFED_S_COMMENT_CHANGED (HRESULT)(INT)291331
#define IFED_E_NOT_FOUND (HRESULT)(INT)-2147192064
#define IFED_E_INVALID_FORMAT (HRESULT)(INT)-2147192063
#define IFED_E_OPEN_FAILED (HRESULT)(INT)-2147192062
#define IFED_E_WRITE_FAILED (HRESULT)(INT)-2147192061
#define IFED_E_NO_ENTRY (HRESULT)(INT)-2147192060
#define IFED_E_REGISTER_FAILED (HRESULT)(INT)-2147192059
#define IFED_E_NOT_USER_DIC (HRESULT)(INT)-2147192058
#define IFED_E_NOT_SUPPORTED (HRESULT)(INT)-2147192057
#define IFED_E_USER_COMMENT (HRESULT)(INT)-2147192056
#define IFED_E_REGISTER_ILLEGAL_POS (HRESULT)(INT)-2147192055
#define IFED_E_REGISTER_IMPROPER_WORD (HRESULT)(INT)-2147192054
#define IFED_E_REGISTER_DISCONNECTED (HRESULT)(INT)-2147192053
#define POS_UNDEFINED (UINT)0
#define JPOS_MEISHI_FUTSU (UINT)100
#define JPOS_MEISHI_SAHEN (UINT)101
#define JPOS_MEISHI_ZAHEN (UINT)102
#define JPOS_MEISHI_KEIYOUDOUSHI (UINT)103
#define JPOS_HUKUSIMEISHI (UINT)104
#define JPOS_MEISA_KEIDOU (UINT)105
#define JPOS_JINMEI (UINT)106
#define JPOS_JINMEI_SEI (UINT)107
#define JPOS_JINMEI_MEI (UINT)108
#define JPOS_CHIMEI (UINT)109
#define JPOS_CHIMEI_KUNI (UINT)110
#define JPOS_CHIMEI_KEN (UINT)111
#define JPOS_CHIMEI_GUN (UINT)112
#define JPOS_CHIMEI_KU (UINT)113
#define JPOS_CHIMEI_SHI (UINT)114
#define JPOS_CHIMEI_MACHI (UINT)115
#define JPOS_CHIMEI_MURA (UINT)116
#define JPOS_CHIMEI_EKI (UINT)117
#define JPOS_SONOTA (UINT)118
#define JPOS_SHAMEI (UINT)119
#define JPOS_SOSHIKI (UINT)120
#define JPOS_KENCHIKU (UINT)121
#define JPOS_BUPPIN (UINT)122
#define JPOS_DAIMEISHI (UINT)123
#define JPOS_DAIMEISHI_NINSHOU (UINT)124
#define JPOS_DAIMEISHI_SHIJI (UINT)125
#define JPOS_KAZU (UINT)126
#define JPOS_KAZU_SURYOU (UINT)127
#define JPOS_KAZU_SUSHI (UINT)128
#define JPOS_5DAN_AWA (UINT)200
#define JPOS_5DAN_KA (UINT)201
#define JPOS_5DAN_GA (UINT)202
#define JPOS_5DAN_SA (UINT)203
#define JPOS_5DAN_TA (UINT)204
#define JPOS_5DAN_NA (UINT)205
#define JPOS_5DAN_BA (UINT)206
#define JPOS_5DAN_MA (UINT)207
#define JPOS_5DAN_RA (UINT)208
#define JPOS_5DAN_AWAUON (UINT)209
#define JPOS_5DAN_KASOKUON (UINT)210
#define JPOS_5DAN_RAHEN (UINT)211
#define JPOS_4DAN_HA (UINT)212
#define JPOS_1DAN (UINT)213
#define JPOS_TOKUSHU_KAHEN (UINT)214
#define JPOS_TOKUSHU_SAHENSURU (UINT)215
#define JPOS_TOKUSHU_SAHEN (UINT)216
#define JPOS_TOKUSHU_ZAHEN (UINT)217
#define JPOS_TOKUSHU_NAHEN (UINT)218
#define JPOS_KURU_KI (UINT)219
#define JPOS_KURU_KITA (UINT)220
#define JPOS_KURU_KITARA (UINT)221
#define JPOS_KURU_KITARI (UINT)222
#define JPOS_KURU_KITAROU (UINT)223
#define JPOS_KURU_KITE (UINT)224
#define JPOS_KURU_KUREBA (UINT)225
#define JPOS_KURU_KO (UINT)226
#define JPOS_KURU_KOI (UINT)227
#define JPOS_KURU_KOYOU (UINT)228
#define JPOS_SURU_SA (UINT)229
#define JPOS_SURU_SI (UINT)230
#define JPOS_SURU_SITA (UINT)231
#define JPOS_SURU_SITARA (UINT)232
#define JPOS_SURU_SIATRI (UINT)233
#define JPOS_SURU_SITAROU (UINT)234
#define JPOS_SURU_SITE (UINT)235
#define JPOS_SURU_SIYOU (UINT)236
#define JPOS_SURU_SUREBA (UINT)237
#define JPOS_SURU_SE (UINT)238
#define JPOS_SURU_SEYO (UINT)239
#define JPOS_KEIYOU (UINT)300
#define JPOS_KEIYOU_GARU (UINT)301
#define JPOS_KEIYOU_GE (UINT)302
#define JPOS_KEIYOU_ME (UINT)303
#define JPOS_KEIYOU_YUU (UINT)304
#define JPOS_KEIYOU_U (UINT)305
#define JPOS_KEIDOU (UINT)400
#define JPOS_KEIDOU_NO (UINT)401
#define JPOS_KEIDOU_TARU (UINT)402
#define JPOS_KEIDOU_GARU (UINT)403
#define JPOS_FUKUSHI (UINT)500
#define JPOS_FUKUSHI_SAHEN (UINT)501
#define JPOS_FUKUSHI_NI (UINT)502
#define JPOS_FUKUSHI_NANO (UINT)503
#define JPOS_FUKUSHI_DA (UINT)504
#define JPOS_FUKUSHI_TO (UINT)505
#define JPOS_FUKUSHI_TOSURU (UINT)506
#define JPOS_RENTAISHI (UINT)600
#define JPOS_RENTAISHI_SHIJI (UINT)601
#define JPOS_SETSUZOKUSHI (UINT)650
#define JPOS_KANDOUSHI (UINT)670
#define JPOS_SETTOU (UINT)700
#define JPOS_SETTOU_KAKU (UINT)701
#define JPOS_SETTOU_SAI (UINT)702
#define JPOS_SETTOU_FUKU (UINT)703
#define JPOS_SETTOU_MI (UINT)704
#define JPOS_SETTOU_DAISHOU (UINT)705
#define JPOS_SETTOU_KOUTEI (UINT)706
#define JPOS_SETTOU_CHOUTAN (UINT)707
#define JPOS_SETTOU_SHINKYU (UINT)708
#define JPOS_SETTOU_JINMEI (UINT)709
#define JPOS_SETTOU_CHIMEI (UINT)710
#define JPOS_SETTOU_SONOTA (UINT)711
#define JPOS_SETTOU_JOSUSHI (UINT)712
#define JPOS_SETTOU_TEINEI_O (UINT)713
#define JPOS_SETTOU_TEINEI_GO (UINT)714
#define JPOS_SETTOU_TEINEI_ON (UINT)715
#define JPOS_SETSUBI (UINT)800
#define JPOS_SETSUBI_TEKI (UINT)801
#define JPOS_SETSUBI_SEI (UINT)802
#define JPOS_SETSUBI_KA (UINT)803
#define JPOS_SETSUBI_CHU (UINT)804
#define JPOS_SETSUBI_FU (UINT)805
#define JPOS_SETSUBI_RYU (UINT)806
#define JPOS_SETSUBI_YOU (UINT)807
#define JPOS_SETSUBI_KATA (UINT)808
#define JPOS_SETSUBI_MEISHIRENDAKU (UINT)809
#define JPOS_SETSUBI_JINMEI (UINT)810
#define JPOS_SETSUBI_CHIMEI (UINT)811
#define JPOS_SETSUBI_KUNI (UINT)812
#define JPOS_SETSUBI_KEN (UINT)813
#define JPOS_SETSUBI_GUN (UINT)814
#define JPOS_SETSUBI_KU (UINT)815
#define JPOS_SETSUBI_SHI (UINT)816
#define JPOS_SETSUBI_MACHI (UINT)817
#define JPOS_SETSUBI_CHOU (UINT)818
#define JPOS_SETSUBI_MURA (UINT)819
#define JPOS_SETSUBI_SON (UINT)820
#define JPOS_SETSUBI_EKI (UINT)821
#define JPOS_SETSUBI_SONOTA (UINT)822
#define JPOS_SETSUBI_SHAMEI (UINT)823
#define JPOS_SETSUBI_SOSHIKI (UINT)824
#define JPOS_SETSUBI_KENCHIKU (UINT)825
#define JPOS_RENYOU_SETSUBI (UINT)826
#define JPOS_SETSUBI_JOSUSHI (UINT)827
#define JPOS_SETSUBI_JOSUSHIPLUS (UINT)828
#define JPOS_SETSUBI_JIKAN (UINT)829
#define JPOS_SETSUBI_JIKANPLUS (UINT)830
#define JPOS_SETSUBI_TEINEI (UINT)831
#define JPOS_SETSUBI_SAN (UINT)832
#define JPOS_SETSUBI_KUN (UINT)833
#define JPOS_SETSUBI_SAMA (UINT)834
#define JPOS_SETSUBI_DONO (UINT)835
#define JPOS_SETSUBI_FUKUSU (UINT)836
#define JPOS_SETSUBI_TACHI (UINT)837
#define JPOS_SETSUBI_RA (UINT)838
#define JPOS_TANKANJI (UINT)900
#define JPOS_TANKANJI_KAO (UINT)901
#define JPOS_KANYOUKU (UINT)902
#define JPOS_DOKURITSUGO (UINT)903
#define JPOS_FUTEIGO (UINT)904
#define JPOS_KIGOU (UINT)905
#define JPOS_EIJI (UINT)906
#define JPOS_KUTEN (UINT)907
#define JPOS_TOUTEN (UINT)908
#define JPOS_KANJI (UINT)909
#define JPOS_OPENBRACE (UINT)910
#define JPOS_CLOSEBRACE (UINT)911
#define JPOS_YOKUSEI (UINT)912
#define JPOS_TANSHUKU (UINT)913
#define VERSION_ID_JAPANESE (UINT)16777216
#define VERSION_ID_KOREAN (UINT)33554432
#define VERSION_ID_CHINESE_TRADITIONAL (UINT)67108864
#define VERSION_ID_CHINESE_SIMPLIFIED (UINT)134217728
#define FID_MSIME_VERSION (UINT)0
#define VERSION_MOUSE_OPERATION (UINT)1
#define IMEMOUSERET_NOTHANDLED (INT)-1
#define IMEMOUSE_VERSION (UINT)255
#define IMEMOUSE_NONE (UINT)0
#define IMEMOUSE_LDOWN (UINT)1
#define IMEMOUSE_RDOWN (UINT)2
#define IMEMOUSE_MDOWN (UINT)4
#define IMEMOUSE_WUP (UINT)16
#define IMEMOUSE_WDOWN (UINT)32
#define FID_RECONVERT_VERSION (UINT)268435456
#define VERSION_RECONVERSION (UINT)1
#define VERSION_DOCUMENTFEED (UINT)1
#define VERSION_QUERYPOSITION (UINT)1
#define VERSION_MODEBIAS (UINT)1
#define MODEBIAS_GETVERSION (UINT)0
#define MODEBIAS_SETVALUE (UINT)1
#define MODEBIAS_GETVALUE (UINT)2
#define MODEBIASMODE_DEFAULT (UINT)0
#define MODEBIASMODE_FILENAME (UINT)1
#define MODEBIASMODE_READING (UINT)2
#define MODEBIASMODE_DIGIT (UINT)4
#define SHOWIMEPAD_DEFAULT (UINT)0
#define SHOWIMEPAD_CATEGORY (UINT)1
#define SHOWIMEPAD_GUID (UINT)2
#define FID_MSIME_KMS_VERSION (UINT)1
#define FID_MSIME_KMS_INIT (UINT)2
#define FID_MSIME_KMS_TERM (UINT)3
#define FID_MSIME_KMS_DEL_KEYLIST (UINT)4
#define FID_MSIME_KMS_NOTIFY (UINT)5
#define FID_MSIME_KMS_GETMAP (UINT)6
#define FID_MSIME_KMS_INVOKE (UINT)7
#define FID_MSIME_KMS_SETMAP (UINT)8
#define FID_MSIME_KMS_FUNCDESC (UINT)9
#define FID_MSIME_KMS_GETMAPSEAMLESS (UINT)10
#define FID_MSIME_KMS_GETMAPFAST (UINT)11
#define IMEKMS_NOCOMPOSITION (UINT)0
#define IMEKMS_COMPOSITION (UINT)1
#define IMEKMS_SELECTION (UINT)2
#define IMEKMS_IMEOFF (UINT)3
#define IMEKMS_2NDLEVEL (UINT)4
#define IMEKMS_INPTGL (UINT)5
#define IMEKMS_CANDIDATE (UINT)6
#define IMEKMS_TYPECAND (UINT)7
#define RECONVOPT_NONE (UINT)0
#define RECONVOPT_USECANCELNOTIFY (UINT)1
#define GCSEX_CANCELRECONVERT (UINT)268435456
#define STYLE_DESCRIPTION_SIZE (UINT)32
#define IMEMENUITEM_STRING_SIZE (UINT)80
#define IMC_GETCANDIDATEPOS (UINT)7
#define IMC_SETCANDIDATEPOS (UINT)8
#define IMC_GETCOMPOSITIONFONT (UINT)9
#define IMC_SETCOMPOSITIONFONT (UINT)10
#define IMC_GETCOMPOSITIONWINDOW (UINT)11
#define IMC_SETCOMPOSITIONWINDOW (UINT)12
#define IMC_GETSTATUSWINDOWPOS (UINT)15
#define IMC_SETSTATUSWINDOWPOS (UINT)16
#define IMC_CLOSESTATUSWINDOW (UINT)33
#define IMC_OPENSTATUSWINDOW (UINT)34
#define NI_FINALIZECONVERSIONRESULT (UINT)20
#define ISC_SHOWUICANDIDATEWINDOW (UINT)1
#define ISC_SHOWUICOMPOSITIONWINDOW (UINT)2147483648
#define ISC_SHOWUIGUIDELINE (UINT)1073741824
#define ISC_SHOWUIALLCANDIDATEWINDOW (UINT)15
#define ISC_SHOWUIALL (UINT)3221225487
#define MOD_LEFT (UINT)32768
#define MOD_RIGHT (UINT)16384
#define MOD_ON_KEYUP (UINT)2048
#define MOD_IGNORE_ALL_MODIFIER (UINT)1024
#define IME_CHOTKEY_IME_NONIME_TOGGLE (UINT)16
#define IME_CHOTKEY_SHAPE_TOGGLE (UINT)17
#define IME_CHOTKEY_SYMBOL_TOGGLE (UINT)18
#define IME_JHOTKEY_CLOSE_OPEN (UINT)48
#define IME_KHOTKEY_SHAPE_TOGGLE (UINT)80
#define IME_KHOTKEY_HANJACONVERT (UINT)81
#define IME_KHOTKEY_ENGLISH (UINT)82
#define IME_THOTKEY_IME_NONIME_TOGGLE (UINT)112
#define IME_THOTKEY_SHAPE_TOGGLE (UINT)113
#define IME_THOTKEY_SYMBOL_TOGGLE (UINT)114
#define IME_HOTKEY_DSWITCH_FIRST (UINT)256
#define IME_HOTKEY_DSWITCH_LAST (UINT)287
#define IME_HOTKEY_PRIVATE_FIRST (UINT)512
#define IME_ITHOTKEY_RESEND_RESULTSTR (UINT)512
#define IME_ITHOTKEY_PREVIOUS_COMPOSITION (UINT)513
#define IME_ITHOTKEY_UISTYLE_TOGGLE (UINT)514
#define IME_ITHOTKEY_RECONVERTSTRING (UINT)515
#define IME_HOTKEY_PRIVATE_LAST (UINT)543
#define GCS_COMPREADSTR (UINT)1
#define GCS_COMPREADATTR (UINT)2
#define GCS_COMPREADCLAUSE (UINT)4
#define GCS_COMPSTR (UINT)8
#define GCS_COMPATTR (UINT)16
#define GCS_COMPCLAUSE (UINT)32
#define GCS_CURSORPOS (UINT)128
#define GCS_DELTASTART (UINT)256
#define GCS_RESULTREADSTR (UINT)512
#define GCS_RESULTREADCLAUSE (UINT)1024
#define GCS_RESULTSTR (UINT)2048
#define GCS_RESULTCLAUSE (UINT)4096
#define CS_INSERTCHAR (UINT)8192
#define CS_NOMOVECARET (UINT)16384
#define IMEVER_0310 (UINT)196618
#define IMEVER_0400 (UINT)262144
#define IME_PROP_AT_CARET (UINT)65536
#define IME_PROP_SPECIAL_UI (UINT)131072
#define IME_PROP_CANDLIST_START_FROM_1 (UINT)262144
#define IME_PROP_UNICODE (UINT)524288
#define IME_PROP_COMPLETE_ON_UNSELECT (UINT)1048576
#define UI_CAP_2700 (UINT)1
#define UI_CAP_ROT90 (UINT)2
#define UI_CAP_ROTANY (UINT)4
#define SCS_CAP_COMPSTR (UINT)1
#define SCS_CAP_MAKEREAD (UINT)2
#define SCS_CAP_SETRECONVERTSTRING (UINT)4
#define SELECT_CAP_CONVERSION (UINT)1
#define SELECT_CAP_SENTENCE (UINT)2
#define GL_LEVEL_NOGUIDELINE (UINT)0
#define GL_LEVEL_FATAL (UINT)1
#define GL_LEVEL_ERROR (UINT)2
#define GL_LEVEL_WARNING (UINT)3
#define GL_LEVEL_INFORMATION (UINT)4
#define GL_ID_UNKNOWN (UINT)0
#define GL_ID_NOMODULE (UINT)1
#define GL_ID_NODICTIONARY (UINT)16
#define GL_ID_CANNOTSAVE (UINT)17
#define GL_ID_NOCONVERT (UINT)32
#define GL_ID_TYPINGERROR (UINT)33
#define GL_ID_TOOMANYSTROKE (UINT)34
#define GL_ID_READINGCONFLICT (UINT)35
#define GL_ID_INPUTREADING (UINT)36
#define GL_ID_INPUTRADICAL (UINT)37
#define GL_ID_INPUTCODE (UINT)38
#define GL_ID_INPUTSYMBOL (UINT)39
#define GL_ID_CHOOSECANDIDATE (UINT)40
#define GL_ID_REVERSECONVERSION (UINT)41
#define GL_ID_PRIVATE_FIRST (UINT)32768
#define GL_ID_PRIVATE_LAST (UINT)65535
#define ATTR_INPUT (UINT)0
#define ATTR_TARGET_CONVERTED (UINT)1
#define ATTR_CONVERTED (UINT)2
#define ATTR_TARGET_NOTCONVERTED (UINT)3
#define ATTR_INPUT_ERROR (UINT)4
#define ATTR_FIXEDCONVERTED (UINT)5
#define CFS_DEFAULT (UINT)0
#define CFS_RECT (UINT)1
#define CFS_POINT (UINT)2
#define CFS_FORCE_POSITION (UINT)32
#define CFS_CANDIDATEPOS (UINT)64
#define CFS_EXCLUDE (UINT)128
#define IME_CMODE_SOFTKBD (UINT)128
#define IME_CMODE_NOCONVERSION (UINT)256
#define IME_CMODE_EUDC (UINT)512
#define IME_CMODE_SYMBOL (UINT)1024
#define IME_CMODE_FIXED (UINT)2048
#define IME_CMODE_RESERVED (UINT)4026531840
#define IME_SMODE_NONE (UINT)0
#define IME_SMODE_PLAURALCLAUSE (UINT)1
#define IME_SMODE_SINGLECONVERT (UINT)2
#define IME_SMODE_AUTOMATIC (UINT)4
#define IME_SMODE_PHRASEPREDICT (UINT)8
#define IME_SMODE_CONVERSATION (UINT)16
#define IME_SMODE_RESERVED (UINT)61440
#define IME_CAND_UNKNOWN (UINT)0
#define IME_CAND_READ (UINT)1
#define IME_CAND_CODE (UINT)2
#define IME_CAND_MEANING (UINT)3
#define IME_CAND_RADICAL (UINT)4
#define IME_CAND_STROKE (UINT)5
#define IMN_CLOSESTATUSWINDOW (UINT)1
#define IMN_OPENSTATUSWINDOW (UINT)2
#define IMN_CHANGECANDIDATE (UINT)3
#define IMN_CLOSECANDIDATE (UINT)4
#define IMN_OPENCANDIDATE (UINT)5
#define IMN_SETCONVERSIONMODE (UINT)6
#define IMN_SETSENTENCEMODE (UINT)7
#define IMN_SETOPENSTATUS (UINT)8
#define IMN_SETCANDIDATEPOS (UINT)9
#define IMN_SETCOMPOSITIONFONT (UINT)10
#define IMN_SETCOMPOSITIONWINDOW (UINT)11
#define IMN_SETSTATUSWINDOWPOS (UINT)12
#define IMN_GUIDELINE (UINT)13
#define IMN_PRIVATE (UINT)14
#define IMR_COMPOSITIONWINDOW (UINT)1
#define IMR_CANDIDATEWINDOW (UINT)2
#define IMR_COMPOSITIONFONT (UINT)3
#define IMR_RECONVERTSTRING (UINT)4
#define IMR_CONFIRMRECONVERTSTRING (UINT)5
#define IMR_QUERYCHARPOSITION (UINT)6
#define IMR_DOCUMENTFEED (UINT)7
#define IMM_ERROR_NODATA (INT)-1
#define IMM_ERROR_GENERAL (INT)-2
#define IME_CONFIG_GENERAL (UINT)1
#define IME_CONFIG_REGISTERWORD (UINT)2
#define IME_CONFIG_SELECTDICTIONARY (UINT)3
#define IME_ESC_QUERY_SUPPORT (UINT)3
#define IME_ESC_RESERVED_FIRST (UINT)4
#define IME_ESC_RESERVED_LAST (UINT)2047
#define IME_ESC_PRIVATE_FIRST (UINT)2048
#define IME_ESC_PRIVATE_LAST (UINT)4095
#define IME_ESC_SEQUENCE_TO_INTERNAL (UINT)4097
#define IME_ESC_GET_EUDC_DICTIONARY (UINT)4099
#define IME_ESC_SET_EUDC_DICTIONARY (UINT)4100
#define IME_ESC_MAX_KEY (UINT)4101
#define IME_ESC_IME_NAME (UINT)4102
#define IME_ESC_SYNC_HOTKEY (UINT)4103
#define IME_ESC_HANJA_MODE (UINT)4104
#define IME_ESC_AUTOMATA (UINT)4105
#define IME_ESC_PRIVATE_HOTKEY (UINT)4106
#define IME_ESC_GETHELPFILENAME (UINT)4107
#define IME_REGWORD_STYLE_EUDC (UINT)1
#define IME_REGWORD_STYLE_USER_FIRST (UINT)2147483648
#define IME_REGWORD_STYLE_USER_LAST (UINT)4294967295
#define IACE_CHILDREN (UINT)1
#define IACE_DEFAULT (UINT)16
#define IACE_IGNORENOCONTEXT (UINT)32
#define IGIMIF_RIGHTMENU (UINT)1
#define IGIMII_CMODE (UINT)1
#define IGIMII_SMODE (UINT)2
#define IGIMII_CONFIGURE (UINT)4
#define IGIMII_TOOLS (UINT)8
#define IGIMII_HELP (UINT)16
#define IGIMII_OTHER (UINT)32
#define IGIMII_INPUTTOOLS (UINT)64
#define IMFT_RADIOCHECK (UINT)1
#define IMFT_SEPARATOR (UINT)2
#define IMFT_SUBMENU (UINT)4
#define SOFTKEYBOARD_TYPE_T1 (UINT)1
#define SOFTKEYBOARD_TYPE_C1 (UINT)2
#define IMMGWL_IMC (UINT)0
#define IMMGWLP_IMC (UINT)0
#define IMC_SETCONVERSIONMODE (UINT)2
#define IMC_SETSENTENCEMODE (UINT)4
#define IMC_SETOPENSTATUS (UINT)6
#define IMC_GETSOFTKBDFONT (UINT)17
#define IMC_SETSOFTKBDFONT (UINT)18
#define IMC_GETSOFTKBDPOS (UINT)19
#define IMC_SETSOFTKBDPOS (UINT)20
#define IMC_GETSOFTKBDSUBTYPE (UINT)21
#define IMC_SETSOFTKBDSUBTYPE (UINT)22
#define IMC_SETSOFTKBDDATA (UINT)24
#define NI_CONTEXTUPDATED (UINT)3
#define IME_SYSINFO_WINLOGON (UINT)1
#define IME_SYSINFO_WOW16 (UINT)2
#define INIT_STATUSWNDPOS (UINT)1
#define INIT_CONVERSION (UINT)2
#define INIT_SENTENCE (UINT)4
#define INIT_LOGFONT (UINT)8
#define INIT_COMPFORM (UINT)16
#define INIT_SOFTKBDPOS (UINT)32
#define IME_PROP_END_UNLOAD (UINT)1
#define IME_PROP_KBD_CHAR_FIRST (UINT)2
#define IME_PROP_IGNORE_UPKEYS (UINT)4
#define IME_PROP_NEED_ALTKEY (UINT)8
#define IME_PROP_NO_KEYS_ON_CLOSE (UINT)16
#define IME_PROP_ACCEPT_WIDE_VKEY (UINT)32
#define UI_CAP_SOFTKBD (UINT)65536
#define IMN_SOFTKBDDESTROYED (UINT)17
#define IME_UI_CLASS_NAME_SIZE (UINT)16
#define IME_ESC_STRING_BUFFER_SIZE (UINT)80
#define CATID_MSIME_IImePadApplet_VER7 GUID { "4a0f8e31-c3ee-11d1-afef-00805f0c8b6d" }
#define CATID_MSIME_IImePadApplet_VER80 GUID { "56f7a792-fef1-11d3-8463-00c04f7a06e5" }
#define CATID_MSIME_IImePadApplet_VER81 GUID { "656520b0-bb88-11d4-84c0-00c04f7a06e5" }
#define CATID_MSIME_IImePadApplet900 GUID { "faae51bf-5e5b-4a1d-8de1-17c1d9e1728d" }
#define CATID_MSIME_IImePadApplet1000 GUID { "e081e1d6-2389-43cb-b66f-609f823d9f9c" }
#define CATID_MSIME_IImePadApplet1200 GUID { "a47fb5fc-7d15-4223-a789-b781bf9ae667" }
#define CATID_MSIME_IImePadApplet GUID { "7566cad1-4ec9-4478-9fe9-8ed766619edf" }
#define FEID_NONE (UINT)0
#define FEID_CHINESE_TRADITIONAL (UINT)1
#define FEID_CHINESE_SIMPLIFIED (UINT)2
#define FEID_CHINESE_HONGKONG (UINT)3
#define FEID_CHINESE_SINGAPORE (UINT)4
#define FEID_JAPANESE (UINT)5
#define FEID_KOREAN (UINT)6
#define FEID_KOREAN_JOHAB (UINT)7
#define INFOMASK_NONE (UINT)0
#define INFOMASK_QUERY_CAND (UINT)1
#define INFOMASK_APPLY_CAND (UINT)2
#define INFOMASK_APPLY_CAND_EX (UINT)4
#define INFOMASK_STRING_FIX (UINT)65536
#define INFOMASK_HIDE_CAND (UINT)131072
#define INFOMASK_BLOCK_CAND (UINT)262144
#define IMEFAREASTINFO_TYPE_DEFAULT (UINT)0
#define IMEFAREASTINFO_TYPE_READING (UINT)1
#define IMEFAREASTINFO_TYPE_COMMENT (UINT)2
#define IMEFAREASTINFO_TYPE_COSTTIME (UINT)3
#define CHARINFO_APPLETID_MASK (UINT)4278190080
#define CHARINFO_FEID_MASK (UINT)15728640
#define CHARINFO_CHARID_MASK (UINT)65535
#define MAX_APPLETTITLE (UINT)64
#define MAX_FONTFACE (UINT)32
#define IPACFG_NONE (INT)0
#define IPACFG_PROPERTY (INT)1
#define IPACFG_HELP (INT)2
#define IPACFG_TITLE (INT)65536
#define IPACFG_TITLEFONTFACE (INT)131072
#define IPACFG_CATEGORY (INT)262144
#define IPACFG_LANG (INT)16
#define IPACID_NONE (UINT)0
#define IPACID_SOFTKEY (UINT)1
#define IPACID_HANDWRITING (UINT)2
#define IPACID_STROKESEARCH (UINT)3
#define IPACID_RADICALSEARCH (UINT)4
#define IPACID_SYMBOLSEARCH (UINT)5
#define IPACID_VOICE (UINT)6
#define IPACID_EPWING (UINT)7
#define IPACID_OCR (UINT)8
#define IPACID_CHARLIST (UINT)9
#define IPACID_USER (UINT)256
#define IMEPADREQ_FIRST (UINT)4096
#define IMEPADREQ_INSERTSTRINGCANDIDATE (UINT)4098
#define IMEPADREQ_INSERTITEMCANDIDATE (UINT)4099
#define IMEPADREQ_SENDKEYCONTROL (UINT)4101
#define IMEPADREQ_GETSELECTEDSTRING (UINT)4103
#define IMEPADREQ_SETAPPLETDATA (UINT)4105
#define IMEPADREQ_GETAPPLETDATA (UINT)4106
#define IMEPADREQ_SETTITLEFONT (UINT)4107
#define IMEPADREQ_GETCOMPOSITIONSTRINGID (UINT)4109
#define IMEPADREQ_INSERTSTRINGCANDIDATEINFO (UINT)4110
#define IMEPADREQ_CHANGESTRINGCANDIDATEINFO (UINT)4111
#define IMEPADREQ_INSERTSTRINGINFO (UINT)4114
#define IMEPADREQ_CHANGESTRINGINFO (UINT)4115
#define IMEPADREQ_GETCURRENTUILANGID (UINT)4120
#define IMEPADCTRL_CONVERTALL (UINT)1
#define IMEPADCTRL_DETERMINALL (UINT)2
#define IMEPADCTRL_DETERMINCHAR (UINT)3
#define IMEPADCTRL_CLEARALL (UINT)4
#define IMEPADCTRL_CARETSET (UINT)5
#define IMEPADCTRL_CARETLEFT (UINT)6
#define IMEPADCTRL_CARETRIGHT (UINT)7
#define IMEPADCTRL_CARETTOP (UINT)8
#define IMEPADCTRL_CARETBOTTOM (UINT)9
#define IMEPADCTRL_CARETBACKSPACE (UINT)10
#define IMEPADCTRL_CARETDELETE (UINT)11
#define IMEPADCTRL_PHRASEDELETE (UINT)12
#define IMEPADCTRL_INSERTSPACE (UINT)13
#define IMEPADCTRL_INSERTFULLSPACE (UINT)14
#define IMEPADCTRL_INSERTHALFSPACE (UINT)15
#define IMEPADCTRL_ONIME (UINT)16
#define IMEPADCTRL_OFFIME (UINT)17
#define IMEPADCTRL_ONPRECONVERSION (UINT)18
#define IMEPADCTRL_OFFPRECONVERSION (UINT)19
#define IMEPADCTRL_PHONETICCANDIDATE (UINT)20
#define IMEKEYCTRLMASK_ALT (UINT)1
#define IMEKEYCTRLMASK_CTRL (UINT)2
#define IMEKEYCTRLMASK_SHIFT (UINT)4
#define IMEKEYCTRL_UP (UINT)1
#define IMEKEYCTRL_DOWN (UINT)0
#define IMEPN_FIRST (UINT)256
#define IMEPN_ACTIVATE (UINT)257
#define IMEPN_INACTIVATE (UINT)258
#define IMEPN_SHOW (UINT)260
#define IMEPN_HIDE (UINT)261
#define IMEPN_SIZECHANGING (UINT)262
#define IMEPN_SIZECHANGED (UINT)263
#define IMEPN_CONFIG (UINT)264
#define IMEPN_HELP (UINT)265
#define IMEPN_QUERYCAND (UINT)266
#define IMEPN_APPLYCAND (UINT)267
#define IMEPN_APPLYCANDEX (UINT)268
#define IMEPN_SETTINGCHANGED (UINT)269
#define IMEPN_USER (UINT)356
#define IPAWS_ENABLED (INT)1
#define IPAWS_SIZINGNOTIFY (INT)4
#define IPAWS_VERTICALFIXED (INT)256
#define IPAWS_HORIZONTALFIXED (INT)512
#define IPAWS_SIZEFIXED (INT)768
#define IPAWS_MAXWIDTHFIXED (INT)4096
#define IPAWS_MAXHEIGHTFIXED (INT)8192
#define IPAWS_MAXSIZEFIXED (INT)12288
#define IPAWS_MINWIDTHFIXED (INT)65536
#define IPAWS_MINHEIGHTFIXED (INT)131072
#define IPAWS_MINSIZEFIXED (INT)196608
#define CLSID_ImePlugInDictDictionaryList_CHS GUID { "7bf0129b-5bef-4de4-9b0b-5edb66ac2fa6" }
#define CLSID_ImePlugInDictDictionaryList_JPN GUID { "4fe2776b-b0f9-4396-b5fc-e9d4cf1ec195" }
#define SCRIPT_UNDEFINED (UINT)0
#define USP_E_SCRIPT_NOT_IN_FONT (HRESULT)(INT)-2147220992
#define SGCM_RTL (UINT)1
#define SSA_PASSWORD (UINT)1
#define SSA_TAB (UINT)2
#define SSA_CLIP (UINT)4
#define SSA_FIT (UINT)8
#define SSA_DZWG (UINT)16
#define SSA_FALLBACK (UINT)32
#define SSA_BREAK (UINT)64
#define SSA_GLYPHS (UINT)128
#define SSA_RTL (UINT)256
#define SSA_GCP (UINT)512
#define SSA_HOTKEY (UINT)1024
#define SSA_METAFILE (UINT)2048
#define SSA_LINK (UINT)4096
#define SSA_HIDEHOTKEY (UINT)8192
#define SSA_HOTKEYONLY (UINT)9216
#define SSA_FULLMEASURE (UINT)67108864
#define SSA_LPKANSIFALLBACK (UINT)134217728
#define SSA_PIDX (UINT)268435456
#define SSA_LAYOUTRTL (UINT)536870912
#define SSA_DONTGLYPH (UINT)1073741824
#define SSA_NOKASHIDA (UINT)2147483648
#define SCRIPT_DIGITSUBSTITUTE_CONTEXT (UINT)0
#define SCRIPT_DIGITSUBSTITUTE_NONE (UINT)1
#define SCRIPT_DIGITSUBSTITUTE_NATIONAL (UINT)2
#define SCRIPT_DIGITSUBSTITUTE_TRADITIONAL (UINT)3
#define UNISCRIBE_OPENTYPE (UINT)256
#define SCRIPT_TAG_UNKNOWN (UINT)0
#define MUI_LANGUAGE_EXACT (UINT)16
#define NLS_CP_CPINFO (UINT)268435456
#define NLS_CP_MBTOWC (UINT)1073741824
#define NLS_CP_WCTOMB (UINT)2147483648
#define U_DISABLE_RENAMING (UINT)1
#define U_SHOW_CPLUSPLUS_API (UINT)0
#define U_DEFAULT_SHOW_DRAFT (UINT)0
#define U_HIDE_DRAFT_API (UINT)1
#define U_HIDE_DEPRECATED_API (UINT)1
#define U_HIDE_OBSOLETE_API (UINT)1
#define U_HIDE_INTERNAL_API (UINT)1
#define U_NO_DEFAULT_INCLUDE_UTF_HEADERS (UINT)1
#define UCLN_NO_AUTO_CLEANUP (UINT)1
#define U_OVERRIDE_CXX_ALLOCATION (UINT)1
#define U_ENABLE_TRACING (UINT)0
#define UCONFIG_ENABLE_PLUGINS (UINT)0
#define U_ENABLE_DYLOAD (UINT)1
#define U_CHECK_DYLOAD (UINT)1
#define U_PF_UNKNOWN (UINT)0
#define U_PF_WINDOWS (UINT)1000
#define U_PF_MINGW (UINT)1800
#define U_PF_CYGWIN (UINT)1900
#define U_PF_HPUX (UINT)2100
#define U_PF_SOLARIS (UINT)2600
#define U_PF_BSD (UINT)3000
#define U_PF_AIX (UINT)3100
#define U_PF_IRIX (UINT)3200
#define U_PF_DARWIN (UINT)3500
#define U_PF_IPHONE (UINT)3550
#define U_PF_QNX (UINT)3700
#define U_PF_LINUX (UINT)4000
#define U_PF_BROWSER_NATIVE_CLIENT (UINT)4020
#define U_PF_ANDROID (UINT)4050
#define U_PF_FUCHSIA (UINT)4100
#define U_PF_OS390 (UINT)9000
#define U_PF_OS400 (UINT)9400
#define U_ASCII_FAMILY (UINT)0
#define U_EBCDIC_FAMILY (UINT)1
#define U_SIZEOF_UCHAR (UINT)2
#define U_SENTINEL (INT)-1
#define U8_MAX_LENGTH (UINT)4
#define U16_MAX_LENGTH (UINT)2
#define UTF_SIZE (UINT)16
#define UTF8_ERROR_VALUE_1 (UINT)21
#define UTF8_ERROR_VALUE_2 (UINT)159
#define UTF_ERROR_VALUE (UINT)65535
#define UTF8_MAX_CHAR_LENGTH (UINT)4
#define UTF16_MAX_CHAR_LENGTH (UINT)2
#define UTF32_MAX_CHAR_LENGTH (UINT)1
#define U_COPYRIGHT_STRING_LENGTH (UINT)128
#define U_MAX_VERSION_LENGTH (UINT)4
#define U_MAX_VERSION_STRING_LENGTH (UINT)20
#define U_MILLIS_PER_SECOND (UINT)1000
#define U_MILLIS_PER_MINUTE (UINT)60000
#define U_MILLIS_PER_HOUR (UINT)3600000
#define U_MILLIS_PER_DAY (UINT)86400000
#define U_COMBINED_IMPLEMENTATION (UINT)1
#define U_SHAPE_LENGTH_GROW_SHRINK (UINT)0
#define U_SHAPE_LAMALEF_RESIZE (UINT)0
#define U_SHAPE_LENGTH_FIXED_SPACES_NEAR (UINT)1
#define U_SHAPE_LAMALEF_NEAR (UINT)1
#define U_SHAPE_LENGTH_FIXED_SPACES_AT_END (UINT)2
#define U_SHAPE_LAMALEF_END (UINT)2
#define U_SHAPE_LENGTH_FIXED_SPACES_AT_BEGINNING (UINT)3
#define U_SHAPE_LAMALEF_BEGIN (UINT)3
#define U_SHAPE_LAMALEF_AUTO (UINT)65536
#define U_SHAPE_LENGTH_MASK (UINT)65539
#define U_SHAPE_LAMALEF_MASK (UINT)65539
#define U_SHAPE_TEXT_DIRECTION_LOGICAL (UINT)0
#define U_SHAPE_TEXT_DIRECTION_VISUAL_RTL (UINT)0
#define U_SHAPE_TEXT_DIRECTION_VISUAL_LTR (UINT)4
#define U_SHAPE_TEXT_DIRECTION_MASK (UINT)4
#define U_SHAPE_LETTERS_NOOP (UINT)0
#define U_SHAPE_LETTERS_SHAPE (UINT)8
#define U_SHAPE_LETTERS_UNSHAPE (UINT)16
#define U_SHAPE_LETTERS_SHAPE_TASHKEEL_ISOLATED (UINT)24
#define U_SHAPE_LETTERS_MASK (UINT)24
#define U_SHAPE_DIGITS_NOOP (UINT)0
#define U_SHAPE_DIGITS_EN2AN (UINT)32
#define U_SHAPE_DIGITS_AN2EN (UINT)64
#define U_SHAPE_DIGITS_ALEN2AN_INIT_LR (UINT)96
#define U_SHAPE_DIGITS_ALEN2AN_INIT_AL (UINT)128
#define U_SHAPE_DIGITS_RESERVED (UINT)160
#define U_SHAPE_DIGITS_MASK (UINT)224
#define U_SHAPE_DIGIT_TYPE_AN (UINT)0
#define U_SHAPE_DIGIT_TYPE_AN_EXTENDED (UINT)256
#define U_SHAPE_DIGIT_TYPE_RESERVED (UINT)512
#define U_SHAPE_DIGIT_TYPE_MASK (UINT)768
#define U_SHAPE_AGGREGATE_TASHKEEL (UINT)16384
#define U_SHAPE_AGGREGATE_TASHKEEL_NOOP (UINT)0
#define U_SHAPE_AGGREGATE_TASHKEEL_MASK (UINT)16384
#define U_SHAPE_PRESERVE_PRESENTATION (UINT)32768
#define U_SHAPE_PRESERVE_PRESENTATION_NOOP (UINT)0
#define U_SHAPE_PRESERVE_PRESENTATION_MASK (UINT)32768
#define U_SHAPE_SEEN_TWOCELL_NEAR (UINT)2097152
#define U_SHAPE_SEEN_MASK (UINT)7340032
#define U_SHAPE_YEHHAMZA_TWOCELL_NEAR (UINT)16777216
#define U_SHAPE_YEHHAMZA_MASK (UINT)58720256
#define U_SHAPE_TASHKEEL_BEGIN (UINT)262144
#define U_SHAPE_TASHKEEL_END (UINT)393216
#define U_SHAPE_TASHKEEL_RESIZE (UINT)524288
#define U_SHAPE_TASHKEEL_REPLACE_BY_TATWEEL (UINT)786432
#define U_SHAPE_TASHKEEL_MASK (UINT)917504
#define U_SHAPE_SPACES_RELATIVE_TO_TEXT_BEGIN_END (UINT)67108864
#define U_SHAPE_SPACES_RELATIVE_TO_TEXT_MASK (UINT)67108864
#define U_SHAPE_TAIL_NEW_UNICODE (UINT)134217728
#define U_SHAPE_TAIL_TYPE_MASK (UINT)134217728
#define ULOC_LANG_CAPACITY (UINT)12
#define ULOC_COUNTRY_CAPACITY (UINT)4
#define ULOC_FULLNAME_CAPACITY (UINT)157
#define ULOC_SCRIPT_CAPACITY (UINT)6
#define ULOC_KEYWORDS_CAPACITY (UINT)96
#define ULOC_KEYWORD_AND_VALUES_CAPACITY (UINT)100
#define ULOC_KEYWORD_SEPARATOR_UNICODE (UINT)64
#define ULOC_KEYWORD_ASSIGN_UNICODE (UINT)61
#define ULOC_KEYWORD_ITEM_SEPARATOR_UNICODE (UINT)59
#define UCNV_MAX_CONVERTER_NAME_LENGTH (UINT)60
#define UCNV_SI (UINT)15
#define UCNV_SO (UINT)14
#define U_FOLD_CASE_DEFAULT (UINT)0
#define U_FOLD_CASE_EXCLUDE_SPECIAL_I (UINT)1
#define U_TITLECASE_WHOLE_STRING (UINT)32
#define U_TITLECASE_SENTENCES (UINT)64
#define U_TITLECASE_NO_LOWERCASE (UINT)256
#define U_TITLECASE_NO_BREAK_ADJUSTMENT (UINT)512
#define U_TITLECASE_ADJUST_TO_CASED (UINT)1024
#define U_EDITS_NO_RESET (UINT)8192
#define U_OMIT_UNCHANGED_TEXT (UINT)16384
#define U_COMPARE_CODE_POINT_ORDER (UINT)32768
#define U_COMPARE_IGNORE_CASE (UINT)65536
#define UNORM_INPUT_IS_FCD (UINT)131072
#define UCHAR_MIN_VALUE (UINT)0
#define UCHAR_MAX_VALUE (UINT)1114111
#define UBIDI_DEFAULT_LTR (UINT)254
#define UBIDI_DEFAULT_RTL (UINT)255
#define UBIDI_MAX_EXPLICIT_LEVEL (UINT)125
#define UBIDI_LEVEL_OVERRIDE (UINT)128
#define UBIDI_MAP_NOWHERE (INT)-1
#define UBIDI_KEEP_BASE_COMBINING (UINT)1
#define UBIDI_DO_MIRRORING (UINT)2
#define UBIDI_INSERT_LRM_FOR_NUMERIC (UINT)4
#define UBIDI_REMOVE_BIDI_CONTROLS (UINT)8
#define UBIDI_OUTPUT_REVERSE (UINT)16
#define USPREP_DEFAULT (UINT)0
#define USPREP_ALLOW_UNASSIGNED (UINT)1
#define USEARCH_DONE (INT)-1
#define UITER_UNKNOWN_INDEX (INT)-2
#define UTEXT_PROVIDER_LENGTH_IS_EXPENSIVE (INT)1
#define UTEXT_PROVIDER_STABLE_CHUNKS (INT)2
#define UTEXT_PROVIDER_WRITABLE (INT)3
#define UTEXT_PROVIDER_HAS_META_DATA (INT)4
#define UTEXT_PROVIDER_OWNS_TEXT (INT)5
#define UTEXT_MAGIC (INT)878368812
#define USET_IGNORE_SPACE (INT)1
#define USET_CASE_INSENSITIVE (INT)2
#define USET_ADD_CASE_MAPPINGS (INT)4
#define USET_SERIALIZED_STATIC_ARRAY_CAPACITY (INT)8
#define U_PARSE_CONTEXT_LEN (INT)16
#define UIDNA_DEFAULT (INT)0
#define UIDNA_USE_STD3_RULES (INT)2
#define UIDNA_CHECK_BIDI (INT)4
#define UIDNA_CHECK_CONTEXTJ (INT)8
#define UIDNA_NONTRANSITIONAL_TO_ASCII (INT)16
#define UIDNA_NONTRANSITIONAL_TO_UNICODE (INT)32
#define UIDNA_CHECK_CONTEXTO (INT)64
#define UIDNA_ERROR_EMPTY_LABEL (INT)1
#define UIDNA_ERROR_LABEL_TOO_LONG (INT)2
#define UIDNA_ERROR_DOMAIN_NAME_TOO_LONG (INT)4
#define UIDNA_ERROR_LEADING_HYPHEN (INT)8
#define UIDNA_ERROR_TRAILING_HYPHEN (INT)16
#define UIDNA_ERROR_HYPHEN_3_4 (INT)32
#define UIDNA_ERROR_LEADING_COMBINING_MARK (INT)64
#define UIDNA_ERROR_DISALLOWED (INT)128
#define UIDNA_ERROR_PUNYCODE (INT)256
#define UIDNA_ERROR_LABEL_HAS_DOT (INT)512
#define UIDNA_ERROR_INVALID_ACE_LABEL (INT)1024
#define UIDNA_ERROR_BIDI (INT)2048
#define UIDNA_ERROR_CONTEXTJ (INT)4096
#define UIDNA_ERROR_CONTEXTO_PUNCTUATION (INT)8192
#define UIDNA_ERROR_CONTEXTO_DIGITS (INT)16384

//--------------------------------------------------------------------------------
// Section: Types (358)
//--------------------------------------------------------------------------------
typedef enum {
    MAP_COMPOSITE = 64,
    MAP_EXPAND_LIGATURES = 8192,
    MAP_FOLDCZONE = 16,
    MAP_FOLDDIGITS = 128,
    MAP_PRECOMPOSED = 32,
} FOLD_STRING_MAP_FLAGS;

typedef enum {
    SCS_SETSTR = 9,
    SCS_CHANGEATTR = 18,
    SCS_CHANGECLAUSE = 36,
    SCS_SETRECONVERTSTRING = 65536,
    SCS_QUERYRECONVERTSTRING = 131072,
} SET_COMPOSITION_STRING_TYPE;

typedef enum {
    GGL_LEVEL = 1,
    GGL_INDEX = 2,
    GGL_STRING = 3,
    GGL_PRIVATE = 4,
} GET_GUIDE_LINE_TYPE;

typedef enum {
    DATE_SHORTDATE = 1,
    DATE_LONGDATE = 2,
    DATE_YEARMONTH = 8,
    DATE_MONTHDAY = 128,
    DATE_AUTOLAYOUT = 64,
    DATE_LTRREADING = 16,
    DATE_RTLREADING = 32,
    DATE_USE_ALT_CALENDAR = 4,
} ENUM_DATE_FORMATS_FLAGS;

typedef enum {
    CPS_CANCEL = 4,
    CPS_COMPLETE = 1,
    CPS_CONVERT = 2,
    CPS_REVERT = 3,
} NOTIFY_IME_INDEX;

typedef enum {
    TCI_SRCCHARSET = 1,
    TCI_SRCCODEPAGE = 2,
    TCI_SRCFONTSIG = 3,
    TCI_SRCLOCALE = 4096,
} TRANSLATE_CHARSET_INFO_FLAGS;

typedef enum {
    TIME_NOMINUTESORSECONDS = 1,
    TIME_NOSECONDS = 2,
    TIME_NOTIMEMARKER = 4,
    TIME_FORCE24HOURFORMAT = 8,
} TIME_FORMAT_FLAGS;

typedef enum {
    NI_CHANGECANDIDATELIST = 19,
    NI_CLOSECANDIDATE = 17,
    NI_COMPOSITIONSTR = 21,
    NI_IMEMENUSELECTED = 24,
    NI_OPENCANDIDATE = 16,
    NI_SELECTCANDIDATESTR = 18,
    NI_SETCANDIDATE_PAGESIZE = 23,
    NI_SETCANDIDATE_PAGESTART = 22,
} NOTIFY_IME_ACTION;

typedef enum {
    GCL_CONVERSION = 1,
    GCL_REVERSECONVERSION = 2,
    GCL_REVERSE_LENGTH = 3,
} GET_CONVERSION_LIST_FLAG;

typedef enum {
    LGRPID_INSTALLED = 1,
    LGRPID_SUPPORTED = 2,
} ENUM_SYSTEM_LANGUAGE_GROUPS_FLAGS;

typedef enum {
    MB_COMPOSITE = 2,
    MB_ERR_INVALID_CHARS = 8,
    MB_PRECOMPOSED = 1,
    MB_USEGLYPHCHARS = 4,
} MULTI_BYTE_TO_WIDE_CHAR_FLAGS;

typedef enum {
    LINGUISTIC_IGNORECASE = 16,
    LINGUISTIC_IGNOREDIACRITIC = 32,
    NORM_IGNORECASE = 1,
    NORM_IGNOREKANATYPE = 65536,
    NORM_IGNORENONSPACE = 2,
    NORM_IGNORESYMBOLS = 4,
    NORM_IGNOREWIDTH = 131072,
    NORM_LINGUISTIC_CASING = 134217728,
    SORT_DIGITSASNUMBERS = 8,
    SORT_STRINGSORT = 4096,
} COMPARE_STRING_FLAGS;

typedef enum {
    LCID_INSTALLED = 1,
    LCID_SUPPORTED = 2,
} IS_VALID_LOCALE_FLAGS;

typedef enum {
    CP_INSTALLED = 1,
    CP_SUPPORTED = 2,
} ENUM_SYSTEM_CODE_PAGES_FLAGS;

typedef enum {
    IMEPADREQ_INSERTSTRING = 4097,
    IMEPADREQ_SENDCONTROL = 4100,
    IMEPADREQ_SETAPPLETSIZE = 4104,
    IMEPADREQ_GETCOMPOSITIONSTRING = 4102,
    IMEPADREQ_GETCOMPOSITIONSTRINGINFO = 4108,
    IMEPADREQ_DELETESTRING = 4112,
    IMEPADREQ_CHANGESTRING = 4113,
    IMEPADREQ_GETAPPLHWND = 4116,
    IMEPADREQ_FORCEIMEPADWINDOWSHOW = 4117,
    IMEPADREQ_POSTMODALNOTIFY = 4118,
    IMEPADREQ_GETDEFAULTUILANGID = 4119,
    IMEPADREQ_GETAPPLETUISTYLE = 4121,
    IMEPADREQ_SETAPPLETUISTYLE = 4122,
    IMEPADREQ_ISAPPLETACTIVE = 4123,
    IMEPADREQ_ISIMEPADWINDOWVISIBLE = 4124,
    IMEPADREQ_SETAPPLETMINMAXSIZE = 4125,
    IMEPADREQ_GETCONVERSIONSTATUS = 4126,
    IMEPADREQ_GETVERSION = 4127,
    IMEPADREQ_GETCURRENTIMEINFO = 4128,
} IME_PAD_REQUEST_FLAGS;

typedef enum {
    SIC_ASCIIDIGIT = 2,
    SIC_COMPLEX = 1,
    SIC_NEUTRAL = 4,
} SCRIPT_IS_COMPLEX_FLAGS;

typedef enum {
    IS_TEXT_UNICODE_ASCII16 = 1,
    IS_TEXT_UNICODE_REVERSE_ASCII16 = 16,
    IS_TEXT_UNICODE_STATISTICS = 2,
    IS_TEXT_UNICODE_REVERSE_STATISTICS = 32,
    IS_TEXT_UNICODE_CONTROLS = 4,
    IS_TEXT_UNICODE_REVERSE_CONTROLS = 64,
    IS_TEXT_UNICODE_SIGNATURE = 8,
    IS_TEXT_UNICODE_REVERSE_SIGNATURE = 128,
    IS_TEXT_UNICODE_ILLEGAL_CHARS = 256,
    IS_TEXT_UNICODE_ODD_LENGTH = 512,
    IS_TEXT_UNICODE_NULL_BYTES = 4096,
    IS_TEXT_UNICODE_UNICODE_MASK = 15,
    IS_TEXT_UNICODE_REVERSE_MASK = 240,
    IS_TEXT_UNICODE_NOT_UNICODE_MASK = 3840,
    IS_TEXT_UNICODE_NOT_ASCII_MASK = 61440,
} IS_TEXT_UNICODE_RESULT;

typedef int UEnumeration;

typedef int UResourceBundle;

typedef int ULocaleDisplayNames;

typedef int UConverter;

typedef int USet;

typedef int UBiDi;

typedef int UBiDiTransform;

typedef int UNormalizer2;

typedef int UConverterSelector;

typedef int UBreakIterator;

typedef int UCaseMap;

typedef int UStringPrepProfile;

typedef int UIDNA;

typedef int UCollator;

typedef int UCollationElements;

typedef int UCharsetDetector;

typedef int UCharsetMatch;

typedef int UFieldPositionIterator;

typedef int UDateIntervalFormat;

typedef int UGenderInfo;

typedef int UListFormatter;

typedef int ULocaleData;

typedef int UDateFormatSymbols;

typedef int UNumberFormatter;

typedef int UFormattedNumber;

typedef int UNumberingSystem;

typedef int UPluralRules;

typedef int URegularExpression;

typedef int URegion;

typedef int URelativeDateTimeFormatter;

typedef int UStringSearch;

typedef int USpoofChecker;

typedef int USpoofCheckResult;

typedef int HIMC;

typedef int HIMCC;

typedef int HSAVEDUILANGUAGES;

typedef int FONTSIGNATURE;

typedef int CHARSETINFO;

typedef int LOCALESIGNATURE;

typedef int CPINFO;

typedef int CPINFOEXA;

typedef int CPINFOEXW;

typedef int NUMBERFMTA;

typedef int NUMBERFMTW;

typedef int CURRENCYFMTA;

typedef int CURRENCYFMTW;

typedef enum {
    COMPARE_STRING = 1,
} SYSNLS_FUNCTION;

typedef int NLSVERSIONINFO;

typedef int NLSVERSIONINFOEX;

typedef enum {
    GEO_NATION = 1,
    GEO_LATITUDE = 2,
    GEO_LONGITUDE = 3,
    GEO_ISO2 = 4,
    GEO_ISO3 = 5,
    GEO_RFC1766 = 6,
    GEO_LCID = 7,
    GEO_FRIENDLYNAME = 8,
    GEO_OFFICIALNAME = 9,
    GEO_TIMEZONES = 10,
    GEO_OFFICIALLANGUAGES = 11,
    GEO_ISO_UN_NUMBER = 12,
    GEO_PARENT = 13,
    GEO_DIALINGCODE = 14,
    GEO_CURRENCYCODE = 15,
    GEO_CURRENCYSYMBOL = 16,
    GEO_NAME = 17,
    GEO_ID = 18,
} SYSGEOTYPE;

typedef enum {
    GEOCLASS_NATION = 16,
    GEOCLASS_REGION = 14,
    GEOCLASS_ALL = 0,
} SYSGEOCLASS;

typedef int LOCALE_ENUMPROCA;

typedef int LOCALE_ENUMPROCW;

typedef enum {
    NormalizationOther = 0,
    NormalizationC = 1,
    NormalizationD = 2,
    NormalizationKC = 5,
    NormalizationKD = 6,
} NORM_FORM;

typedef int LANGUAGEGROUP_ENUMPROCA;

typedef int LANGGROUPLOCALE_ENUMPROCA;

typedef int UILANGUAGE_ENUMPROCA;

typedef int CODEPAGE_ENUMPROCA;

typedef int DATEFMT_ENUMPROCA;

typedef int DATEFMT_ENUMPROCEXA;

typedef int TIMEFMT_ENUMPROCA;

typedef int CALINFO_ENUMPROCA;

typedef int CALINFO_ENUMPROCEXA;

typedef int LANGUAGEGROUP_ENUMPROCW;

typedef int LANGGROUPLOCALE_ENUMPROCW;

typedef int UILANGUAGE_ENUMPROCW;

typedef int CODEPAGE_ENUMPROCW;

typedef int DATEFMT_ENUMPROCW;

typedef int DATEFMT_ENUMPROCEXW;

typedef int TIMEFMT_ENUMPROCW;

typedef int CALINFO_ENUMPROCW;

typedef int CALINFO_ENUMPROCEXW;

typedef int GEO_ENUMPROC;

typedef int GEO_ENUMNAMEPROC;

typedef int FILEMUIINFO;

typedef int CALINFO_ENUMPROCEXEX;

typedef int DATEFMT_ENUMPROCEXEX;

typedef int TIMEFMT_ENUMPROCEX;

typedef int LOCALE_ENUMPROCEX;

typedef int COMPOSITIONFORM;

typedef int CANDIDATEFORM;

typedef int CANDIDATELIST;

typedef int REGISTERWORDA;

typedef int REGISTERWORDW;

typedef int RECONVERTSTRING;

typedef int STYLEBUFA;

typedef int STYLEBUFW;

typedef int IMEMENUITEMINFOA;

typedef int IMEMENUITEMINFOW;

typedef int IMECHARPOSITION;

typedef int IMCENUMPROC;

typedef int REGISTERWORDENUMPROCA;

typedef int REGISTERWORDENUMPROCW;

typedef int PFN_MAPPINGCALLBACKPROC;

typedef int MAPPING_SERVICE_INFO;

typedef int MAPPING_ENUM_OPTIONS;

typedef int MAPPING_OPTIONS;

typedef int MAPPING_DATA_RANGE;

typedef int MAPPING_PROPERTY_BAG;

typedef int SpellCheckerFactory;

typedef enum {
    WORDLIST_TYPE_IGNORE = 0,
    WORDLIST_TYPE_ADD = 1,
    WORDLIST_TYPE_EXCLUDE = 2,
    WORDLIST_TYPE_AUTOCORRECT = 3,
} WORDLIST_TYPE;

typedef enum {
    CORRECTIVE_ACTION_NONE = 0,
    CORRECTIVE_ACTION_GET_SUGGESTIONS = 1,
    CORRECTIVE_ACTION_REPLACE = 2,
    CORRECTIVE_ACTION_DELETE = 3,
} CORRECTIVE_ACTION;

// TODO: this type is limited to platform 'windows8.0'
typedef int ISpellingError;

// TODO: this type is limited to platform 'windows8.0'
typedef int IEnumSpellingError;

// TODO: this type is limited to platform 'windows8.0'
typedef int IOptionDescription;

// TODO: this type is limited to platform 'windows8.0'
typedef int ISpellCheckerChangedEventHandler;

// TODO: this type is limited to platform 'windows8.0'
typedef int ISpellChecker;

// TODO: this type is limited to platform 'windows10.0.10240'
typedef int ISpellChecker2;

// TODO: this type is limited to platform 'windows8.0'
typedef int ISpellCheckerFactory;

// TODO: this type is limited to platform 'windows8.0'
typedef int IUserDictionariesRegistrar;

// TODO: this type is limited to platform 'windows8.0'
typedef int ISpellCheckProvider;

typedef int IComprehensiveSpellCheckProvider;

// TODO: this type is limited to platform 'windows8.0'
typedef int ISpellCheckProviderFactory;

typedef int IFEClassFactory;

typedef int IMEDLG;

typedef int IFECommon;

typedef int WDD;

typedef int MORRSLT;

typedef int IFELanguage;

typedef enum {
    IFED_REG_HEAD = 0,
    IFED_REG_TAIL = 1,
    IFED_REG_DEL = 2,
} IMEREG;

typedef enum {
    IFED_UNKNOWN = 0,
    IFED_MSIME2_BIN_SYSTEM = 1,
    IFED_MSIME2_BIN_USER = 2,
    IFED_MSIME2_TEXT_USER = 3,
    IFED_MSIME95_BIN_SYSTEM = 4,
    IFED_MSIME95_BIN_USER = 5,
    IFED_MSIME95_TEXT_USER = 6,
    IFED_MSIME97_BIN_SYSTEM = 7,
    IFED_MSIME97_BIN_USER = 8,
    IFED_MSIME97_TEXT_USER = 9,
    IFED_MSIME98_BIN_SYSTEM = 10,
    IFED_MSIME98_BIN_USER = 11,
    IFED_MSIME98_TEXT_USER = 12,
    IFED_ACTIVE_DICT = 13,
    IFED_ATOK9 = 14,
    IFED_ATOK10 = 15,
    IFED_NEC_AI_ = 16,
    IFED_WX_II = 17,
    IFED_WX_III = 18,
    IFED_VJE_20 = 19,
    IFED_MSIME98_SYSTEM_CE = 20,
    IFED_MSIME_BIN_SYSTEM = 21,
    IFED_MSIME_BIN_USER = 22,
    IFED_MSIME_TEXT_USER = 23,
    IFED_PIME2_BIN_USER = 24,
    IFED_PIME2_BIN_SYSTEM = 25,
    IFED_PIME2_BIN_STANDARD_SYSTEM = 26,
} IMEFMT;

typedef enum {
    IFED_UCT_NONE = 0,
    IFED_UCT_STRING_SJIS = 1,
    IFED_UCT_STRING_UNICODE = 2,
    IFED_UCT_USER_DEFINED = 3,
    IFED_UCT_MAX = 4,
} IMEUCT;

typedef int IMEWRD;

typedef int IMESHF;

typedef int POSTBL;

typedef enum {
    IFED_REL_NONE = 0,
    IFED_REL_NO = 1,
    IFED_REL_GA = 2,
    IFED_REL_WO = 3,
    IFED_REL_NI = 4,
    IFED_REL_DE = 5,
    IFED_REL_YORI = 6,
    IFED_REL_KARA = 7,
    IFED_REL_MADE = 8,
    IFED_REL_HE = 9,
    IFED_REL_TO = 10,
    IFED_REL_IDEOM = 11,
    IFED_REL_FUKU_YOUGEN = 12,
    IFED_REL_KEIYOU_YOUGEN = 13,
    IFED_REL_KEIDOU1_YOUGEN = 14,
    IFED_REL_KEIDOU2_YOUGEN = 15,
    IFED_REL_TAIGEN = 16,
    IFED_REL_YOUGEN = 17,
    IFED_REL_RENTAI_MEI = 18,
    IFED_REL_RENSOU = 19,
    IFED_REL_KEIYOU_TO_YOUGEN = 20,
    IFED_REL_KEIYOU_TARU_YOUGEN = 21,
    IFED_REL_UNKNOWN1 = 22,
    IFED_REL_UNKNOWN2 = 23,
    IFED_REL_ALL = 24,
} IMEREL;

typedef int IMEDP;

typedef int PFNLOG;

typedef int IFEDictionary;

typedef int IMEKMSINIT;

typedef int IMEKMSKEY;

typedef int IMEKMS;

typedef int IMEKMSNTFY;

typedef int IMEKMSKMP;

typedef int IMEKMSINVK;

typedef int IMEKMSFUNCDESC;

typedef int fpCreateIFECommonInstanceType;

typedef int fpCreateIFELanguageInstanceType;

typedef int fpCreateIFEDictionaryInstanceType;

typedef int COMPOSITIONSTRING;

typedef int GUIDELINE;

typedef int TRANSMSG;

typedef int TRANSMSGLIST;

typedef int CANDIDATEINFO;

typedef int INPUTCONTEXT;

typedef int IMEINFO;

typedef int SOFTKBDDATA;

typedef int APPLETIDLIST;

typedef int IMESTRINGCANDIDATE;

typedef int IMEITEM;

typedef int IMEITEMCANDIDATE;

typedef int tabIMESTRINGINFO;

typedef int tabIMEFAREASTINFO;

typedef int IMESTRINGCANDIDATEINFO;

typedef int IMECOMPOSITIONSTRINGINFO;

typedef int IMECHARINFO;

typedef int IMEAPPLETCFG;

typedef int IMEAPPLETUI;

typedef int APPLYCANDEXPARAM;

typedef int IImeSpecifyApplets;

typedef int IImePadApplet;

typedef int IImePad;

// TODO: this type is limited to platform 'windows8.0'
typedef int IImePlugInDictDictionaryList;

typedef int SCRIPT_CONTROL;

typedef int SCRIPT_STATE;

typedef int SCRIPT_ANALYSIS;

typedef int SCRIPT_ITEM;

typedef enum {
    SCRIPT_JUSTIFY_NONE = 0,
    SCRIPT_JUSTIFY_ARABIC_BLANK = 1,
    SCRIPT_JUSTIFY_CHARACTER = 2,
    SCRIPT_JUSTIFY_RESERVED1 = 3,
    SCRIPT_JUSTIFY_BLANK = 4,
    SCRIPT_JUSTIFY_RESERVED2 = 5,
    SCRIPT_JUSTIFY_RESERVED3 = 6,
    SCRIPT_JUSTIFY_ARABIC_NORMAL = 7,
    SCRIPT_JUSTIFY_ARABIC_KASHIDA = 8,
    SCRIPT_JUSTIFY_ARABIC_ALEF = 9,
    SCRIPT_JUSTIFY_ARABIC_HA = 10,
    SCRIPT_JUSTIFY_ARABIC_RA = 11,
    SCRIPT_JUSTIFY_ARABIC_BA = 12,
    SCRIPT_JUSTIFY_ARABIC_BARA = 13,
    SCRIPT_JUSTIFY_ARABIC_SEEN = 14,
    SCRIPT_JUSTIFY_ARABIC_SEEN_M = 15,
} SCRIPT_JUSTIFY;

typedef int SCRIPT_VISATTR;

typedef int GOFFSET;

typedef int SCRIPT_LOGATTR;

typedef int SCRIPT_PROPERTIES;

typedef int SCRIPT_FONTPROPERTIES;

typedef int SCRIPT_TABDEF;

typedef int SCRIPT_DIGITSUBSTITUTE;

typedef int opentype_feature_record;

typedef int textrange_properties;

typedef int script_charprop;

typedef int script_glyphprop;

typedef enum {
    U_USING_FALLBACK_WARNING = -128,
    U_ERROR_WARNING_START = -128,
    U_USING_DEFAULT_WARNING = -127,
    U_SAFECLONE_ALLOCATED_WARNING = -126,
    U_STATE_OLD_WARNING = -125,
    U_STRING_NOT_TERMINATED_WARNING = -124,
    U_SORT_KEY_TOO_SHORT_WARNING = -123,
    U_AMBIGUOUS_ALIAS_WARNING = -122,
    U_DIFFERENT_UCA_VERSION = -121,
    U_PLUGIN_CHANGED_LEVEL_WARNING = -120,
    U_ZERO_ERROR = 0,
    U_ILLEGAL_ARGUMENT_ERROR = 1,
    U_MISSING_RESOURCE_ERROR = 2,
    U_INVALID_FORMAT_ERROR = 3,
    U_FILE_ACCESS_ERROR = 4,
    U_INTERNAL_PROGRAM_ERROR = 5,
    U_MESSAGE_PARSE_ERROR = 6,
    U_MEMORY_ALLOCATION_ERROR = 7,
    U_INDEX_OUTOFBOUNDS_ERROR = 8,
    U_PARSE_ERROR = 9,
    U_INVALID_CHAR_FOUND = 10,
    U_TRUNCATED_CHAR_FOUND = 11,
    U_ILLEGAL_CHAR_FOUND = 12,
    U_INVALID_TABLE_FORMAT = 13,
    U_INVALID_TABLE_FILE = 14,
    U_BUFFER_OVERFLOW_ERROR = 15,
    U_UNSUPPORTED_ERROR = 16,
    U_RESOURCE_TYPE_MISMATCH = 17,
    U_ILLEGAL_ESCAPE_SEQUENCE = 18,
    U_UNSUPPORTED_ESCAPE_SEQUENCE = 19,
    U_NO_SPACE_AVAILABLE = 20,
    U_CE_NOT_FOUND_ERROR = 21,
    U_PRIMARY_TOO_LONG_ERROR = 22,
    U_STATE_TOO_OLD_ERROR = 23,
    U_TOO_MANY_ALIASES_ERROR = 24,
    U_ENUM_OUT_OF_SYNC_ERROR = 25,
    U_INVARIANT_CONVERSION_ERROR = 26,
    U_INVALID_STATE_ERROR = 27,
    U_COLLATOR_VERSION_MISMATCH = 28,
    U_USELESS_COLLATOR_ERROR = 29,
    U_NO_WRITE_PERMISSION = 30,
    U_BAD_VARIABLE_DEFINITION = 65536,
    U_PARSE_ERROR_START = 65536,
    U_MALFORMED_RULE = 65537,
    U_MALFORMED_SET = 65538,
    U_MALFORMED_SYMBOL_REFERENCE = 65539,
    U_MALFORMED_UNICODE_ESCAPE = 65540,
    U_MALFORMED_VARIABLE_DEFINITION = 65541,
    U_MALFORMED_VARIABLE_REFERENCE = 65542,
    U_MISMATCHED_SEGMENT_DELIMITERS = 65543,
    U_MISPLACED_ANCHOR_START = 65544,
    U_MISPLACED_CURSOR_OFFSET = 65545,
    U_MISPLACED_QUANTIFIER = 65546,
    U_MISSING_OPERATOR = 65547,
    U_MISSING_SEGMENT_CLOSE = 65548,
    U_MULTIPLE_ANTE_CONTEXTS = 65549,
    U_MULTIPLE_CURSORS = 65550,
    U_MULTIPLE_POST_CONTEXTS = 65551,
    U_TRAILING_BACKSLASH = 65552,
    U_UNDEFINED_SEGMENT_REFERENCE = 65553,
    U_UNDEFINED_VARIABLE = 65554,
    U_UNQUOTED_SPECIAL = 65555,
    U_UNTERMINATED_QUOTE = 65556,
    U_RULE_MASK_ERROR = 65557,
    U_MISPLACED_COMPOUND_FILTER = 65558,
    U_MULTIPLE_COMPOUND_FILTERS = 65559,
    U_INVALID_RBT_SYNTAX = 65560,
    U_INVALID_PROPERTY_PATTERN = 65561,
    U_MALFORMED_PRAGMA = 65562,
    U_UNCLOSED_SEGMENT = 65563,
    U_ILLEGAL_CHAR_IN_SEGMENT = 65564,
    U_VARIABLE_RANGE_EXHAUSTED = 65565,
    U_VARIABLE_RANGE_OVERLAP = 65566,
    U_ILLEGAL_CHARACTER = 65567,
    U_INTERNAL_TRANSLITERATOR_ERROR = 65568,
    U_INVALID_ID = 65569,
    U_INVALID_FUNCTION = 65570,
    U_UNEXPECTED_TOKEN = 65792,
    U_FMT_PARSE_ERROR_START = 65792,
    U_MULTIPLE_DECIMAL_SEPARATORS = 65793,
    U_MULTIPLE_DECIMAL_SEPERATORS = 65793,
    U_MULTIPLE_EXPONENTIAL_SYMBOLS = 65794,
    U_MALFORMED_EXPONENTIAL_PATTERN = 65795,
    U_MULTIPLE_PERCENT_SYMBOLS = 65796,
    U_MULTIPLE_PERMILL_SYMBOLS = 65797,
    U_MULTIPLE_PAD_SPECIFIERS = 65798,
    U_PATTERN_SYNTAX_ERROR = 65799,
    U_ILLEGAL_PAD_POSITION = 65800,
    U_UNMATCHED_BRACES = 65801,
    U_UNSUPPORTED_PROPERTY = 65802,
    U_UNSUPPORTED_ATTRIBUTE = 65803,
    U_ARGUMENT_TYPE_MISMATCH = 65804,
    U_DUPLICATE_KEYWORD = 65805,
    U_UNDEFINED_KEYWORD = 65806,
    U_DEFAULT_KEYWORD_MISSING = 65807,
    U_DECIMAL_NUMBER_SYNTAX_ERROR = 65808,
    U_FORMAT_INEXACT_ERROR = 65809,
    U_NUMBER_ARG_OUTOFBOUNDS_ERROR = 65810,
    U_NUMBER_SKELETON_SYNTAX_ERROR = 65811,
    U_BRK_INTERNAL_ERROR = 66048,
    U_BRK_ERROR_START = 66048,
    U_BRK_HEX_DIGITS_EXPECTED = 66049,
    U_BRK_SEMICOLON_EXPECTED = 66050,
    U_BRK_RULE_SYNTAX = 66051,
    U_BRK_UNCLOSED_SET = 66052,
    U_BRK_ASSIGN_ERROR = 66053,
    U_BRK_VARIABLE_REDFINITION = 66054,
    U_BRK_MISMATCHED_PAREN = 66055,
    U_BRK_NEW_LINE_IN_QUOTED_STRING = 66056,
    U_BRK_UNDEFINED_VARIABLE = 66057,
    U_BRK_INIT_ERROR = 66058,
    U_BRK_RULE_EMPTY_SET = 66059,
    U_BRK_UNRECOGNIZED_OPTION = 66060,
    U_BRK_MALFORMED_RULE_TAG = 66061,
    U_REGEX_INTERNAL_ERROR = 66304,
    U_REGEX_ERROR_START = 66304,
    U_REGEX_RULE_SYNTAX = 66305,
    U_REGEX_INVALID_STATE = 66306,
    U_REGEX_BAD_ESCAPE_SEQUENCE = 66307,
    U_REGEX_PROPERTY_SYNTAX = 66308,
    U_REGEX_UNIMPLEMENTED = 66309,
    U_REGEX_MISMATCHED_PAREN = 66310,
    U_REGEX_NUMBER_TOO_BIG = 66311,
    U_REGEX_BAD_INTERVAL = 66312,
    U_REGEX_MAX_LT_MIN = 66313,
    U_REGEX_INVALID_BACK_REF = 66314,
    U_REGEX_INVALID_FLAG = 66315,
    U_REGEX_LOOK_BEHIND_LIMIT = 66316,
    U_REGEX_SET_CONTAINS_STRING = 66317,
    U_REGEX_MISSING_CLOSE_BRACKET = 66319,
    U_REGEX_INVALID_RANGE = 66320,
    U_REGEX_STACK_OVERFLOW = 66321,
    U_REGEX_TIME_OUT = 66322,
    U_REGEX_STOPPED_BY_CALLER = 66323,
    U_REGEX_PATTERN_TOO_BIG = 66324,
    U_REGEX_INVALID_CAPTURE_GROUP_NAME = 66325,
    U_IDNA_PROHIBITED_ERROR = 66560,
    U_IDNA_ERROR_START = 66560,
    U_IDNA_UNASSIGNED_ERROR = 66561,
    U_IDNA_CHECK_BIDI_ERROR = 66562,
    U_IDNA_STD3_ASCII_RULES_ERROR = 66563,
    U_IDNA_ACE_PREFIX_ERROR = 66564,
    U_IDNA_VERIFICATION_ERROR = 66565,
    U_IDNA_LABEL_TOO_LONG_ERROR = 66566,
    U_IDNA_ZERO_LENGTH_LABEL_ERROR = 66567,
    U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR = 66568,
    U_STRINGPREP_PROHIBITED_ERROR = 66560,
    U_STRINGPREP_UNASSIGNED_ERROR = 66561,
    U_STRINGPREP_CHECK_BIDI_ERROR = 66562,
    U_PLUGIN_ERROR_START = 66816,
    U_PLUGIN_TOO_HIGH = 66816,
    U_PLUGIN_DIDNT_SET_LEVEL = 66817,
} UErrorCode;

typedef enum {
    UTRACE_OFF = -1,
    UTRACE_ERROR = 0,
    UTRACE_WARNING = 3,
    UTRACE_OPEN_CLOSE = 5,
    UTRACE_INFO = 7,
    UTRACE_VERBOSE = 9,
} UTraceLevel;

typedef enum {
    UTRACE_FUNCTION_START = 0,
    UTRACE_U_INIT = 0,
    UTRACE_U_CLEANUP = 1,
    UTRACE_CONVERSION_START = 4096,
    UTRACE_UCNV_OPEN = 4096,
    UTRACE_UCNV_OPEN_PACKAGE = 4097,
    UTRACE_UCNV_OPEN_ALGORITHMIC = 4098,
    UTRACE_UCNV_CLONE = 4099,
    UTRACE_UCNV_CLOSE = 4100,
    UTRACE_UCNV_FLUSH_CACHE = 4101,
    UTRACE_UCNV_LOAD = 4102,
    UTRACE_UCNV_UNLOAD = 4103,
    UTRACE_COLLATION_START = 8192,
    UTRACE_UCOL_OPEN = 8192,
    UTRACE_UCOL_CLOSE = 8193,
    UTRACE_UCOL_STRCOLL = 8194,
    UTRACE_UCOL_GET_SORTKEY = 8195,
    UTRACE_UCOL_GETLOCALE = 8196,
    UTRACE_UCOL_NEXTSORTKEYPART = 8197,
    UTRACE_UCOL_STRCOLLITER = 8198,
    UTRACE_UCOL_OPEN_FROM_SHORT_STRING = 8199,
    UTRACE_UCOL_STRCOLLUTF8 = 8200,
} UTraceFunctionNumber;

typedef int UTraceEntry;

typedef int UTraceExit;

typedef int UTraceData;

typedef enum {
    USTRINGTRIE_NO_MATCH = 0,
    USTRINGTRIE_NO_VALUE = 1,
    USTRINGTRIE_FINAL_VALUE = 2,
    USTRINGTRIE_INTERMEDIATE_VALUE = 3,
} UStringTrieResult;

typedef enum {
    USCRIPT_INVALID_CODE = -1,
    USCRIPT_COMMON = 0,
    USCRIPT_INHERITED = 1,
    USCRIPT_ARABIC = 2,
    USCRIPT_ARMENIAN = 3,
    USCRIPT_BENGALI = 4,
    USCRIPT_BOPOMOFO = 5,
    USCRIPT_CHEROKEE = 6,
    USCRIPT_COPTIC = 7,
    USCRIPT_CYRILLIC = 8,
    USCRIPT_DESERET = 9,
    USCRIPT_DEVANAGARI = 10,
    USCRIPT_ETHIOPIC = 11,
    USCRIPT_GEORGIAN = 12,
    USCRIPT_GOTHIC = 13,
    USCRIPT_GREEK = 14,
    USCRIPT_GUJARATI = 15,
    USCRIPT_GURMUKHI = 16,
    USCRIPT_HAN = 17,
    USCRIPT_HANGUL = 18,
    USCRIPT_HEBREW = 19,
    USCRIPT_HIRAGANA = 20,
    USCRIPT_KANNADA = 21,
    USCRIPT_KATAKANA = 22,
    USCRIPT_KHMER = 23,
    USCRIPT_LAO = 24,
    USCRIPT_LATIN = 25,
    USCRIPT_MALAYALAM = 26,
    USCRIPT_MONGOLIAN = 27,
    USCRIPT_MYANMAR = 28,
    USCRIPT_OGHAM = 29,
    USCRIPT_OLD_ITALIC = 30,
    USCRIPT_ORIYA = 31,
    USCRIPT_RUNIC = 32,
    USCRIPT_SINHALA = 33,
    USCRIPT_SYRIAC = 34,
    USCRIPT_TAMIL = 35,
    USCRIPT_TELUGU = 36,
    USCRIPT_THAANA = 37,
    USCRIPT_THAI = 38,
    USCRIPT_TIBETAN = 39,
    USCRIPT_CANADIAN_ABORIGINAL = 40,
    USCRIPT_UCAS = 40,
    USCRIPT_YI = 41,
    USCRIPT_TAGALOG = 42,
    USCRIPT_HANUNOO = 43,
    USCRIPT_BUHID = 44,
    USCRIPT_TAGBANWA = 45,
    USCRIPT_BRAILLE = 46,
    USCRIPT_CYPRIOT = 47,
    USCRIPT_LIMBU = 48,
    USCRIPT_LINEAR_B = 49,
    USCRIPT_OSMANYA = 50,
    USCRIPT_SHAVIAN = 51,
    USCRIPT_TAI_LE = 52,
    USCRIPT_UGARITIC = 53,
    USCRIPT_KATAKANA_OR_HIRAGANA = 54,
    USCRIPT_BUGINESE = 55,
    USCRIPT_GLAGOLITIC = 56,
    USCRIPT_KHAROSHTHI = 57,
    USCRIPT_SYLOTI_NAGRI = 58,
    USCRIPT_NEW_TAI_LUE = 59,
    USCRIPT_TIFINAGH = 60,
    USCRIPT_OLD_PERSIAN = 61,
    USCRIPT_BALINESE = 62,
    USCRIPT_BATAK = 63,
    USCRIPT_BLISSYMBOLS = 64,
    USCRIPT_BRAHMI = 65,
    USCRIPT_CHAM = 66,
    USCRIPT_CIRTH = 67,
    USCRIPT_OLD_CHURCH_SLAVONIC_CYRILLIC = 68,
    USCRIPT_DEMOTIC_EGYPTIAN = 69,
    USCRIPT_HIERATIC_EGYPTIAN = 70,
    USCRIPT_EGYPTIAN_HIEROGLYPHS = 71,
    USCRIPT_KHUTSURI = 72,
    USCRIPT_SIMPLIFIED_HAN = 73,
    USCRIPT_TRADITIONAL_HAN = 74,
    USCRIPT_PAHAWH_HMONG = 75,
    USCRIPT_OLD_HUNGARIAN = 76,
    USCRIPT_HARAPPAN_INDUS = 77,
    USCRIPT_JAVANESE = 78,
    USCRIPT_KAYAH_LI = 79,
    USCRIPT_LATIN_FRAKTUR = 80,
    USCRIPT_LATIN_GAELIC = 81,
    USCRIPT_LEPCHA = 82,
    USCRIPT_LINEAR_A = 83,
    USCRIPT_MANDAIC = 84,
    USCRIPT_MANDAEAN = 84,
    USCRIPT_MAYAN_HIEROGLYPHS = 85,
    USCRIPT_MEROITIC_HIEROGLYPHS = 86,
    USCRIPT_MEROITIC = 86,
    USCRIPT_NKO = 87,
    USCRIPT_ORKHON = 88,
    USCRIPT_OLD_PERMIC = 89,
    USCRIPT_PHAGS_PA = 90,
    USCRIPT_PHOENICIAN = 91,
    USCRIPT_MIAO = 92,
    USCRIPT_PHONETIC_POLLARD = 92,
    USCRIPT_RONGORONGO = 93,
    USCRIPT_SARATI = 94,
    USCRIPT_ESTRANGELO_SYRIAC = 95,
    USCRIPT_WESTERN_SYRIAC = 96,
    USCRIPT_EASTERN_SYRIAC = 97,
    USCRIPT_TENGWAR = 98,
    USCRIPT_VAI = 99,
    USCRIPT_VISIBLE_SPEECH = 100,
    USCRIPT_CUNEIFORM = 101,
    USCRIPT_UNWRITTEN_LANGUAGES = 102,
    USCRIPT_UNKNOWN = 103,
    USCRIPT_CARIAN = 104,
    USCRIPT_JAPANESE = 105,
    USCRIPT_LANNA = 106,
    USCRIPT_LYCIAN = 107,
    USCRIPT_LYDIAN = 108,
    USCRIPT_OL_CHIKI = 109,
    USCRIPT_REJANG = 110,
    USCRIPT_SAURASHTRA = 111,
    USCRIPT_SIGN_WRITING = 112,
    USCRIPT_SUNDANESE = 113,
    USCRIPT_MOON = 114,
    USCRIPT_MEITEI_MAYEK = 115,
    USCRIPT_IMPERIAL_ARAMAIC = 116,
    USCRIPT_AVESTAN = 117,
    USCRIPT_CHAKMA = 118,
    USCRIPT_KOREAN = 119,
    USCRIPT_KAITHI = 120,
    USCRIPT_MANICHAEAN = 121,
    USCRIPT_INSCRIPTIONAL_PAHLAVI = 122,
    USCRIPT_PSALTER_PAHLAVI = 123,
    USCRIPT_BOOK_PAHLAVI = 124,
    USCRIPT_INSCRIPTIONAL_PARTHIAN = 125,
    USCRIPT_SAMARITAN = 126,
    USCRIPT_TAI_VIET = 127,
    USCRIPT_MATHEMATICAL_NOTATION = 128,
    USCRIPT_SYMBOLS = 129,
    USCRIPT_BAMUM = 130,
    USCRIPT_LISU = 131,
    USCRIPT_NAKHI_GEBA = 132,
    USCRIPT_OLD_SOUTH_ARABIAN = 133,
    USCRIPT_BASSA_VAH = 134,
    USCRIPT_DUPLOYAN = 135,
    USCRIPT_ELBASAN = 136,
    USCRIPT_GRANTHA = 137,
    USCRIPT_KPELLE = 138,
    USCRIPT_LOMA = 139,
    USCRIPT_MENDE = 140,
    USCRIPT_MEROITIC_CURSIVE = 141,
    USCRIPT_OLD_NORTH_ARABIAN = 142,
    USCRIPT_NABATAEAN = 143,
    USCRIPT_PALMYRENE = 144,
    USCRIPT_KHUDAWADI = 145,
    USCRIPT_SINDHI = 145,
    USCRIPT_WARANG_CITI = 146,
    USCRIPT_AFAKA = 147,
    USCRIPT_JURCHEN = 148,
    USCRIPT_MRO = 149,
    USCRIPT_NUSHU = 150,
    USCRIPT_SHARADA = 151,
    USCRIPT_SORA_SOMPENG = 152,
    USCRIPT_TAKRI = 153,
    USCRIPT_TANGUT = 154,
    USCRIPT_WOLEAI = 155,
    USCRIPT_ANATOLIAN_HIEROGLYPHS = 156,
    USCRIPT_KHOJKI = 157,
    USCRIPT_TIRHUTA = 158,
    USCRIPT_CAUCASIAN_ALBANIAN = 159,
    USCRIPT_MAHAJANI = 160,
    USCRIPT_AHOM = 161,
    USCRIPT_HATRAN = 162,
    USCRIPT_MODI = 163,
    USCRIPT_MULTANI = 164,
    USCRIPT_PAU_CIN_HAU = 165,
    USCRIPT_SIDDHAM = 166,
    USCRIPT_ADLAM = 167,
    USCRIPT_BHAIKSUKI = 168,
    USCRIPT_MARCHEN = 169,
    USCRIPT_NEWA = 170,
    USCRIPT_OSAGE = 171,
    USCRIPT_HAN_WITH_BOPOMOFO = 172,
    USCRIPT_JAMO = 173,
    USCRIPT_SYMBOLS_EMOJI = 174,
    USCRIPT_MASARAM_GONDI = 175,
    USCRIPT_SOYOMBO = 176,
    USCRIPT_ZANABAZAR_SQUARE = 177,
    USCRIPT_DOGRA = 178,
    USCRIPT_GUNJALA_GONDI = 179,
    USCRIPT_MAKASAR = 180,
    USCRIPT_MEDEFAIDRIN = 181,
    USCRIPT_HANIFI_ROHINGYA = 182,
    USCRIPT_SOGDIAN = 183,
    USCRIPT_OLD_SOGDIAN = 184,
    USCRIPT_ELYMAIC = 185,
    USCRIPT_NYIAKENG_PUACHUE_HMONG = 186,
    USCRIPT_NANDINAGARI = 187,
    USCRIPT_WANCHO = 188,
} UScriptCode;

typedef enum {
    USCRIPT_USAGE_NOT_ENCODED = 0,
    USCRIPT_USAGE_UNKNOWN = 1,
    USCRIPT_USAGE_EXCLUDED = 2,
    USCRIPT_USAGE_LIMITED_USE = 3,
    USCRIPT_USAGE_ASPIRATIONAL = 4,
    USCRIPT_USAGE_RECOMMENDED = 5,
} UScriptUsage;

typedef int UReplaceableCallbacks;

typedef int UFieldPosition;

typedef enum {
    UITER_START = 0,
    UITER_CURRENT = 1,
    UITER_LIMIT = 2,
    UITER_ZERO = 3,
    UITER_LENGTH = 4,
} UCharIteratorOrigin;

typedef int UCharIteratorGetIndex;

typedef int UCharIteratorMove;

typedef int UCharIteratorHasNext;

typedef int UCharIteratorHasPrevious;

typedef int UCharIteratorCurrent;

typedef int UCharIteratorNext;

typedef int UCharIteratorPrevious;

typedef int UCharIteratorReserved;

typedef int UCharIteratorGetState;

typedef int UCharIteratorSetState;

typedef int UCharIterator;

typedef enum {
    ULOC_ACTUAL_LOCALE = 0,
    ULOC_VALID_LOCALE = 1,
} ULocDataLocaleType;

typedef enum {
    ULOC_LAYOUT_LTR = 0,
    ULOC_LAYOUT_RTL = 1,
    ULOC_LAYOUT_TTB = 2,
    ULOC_LAYOUT_BTT = 3,
    ULOC_LAYOUT_UNKNOWN = 4,
} ULayoutType;

typedef enum {
    ULOC_ACCEPT_FAILED = 0,
    ULOC_ACCEPT_VALID = 1,
    ULOC_ACCEPT_FALLBACK = 2,
} UAcceptResult;

typedef enum {
    URES_NONE = -1,
    URES_STRING = 0,
    URES_BINARY = 1,
    URES_TABLE = 2,
    URES_ALIAS = 3,
    URES_INT = 7,
    URES_ARRAY = 8,
    URES_INT_VECTOR = 14,
} UResType;

typedef enum {
    UDISPCTX_TYPE_DIALECT_HANDLING = 0,
    UDISPCTX_TYPE_CAPITALIZATION = 1,
    UDISPCTX_TYPE_DISPLAY_LENGTH = 2,
    UDISPCTX_TYPE_SUBSTITUTE_HANDLING = 3,
} UDisplayContextType;

typedef enum {
    UDISPCTX_STANDARD_NAMES = 0,
    UDISPCTX_DIALECT_NAMES = 1,
    UDISPCTX_CAPITALIZATION_NONE = 256,
    UDISPCTX_CAPITALIZATION_FOR_MIDDLE_OF_SENTENCE = 257,
    UDISPCTX_CAPITALIZATION_FOR_BEGINNING_OF_SENTENCE = 258,
    UDISPCTX_CAPITALIZATION_FOR_UI_LIST_OR_MENU = 259,
    UDISPCTX_CAPITALIZATION_FOR_STANDALONE = 260,
    UDISPCTX_LENGTH_FULL = 512,
    UDISPCTX_LENGTH_SHORT = 513,
    UDISPCTX_SUBSTITUTE = 768,
    UDISPCTX_NO_SUBSTITUTE = 769,
} UDisplayContext;

typedef enum {
    ULDN_STANDARD_NAMES = 0,
    ULDN_DIALECT_NAMES = 1,
} UDialectHandling;

typedef enum {
    UCURR_USAGE_STANDARD = 0,
    UCURR_USAGE_CASH = 1,
} UCurrencyUsage;

typedef enum {
    UCURR_SYMBOL_NAME = 0,
    UCURR_LONG_NAME = 1,
    UCURR_NARROW_SYMBOL_NAME = 2,
} UCurrNameStyle;

typedef enum {
    UCURR_ALL = 2147483647,
    UCURR_COMMON = 1,
    UCURR_UNCOMMON = 2,
    UCURR_DEPRECATED = 4,
    UCURR_NON_DEPRECATED = 8,
} UCurrCurrencyType;

typedef enum {
    UCNV_UNASSIGNED = 0,
    UCNV_ILLEGAL = 1,
    UCNV_IRREGULAR = 2,
    UCNV_RESET = 3,
    UCNV_CLOSE = 4,
    UCNV_CLONE = 5,
} UConverterCallbackReason;

typedef int UConverterFromUnicodeArgs;

typedef int UConverterToUnicodeArgs;

typedef enum {
    UCNV_UNSUPPORTED_CONVERTER = -1,
    UCNV_SBCS = 0,
    UCNV_DBCS = 1,
    UCNV_MBCS = 2,
    UCNV_LATIN_1 = 3,
    UCNV_UTF8 = 4,
    UCNV_UTF16_BigEndian = 5,
    UCNV_UTF16_LittleEndian = 6,
    UCNV_UTF32_BigEndian = 7,
    UCNV_UTF32_LittleEndian = 8,
    UCNV_EBCDIC_STATEFUL = 9,
    UCNV_ISO_2022 = 10,
    UCNV_LMBCS_1 = 11,
    UCNV_LMBCS_2 = 12,
    UCNV_LMBCS_3 = 13,
    UCNV_LMBCS_4 = 14,
    UCNV_LMBCS_5 = 15,
    UCNV_LMBCS_6 = 16,
    UCNV_LMBCS_8 = 17,
    UCNV_LMBCS_11 = 18,
    UCNV_LMBCS_16 = 19,
    UCNV_LMBCS_17 = 20,
    UCNV_LMBCS_18 = 21,
    UCNV_LMBCS_19 = 22,
    UCNV_LMBCS_LAST = 22,
    UCNV_HZ = 23,
    UCNV_SCSU = 24,
    UCNV_ISCII = 25,
    UCNV_US_ASCII = 26,
    UCNV_UTF7 = 27,
    UCNV_BOCU1 = 28,
    UCNV_UTF16 = 29,
    UCNV_UTF32 = 30,
    UCNV_CESU8 = 31,
    UCNV_IMAP_MAILBOX = 32,
    UCNV_COMPOUND_TEXT = 33,
    UCNV_NUMBER_OF_SUPPORTED_CONVERTER_TYPES = 34,
} UConverterType;

typedef enum {
    UCNV_UNKNOWN = -1,
    UCNV_IBM = 0,
} UConverterPlatform;

typedef int UConverterToUCallback;

typedef int UConverterFromUCallback;

typedef enum {
    UCNV_ROUNDTRIP_SET = 0,
    UCNV_ROUNDTRIP_AND_FALLBACK_SET = 1,
} UConverterUnicodeSet;

typedef int UMemAllocFn;

typedef int UMemReallocFn;

typedef int UMemFreeFn;

typedef enum {
    UCHAR_ALPHABETIC = 0,
    UCHAR_BINARY_START = 0,
    UCHAR_ASCII_HEX_DIGIT = 1,
    UCHAR_BIDI_CONTROL = 2,
    UCHAR_BIDI_MIRRORED = 3,
    UCHAR_DASH = 4,
    UCHAR_DEFAULT_IGNORABLE_CODE_POINT = 5,
    UCHAR_DEPRECATED = 6,
    UCHAR_DIACRITIC = 7,
    UCHAR_EXTENDER = 8,
    UCHAR_FULL_COMPOSITION_EXCLUSION = 9,
    UCHAR_GRAPHEME_BASE = 10,
    UCHAR_GRAPHEME_EXTEND = 11,
    UCHAR_GRAPHEME_LINK = 12,
    UCHAR_HEX_DIGIT = 13,
    UCHAR_HYPHEN = 14,
    UCHAR_ID_CONTINUE = 15,
    UCHAR_ID_START = 16,
    UCHAR_IDEOGRAPHIC = 17,
    UCHAR_IDS_BINARY_OPERATOR = 18,
    UCHAR_IDS_TRINARY_OPERATOR = 19,
    UCHAR_JOIN_CONTROL = 20,
    UCHAR_LOGICAL_ORDER_EXCEPTION = 21,
    UCHAR_LOWERCASE = 22,
    UCHAR_MATH = 23,
    UCHAR_NONCHARACTER_CODE_POINT = 24,
    UCHAR_QUOTATION_MARK = 25,
    UCHAR_RADICAL = 26,
    UCHAR_SOFT_DOTTED = 27,
    UCHAR_TERMINAL_PUNCTUATION = 28,
    UCHAR_UNIFIED_IDEOGRAPH = 29,
    UCHAR_UPPERCASE = 30,
    UCHAR_WHITE_SPACE = 31,
    UCHAR_XID_CONTINUE = 32,
    UCHAR_XID_START = 33,
    UCHAR_CASE_SENSITIVE = 34,
    UCHAR_S_TERM = 35,
    UCHAR_VARIATION_SELECTOR = 36,
    UCHAR_NFD_INERT = 37,
    UCHAR_NFKD_INERT = 38,
    UCHAR_NFC_INERT = 39,
    UCHAR_NFKC_INERT = 40,
    UCHAR_SEGMENT_STARTER = 41,
    UCHAR_PATTERN_SYNTAX = 42,
    UCHAR_PATTERN_WHITE_SPACE = 43,
    UCHAR_POSIX_ALNUM = 44,
    UCHAR_POSIX_BLANK = 45,
    UCHAR_POSIX_GRAPH = 46,
    UCHAR_POSIX_PRINT = 47,
    UCHAR_POSIX_XDIGIT = 48,
    UCHAR_CASED = 49,
    UCHAR_CASE_IGNORABLE = 50,
    UCHAR_CHANGES_WHEN_LOWERCASED = 51,
    UCHAR_CHANGES_WHEN_UPPERCASED = 52,
    UCHAR_CHANGES_WHEN_TITLECASED = 53,
    UCHAR_CHANGES_WHEN_CASEFOLDED = 54,
    UCHAR_CHANGES_WHEN_CASEMAPPED = 55,
    UCHAR_CHANGES_WHEN_NFKC_CASEFOLDED = 56,
    UCHAR_EMOJI = 57,
    UCHAR_EMOJI_PRESENTATION = 58,
    UCHAR_EMOJI_MODIFIER = 59,
    UCHAR_EMOJI_MODIFIER_BASE = 60,
    UCHAR_EMOJI_COMPONENT = 61,
    UCHAR_REGIONAL_INDICATOR = 62,
    UCHAR_PREPENDED_CONCATENATION_MARK = 63,
    UCHAR_EXTENDED_PICTOGRAPHIC = 64,
    UCHAR_BIDI_CLASS = 4096,
    UCHAR_INT_START = 4096,
    UCHAR_BLOCK = 4097,
    UCHAR_CANONICAL_COMBINING_CLASS = 4098,
    UCHAR_DECOMPOSITION_TYPE = 4099,
    UCHAR_EAST_ASIAN_WIDTH = 4100,
    UCHAR_GENERAL_CATEGORY = 4101,
    UCHAR_JOINING_GROUP = 4102,
    UCHAR_JOINING_TYPE = 4103,
    UCHAR_LINE_BREAK = 4104,
    UCHAR_NUMERIC_TYPE = 4105,
    UCHAR_SCRIPT = 4106,
    UCHAR_HANGUL_SYLLABLE_TYPE = 4107,
    UCHAR_NFD_QUICK_CHECK = 4108,
    UCHAR_NFKD_QUICK_CHECK = 4109,
    UCHAR_NFC_QUICK_CHECK = 4110,
    UCHAR_NFKC_QUICK_CHECK = 4111,
    UCHAR_LEAD_CANONICAL_COMBINING_CLASS = 4112,
    UCHAR_TRAIL_CANONICAL_COMBINING_CLASS = 4113,
    UCHAR_GRAPHEME_CLUSTER_BREAK = 4114,
    UCHAR_SENTENCE_BREAK = 4115,
    UCHAR_WORD_BREAK = 4116,
    UCHAR_BIDI_PAIRED_BRACKET_TYPE = 4117,
    UCHAR_INDIC_POSITIONAL_CATEGORY = 4118,
    UCHAR_INDIC_SYLLABIC_CATEGORY = 4119,
    UCHAR_VERTICAL_ORIENTATION = 4120,
    UCHAR_GENERAL_CATEGORY_MASK = 8192,
    UCHAR_MASK_START = 8192,
    UCHAR_NUMERIC_VALUE = 12288,
    UCHAR_DOUBLE_START = 12288,
    UCHAR_AGE = 16384,
    UCHAR_STRING_START = 16384,
    UCHAR_BIDI_MIRRORING_GLYPH = 16385,
    UCHAR_CASE_FOLDING = 16386,
    UCHAR_LOWERCASE_MAPPING = 16388,
    UCHAR_NAME = 16389,
    UCHAR_SIMPLE_CASE_FOLDING = 16390,
    UCHAR_SIMPLE_LOWERCASE_MAPPING = 16391,
    UCHAR_SIMPLE_TITLECASE_MAPPING = 16392,
    UCHAR_SIMPLE_UPPERCASE_MAPPING = 16393,
    UCHAR_TITLECASE_MAPPING = 16394,
    UCHAR_UPPERCASE_MAPPING = 16396,
    UCHAR_BIDI_PAIRED_BRACKET = 16397,
    UCHAR_SCRIPT_EXTENSIONS = 28672,
    UCHAR_OTHER_PROPERTY_START = 28672,
    UCHAR_INVALID_CODE = -1,
} UProperty;

typedef enum {
    U_UNASSIGNED = 0,
    U_GENERAL_OTHER_TYPES = 0,
    U_UPPERCASE_LETTER = 1,
    U_LOWERCASE_LETTER = 2,
    U_TITLECASE_LETTER = 3,
    U_MODIFIER_LETTER = 4,
    U_OTHER_LETTER = 5,
    U_NON_SPACING_MARK = 6,
    U_ENCLOSING_MARK = 7,
    U_COMBINING_SPACING_MARK = 8,
    U_DECIMAL_DIGIT_NUMBER = 9,
    U_LETTER_NUMBER = 10,
    U_OTHER_NUMBER = 11,
    U_SPACE_SEPARATOR = 12,
    U_LINE_SEPARATOR = 13,
    U_PARAGRAPH_SEPARATOR = 14,
    U_CONTROL_CHAR = 15,
    U_FORMAT_CHAR = 16,
    U_PRIVATE_USE_CHAR = 17,
    U_SURROGATE = 18,
    U_DASH_PUNCTUATION = 19,
    U_START_PUNCTUATION = 20,
    U_END_PUNCTUATION = 21,
    U_CONNECTOR_PUNCTUATION = 22,
    U_OTHER_PUNCTUATION = 23,
    U_MATH_SYMBOL = 24,
    U_CURRENCY_SYMBOL = 25,
    U_MODIFIER_SYMBOL = 26,
    U_OTHER_SYMBOL = 27,
    U_INITIAL_PUNCTUATION = 28,
    U_FINAL_PUNCTUATION = 29,
    U_CHAR_CATEGORY_COUNT = 30,
} UCharCategory;

typedef enum {
    U_LEFT_TO_RIGHT = 0,
    U_RIGHT_TO_LEFT = 1,
    U_EUROPEAN_NUMBER = 2,
    U_EUROPEAN_NUMBER_SEPARATOR = 3,
    U_EUROPEAN_NUMBER_TERMINATOR = 4,
    U_ARABIC_NUMBER = 5,
    U_COMMON_NUMBER_SEPARATOR = 6,
    U_BLOCK_SEPARATOR = 7,
    U_SEGMENT_SEPARATOR = 8,
    U_WHITE_SPACE_NEUTRAL = 9,
    U_OTHER_NEUTRAL = 10,
    U_LEFT_TO_RIGHT_EMBEDDING = 11,
    U_LEFT_TO_RIGHT_OVERRIDE = 12,
    U_RIGHT_TO_LEFT_ARABIC = 13,
    U_RIGHT_TO_LEFT_EMBEDDING = 14,
    U_RIGHT_TO_LEFT_OVERRIDE = 15,
    U_POP_DIRECTIONAL_FORMAT = 16,
    U_DIR_NON_SPACING_MARK = 17,
    U_BOUNDARY_NEUTRAL = 18,
    U_FIRST_STRONG_ISOLATE = 19,
    U_LEFT_TO_RIGHT_ISOLATE = 20,
    U_RIGHT_TO_LEFT_ISOLATE = 21,
    U_POP_DIRECTIONAL_ISOLATE = 22,
} UCharDirection;

typedef enum {
    U_BPT_NONE = 0,
    U_BPT_OPEN = 1,
    U_BPT_CLOSE = 2,
} UBidiPairedBracketType;

typedef enum {
    UBLOCK_NO_BLOCK = 0,
    UBLOCK_BASIC_LATIN = 1,
    UBLOCK_LATIN_1_SUPPLEMENT = 2,
    UBLOCK_LATIN_EXTENDED_A = 3,
    UBLOCK_LATIN_EXTENDED_B = 4,
    UBLOCK_IPA_EXTENSIONS = 5,
    UBLOCK_SPACING_MODIFIER_LETTERS = 6,
    UBLOCK_COMBINING_DIACRITICAL_MARKS = 7,
    UBLOCK_GREEK = 8,
    UBLOCK_CYRILLIC = 9,
    UBLOCK_ARMENIAN = 10,
    UBLOCK_HEBREW = 11,
    UBLOCK_ARABIC = 12,
    UBLOCK_SYRIAC = 13,
    UBLOCK_THAANA = 14,
    UBLOCK_DEVANAGARI = 15,
    UBLOCK_BENGALI = 16,
    UBLOCK_GURMUKHI = 17,
    UBLOCK_GUJARATI = 18,
    UBLOCK_ORIYA = 19,
    UBLOCK_TAMIL = 20,
    UBLOCK_TELUGU = 21,
    UBLOCK_KANNADA = 22,
    UBLOCK_MALAYALAM = 23,
    UBLOCK_SINHALA = 24,
    UBLOCK_THAI = 25,
    UBLOCK_LAO = 26,
    UBLOCK_TIBETAN = 27,
    UBLOCK_MYANMAR = 28,
    UBLOCK_GEORGIAN = 29,
    UBLOCK_HANGUL_JAMO = 30,
    UBLOCK_ETHIOPIC = 31,
    UBLOCK_CHEROKEE = 32,
    UBLOCK_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS = 33,
    UBLOCK_OGHAM = 34,
    UBLOCK_RUNIC = 35,
    UBLOCK_KHMER = 36,
    UBLOCK_MONGOLIAN = 37,
    UBLOCK_LATIN_EXTENDED_ADDITIONAL = 38,
    UBLOCK_GREEK_EXTENDED = 39,
    UBLOCK_GENERAL_PUNCTUATION = 40,
    UBLOCK_SUPERSCRIPTS_AND_SUBSCRIPTS = 41,
    UBLOCK_CURRENCY_SYMBOLS = 42,
    UBLOCK_COMBINING_MARKS_FOR_SYMBOLS = 43,
    UBLOCK_LETTERLIKE_SYMBOLS = 44,
    UBLOCK_NUMBER_FORMS = 45,
    UBLOCK_ARROWS = 46,
    UBLOCK_MATHEMATICAL_OPERATORS = 47,
    UBLOCK_MISCELLANEOUS_TECHNICAL = 48,
    UBLOCK_CONTROL_PICTURES = 49,
    UBLOCK_OPTICAL_CHARACTER_RECOGNITION = 50,
    UBLOCK_ENCLOSED_ALPHANUMERICS = 51,
    UBLOCK_BOX_DRAWING = 52,
    UBLOCK_BLOCK_ELEMENTS = 53,
    UBLOCK_GEOMETRIC_SHAPES = 54,
    UBLOCK_MISCELLANEOUS_SYMBOLS = 55,
    UBLOCK_DINGBATS = 56,
    UBLOCK_BRAILLE_PATTERNS = 57,
    UBLOCK_CJK_RADICALS_SUPPLEMENT = 58,
    UBLOCK_KANGXI_RADICALS = 59,
    UBLOCK_IDEOGRAPHIC_DESCRIPTION_CHARACTERS = 60,
    UBLOCK_CJK_SYMBOLS_AND_PUNCTUATION = 61,
    UBLOCK_HIRAGANA = 62,
    UBLOCK_KATAKANA = 63,
    UBLOCK_BOPOMOFO = 64,
    UBLOCK_HANGUL_COMPATIBILITY_JAMO = 65,
    UBLOCK_KANBUN = 66,
    UBLOCK_BOPOMOFO_EXTENDED = 67,
    UBLOCK_ENCLOSED_CJK_LETTERS_AND_MONTHS = 68,
    UBLOCK_CJK_COMPATIBILITY = 69,
    UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A = 70,
    UBLOCK_CJK_UNIFIED_IDEOGRAPHS = 71,
    UBLOCK_YI_SYLLABLES = 72,
    UBLOCK_YI_RADICALS = 73,
    UBLOCK_HANGUL_SYLLABLES = 74,
    UBLOCK_HIGH_SURROGATES = 75,
    UBLOCK_HIGH_PRIVATE_USE_SURROGATES = 76,
    UBLOCK_LOW_SURROGATES = 77,
    UBLOCK_PRIVATE_USE_AREA = 78,
    UBLOCK_PRIVATE_USE = 78,
    UBLOCK_CJK_COMPATIBILITY_IDEOGRAPHS = 79,
    UBLOCK_ALPHABETIC_PRESENTATION_FORMS = 80,
    UBLOCK_ARABIC_PRESENTATION_FORMS_A = 81,
    UBLOCK_COMBINING_HALF_MARKS = 82,
    UBLOCK_CJK_COMPATIBILITY_FORMS = 83,
    UBLOCK_SMALL_FORM_VARIANTS = 84,
    UBLOCK_ARABIC_PRESENTATION_FORMS_B = 85,
    UBLOCK_SPECIALS = 86,
    UBLOCK_HALFWIDTH_AND_FULLWIDTH_FORMS = 87,
    UBLOCK_OLD_ITALIC = 88,
    UBLOCK_GOTHIC = 89,
    UBLOCK_DESERET = 90,
    UBLOCK_BYZANTINE_MUSICAL_SYMBOLS = 91,
    UBLOCK_MUSICAL_SYMBOLS = 92,
    UBLOCK_MATHEMATICAL_ALPHANUMERIC_SYMBOLS = 93,
    UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B = 94,
    UBLOCK_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT = 95,
    UBLOCK_TAGS = 96,
    UBLOCK_CYRILLIC_SUPPLEMENT = 97,
    UBLOCK_CYRILLIC_SUPPLEMENTARY = 97,
    UBLOCK_TAGALOG = 98,
    UBLOCK_HANUNOO = 99,
    UBLOCK_BUHID = 100,
    UBLOCK_TAGBANWA = 101,
    UBLOCK_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A = 102,
    UBLOCK_SUPPLEMENTAL_ARROWS_A = 103,
    UBLOCK_SUPPLEMENTAL_ARROWS_B = 104,
    UBLOCK_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B = 105,
    UBLOCK_SUPPLEMENTAL_MATHEMATICAL_OPERATORS = 106,
    UBLOCK_KATAKANA_PHONETIC_EXTENSIONS = 107,
    UBLOCK_VARIATION_SELECTORS = 108,
    UBLOCK_SUPPLEMENTARY_PRIVATE_USE_AREA_A = 109,
    UBLOCK_SUPPLEMENTARY_PRIVATE_USE_AREA_B = 110,
    UBLOCK_LIMBU = 111,
    UBLOCK_TAI_LE = 112,
    UBLOCK_KHMER_SYMBOLS = 113,
    UBLOCK_PHONETIC_EXTENSIONS = 114,
    UBLOCK_MISCELLANEOUS_SYMBOLS_AND_ARROWS = 115,
    UBLOCK_YIJING_HEXAGRAM_SYMBOLS = 116,
    UBLOCK_LINEAR_B_SYLLABARY = 117,
    UBLOCK_LINEAR_B_IDEOGRAMS = 118,
    UBLOCK_AEGEAN_NUMBERS = 119,
    UBLOCK_UGARITIC = 120,
    UBLOCK_SHAVIAN = 121,
    UBLOCK_OSMANYA = 122,
    UBLOCK_CYPRIOT_SYLLABARY = 123,
    UBLOCK_TAI_XUAN_JING_SYMBOLS = 124,
    UBLOCK_VARIATION_SELECTORS_SUPPLEMENT = 125,
    UBLOCK_ANCIENT_GREEK_MUSICAL_NOTATION = 126,
    UBLOCK_ANCIENT_GREEK_NUMBERS = 127,
    UBLOCK_ARABIC_SUPPLEMENT = 128,
    UBLOCK_BUGINESE = 129,
    UBLOCK_CJK_STROKES = 130,
    UBLOCK_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT = 131,
    UBLOCK_COPTIC = 132,
    UBLOCK_ETHIOPIC_EXTENDED = 133,
    UBLOCK_ETHIOPIC_SUPPLEMENT = 134,
    UBLOCK_GEORGIAN_SUPPLEMENT = 135,
    UBLOCK_GLAGOLITIC = 136,
    UBLOCK_KHAROSHTHI = 137,
    UBLOCK_MODIFIER_TONE_LETTERS = 138,
    UBLOCK_NEW_TAI_LUE = 139,
    UBLOCK_OLD_PERSIAN = 140,
    UBLOCK_PHONETIC_EXTENSIONS_SUPPLEMENT = 141,
    UBLOCK_SUPPLEMENTAL_PUNCTUATION = 142,
    UBLOCK_SYLOTI_NAGRI = 143,
    UBLOCK_TIFINAGH = 144,
    UBLOCK_VERTICAL_FORMS = 145,
    UBLOCK_NKO = 146,
    UBLOCK_BALINESE = 147,
    UBLOCK_LATIN_EXTENDED_C = 148,
    UBLOCK_LATIN_EXTENDED_D = 149,
    UBLOCK_PHAGS_PA = 150,
    UBLOCK_PHOENICIAN = 151,
    UBLOCK_CUNEIFORM = 152,
    UBLOCK_CUNEIFORM_NUMBERS_AND_PUNCTUATION = 153,
    UBLOCK_COUNTING_ROD_NUMERALS = 154,
    UBLOCK_SUNDANESE = 155,
    UBLOCK_LEPCHA = 156,
    UBLOCK_OL_CHIKI = 157,
    UBLOCK_CYRILLIC_EXTENDED_A = 158,
    UBLOCK_VAI = 159,
    UBLOCK_CYRILLIC_EXTENDED_B = 160,
    UBLOCK_SAURASHTRA = 161,
    UBLOCK_KAYAH_LI = 162,
    UBLOCK_REJANG = 163,
    UBLOCK_CHAM = 164,
    UBLOCK_ANCIENT_SYMBOLS = 165,
    UBLOCK_PHAISTOS_DISC = 166,
    UBLOCK_LYCIAN = 167,
    UBLOCK_CARIAN = 168,
    UBLOCK_LYDIAN = 169,
    UBLOCK_MAHJONG_TILES = 170,
    UBLOCK_DOMINO_TILES = 171,
    UBLOCK_SAMARITAN = 172,
    UBLOCK_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED = 173,
    UBLOCK_TAI_THAM = 174,
    UBLOCK_VEDIC_EXTENSIONS = 175,
    UBLOCK_LISU = 176,
    UBLOCK_BAMUM = 177,
    UBLOCK_COMMON_INDIC_NUMBER_FORMS = 178,
    UBLOCK_DEVANAGARI_EXTENDED = 179,
    UBLOCK_HANGUL_JAMO_EXTENDED_A = 180,
    UBLOCK_JAVANESE = 181,
    UBLOCK_MYANMAR_EXTENDED_A = 182,
    UBLOCK_TAI_VIET = 183,
    UBLOCK_MEETEI_MAYEK = 184,
    UBLOCK_HANGUL_JAMO_EXTENDED_B = 185,
    UBLOCK_IMPERIAL_ARAMAIC = 186,
    UBLOCK_OLD_SOUTH_ARABIAN = 187,
    UBLOCK_AVESTAN = 188,
    UBLOCK_INSCRIPTIONAL_PARTHIAN = 189,
    UBLOCK_INSCRIPTIONAL_PAHLAVI = 190,
    UBLOCK_OLD_TURKIC = 191,
    UBLOCK_RUMI_NUMERAL_SYMBOLS = 192,
    UBLOCK_KAITHI = 193,
    UBLOCK_EGYPTIAN_HIEROGLYPHS = 194,
    UBLOCK_ENCLOSED_ALPHANUMERIC_SUPPLEMENT = 195,
    UBLOCK_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT = 196,
    UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C = 197,
    UBLOCK_MANDAIC = 198,
    UBLOCK_BATAK = 199,
    UBLOCK_ETHIOPIC_EXTENDED_A = 200,
    UBLOCK_BRAHMI = 201,
    UBLOCK_BAMUM_SUPPLEMENT = 202,
    UBLOCK_KANA_SUPPLEMENT = 203,
    UBLOCK_PLAYING_CARDS = 204,
    UBLOCK_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS = 205,
    UBLOCK_EMOTICONS = 206,
    UBLOCK_TRANSPORT_AND_MAP_SYMBOLS = 207,
    UBLOCK_ALCHEMICAL_SYMBOLS = 208,
    UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D = 209,
    UBLOCK_ARABIC_EXTENDED_A = 210,
    UBLOCK_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS = 211,
    UBLOCK_CHAKMA = 212,
    UBLOCK_MEETEI_MAYEK_EXTENSIONS = 213,
    UBLOCK_MEROITIC_CURSIVE = 214,
    UBLOCK_MEROITIC_HIEROGLYPHS = 215,
    UBLOCK_MIAO = 216,
    UBLOCK_SHARADA = 217,
    UBLOCK_SORA_SOMPENG = 218,
    UBLOCK_SUNDANESE_SUPPLEMENT = 219,
    UBLOCK_TAKRI = 220,
    UBLOCK_BASSA_VAH = 221,
    UBLOCK_CAUCASIAN_ALBANIAN = 222,
    UBLOCK_COPTIC_EPACT_NUMBERS = 223,
    UBLOCK_COMBINING_DIACRITICAL_MARKS_EXTENDED = 224,
    UBLOCK_DUPLOYAN = 225,
    UBLOCK_ELBASAN = 226,
    UBLOCK_GEOMETRIC_SHAPES_EXTENDED = 227,
    UBLOCK_GRANTHA = 228,
    UBLOCK_KHOJKI = 229,
    UBLOCK_KHUDAWADI = 230,
    UBLOCK_LATIN_EXTENDED_E = 231,
    UBLOCK_LINEAR_A = 232,
    UBLOCK_MAHAJANI = 233,
    UBLOCK_MANICHAEAN = 234,
    UBLOCK_MENDE_KIKAKUI = 235,
    UBLOCK_MODI = 236,
    UBLOCK_MRO = 237,
    UBLOCK_MYANMAR_EXTENDED_B = 238,
    UBLOCK_NABATAEAN = 239,
    UBLOCK_OLD_NORTH_ARABIAN = 240,
    UBLOCK_OLD_PERMIC = 241,
    UBLOCK_ORNAMENTAL_DINGBATS = 242,
    UBLOCK_PAHAWH_HMONG = 243,
    UBLOCK_PALMYRENE = 244,
    UBLOCK_PAU_CIN_HAU = 245,
    UBLOCK_PSALTER_PAHLAVI = 246,
    UBLOCK_SHORTHAND_FORMAT_CONTROLS = 247,
    UBLOCK_SIDDHAM = 248,
    UBLOCK_SINHALA_ARCHAIC_NUMBERS = 249,
    UBLOCK_SUPPLEMENTAL_ARROWS_C = 250,
    UBLOCK_TIRHUTA = 251,
    UBLOCK_WARANG_CITI = 252,
    UBLOCK_AHOM = 253,
    UBLOCK_ANATOLIAN_HIEROGLYPHS = 254,
    UBLOCK_CHEROKEE_SUPPLEMENT = 255,
    UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E = 256,
    UBLOCK_EARLY_DYNASTIC_CUNEIFORM = 257,
    UBLOCK_HATRAN = 258,
    UBLOCK_MULTANI = 259,
    UBLOCK_OLD_HUNGARIAN = 260,
    UBLOCK_SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS = 261,
    UBLOCK_SUTTON_SIGNWRITING = 262,
    UBLOCK_ADLAM = 263,
    UBLOCK_BHAIKSUKI = 264,
    UBLOCK_CYRILLIC_EXTENDED_C = 265,
    UBLOCK_GLAGOLITIC_SUPPLEMENT = 266,
    UBLOCK_IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION = 267,
    UBLOCK_MARCHEN = 268,
    UBLOCK_MONGOLIAN_SUPPLEMENT = 269,
    UBLOCK_NEWA = 270,
    UBLOCK_OSAGE = 271,
    UBLOCK_TANGUT = 272,
    UBLOCK_TANGUT_COMPONENTS = 273,
    UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F = 274,
    UBLOCK_KANA_EXTENDED_A = 275,
    UBLOCK_MASARAM_GONDI = 276,
    UBLOCK_NUSHU = 277,
    UBLOCK_SOYOMBO = 278,
    UBLOCK_SYRIAC_SUPPLEMENT = 279,
    UBLOCK_ZANABAZAR_SQUARE = 280,
    UBLOCK_CHESS_SYMBOLS = 281,
    UBLOCK_DOGRA = 282,
    UBLOCK_GEORGIAN_EXTENDED = 283,
    UBLOCK_GUNJALA_GONDI = 284,
    UBLOCK_HANIFI_ROHINGYA = 285,
    UBLOCK_INDIC_SIYAQ_NUMBERS = 286,
    UBLOCK_MAKASAR = 287,
    UBLOCK_MAYAN_NUMERALS = 288,
    UBLOCK_MEDEFAIDRIN = 289,
    UBLOCK_OLD_SOGDIAN = 290,
    UBLOCK_SOGDIAN = 291,
    UBLOCK_EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS = 292,
    UBLOCK_ELYMAIC = 293,
    UBLOCK_NANDINAGARI = 294,
    UBLOCK_NYIAKENG_PUACHUE_HMONG = 295,
    UBLOCK_OTTOMAN_SIYAQ_NUMBERS = 296,
    UBLOCK_SMALL_KANA_EXTENSION = 297,
    UBLOCK_SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A = 298,
    UBLOCK_TAMIL_SUPPLEMENT = 299,
    UBLOCK_WANCHO = 300,
    UBLOCK_INVALID_CODE = -1,
} UBlockCode;

typedef enum {
    U_EA_NEUTRAL = 0,
    U_EA_AMBIGUOUS = 1,
    U_EA_HALFWIDTH = 2,
    U_EA_FULLWIDTH = 3,
    U_EA_NARROW = 4,
    U_EA_WIDE = 5,
} UEastAsianWidth;

typedef enum {
    U_UNICODE_CHAR_NAME = 0,
    U_EXTENDED_CHAR_NAME = 2,
    U_CHAR_NAME_ALIAS = 3,
} UCharNameChoice;

typedef enum {
    U_SHORT_PROPERTY_NAME = 0,
    U_LONG_PROPERTY_NAME = 1,
} UPropertyNameChoice;

typedef enum {
    U_DT_NONE = 0,
    U_DT_CANONICAL = 1,
    U_DT_COMPAT = 2,
    U_DT_CIRCLE = 3,
    U_DT_FINAL = 4,
    U_DT_FONT = 5,
    U_DT_FRACTION = 6,
    U_DT_INITIAL = 7,
    U_DT_ISOLATED = 8,
    U_DT_MEDIAL = 9,
    U_DT_NARROW = 10,
    U_DT_NOBREAK = 11,
    U_DT_SMALL = 12,
    U_DT_SQUARE = 13,
    U_DT_SUB = 14,
    U_DT_SUPER = 15,
    U_DT_VERTICAL = 16,
    U_DT_WIDE = 17,
} UDecompositionType;

typedef enum {
    U_JT_NON_JOINING = 0,
    U_JT_JOIN_CAUSING = 1,
    U_JT_DUAL_JOINING = 2,
    U_JT_LEFT_JOINING = 3,
    U_JT_RIGHT_JOINING = 4,
    U_JT_TRANSPARENT = 5,
} UJoiningType;

typedef enum {
    U_JG_NO_JOINING_GROUP = 0,
    U_JG_AIN = 1,
    U_JG_ALAPH = 2,
    U_JG_ALEF = 3,
    U_JG_BEH = 4,
    U_JG_BETH = 5,
    U_JG_DAL = 6,
    U_JG_DALATH_RISH = 7,
    U_JG_E = 8,
    U_JG_FEH = 9,
    U_JG_FINAL_SEMKATH = 10,
    U_JG_GAF = 11,
    U_JG_GAMAL = 12,
    U_JG_HAH = 13,
    U_JG_TEH_MARBUTA_GOAL = 14,
    U_JG_HAMZA_ON_HEH_GOAL = 14,
    U_JG_HE = 15,
    U_JG_HEH = 16,
    U_JG_HEH_GOAL = 17,
    U_JG_HETH = 18,
    U_JG_KAF = 19,
    U_JG_KAPH = 20,
    U_JG_KNOTTED_HEH = 21,
    U_JG_LAM = 22,
    U_JG_LAMADH = 23,
    U_JG_MEEM = 24,
    U_JG_MIM = 25,
    U_JG_NOON = 26,
    U_JG_NUN = 27,
    U_JG_PE = 28,
    U_JG_QAF = 29,
    U_JG_QAPH = 30,
    U_JG_REH = 31,
    U_JG_REVERSED_PE = 32,
    U_JG_SAD = 33,
    U_JG_SADHE = 34,
    U_JG_SEEN = 35,
    U_JG_SEMKATH = 36,
    U_JG_SHIN = 37,
    U_JG_SWASH_KAF = 38,
    U_JG_SYRIAC_WAW = 39,
    U_JG_TAH = 40,
    U_JG_TAW = 41,
    U_JG_TEH_MARBUTA = 42,
    U_JG_TETH = 43,
    U_JG_WAW = 44,
    U_JG_YEH = 45,
    U_JG_YEH_BARREE = 46,
    U_JG_YEH_WITH_TAIL = 47,
    U_JG_YUDH = 48,
    U_JG_YUDH_HE = 49,
    U_JG_ZAIN = 50,
    U_JG_FE = 51,
    U_JG_KHAPH = 52,
    U_JG_ZHAIN = 53,
    U_JG_BURUSHASKI_YEH_BARREE = 54,
    U_JG_FARSI_YEH = 55,
    U_JG_NYA = 56,
    U_JG_ROHINGYA_YEH = 57,
    U_JG_MANICHAEAN_ALEPH = 58,
    U_JG_MANICHAEAN_AYIN = 59,
    U_JG_MANICHAEAN_BETH = 60,
    U_JG_MANICHAEAN_DALETH = 61,
    U_JG_MANICHAEAN_DHAMEDH = 62,
    U_JG_MANICHAEAN_FIVE = 63,
    U_JG_MANICHAEAN_GIMEL = 64,
    U_JG_MANICHAEAN_HETH = 65,
    U_JG_MANICHAEAN_HUNDRED = 66,
    U_JG_MANICHAEAN_KAPH = 67,
    U_JG_MANICHAEAN_LAMEDH = 68,
    U_JG_MANICHAEAN_MEM = 69,
    U_JG_MANICHAEAN_NUN = 70,
    U_JG_MANICHAEAN_ONE = 71,
    U_JG_MANICHAEAN_PE = 72,
    U_JG_MANICHAEAN_QOPH = 73,
    U_JG_MANICHAEAN_RESH = 74,
    U_JG_MANICHAEAN_SADHE = 75,
    U_JG_MANICHAEAN_SAMEKH = 76,
    U_JG_MANICHAEAN_TAW = 77,
    U_JG_MANICHAEAN_TEN = 78,
    U_JG_MANICHAEAN_TETH = 79,
    U_JG_MANICHAEAN_THAMEDH = 80,
    U_JG_MANICHAEAN_TWENTY = 81,
    U_JG_MANICHAEAN_WAW = 82,
    U_JG_MANICHAEAN_YODH = 83,
    U_JG_MANICHAEAN_ZAYIN = 84,
    U_JG_STRAIGHT_WAW = 85,
    U_JG_AFRICAN_FEH = 86,
    U_JG_AFRICAN_NOON = 87,
    U_JG_AFRICAN_QAF = 88,
    U_JG_MALAYALAM_BHA = 89,
    U_JG_MALAYALAM_JA = 90,
    U_JG_MALAYALAM_LLA = 91,
    U_JG_MALAYALAM_LLLA = 92,
    U_JG_MALAYALAM_NGA = 93,
    U_JG_MALAYALAM_NNA = 94,
    U_JG_MALAYALAM_NNNA = 95,
    U_JG_MALAYALAM_NYA = 96,
    U_JG_MALAYALAM_RA = 97,
    U_JG_MALAYALAM_SSA = 98,
    U_JG_MALAYALAM_TTA = 99,
    U_JG_HANIFI_ROHINGYA_KINNA_YA = 100,
    U_JG_HANIFI_ROHINGYA_PA = 101,
} UJoiningGroup;

typedef enum {
    U_GCB_OTHER = 0,
    U_GCB_CONTROL = 1,
    U_GCB_CR = 2,
    U_GCB_EXTEND = 3,
    U_GCB_L = 4,
    U_GCB_LF = 5,
    U_GCB_LV = 6,
    U_GCB_LVT = 7,
    U_GCB_T = 8,
    U_GCB_V = 9,
    U_GCB_SPACING_MARK = 10,
    U_GCB_PREPEND = 11,
    U_GCB_REGIONAL_INDICATOR = 12,
    U_GCB_E_BASE = 13,
    U_GCB_E_BASE_GAZ = 14,
    U_GCB_E_MODIFIER = 15,
    U_GCB_GLUE_AFTER_ZWJ = 16,
    U_GCB_ZWJ = 17,
} UGraphemeClusterBreak;

typedef enum {
    U_WB_OTHER = 0,
    U_WB_ALETTER = 1,
    U_WB_FORMAT = 2,
    U_WB_KATAKANA = 3,
    U_WB_MIDLETTER = 4,
    U_WB_MIDNUM = 5,
    U_WB_NUMERIC = 6,
    U_WB_EXTENDNUMLET = 7,
    U_WB_CR = 8,
    U_WB_EXTEND = 9,
    U_WB_LF = 10,
    U_WB_MIDNUMLET = 11,
    U_WB_NEWLINE = 12,
    U_WB_REGIONAL_INDICATOR = 13,
    U_WB_HEBREW_LETTER = 14,
    U_WB_SINGLE_QUOTE = 15,
    U_WB_DOUBLE_QUOTE = 16,
    U_WB_E_BASE = 17,
    U_WB_E_BASE_GAZ = 18,
    U_WB_E_MODIFIER = 19,
    U_WB_GLUE_AFTER_ZWJ = 20,
    U_WB_ZWJ = 21,
    U_WB_WSEGSPACE = 22,
} UWordBreakValues;

typedef enum {
    U_SB_OTHER = 0,
    U_SB_ATERM = 1,
    U_SB_CLOSE = 2,
    U_SB_FORMAT = 3,
    U_SB_LOWER = 4,
    U_SB_NUMERIC = 5,
    U_SB_OLETTER = 6,
    U_SB_SEP = 7,
    U_SB_SP = 8,
    U_SB_STERM = 9,
    U_SB_UPPER = 10,
    U_SB_CR = 11,
    U_SB_EXTEND = 12,
    U_SB_LF = 13,
    U_SB_SCONTINUE = 14,
} USentenceBreak;

typedef enum {
    U_LB_UNKNOWN = 0,
    U_LB_AMBIGUOUS = 1,
    U_LB_ALPHABETIC = 2,
    U_LB_BREAK_BOTH = 3,
    U_LB_BREAK_AFTER = 4,
    U_LB_BREAK_BEFORE = 5,
    U_LB_MANDATORY_BREAK = 6,
    U_LB_CONTINGENT_BREAK = 7,
    U_LB_CLOSE_PUNCTUATION = 8,
    U_LB_COMBINING_MARK = 9,
    U_LB_CARRIAGE_RETURN = 10,
    U_LB_EXCLAMATION = 11,
    U_LB_GLUE = 12,
    U_LB_HYPHEN = 13,
    U_LB_IDEOGRAPHIC = 14,
    U_LB_INSEPARABLE = 15,
    U_LB_INSEPERABLE = 15,
    U_LB_INFIX_NUMERIC = 16,
    U_LB_LINE_FEED = 17,
    U_LB_NONSTARTER = 18,
    U_LB_NUMERIC = 19,
    U_LB_OPEN_PUNCTUATION = 20,
    U_LB_POSTFIX_NUMERIC = 21,
    U_LB_PREFIX_NUMERIC = 22,
    U_LB_QUOTATION = 23,
    U_LB_COMPLEX_CONTEXT = 24,
    U_LB_SURROGATE = 25,
    U_LB_SPACE = 26,
    U_LB_BREAK_SYMBOLS = 27,
    U_LB_ZWSPACE = 28,
    U_LB_NEXT_LINE = 29,
    U_LB_WORD_JOINER = 30,
    U_LB_H2 = 31,
    U_LB_H3 = 32,
    U_LB_JL = 33,
    U_LB_JT = 34,
    U_LB_JV = 35,
    U_LB_CLOSE_PARENTHESIS = 36,
    U_LB_CONDITIONAL_JAPANESE_STARTER = 37,
    U_LB_HEBREW_LETTER = 38,
    U_LB_REGIONAL_INDICATOR = 39,
    U_LB_E_BASE = 40,
    U_LB_E_MODIFIER = 41,
    U_LB_ZWJ = 42,
} ULineBreak;

typedef enum {
    U_NT_NONE = 0,
    U_NT_DECIMAL = 1,
    U_NT_DIGIT = 2,
    U_NT_NUMERIC = 3,
} UNumericType;

typedef enum {
    U_HST_NOT_APPLICABLE = 0,
    U_HST_LEADING_JAMO = 1,
    U_HST_VOWEL_JAMO = 2,
    U_HST_TRAILING_JAMO = 3,
    U_HST_LV_SYLLABLE = 4,
    U_HST_LVT_SYLLABLE = 5,
} UHangulSyllableType;

typedef enum {
    U_INPC_NA = 0,
    U_INPC_BOTTOM = 1,
    U_INPC_BOTTOM_AND_LEFT = 2,
    U_INPC_BOTTOM_AND_RIGHT = 3,
    U_INPC_LEFT = 4,
    U_INPC_LEFT_AND_RIGHT = 5,
    U_INPC_OVERSTRUCK = 6,
    U_INPC_RIGHT = 7,
    U_INPC_TOP = 8,
    U_INPC_TOP_AND_BOTTOM = 9,
    U_INPC_TOP_AND_BOTTOM_AND_RIGHT = 10,
    U_INPC_TOP_AND_LEFT = 11,
    U_INPC_TOP_AND_LEFT_AND_RIGHT = 12,
    U_INPC_TOP_AND_RIGHT = 13,
    U_INPC_VISUAL_ORDER_LEFT = 14,
} UIndicPositionalCategory;

typedef enum {
    U_INSC_OTHER = 0,
    U_INSC_AVAGRAHA = 1,
    U_INSC_BINDU = 2,
    U_INSC_BRAHMI_JOINING_NUMBER = 3,
    U_INSC_CANTILLATION_MARK = 4,
    U_INSC_CONSONANT = 5,
    U_INSC_CONSONANT_DEAD = 6,
    U_INSC_CONSONANT_FINAL = 7,
    U_INSC_CONSONANT_HEAD_LETTER = 8,
    U_INSC_CONSONANT_INITIAL_POSTFIXED = 9,
    U_INSC_CONSONANT_KILLER = 10,
    U_INSC_CONSONANT_MEDIAL = 11,
    U_INSC_CONSONANT_PLACEHOLDER = 12,
    U_INSC_CONSONANT_PRECEDING_REPHA = 13,
    U_INSC_CONSONANT_PREFIXED = 14,
    U_INSC_CONSONANT_SUBJOINED = 15,
    U_INSC_CONSONANT_SUCCEEDING_REPHA = 16,
    U_INSC_CONSONANT_WITH_STACKER = 17,
    U_INSC_GEMINATION_MARK = 18,
    U_INSC_INVISIBLE_STACKER = 19,
    U_INSC_JOINER = 20,
    U_INSC_MODIFYING_LETTER = 21,
    U_INSC_NON_JOINER = 22,
    U_INSC_NUKTA = 23,
    U_INSC_NUMBER = 24,
    U_INSC_NUMBER_JOINER = 25,
    U_INSC_PURE_KILLER = 26,
    U_INSC_REGISTER_SHIFTER = 27,
    U_INSC_SYLLABLE_MODIFIER = 28,
    U_INSC_TONE_LETTER = 29,
    U_INSC_TONE_MARK = 30,
    U_INSC_VIRAMA = 31,
    U_INSC_VISARGA = 32,
    U_INSC_VOWEL = 33,
    U_INSC_VOWEL_DEPENDENT = 34,
    U_INSC_VOWEL_INDEPENDENT = 35,
} UIndicSyllabicCategory;

typedef enum {
    U_VO_ROTATED = 0,
    U_VO_TRANSFORMED_ROTATED = 1,
    U_VO_TRANSFORMED_UPRIGHT = 2,
    U_VO_UPRIGHT = 3,
} UVerticalOrientation;

typedef int UCharEnumTypeRange;

typedef int UEnumCharNamesFn;

typedef enum {
    UBIDI_LTR = 0,
    UBIDI_RTL = 1,
    UBIDI_MIXED = 2,
    UBIDI_NEUTRAL = 3,
} UBiDiDirection;

typedef enum {
    UBIDI_REORDER_DEFAULT = 0,
    UBIDI_REORDER_NUMBERS_SPECIAL = 1,
    UBIDI_REORDER_GROUP_NUMBERS_WITH_R = 2,
    UBIDI_REORDER_RUNS_ONLY = 3,
    UBIDI_REORDER_INVERSE_NUMBERS_AS_L = 4,
    UBIDI_REORDER_INVERSE_LIKE_DIRECT = 5,
    UBIDI_REORDER_INVERSE_FOR_NUMBERS_SPECIAL = 6,
} UBiDiReorderingMode;

typedef enum {
    UBIDI_OPTION_DEFAULT = 0,
    UBIDI_OPTION_INSERT_MARKS = 1,
    UBIDI_OPTION_REMOVE_CONTROLS = 2,
    UBIDI_OPTION_STREAMING = 4,
} UBiDiReorderingOption;

typedef int UBiDiClassCallback;

typedef enum {
    UBIDI_LOGICAL = 0,
    UBIDI_VISUAL = 1,
} UBiDiOrder;

typedef enum {
    UBIDI_MIRRORING_OFF = 0,
    UBIDI_MIRRORING_ON = 1,
} UBiDiMirroring;

typedef int UTextClone;

typedef int UTextNativeLength;

typedef int UTextAccess;

typedef int UTextExtract;

typedef int UTextReplace;

typedef int UTextCopy;

typedef int UTextMapOffsetToNative;

typedef int UTextMapNativeIndexToUTF16;

typedef int UTextClose;

typedef int UTextFuncs;

typedef int UText;

typedef enum {
    USET_SPAN_NOT_CONTAINED = 0,
    USET_SPAN_CONTAINED = 1,
    USET_SPAN_SIMPLE = 2,
} USetSpanCondition;

typedef int USerializedSet;

typedef enum {
    UNORM2_COMPOSE = 0,
    UNORM2_DECOMPOSE = 1,
    UNORM2_FCD = 2,
    UNORM2_COMPOSE_CONTIGUOUS = 3,
} UNormalization2Mode;

typedef enum {
    UNORM_NO = 0,
    UNORM_YES = 1,
    UNORM_MAYBE = 2,
} UNormalizationCheckResult;

typedef enum {
    UNORM_NONE = 1,
    UNORM_NFD = 2,
    UNORM_NFKD = 3,
    UNORM_NFC = 4,
    UNORM_DEFAULT = 4,
    UNORM_NFKC = 5,
    UNORM_FCD = 6,
    UNORM_MODE_COUNT = 7,
} UNormalizationMode;

typedef int UNESCAPE_CHAR_AT;

typedef int UParseError;

typedef enum {
    USPREP_RFC3491_NAMEPREP = 0,
    USPREP_RFC3530_NFS4_CS_PREP = 1,
    USPREP_RFC3530_NFS4_CS_PREP_CI = 2,
    USPREP_RFC3530_NFS4_CIS_PREP = 3,
    USPREP_RFC3530_NFS4_MIXED_PREP_PREFIX = 4,
    USPREP_RFC3530_NFS4_MIXED_PREP_SUFFIX = 5,
    USPREP_RFC3722_ISCSI = 6,
    USPREP_RFC3920_NODEPREP = 7,
    USPREP_RFC3920_RESOURCEPREP = 8,
    USPREP_RFC4011_MIB = 9,
    USPREP_RFC4013_SASLPREP = 10,
    USPREP_RFC4505_TRACE = 11,
    USPREP_RFC4518_LDAP = 12,
    USPREP_RFC4518_LDAP_CI = 13,
} UStringPrepProfileType;

typedef int UIDNAInfo;

typedef enum {
    UBRK_CHARACTER = 0,
    UBRK_WORD = 1,
    UBRK_LINE = 2,
    UBRK_SENTENCE = 3,
} UBreakIteratorType;

typedef enum {
    UBRK_WORD_NONE = 0,
    UBRK_WORD_NONE_LIMIT = 100,
    UBRK_WORD_NUMBER = 100,
    UBRK_WORD_NUMBER_LIMIT = 200,
    UBRK_WORD_LETTER = 200,
    UBRK_WORD_LETTER_LIMIT = 300,
    UBRK_WORD_KANA = 300,
    UBRK_WORD_KANA_LIMIT = 400,
    UBRK_WORD_IDEO = 400,
    UBRK_WORD_IDEO_LIMIT = 500,
} UWordBreak;

typedef enum {
    UBRK_LINE_SOFT = 0,
    UBRK_LINE_SOFT_LIMIT = 100,
    UBRK_LINE_HARD = 100,
    UBRK_LINE_HARD_LIMIT = 200,
} ULineBreakTag;

typedef enum {
    UBRK_SENTENCE_TERM = 0,
    UBRK_SENTENCE_TERM_LIMIT = 100,
    UBRK_SENTENCE_SEP = 100,
    UBRK_SENTENCE_SEP_LIMIT = 200,
} USentenceBreakTag;

typedef enum {
    UCAL_TRADITIONAL = 0,
    UCAL_DEFAULT = 0,
    UCAL_GREGORIAN = 1,
} UCalendarType;

typedef enum {
    UCAL_ERA = 0,
    UCAL_YEAR = 1,
    UCAL_MONTH = 2,
    UCAL_WEEK_OF_YEAR = 3,
    UCAL_WEEK_OF_MONTH = 4,
    UCAL_DATE = 5,
    UCAL_DAY_OF_YEAR = 6,
    UCAL_DAY_OF_WEEK = 7,
    UCAL_DAY_OF_WEEK_IN_MONTH = 8,
    UCAL_AM_PM = 9,
    UCAL_HOUR = 10,
    UCAL_HOUR_OF_DAY = 11,
    UCAL_MINUTE = 12,
    UCAL_SECOND = 13,
    UCAL_MILLISECOND = 14,
    UCAL_ZONE_OFFSET = 15,
    UCAL_DST_OFFSET = 16,
    UCAL_YEAR_WOY = 17,
    UCAL_DOW_LOCAL = 18,
    UCAL_EXTENDED_YEAR = 19,
    UCAL_JULIAN_DAY = 20,
    UCAL_MILLISECONDS_IN_DAY = 21,
    UCAL_IS_LEAP_MONTH = 22,
    UCAL_FIELD_COUNT = 23,
    UCAL_DAY_OF_MONTH = 5,
} UCalendarDateFields;

typedef enum {
    UCAL_SUNDAY = 1,
    UCAL_MONDAY = 2,
    UCAL_TUESDAY = 3,
    UCAL_WEDNESDAY = 4,
    UCAL_THURSDAY = 5,
    UCAL_FRIDAY = 6,
    UCAL_SATURDAY = 7,
} UCalendarDaysOfWeek;

typedef enum {
    UCAL_JANUARY = 0,
    UCAL_FEBRUARY = 1,
    UCAL_MARCH = 2,
    UCAL_APRIL = 3,
    UCAL_MAY = 4,
    UCAL_JUNE = 5,
    UCAL_JULY = 6,
    UCAL_AUGUST = 7,
    UCAL_SEPTEMBER = 8,
    UCAL_OCTOBER = 9,
    UCAL_NOVEMBER = 10,
    UCAL_DECEMBER = 11,
    UCAL_UNDECIMBER = 12,
} UCalendarMonths;

typedef enum {
    UCAL_AM = 0,
    UCAL_PM = 1,
} UCalendarAMPMs;

typedef enum {
    UCAL_ZONE_TYPE_ANY = 0,
    UCAL_ZONE_TYPE_CANONICAL = 1,
    UCAL_ZONE_TYPE_CANONICAL_LOCATION = 2,
} USystemTimeZoneType;

typedef enum {
    UCAL_STANDARD = 0,
    UCAL_SHORT_STANDARD = 1,
    UCAL_DST = 2,
    UCAL_SHORT_DST = 3,
} UCalendarDisplayNameType;

typedef enum {
    UCAL_LENIENT = 0,
    UCAL_FIRST_DAY_OF_WEEK = 1,
    UCAL_MINIMAL_DAYS_IN_FIRST_WEEK = 2,
    UCAL_REPEATED_WALL_TIME = 3,
    UCAL_SKIPPED_WALL_TIME = 4,
} UCalendarAttribute;

typedef enum {
    UCAL_WALLTIME_LAST = 0,
    UCAL_WALLTIME_FIRST = 1,
    UCAL_WALLTIME_NEXT_VALID = 2,
} UCalendarWallTimeOption;

typedef enum {
    UCAL_MINIMUM = 0,
    UCAL_MAXIMUM = 1,
    UCAL_GREATEST_MINIMUM = 2,
    UCAL_LEAST_MAXIMUM = 3,
    UCAL_ACTUAL_MINIMUM = 4,
    UCAL_ACTUAL_MAXIMUM = 5,
} UCalendarLimitType;

typedef enum {
    UCAL_WEEKDAY = 0,
    UCAL_WEEKEND = 1,
    UCAL_WEEKEND_ONSET = 2,
    UCAL_WEEKEND_CEASE = 3,
} UCalendarWeekdayType;

typedef enum {
    UCAL_TZ_TRANSITION_NEXT = 0,
    UCAL_TZ_TRANSITION_NEXT_INCLUSIVE = 1,
    UCAL_TZ_TRANSITION_PREVIOUS = 2,
    UCAL_TZ_TRANSITION_PREVIOUS_INCLUSIVE = 3,
} UTimeZoneTransitionType;

typedef enum {
    UCOL_EQUAL = 0,
    UCOL_GREATER = 1,
    UCOL_LESS = -1,
} UCollationResult;

typedef enum {
    UCOL_DEFAULT = -1,
    UCOL_PRIMARY = 0,
    UCOL_SECONDARY = 1,
    UCOL_TERTIARY = 2,
    UCOL_DEFAULT_STRENGTH = 2,
    UCOL_CE_STRENGTH_LIMIT = 3,
    UCOL_QUATERNARY = 3,
    UCOL_IDENTICAL = 15,
    UCOL_STRENGTH_LIMIT = 16,
    UCOL_OFF = 16,
    UCOL_ON = 17,
    UCOL_SHIFTED = 20,
    UCOL_NON_IGNORABLE = 21,
    UCOL_LOWER_FIRST = 24,
    UCOL_UPPER_FIRST = 25,
} UColAttributeValue;

typedef enum {
    UCOL_REORDER_CODE_DEFAULT = -1,
    UCOL_REORDER_CODE_NONE = 103,
    UCOL_REORDER_CODE_OTHERS = 103,
    UCOL_REORDER_CODE_SPACE = 4096,
    UCOL_REORDER_CODE_FIRST = 4096,
    UCOL_REORDER_CODE_PUNCTUATION = 4097,
    UCOL_REORDER_CODE_SYMBOL = 4098,
    UCOL_REORDER_CODE_CURRENCY = 4099,
    UCOL_REORDER_CODE_DIGIT = 4100,
} UColReorderCode;

typedef enum {
    UCOL_FRENCH_COLLATION = 0,
    UCOL_ALTERNATE_HANDLING = 1,
    UCOL_CASE_FIRST = 2,
    UCOL_CASE_LEVEL = 3,
    UCOL_NORMALIZATION_MODE = 4,
    UCOL_DECOMPOSITION_MODE = 4,
    UCOL_STRENGTH = 5,
    UCOL_NUMERIC_COLLATION = 7,
    UCOL_ATTRIBUTE_COUNT = 8,
} UColAttribute;

typedef enum {
    UCOL_TAILORING_ONLY = 0,
    UCOL_FULL_RULES = 1,
} UColRuleOption;

typedef enum {
    UCOL_BOUND_LOWER = 0,
    UCOL_BOUND_UPPER = 1,
    UCOL_BOUND_UPPER_LONG = 2,
} UColBoundMode;

typedef enum {
    UDATPG_ERA_FIELD = 0,
    UDATPG_YEAR_FIELD = 1,
    UDATPG_QUARTER_FIELD = 2,
    UDATPG_MONTH_FIELD = 3,
    UDATPG_WEEK_OF_YEAR_FIELD = 4,
    UDATPG_WEEK_OF_MONTH_FIELD = 5,
    UDATPG_WEEKDAY_FIELD = 6,
    UDATPG_DAY_OF_YEAR_FIELD = 7,
    UDATPG_DAY_OF_WEEK_IN_MONTH_FIELD = 8,
    UDATPG_DAY_FIELD = 9,
    UDATPG_DAYPERIOD_FIELD = 10,
    UDATPG_HOUR_FIELD = 11,
    UDATPG_MINUTE_FIELD = 12,
    UDATPG_SECOND_FIELD = 13,
    UDATPG_FRACTIONAL_SECOND_FIELD = 14,
    UDATPG_ZONE_FIELD = 15,
    UDATPG_FIELD_COUNT = 16,
} UDateTimePatternField;

typedef enum {
    UDATPG_WIDE = 0,
    UDATPG_ABBREVIATED = 1,
    UDATPG_NARROW = 2,
} UDateTimePGDisplayWidth;

typedef enum {
    UDATPG_MATCH_NO_OPTIONS = 0,
    UDATPG_MATCH_HOUR_FIELD_LENGTH = 2048,
    UDATPG_MATCH_ALL_FIELDS_LENGTH = 65535,
} UDateTimePatternMatchOptions;

typedef enum {
    UDATPG_NO_CONFLICT = 0,
    UDATPG_BASE_CONFLICT = 1,
    UDATPG_CONFLICT = 2,
} UDateTimePatternConflict;

typedef enum {
    UFMT_DATE = 0,
    UFMT_DOUBLE = 1,
    UFMT_LONG = 2,
    UFMT_STRING = 3,
    UFMT_ARRAY = 4,
    UFMT_INT64 = 5,
    UFMT_OBJECT = 6,
} UFormattableType;

typedef enum {
    UGENDER_MALE = 0,
    UGENDER_FEMALE = 1,
    UGENDER_OTHER = 2,
} UGender;

typedef enum {
    ULOCDATA_ES_STANDARD = 0,
    ULOCDATA_ES_AUXILIARY = 1,
    ULOCDATA_ES_INDEX = 2,
    ULOCDATA_ES_PUNCTUATION = 3,
} ULocaleDataExemplarSetType;

typedef enum {
    ULOCDATA_QUOTATION_START = 0,
    ULOCDATA_QUOTATION_END = 1,
    ULOCDATA_ALT_QUOTATION_START = 2,
    ULOCDATA_ALT_QUOTATION_END = 3,
} ULocaleDataDelimiterType;

typedef enum {
    UMS_SI = 0,
    UMS_US = 1,
    UMS_UK = 2,
} UMeasurementSystem;

typedef enum {
    UNUM_PATTERN_DECIMAL = 0,
    UNUM_DECIMAL = 1,
    UNUM_CURRENCY = 2,
    UNUM_PERCENT = 3,
    UNUM_SCIENTIFIC = 4,
    UNUM_SPELLOUT = 5,
    UNUM_ORDINAL = 6,
    UNUM_DURATION = 7,
    UNUM_NUMBERING_SYSTEM = 8,
    UNUM_PATTERN_RULEBASED = 9,
    UNUM_CURRENCY_ISO = 10,
    UNUM_CURRENCY_PLURAL = 11,
    UNUM_CURRENCY_ACCOUNTING = 12,
    UNUM_CASH_CURRENCY = 13,
    UNUM_DECIMAL_COMPACT_SHORT = 14,
    UNUM_DECIMAL_COMPACT_LONG = 15,
    UNUM_CURRENCY_STANDARD = 16,
    UNUM_DEFAULT = 1,
    UNUM_IGNORE = 0,
} UNumberFormatStyle;

typedef enum {
    UNUM_ROUND_CEILING = 0,
    UNUM_ROUND_FLOOR = 1,
    UNUM_ROUND_DOWN = 2,
    UNUM_ROUND_UP = 3,
    UNUM_ROUND_HALFEVEN = 4,
    UNUM_ROUND_HALFDOWN = 5,
    UNUM_ROUND_HALFUP = 6,
    UNUM_ROUND_UNNECESSARY = 7,
} UNumberFormatRoundingMode;

typedef enum {
    UNUM_PAD_BEFORE_PREFIX = 0,
    UNUM_PAD_AFTER_PREFIX = 1,
    UNUM_PAD_BEFORE_SUFFIX = 2,
    UNUM_PAD_AFTER_SUFFIX = 3,
} UNumberFormatPadPosition;

typedef enum {
    UNUM_SHORT = 0,
    UNUM_LONG = 1,
} UNumberCompactStyle;

typedef enum {
    UNUM_CURRENCY_MATCH = 0,
    UNUM_CURRENCY_SURROUNDING_MATCH = 1,
    UNUM_CURRENCY_INSERT = 2,
    UNUM_CURRENCY_SPACING_COUNT = 3,
} UCurrencySpacing;

typedef enum {
    UNUM_INTEGER_FIELD = 0,
    UNUM_FRACTION_FIELD = 1,
    UNUM_DECIMAL_SEPARATOR_FIELD = 2,
    UNUM_EXPONENT_SYMBOL_FIELD = 3,
    UNUM_EXPONENT_SIGN_FIELD = 4,
    UNUM_EXPONENT_FIELD = 5,
    UNUM_GROUPING_SEPARATOR_FIELD = 6,
    UNUM_CURRENCY_FIELD = 7,
    UNUM_PERCENT_FIELD = 8,
    UNUM_PERMILL_FIELD = 9,
    UNUM_SIGN_FIELD = 10,
} UNumberFormatFields;

typedef enum {
    UNUM_FORMAT_ATTRIBUTE_VALUE_HIDDEN = 0,
} UNumberFormatAttributeValue;

typedef enum {
    UNUM_PARSE_INT_ONLY = 0,
    UNUM_GROUPING_USED = 1,
    UNUM_DECIMAL_ALWAYS_SHOWN = 2,
    UNUM_MAX_INTEGER_DIGITS = 3,
    UNUM_MIN_INTEGER_DIGITS = 4,
    UNUM_INTEGER_DIGITS = 5,
    UNUM_MAX_FRACTION_DIGITS = 6,
    UNUM_MIN_FRACTION_DIGITS = 7,
    UNUM_FRACTION_DIGITS = 8,
    UNUM_MULTIPLIER = 9,
    UNUM_GROUPING_SIZE = 10,
    UNUM_ROUNDING_MODE = 11,
    UNUM_ROUNDING_INCREMENT = 12,
    UNUM_FORMAT_WIDTH = 13,
    UNUM_PADDING_POSITION = 14,
    UNUM_SECONDARY_GROUPING_SIZE = 15,
    UNUM_SIGNIFICANT_DIGITS_USED = 16,
    UNUM_MIN_SIGNIFICANT_DIGITS = 17,
    UNUM_MAX_SIGNIFICANT_DIGITS = 18,
    UNUM_LENIENT_PARSE = 19,
    UNUM_PARSE_ALL_INPUT = 20,
    UNUM_SCALE = 21,
    UNUM_CURRENCY_USAGE = 23,
    UNUM_FORMAT_FAIL_IF_MORE_THAN_MAX_DIGITS = 4096,
    UNUM_PARSE_NO_EXPONENT = 4097,
    UNUM_PARSE_DECIMAL_MARK_REQUIRED = 4098,
} UNumberFormatAttribute;

typedef enum {
    UNUM_POSITIVE_PREFIX = 0,
    UNUM_POSITIVE_SUFFIX = 1,
    UNUM_NEGATIVE_PREFIX = 2,
    UNUM_NEGATIVE_SUFFIX = 3,
    UNUM_PADDING_CHARACTER = 4,
    UNUM_CURRENCY_CODE = 5,
    UNUM_DEFAULT_RULESET = 6,
    UNUM_PUBLIC_RULESETS = 7,
} UNumberFormatTextAttribute;

typedef enum {
    UNUM_DECIMAL_SEPARATOR_SYMBOL = 0,
    UNUM_GROUPING_SEPARATOR_SYMBOL = 1,
    UNUM_PATTERN_SEPARATOR_SYMBOL = 2,
    UNUM_PERCENT_SYMBOL = 3,
    UNUM_ZERO_DIGIT_SYMBOL = 4,
    UNUM_DIGIT_SYMBOL = 5,
    UNUM_MINUS_SIGN_SYMBOL = 6,
    UNUM_PLUS_SIGN_SYMBOL = 7,
    UNUM_CURRENCY_SYMBOL = 8,
    UNUM_INTL_CURRENCY_SYMBOL = 9,
    UNUM_MONETARY_SEPARATOR_SYMBOL = 10,
    UNUM_EXPONENTIAL_SYMBOL = 11,
    UNUM_PERMILL_SYMBOL = 12,
    UNUM_PAD_ESCAPE_SYMBOL = 13,
    UNUM_INFINITY_SYMBOL = 14,
    UNUM_NAN_SYMBOL = 15,
    UNUM_SIGNIFICANT_DIGIT_SYMBOL = 16,
    UNUM_MONETARY_GROUPING_SEPARATOR_SYMBOL = 17,
    UNUM_ONE_DIGIT_SYMBOL = 18,
    UNUM_TWO_DIGIT_SYMBOL = 19,
    UNUM_THREE_DIGIT_SYMBOL = 20,
    UNUM_FOUR_DIGIT_SYMBOL = 21,
    UNUM_FIVE_DIGIT_SYMBOL = 22,
    UNUM_SIX_DIGIT_SYMBOL = 23,
    UNUM_SEVEN_DIGIT_SYMBOL = 24,
    UNUM_EIGHT_DIGIT_SYMBOL = 25,
    UNUM_NINE_DIGIT_SYMBOL = 26,
    UNUM_EXPONENT_MULTIPLICATION_SYMBOL = 27,
} UNumberFormatSymbol;

typedef enum {
    UDAT_FULL = 0,
    UDAT_LONG = 1,
    UDAT_MEDIUM = 2,
    UDAT_SHORT = 3,
    UDAT_DEFAULT = 2,
    UDAT_RELATIVE = 128,
    UDAT_FULL_RELATIVE = 128,
    UDAT_LONG_RELATIVE = 129,
    UDAT_MEDIUM_RELATIVE = 130,
    UDAT_SHORT_RELATIVE = 131,
    UDAT_NONE = -1,
    UDAT_PATTERN = -2,
} UDateFormatStyle;

typedef enum {
    UDAT_ERA_FIELD = 0,
    UDAT_YEAR_FIELD = 1,
    UDAT_MONTH_FIELD = 2,
    UDAT_DATE_FIELD = 3,
    UDAT_HOUR_OF_DAY1_FIELD = 4,
    UDAT_HOUR_OF_DAY0_FIELD = 5,
    UDAT_MINUTE_FIELD = 6,
    UDAT_SECOND_FIELD = 7,
    UDAT_FRACTIONAL_SECOND_FIELD = 8,
    UDAT_DAY_OF_WEEK_FIELD = 9,
    UDAT_DAY_OF_YEAR_FIELD = 10,
    UDAT_DAY_OF_WEEK_IN_MONTH_FIELD = 11,
    UDAT_WEEK_OF_YEAR_FIELD = 12,
    UDAT_WEEK_OF_MONTH_FIELD = 13,
    UDAT_AM_PM_FIELD = 14,
    UDAT_HOUR1_FIELD = 15,
    UDAT_HOUR0_FIELD = 16,
    UDAT_TIMEZONE_FIELD = 17,
    UDAT_YEAR_WOY_FIELD = 18,
    UDAT_DOW_LOCAL_FIELD = 19,
    UDAT_EXTENDED_YEAR_FIELD = 20,
    UDAT_JULIAN_DAY_FIELD = 21,
    UDAT_MILLISECONDS_IN_DAY_FIELD = 22,
    UDAT_TIMEZONE_RFC_FIELD = 23,
    UDAT_TIMEZONE_GENERIC_FIELD = 24,
    UDAT_STANDALONE_DAY_FIELD = 25,
    UDAT_STANDALONE_MONTH_FIELD = 26,
    UDAT_QUARTER_FIELD = 27,
    UDAT_STANDALONE_QUARTER_FIELD = 28,
    UDAT_TIMEZONE_SPECIAL_FIELD = 29,
    UDAT_YEAR_NAME_FIELD = 30,
    UDAT_TIMEZONE_LOCALIZED_GMT_OFFSET_FIELD = 31,
    UDAT_TIMEZONE_ISO_FIELD = 32,
    UDAT_TIMEZONE_ISO_LOCAL_FIELD = 33,
    UDAT_AM_PM_MIDNIGHT_NOON_FIELD = 35,
    UDAT_FLEXIBLE_DAY_PERIOD_FIELD = 36,
} UDateFormatField;

typedef enum {
    UDAT_PARSE_ALLOW_WHITESPACE = 0,
    UDAT_PARSE_ALLOW_NUMERIC = 1,
    UDAT_PARSE_PARTIAL_LITERAL_MATCH = 2,
    UDAT_PARSE_MULTIPLE_PATTERNS_FOR_MATCH = 3,
    UDAT_BOOLEAN_ATTRIBUTE_COUNT = 4,
} UDateFormatBooleanAttribute;

typedef enum {
    UDAT_ERAS = 0,
    UDAT_MONTHS = 1,
    UDAT_SHORT_MONTHS = 2,
    UDAT_WEEKDAYS = 3,
    UDAT_SHORT_WEEKDAYS = 4,
    UDAT_AM_PMS = 5,
    UDAT_LOCALIZED_CHARS = 6,
    UDAT_ERA_NAMES = 7,
    UDAT_NARROW_MONTHS = 8,
    UDAT_NARROW_WEEKDAYS = 9,
    UDAT_STANDALONE_MONTHS = 10,
    UDAT_STANDALONE_SHORT_MONTHS = 11,
    UDAT_STANDALONE_NARROW_MONTHS = 12,
    UDAT_STANDALONE_WEEKDAYS = 13,
    UDAT_STANDALONE_SHORT_WEEKDAYS = 14,
    UDAT_STANDALONE_NARROW_WEEKDAYS = 15,
    UDAT_QUARTERS = 16,
    UDAT_SHORT_QUARTERS = 17,
    UDAT_STANDALONE_QUARTERS = 18,
    UDAT_STANDALONE_SHORT_QUARTERS = 19,
    UDAT_SHORTER_WEEKDAYS = 20,
    UDAT_STANDALONE_SHORTER_WEEKDAYS = 21,
    UDAT_CYCLIC_YEARS_WIDE = 22,
    UDAT_CYCLIC_YEARS_ABBREVIATED = 23,
    UDAT_CYCLIC_YEARS_NARROW = 24,
    UDAT_ZODIAC_NAMES_WIDE = 25,
    UDAT_ZODIAC_NAMES_ABBREVIATED = 26,
    UDAT_ZODIAC_NAMES_NARROW = 27,
} UDateFormatSymbolType;

typedef enum {
    UPLURAL_TYPE_CARDINAL = 0,
    UPLURAL_TYPE_ORDINAL = 1,
} UPluralType;

typedef enum {
    UREGEX_CASE_INSENSITIVE = 2,
    UREGEX_COMMENTS = 4,
    UREGEX_DOTALL = 32,
    UREGEX_LITERAL = 16,
    UREGEX_MULTILINE = 8,
    UREGEX_UNIX_LINES = 1,
    UREGEX_UWORD = 256,
    UREGEX_ERROR_ON_UNKNOWN_ESCAPES = 512,
} URegexpFlag;

typedef int URegexMatchCallback;

typedef int URegexFindProgressCallback;

typedef enum {
    URGN_UNKNOWN = 0,
    URGN_TERRITORY = 1,
    URGN_WORLD = 2,
    URGN_CONTINENT = 3,
    URGN_SUBCONTINENT = 4,
    URGN_GROUPING = 5,
    URGN_DEPRECATED = 6,
} URegionType;

typedef enum {
    UDAT_STYLE_LONG = 0,
    UDAT_STYLE_SHORT = 1,
    UDAT_STYLE_NARROW = 2,
} UDateRelativeDateTimeFormatterStyle;

typedef enum {
    UDAT_REL_UNIT_YEAR = 0,
    UDAT_REL_UNIT_QUARTER = 1,
    UDAT_REL_UNIT_MONTH = 2,
    UDAT_REL_UNIT_WEEK = 3,
    UDAT_REL_UNIT_DAY = 4,
    UDAT_REL_UNIT_HOUR = 5,
    UDAT_REL_UNIT_MINUTE = 6,
    UDAT_REL_UNIT_SECOND = 7,
    UDAT_REL_UNIT_SUNDAY = 8,
    UDAT_REL_UNIT_MONDAY = 9,
    UDAT_REL_UNIT_TUESDAY = 10,
    UDAT_REL_UNIT_WEDNESDAY = 11,
    UDAT_REL_UNIT_THURSDAY = 12,
    UDAT_REL_UNIT_FRIDAY = 13,
    UDAT_REL_UNIT_SATURDAY = 14,
} URelativeDateTimeUnit;

typedef enum {
    USEARCH_OVERLAP = 0,
    USEARCH_ELEMENT_COMPARISON = 2,
} USearchAttribute;

typedef enum {
    USEARCH_DEFAULT = -1,
    USEARCH_OFF = 0,
    USEARCH_ON = 1,
    USEARCH_STANDARD_ELEMENT_COMPARISON = 2,
    USEARCH_PATTERN_BASE_WEIGHT_IS_WILDCARD = 3,
    USEARCH_ANY_BASE_WEIGHT_IS_WILDCARD = 4,
} USearchAttributeValue;

typedef enum {
    USPOOF_SINGLE_SCRIPT_CONFUSABLE = 1,
    USPOOF_MIXED_SCRIPT_CONFUSABLE = 2,
    USPOOF_WHOLE_SCRIPT_CONFUSABLE = 4,
    USPOOF_CONFUSABLE = 7,
    USPOOF_RESTRICTION_LEVEL = 16,
    USPOOF_INVISIBLE = 32,
    USPOOF_CHAR_LIMIT = 64,
    USPOOF_MIXED_NUMBERS = 128,
    USPOOF_ALL_CHECKS = 65535,
    USPOOF_AUX_INFO = 1073741824,
} USpoofChecks;

typedef enum {
    USPOOF_ASCII = 268435456,
    USPOOF_SINGLE_SCRIPT_RESTRICTIVE = 536870912,
    USPOOF_HIGHLY_RESTRICTIVE = 805306368,
    USPOOF_MODERATELY_RESTRICTIVE = 1073741824,
    USPOOF_MINIMALLY_RESTRICTIVE = 1342177280,
    USPOOF_UNRESTRICTIVE = 1610612736,
    USPOOF_RESTRICTION_LEVEL_MASK = 2130706432,
} URestrictionLevel;

typedef enum {
    UDTS_JAVA_TIME = 0,
    UDTS_UNIX_TIME = 1,
    UDTS_ICU4C_TIME = 2,
    UDTS_WINDOWS_FILE_TIME = 3,
    UDTS_DOTNET_DATE_TIME = 4,
    UDTS_MAC_OLD_TIME = 5,
    UDTS_MAC_TIME = 6,
    UDTS_EXCEL_TIME = 7,
    UDTS_DB2_TIME = 8,
    UDTS_UNIX_MICROSECONDS_TIME = 9,
} UDateTimeScale;

typedef enum {
    UTSV_UNITS_VALUE = 0,
    UTSV_EPOCH_OFFSET_VALUE = 1,
    UTSV_FROM_MIN_VALUE = 2,
    UTSV_FROM_MAX_VALUE = 3,
    UTSV_TO_MIN_VALUE = 4,
    UTSV_TO_MAX_VALUE = 5,
} UTimeScaleValue;

typedef enum {
    UTRANS_FORWARD = 0,
    UTRANS_REVERSE = 1,
} UTransDirection;

typedef int UTransPosition;

typedef int CActiveIMM;

typedef int IEnumRegisterWordA;

typedef int IEnumRegisterWordW;

typedef int IEnumInputContext;

typedef int IActiveIMMRegistrar;

typedef int IActiveIMMMessagePumpOwner;

typedef int IActiveIMMApp;

typedef int IActiveIMMIME;

typedef int IActiveIME;

typedef int IActiveIME2;


//--------------------------------------------------------------------------------
// Section: Functions (1237)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetTextCharset();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetTextCharsetInfo();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void TranslateCharsetInfo();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetDateFormatA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetDateFormatW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetTimeFormatA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetTimeFormatW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetTimeFormatEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetDateFormatEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetDurationFormatEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void CompareStringEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void CompareStringOrdinal();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void CompareStringW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void FoldStringW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetStringTypeExW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetStringTypeW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void MultiByteToWideChar();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void WideCharToMultiByte();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsValidCodePage();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetACP();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetOEMCP();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCPInfo();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCPInfoExA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetCPInfoExW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void CompareStringA();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void FindNLSString();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void LCMapStringW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void LCMapStringA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetLocaleInfoW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetLocaleInfoA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetLocaleInfoA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetLocaleInfoW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetCalendarInfoA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetCalendarInfoW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetCalendarInfoA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetCalendarInfoW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsDBCSLeadByte();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsDBCSLeadByteEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u32*/void LocaleNameToLCID();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void LCIDToLocaleName();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetDurationFormat();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetNumberFormatA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetNumberFormatW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetCurrencyFormatA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetCurrencyFormatW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumCalendarInfoA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumCalendarInfoW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumCalendarInfoExA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumCalendarInfoExW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumTimeFormatsA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumTimeFormatsW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumDateFormatsA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumDateFormatsW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumDateFormatsExA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumDateFormatsExW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsValidLanguageGroup();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetNLSVersion();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsValidLocale();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void GetGeoInfoA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void GetGeoInfoW();

// TODO: this type is limited to platform 'windows10.0.16299'
/*i32*/void GetGeoInfoEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void EnumSystemGeoID();

// TODO: this type is limited to platform 'windows10.0.16299'
/*BOOL*/void EnumSystemGeoNames();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void GetUserGeoID();

// TODO: this type is limited to platform 'windows10.0.16299'
/*i32*/void GetUserDefaultGeoName();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetUserGeoID();

// TODO: this type is limited to platform 'windows10.0.16299'
/*BOOL*/void SetUserGeoName();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void ConvertDefaultLocale();

// TODO: this type is limited to platform 'windows5.0'
/*u16*/void GetSystemDefaultUILanguage();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetThreadLocale();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void SetThreadLocale();

// TODO: this type is limited to platform 'windows5.0'
/*u16*/void GetUserDefaultUILanguage();

// TODO: this type is limited to platform 'windows5.0'
/*u16*/void GetUserDefaultLangID();

// TODO: this type is limited to platform 'windows5.0'
/*u16*/void GetSystemDefaultLangID();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetSystemDefaultLCID();

// TODO: this type is limited to platform 'windows5.0'
/*u32*/void GetUserDefaultLCID();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u16*/void SetThreadUILanguage();

// TODO: this type is limited to platform 'windows6.0.6000'
/*u16*/void GetThreadUILanguage();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void GetProcessPreferredUILanguages();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void SetProcessPreferredUILanguages();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetUserPreferredUILanguages();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetSystemPreferredUILanguages();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetThreadPreferredUILanguages();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void SetThreadPreferredUILanguages();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetFileMUIInfo();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetFileMUIPath();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetUILanguageInfo();

/*BOOL*/void SetThreadPreferredUILanguages2();

/*void*/void RestoreThreadPreferredUILanguages();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void NotifyUILanguageChange();

/*BOOL*/void GetStringTypeExA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void GetStringTypeA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void FoldStringA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumSystemLocalesA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumSystemLocalesW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumSystemLanguageGroupsA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumSystemLanguageGroupsW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumLanguageGroupLocalesA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumLanguageGroupLocalesW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumUILanguagesA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumUILanguagesW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumSystemCodePagesA();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void EnumSystemCodePagesW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void IdnToAscii();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void IdnToUnicode();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void IdnToNameprepUnicode();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void NormalizeString();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void IsNormalizedString();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void VerifyScripts();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetStringScripts();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetLocaleInfoEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetCalendarInfoEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetNumberFormatEx();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void GetCurrencyFormatEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetUserDefaultLocaleName();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetSystemDefaultLocaleName();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void IsNLSDefinedString();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void GetNLSVersionEx();

// TODO: this type is limited to platform 'windows8.0'
/*u32*/void IsValidNLSVersion();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void FindNLSStringEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void LCMapStringEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void IsValidLocaleName();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EnumCalendarInfoExEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EnumDateFormatsExEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EnumTimeFormatsEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void EnumSystemLocalesEx();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void ResolveLocaleName();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HKL*/void ImmInstallIMEA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HKL*/void ImmInstallIMEW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HWND*/void ImmGetDefaultIMEWnd();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmGetDescriptionA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmGetDescriptionW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmGetIMEFileNameA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmGetIMEFileNameW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmGetProperty();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmIsIME();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmSimulateHotKey();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HIMC*/void ImmCreateContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmDestroyContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HIMC*/void ImmGetContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmReleaseContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HIMC*/void ImmAssociateContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmAssociateContextEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void ImmGetCompositionStringA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void ImmGetCompositionStringW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmSetCompositionStringA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmSetCompositionStringW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmGetCandidateListCountA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmGetCandidateListCountW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmGetCandidateListA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmGetCandidateListW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmGetGuideLineA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmGetGuideLineW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmGetConversionStatus();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmSetConversionStatus();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmGetOpenStatus();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmSetOpenStatus();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmGetCompositionFontA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmGetCompositionFontW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmSetCompositionFontA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmSetCompositionFontW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmConfigureIMEA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmConfigureIMEW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*LRESULT*/void ImmEscapeA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*LRESULT*/void ImmEscapeW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmGetConversionListA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmGetConversionListW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmNotifyIME();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmGetStatusWindowPos();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmSetStatusWindowPos();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmGetCompositionWindow();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmSetCompositionWindow();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmGetCandidateWindow();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmSetCandidateWindow();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmIsUIMessageA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmIsUIMessageW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmGetVirtualKey();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmRegisterWordA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmRegisterWordW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmUnregisterWordA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmUnregisterWordW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmGetRegisterWordStyleA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmGetRegisterWordStyleW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmEnumRegisterWordA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmEnumRegisterWordW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmDisableIME();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmEnumInputContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmGetImeMenuItemsA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void ImmGetImeMenuItemsW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImmDisableTextFrameService();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void ImmDisableLegacyIME();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MappingGetServices();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MappingFreeServices();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MappingRecognizeText();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MappingDoAction();

// TODO: this type is limited to platform 'windows6.1'
/*HRESULT*/void MappingFreePropertyBag();

/*BOOL*/void ImmGetHotKey();

/*BOOL*/void ImmSetHotKey();

/*BOOL*/void ImmGenerateMessage();

// TODO: this type is limited to platform 'windows5.1.2600'
/*LRESULT*/void ImmRequestMessageA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*LRESULT*/void ImmRequestMessageW();

/*HWND*/void ImmCreateSoftKeyboard();

/*BOOL*/void ImmDestroySoftKeyboard();

/*BOOL*/void ImmShowSoftKeyboard();

/*?*INPUTCONTEXT*/void ImmLockIMC();

/*BOOL*/void ImmUnlockIMC();

/*u32*/void ImmGetIMCLockCount();

/*HIMCC*/void ImmCreateIMCC();

/*HIMCC*/void ImmDestroyIMCC();

/*?*c_void*/void ImmLockIMCC();

/*BOOL*/void ImmUnlockIMCC();

/*u32*/void ImmGetIMCCLockCount();

/*HIMCC*/void ImmReSizeIMCC();

/*u32*/void ImmGetIMCCSize();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptFreeCache();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptItemize();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptLayout();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptShape();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptPlace();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptTextOut();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptJustify();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptBreak();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptCPtoX();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptXtoCP();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptGetLogicalWidths();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptApplyLogicalWidth();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptGetCMap();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptGetGlyphABCWidth();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptGetProperties();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptGetFontProperties();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptCacheGetHeight();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptStringAnalyse();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptStringFree();

// TODO: this type is limited to platform 'windows5.0'
/*?*SIZE*/void ScriptString_pSize();

// TODO: this type is limited to platform 'windows5.0'
/*?*i32*/void ScriptString_pcOutChars();

// TODO: this type is limited to platform 'windows5.0'
/*?*SCRIPT_LOGATTR*/void ScriptString_pLogAttr();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptStringGetOrder();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptStringCPtoX();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptStringXtoCP();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptStringGetLogicalWidths();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptStringValidate();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptStringOut();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptIsComplex();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptRecordDigitSubstitution();

// TODO: this type is limited to platform 'windows5.0'
/*HRESULT*/void ScriptApplyDigitSubstitution();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void ScriptShapeOpenType();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void ScriptPlaceOpenType();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void ScriptItemizeOpenType();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void ScriptGetFontScriptTags();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void ScriptGetFontLanguageTags();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void ScriptGetFontFeatureTags();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void ScriptGetFontAlternateGlyphs();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void ScriptSubstituteSingleGlyph();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void ScriptPositionSingleGlyph();

/*i32*/void utf8_nextCharSafeBody();

/*i32*/void utf8_appendCharSafeBody();

/*i32*/void utf8_prevCharSafeBody();

/*i32*/void utf8_back1SafeBody();

/*void*/void u_versionFromString();

/*void*/void u_versionFromUString();

/*void*/void u_versionToString();

/*void*/void u_getVersion();

/*PSTR*/void u_errorName();

/*void*/void utrace_setLevel();

/*i32*/void utrace_getLevel();

/*void*/void utrace_setFunctions();

/*void*/void utrace_getFunctions();

/*i32*/void utrace_vformat();

/*i32*/void utrace_format();

/*PSTR*/void utrace_functionName();

/*i32*/void u_shapeArabic();

/*i32*/void uscript_getCode();

/*PSTR*/void uscript_getName();

/*PSTR*/void uscript_getShortName();

/*UScriptCode*/void uscript_getScript();

/*i8*/void uscript_hasScript();

/*i32*/void uscript_getScriptExtensions();

/*i32*/void uscript_getSampleString();

/*UScriptUsage*/void uscript_getUsage();

/*i8*/void uscript_isRightToLeft();

/*i8*/void uscript_breaksBetweenLetters();

/*i8*/void uscript_isCased();

/*i32*/void uiter_current32();

/*i32*/void uiter_next32();

/*i32*/void uiter_previous32();

/*u32*/void uiter_getState();

/*void*/void uiter_setState();

/*void*/void uiter_setString();

/*void*/void uiter_setUTF16BE();

/*void*/void uiter_setUTF8();

/*void*/void uenum_close();

/*i32*/void uenum_count();

/*?*u16*/void uenum_unext();

/*PSTR*/void uenum_next();

/*void*/void uenum_reset();

/*?*UEnumeration*/void uenum_openUCharStringsEnumeration();

/*?*UEnumeration*/void uenum_openCharStringsEnumeration();

/*PSTR*/void uloc_getDefault();

/*void*/void uloc_setDefault();

/*i32*/void uloc_getLanguage();

/*i32*/void uloc_getScript();

/*i32*/void uloc_getCountry();

/*i32*/void uloc_getVariant();

/*i32*/void uloc_getName();

/*i32*/void uloc_canonicalize();

/*PSTR*/void uloc_getISO3Language();

/*PSTR*/void uloc_getISO3Country();

/*u32*/void uloc_getLCID();

/*i32*/void uloc_getDisplayLanguage();

/*i32*/void uloc_getDisplayScript();

/*i32*/void uloc_getDisplayCountry();

/*i32*/void uloc_getDisplayVariant();

/*i32*/void uloc_getDisplayKeyword();

/*i32*/void uloc_getDisplayKeywordValue();

/*i32*/void uloc_getDisplayName();

/*PSTR*/void uloc_getAvailable();

/*i32*/void uloc_countAvailable();

/*?*?*i8*/void uloc_getISOLanguages();

/*?*?*i8*/void uloc_getISOCountries();

/*i32*/void uloc_getParent();

/*i32*/void uloc_getBaseName();

/*?*UEnumeration*/void uloc_openKeywords();

/*i32*/void uloc_getKeywordValue();

/*i32*/void uloc_setKeywordValue();

/*i8*/void uloc_isRightToLeft();

/*ULayoutType*/void uloc_getCharacterOrientation();

/*ULayoutType*/void uloc_getLineOrientation();

/*i32*/void uloc_acceptLanguageFromHTTP();

/*i32*/void uloc_acceptLanguage();

/*i32*/void uloc_getLocaleForLCID();

/*i32*/void uloc_addLikelySubtags();

/*i32*/void uloc_minimizeSubtags();

/*i32*/void uloc_forLanguageTag();

/*i32*/void uloc_toLanguageTag();

/*PSTR*/void uloc_toUnicodeLocaleKey();

/*PSTR*/void uloc_toUnicodeLocaleType();

/*PSTR*/void uloc_toLegacyKey();

/*PSTR*/void uloc_toLegacyType();

/*?*UResourceBundle*/void ures_open();

/*?*UResourceBundle*/void ures_openDirect();

/*?*UResourceBundle*/void ures_openU();

/*void*/void ures_close();

/*void*/void ures_getVersion();

/*PSTR*/void ures_getLocaleByType();

/*?*u16*/void ures_getString();

/*PSTR*/void ures_getUTF8String();

/*?*u8*/void ures_getBinary();

/*?*i32*/void ures_getIntVector();

/*u32*/void ures_getUInt();

/*i32*/void ures_getInt();

/*i32*/void ures_getSize();

/*UResType*/void ures_getType();

/*PSTR*/void ures_getKey();

/*void*/void ures_resetIterator();

/*i8*/void ures_hasNext();

/*?*UResourceBundle*/void ures_getNextResource();

/*?*u16*/void ures_getNextString();

/*?*UResourceBundle*/void ures_getByIndex();

/*?*u16*/void ures_getStringByIndex();

/*PSTR*/void ures_getUTF8StringByIndex();

/*?*UResourceBundle*/void ures_getByKey();

/*?*u16*/void ures_getStringByKey();

/*PSTR*/void ures_getUTF8StringByKey();

/*?*UEnumeration*/void ures_openAvailableLocales();

/*?*ULocaleDisplayNames*/void uldn_open();

/*void*/void uldn_close();

/*PSTR*/void uldn_getLocale();

/*UDialectHandling*/void uldn_getDialectHandling();

/*i32*/void uldn_localeDisplayName();

/*i32*/void uldn_languageDisplayName();

/*i32*/void uldn_scriptDisplayName();

/*i32*/void uldn_scriptCodeDisplayName();

/*i32*/void uldn_regionDisplayName();

/*i32*/void uldn_variantDisplayName();

/*i32*/void uldn_keyDisplayName();

/*i32*/void uldn_keyValueDisplayName();

/*?*ULocaleDisplayNames*/void uldn_openForContext();

/*UDisplayContext*/void uldn_getContext();

/*i32*/void ucurr_forLocale();

/*?*c_void*/void ucurr_register();

/*i8*/void ucurr_unregister();

/*?*u16*/void ucurr_getName();

/*?*u16*/void ucurr_getPluralName();

/*i32*/void ucurr_getDefaultFractionDigits();

/*i32*/void ucurr_getDefaultFractionDigitsForUsage();

/*f64*/void ucurr_getRoundingIncrement();

/*f64*/void ucurr_getRoundingIncrementForUsage();

/*?*UEnumeration*/void ucurr_openISOCurrencies();

/*i8*/void ucurr_isAvailable();

/*i32*/void ucurr_countCurrencies();

/*i32*/void ucurr_forLocaleAndDate();

/*?*UEnumeration*/void ucurr_getKeywordValuesForLocale();

/*i32*/void ucurr_getNumericCode();

/*void*/void UCNV_FROM_U_CALLBACK_STOP();

/*void*/void UCNV_TO_U_CALLBACK_STOP();

/*void*/void UCNV_FROM_U_CALLBACK_SKIP();

/*void*/void UCNV_FROM_U_CALLBACK_SUBSTITUTE();

/*void*/void UCNV_FROM_U_CALLBACK_ESCAPE();

/*void*/void UCNV_TO_U_CALLBACK_SKIP();

/*void*/void UCNV_TO_U_CALLBACK_SUBSTITUTE();

/*void*/void UCNV_TO_U_CALLBACK_ESCAPE();

/*i32*/void ucnv_compareNames();

/*?*UConverter*/void ucnv_open();

/*?*UConverter*/void ucnv_openU();

/*?*UConverter*/void ucnv_openCCSID();

/*?*UConverter*/void ucnv_openPackage();

/*?*UConverter*/void ucnv_safeClone();

/*void*/void ucnv_close();

/*void*/void ucnv_getSubstChars();

/*void*/void ucnv_setSubstChars();

/*void*/void ucnv_setSubstString();

/*void*/void ucnv_getInvalidChars();

/*void*/void ucnv_getInvalidUChars();

/*void*/void ucnv_reset();

/*void*/void ucnv_resetToUnicode();

/*void*/void ucnv_resetFromUnicode();

/*i8*/void ucnv_getMaxCharSize();

/*i8*/void ucnv_getMinCharSize();

/*i32*/void ucnv_getDisplayName();

/*PSTR*/void ucnv_getName();

/*i32*/void ucnv_getCCSID();

/*UConverterPlatform*/void ucnv_getPlatform();

/*UConverterType*/void ucnv_getType();

/*void*/void ucnv_getStarters();

/*void*/void ucnv_getUnicodeSet();

/*void*/void ucnv_getToUCallBack();

/*void*/void ucnv_getFromUCallBack();

/*void*/void ucnv_setToUCallBack();

/*void*/void ucnv_setFromUCallBack();

/*void*/void ucnv_fromUnicode();

/*void*/void ucnv_toUnicode();

/*i32*/void ucnv_fromUChars();

/*i32*/void ucnv_toUChars();

/*i32*/void ucnv_getNextUChar();

/*void*/void ucnv_convertEx();

/*i32*/void ucnv_convert();

/*i32*/void ucnv_toAlgorithmic();

/*i32*/void ucnv_fromAlgorithmic();

/*i32*/void ucnv_flushCache();

/*i32*/void ucnv_countAvailable();

/*PSTR*/void ucnv_getAvailableName();

/*?*UEnumeration*/void ucnv_openAllNames();

/*u16*/void ucnv_countAliases();

/*PSTR*/void ucnv_getAlias();

/*void*/void ucnv_getAliases();

/*?*UEnumeration*/void ucnv_openStandardNames();

/*u16*/void ucnv_countStandards();

/*PSTR*/void ucnv_getStandard();

/*PSTR*/void ucnv_getStandardName();

/*PSTR*/void ucnv_getCanonicalName();

/*PSTR*/void ucnv_getDefaultName();

/*void*/void ucnv_setDefaultName();

/*void*/void ucnv_fixFileSeparator();

/*i8*/void ucnv_isAmbiguous();

/*void*/void ucnv_setFallback();

/*i8*/void ucnv_usesFallback();

/*PSTR*/void ucnv_detectUnicodeSignature();

/*i32*/void ucnv_fromUCountPending();

/*i32*/void ucnv_toUCountPending();

/*i8*/void ucnv_isFixedWidth();

/*void*/void ucnv_cbFromUWriteBytes();

/*void*/void ucnv_cbFromUWriteSub();

/*void*/void ucnv_cbFromUWriteUChars();

/*void*/void ucnv_cbToUWriteUChars();

/*void*/void ucnv_cbToUWriteSub();

/*void*/void u_init();

/*void*/void u_cleanup();

/*void*/void u_setMemoryFunctions();

/*?*UResourceBundle*/void u_catopen();

/*void*/void u_catclose();

/*?*u16*/void u_catgets();

/*i8*/void u_hasBinaryProperty();

/*i8*/void u_isUAlphabetic();

/*i8*/void u_isULowercase();

/*i8*/void u_isUUppercase();

/*i8*/void u_isUWhiteSpace();

/*i32*/void u_getIntPropertyValue();

/*i32*/void u_getIntPropertyMinValue();

/*i32*/void u_getIntPropertyMaxValue();

/*f64*/void u_getNumericValue();

/*i8*/void u_islower();

/*i8*/void u_isupper();

/*i8*/void u_istitle();

/*i8*/void u_isdigit();

/*i8*/void u_isalpha();

/*i8*/void u_isalnum();

/*i8*/void u_isxdigit();

/*i8*/void u_ispunct();

/*i8*/void u_isgraph();

/*i8*/void u_isblank();

/*i8*/void u_isdefined();

/*i8*/void u_isspace();

/*i8*/void u_isJavaSpaceChar();

/*i8*/void u_isWhitespace();

/*i8*/void u_iscntrl();

/*i8*/void u_isISOControl();

/*i8*/void u_isprint();

/*i8*/void u_isbase();

/*UCharDirection*/void u_charDirection();

/*i8*/void u_isMirrored();

/*i32*/void u_charMirror();

/*i32*/void u_getBidiPairedBracket();

/*i8*/void u_charType();

/*void*/void u_enumCharTypes();

/*u8*/void u_getCombiningClass();

/*i32*/void u_charDigitValue();

/*UBlockCode*/void ublock_getCode();

/*i32*/void u_charName();

/*i32*/void u_charFromName();

/*void*/void u_enumCharNames();

/*PSTR*/void u_getPropertyName();

/*UProperty*/void u_getPropertyEnum();

/*PSTR*/void u_getPropertyValueName();

/*i32*/void u_getPropertyValueEnum();

/*i8*/void u_isIDStart();

/*i8*/void u_isIDPart();

/*i8*/void u_isIDIgnorable();

/*i8*/void u_isJavaIDStart();

/*i8*/void u_isJavaIDPart();

/*i32*/void u_tolower();

/*i32*/void u_toupper();

/*i32*/void u_totitle();

/*i32*/void u_foldCase();

/*i32*/void u_digit();

/*i32*/void u_forDigit();

/*void*/void u_charAge();

/*void*/void u_getUnicodeVersion();

/*i32*/void u_getFC_NFKC_Closure();

/*?*UBiDi*/void ubidi_open();

/*?*UBiDi*/void ubidi_openSized();

/*void*/void ubidi_close();

/*void*/void ubidi_setInverse();

/*i8*/void ubidi_isInverse();

/*void*/void ubidi_orderParagraphsLTR();

/*i8*/void ubidi_isOrderParagraphsLTR();

/*void*/void ubidi_setReorderingMode();

/*UBiDiReorderingMode*/void ubidi_getReorderingMode();

/*void*/void ubidi_setReorderingOptions();

/*u32*/void ubidi_getReorderingOptions();

/*void*/void ubidi_setContext();

/*void*/void ubidi_setPara();

/*void*/void ubidi_setLine();

/*UBiDiDirection*/void ubidi_getDirection();

/*UBiDiDirection*/void ubidi_getBaseDirection();

/*?*u16*/void ubidi_getText();

/*i32*/void ubidi_getLength();

/*u8*/void ubidi_getParaLevel();

/*i32*/void ubidi_countParagraphs();

/*i32*/void ubidi_getParagraph();

/*void*/void ubidi_getParagraphByIndex();

/*u8*/void ubidi_getLevelAt();

/*?*u8*/void ubidi_getLevels();

/*void*/void ubidi_getLogicalRun();

/*i32*/void ubidi_countRuns();

/*UBiDiDirection*/void ubidi_getVisualRun();

/*i32*/void ubidi_getVisualIndex();

/*i32*/void ubidi_getLogicalIndex();

/*void*/void ubidi_getLogicalMap();

/*void*/void ubidi_getVisualMap();

/*void*/void ubidi_reorderLogical();

/*void*/void ubidi_reorderVisual();

/*void*/void ubidi_invertMap();

/*i32*/void ubidi_getProcessedLength();

/*i32*/void ubidi_getResultLength();

/*UCharDirection*/void ubidi_getCustomizedClass();

/*void*/void ubidi_setClassCallback();

/*void*/void ubidi_getClassCallback();

/*i32*/void ubidi_writeReordered();

/*i32*/void ubidi_writeReverse();

/*u32*/void ubiditransform_transform();

/*?*UBiDiTransform*/void ubiditransform_open();

/*void*/void ubiditransform_close();

/*?*UText*/void utext_close();

/*?*UText*/void utext_openUTF8();

/*?*UText*/void utext_openUChars();

/*?*UText*/void utext_clone();

/*i8*/void utext_equals();

/*i64*/void utext_nativeLength();

/*i8*/void utext_isLengthExpensive();

/*i32*/void utext_char32At();

/*i32*/void utext_current32();

/*i32*/void utext_next32();

/*i32*/void utext_previous32();

/*i32*/void utext_next32From();

/*i32*/void utext_previous32From();

/*i64*/void utext_getNativeIndex();

/*void*/void utext_setNativeIndex();

/*i8*/void utext_moveIndex32();

/*i64*/void utext_getPreviousNativeIndex();

/*i32*/void utext_extract();

/*i8*/void utext_isWritable();

/*i8*/void utext_hasMetaData();

/*i32*/void utext_replace();

/*void*/void utext_copy();

/*void*/void utext_freeze();

/*?*UText*/void utext_setup();

/*?*USet*/void uset_openEmpty();

/*?*USet*/void uset_open();

/*?*USet*/void uset_openPattern();

/*?*USet*/void uset_openPatternOptions();

/*void*/void uset_close();

/*?*USet*/void uset_clone();

/*i8*/void uset_isFrozen();

/*void*/void uset_freeze();

/*?*USet*/void uset_cloneAsThawed();

/*void*/void uset_set();

/*i32*/void uset_applyPattern();

/*void*/void uset_applyIntPropertyValue();

/*void*/void uset_applyPropertyAlias();

/*i8*/void uset_resemblesPattern();

/*i32*/void uset_toPattern();

/*void*/void uset_add();

/*void*/void uset_addAll();

/*void*/void uset_addRange();

/*void*/void uset_addString();

/*void*/void uset_addAllCodePoints();

/*void*/void uset_remove();

/*void*/void uset_removeRange();

/*void*/void uset_removeString();

/*void*/void uset_removeAll();

/*void*/void uset_retain();

/*void*/void uset_retainAll();

/*void*/void uset_compact();

/*void*/void uset_complement();

/*void*/void uset_complementAll();

/*void*/void uset_clear();

/*void*/void uset_closeOver();

/*void*/void uset_removeAllStrings();

/*i8*/void uset_isEmpty();

/*i8*/void uset_contains();

/*i8*/void uset_containsRange();

/*i8*/void uset_containsString();

/*i32*/void uset_indexOf();

/*i32*/void uset_charAt();

/*i32*/void uset_size();

/*i32*/void uset_getItemCount();

/*i32*/void uset_getItem();

/*i8*/void uset_containsAll();

/*i8*/void uset_containsAllCodePoints();

/*i8*/void uset_containsNone();

/*i8*/void uset_containsSome();

/*i32*/void uset_span();

/*i32*/void uset_spanBack();

/*i32*/void uset_spanUTF8();

/*i32*/void uset_spanBackUTF8();

/*i8*/void uset_equals();

/*i32*/void uset_serialize();

/*i8*/void uset_getSerializedSet();

/*void*/void uset_setSerializedToOne();

/*i8*/void uset_serializedContains();

/*i32*/void uset_getSerializedRangeCount();

/*i8*/void uset_getSerializedRange();

/*?*UNormalizer2*/void unorm2_getNFCInstance();

/*?*UNormalizer2*/void unorm2_getNFDInstance();

/*?*UNormalizer2*/void unorm2_getNFKCInstance();

/*?*UNormalizer2*/void unorm2_getNFKDInstance();

/*?*UNormalizer2*/void unorm2_getNFKCCasefoldInstance();

/*?*UNormalizer2*/void unorm2_getInstance();

/*?*UNormalizer2*/void unorm2_openFiltered();

/*void*/void unorm2_close();

/*i32*/void unorm2_normalize();

/*i32*/void unorm2_normalizeSecondAndAppend();

/*i32*/void unorm2_append();

/*i32*/void unorm2_getDecomposition();

/*i32*/void unorm2_getRawDecomposition();

/*i32*/void unorm2_composePair();

/*u8*/void unorm2_getCombiningClass();

/*i8*/void unorm2_isNormalized();

/*UNormalizationCheckResult*/void unorm2_quickCheck();

/*i32*/void unorm2_spanQuickCheckYes();

/*i8*/void unorm2_hasBoundaryBefore();

/*i8*/void unorm2_hasBoundaryAfter();

/*i8*/void unorm2_isInert();

/*i32*/void unorm_compare();

/*?*UConverterSelector*/void ucnvsel_open();

/*void*/void ucnvsel_close();

/*?*UConverterSelector*/void ucnvsel_openFromSerialized();

/*i32*/void ucnvsel_serialize();

/*?*UEnumeration*/void ucnvsel_selectForString();

/*?*UEnumeration*/void ucnvsel_selectForUTF8();

/*void*/void u_charsToUChars();

/*void*/void u_UCharsToChars();

/*i32*/void u_strlen();

/*i32*/void u_countChar32();

/*i8*/void u_strHasMoreChar32Than();

/*?*u16*/void u_strcat();

/*?*u16*/void u_strncat();

/*?*u16*/void u_strstr();

/*?*u16*/void u_strFindFirst();

/*?*u16*/void u_strchr();

/*?*u16*/void u_strchr32();

/*?*u16*/void u_strrstr();

/*?*u16*/void u_strFindLast();

/*?*u16*/void u_strrchr();

/*?*u16*/void u_strrchr32();

/*?*u16*/void u_strpbrk();

/*i32*/void u_strcspn();

/*i32*/void u_strspn();

/*?*u16*/void u_strtok_r();

/*i32*/void u_strcmp();

/*i32*/void u_strcmpCodePointOrder();

/*i32*/void u_strCompare();

/*i32*/void u_strCompareIter();

/*i32*/void u_strCaseCompare();

/*i32*/void u_strncmp();

/*i32*/void u_strncmpCodePointOrder();

/*i32*/void u_strcasecmp();

/*i32*/void u_strncasecmp();

/*i32*/void u_memcasecmp();

/*?*u16*/void u_strcpy();

/*?*u16*/void u_strncpy();

/*?*u16*/void u_uastrcpy();

/*?*u16*/void u_uastrncpy();

/*PSTR*/void u_austrcpy();

/*PSTR*/void u_austrncpy();

/*?*u16*/void u_memcpy();

/*?*u16*/void u_memmove();

/*?*u16*/void u_memset();

/*i32*/void u_memcmp();

/*i32*/void u_memcmpCodePointOrder();

/*?*u16*/void u_memchr();

/*?*u16*/void u_memchr32();

/*?*u16*/void u_memrchr();

/*?*u16*/void u_memrchr32();

/*i32*/void u_unescape();

/*i32*/void u_unescapeAt();

/*i32*/void u_strToUpper();

/*i32*/void u_strToLower();

/*i32*/void u_strToTitle();

/*i32*/void u_strFoldCase();

/*PWSTR*/void u_strToWCS();

/*?*u16*/void u_strFromWCS();

/*PSTR*/void u_strToUTF8();

/*?*u16*/void u_strFromUTF8();

/*PSTR*/void u_strToUTF8WithSub();

/*?*u16*/void u_strFromUTF8WithSub();

/*?*u16*/void u_strFromUTF8Lenient();

/*?*i32*/void u_strToUTF32();

/*?*u16*/void u_strFromUTF32();

/*?*i32*/void u_strToUTF32WithSub();

/*?*u16*/void u_strFromUTF32WithSub();

/*PSTR*/void u_strToJavaModifiedUTF8();

/*?*u16*/void u_strFromJavaModifiedUTF8WithSub();

/*?*UCaseMap*/void ucasemap_open();

/*void*/void ucasemap_close();

/*PSTR*/void ucasemap_getLocale();

/*u32*/void ucasemap_getOptions();

/*void*/void ucasemap_setLocale();

/*void*/void ucasemap_setOptions();

/*?*UBreakIterator*/void ucasemap_getBreakIterator();

/*void*/void ucasemap_setBreakIterator();

/*i32*/void ucasemap_toTitle();

/*i32*/void ucasemap_utf8ToLower();

/*i32*/void ucasemap_utf8ToUpper();

/*i32*/void ucasemap_utf8ToTitle();

/*i32*/void ucasemap_utf8FoldCase();

/*?*UStringPrepProfile*/void usprep_open();

/*?*UStringPrepProfile*/void usprep_openByType();

/*void*/void usprep_close();

/*i32*/void usprep_prepare();

/*?*UIDNA*/void uidna_openUTS46();

/*void*/void uidna_close();

/*i32*/void uidna_labelToASCII();

/*i32*/void uidna_labelToUnicode();

/*i32*/void uidna_nameToASCII();

/*i32*/void uidna_nameToUnicode();

/*i32*/void uidna_labelToASCII_UTF8();

/*i32*/void uidna_labelToUnicodeUTF8();

/*i32*/void uidna_nameToASCII_UTF8();

/*i32*/void uidna_nameToUnicodeUTF8();

/*?*UBreakIterator*/void ubrk_open();

/*?*UBreakIterator*/void ubrk_openRules();

/*?*UBreakIterator*/void ubrk_openBinaryRules();

/*?*UBreakIterator*/void ubrk_safeClone();

/*void*/void ubrk_close();

/*void*/void ubrk_setText();

/*void*/void ubrk_setUText();

/*i32*/void ubrk_current();

/*i32*/void ubrk_next();

/*i32*/void ubrk_previous();

/*i32*/void ubrk_first();

/*i32*/void ubrk_last();

/*i32*/void ubrk_preceding();

/*i32*/void ubrk_following();

/*PSTR*/void ubrk_getAvailable();

/*i32*/void ubrk_countAvailable();

/*i8*/void ubrk_isBoundary();

/*i32*/void ubrk_getRuleStatus();

/*i32*/void ubrk_getRuleStatusVec();

/*PSTR*/void ubrk_getLocaleByType();

/*void*/void ubrk_refreshUText();

/*i32*/void ubrk_getBinaryRules();

/*void*/void u_getDataVersion();

/*?*UEnumeration*/void ucal_openTimeZoneIDEnumeration();

/*?*UEnumeration*/void ucal_openTimeZones();

/*?*UEnumeration*/void ucal_openCountryTimeZones();

/*i32*/void ucal_getDefaultTimeZone();

/*void*/void ucal_setDefaultTimeZone();

/*i32*/void ucal_getDSTSavings();

/*f64*/void ucal_getNow();

/*?*?*c_void*/void ucal_open();

/*void*/void ucal_close();

/*?*?*c_void*/void ucal_clone();

/*void*/void ucal_setTimeZone();

/*i32*/void ucal_getTimeZoneID();

/*i32*/void ucal_getTimeZoneDisplayName();

/*i8*/void ucal_inDaylightTime();

/*void*/void ucal_setGregorianChange();

/*f64*/void ucal_getGregorianChange();

/*i32*/void ucal_getAttribute();

/*void*/void ucal_setAttribute();

/*PSTR*/void ucal_getAvailable();

/*i32*/void ucal_countAvailable();

/*f64*/void ucal_getMillis();

/*void*/void ucal_setMillis();

/*void*/void ucal_setDate();

/*void*/void ucal_setDateTime();

/*i8*/void ucal_equivalentTo();

/*void*/void ucal_add();

/*void*/void ucal_roll();

/*i32*/void ucal_get();

/*void*/void ucal_set();

/*i8*/void ucal_isSet();

/*void*/void ucal_clearField();

/*void*/void ucal_clear();

/*i32*/void ucal_getLimit();

/*PSTR*/void ucal_getLocaleByType();

/*PSTR*/void ucal_getTZDataVersion();

/*i32*/void ucal_getCanonicalTimeZoneID();

/*PSTR*/void ucal_getType();

/*?*UEnumeration*/void ucal_getKeywordValuesForLocale();

/*UCalendarWeekdayType*/void ucal_getDayOfWeekType();

/*i32*/void ucal_getWeekendTransition();

/*i8*/void ucal_isWeekend();

/*i32*/void ucal_getFieldDifference();

/*i8*/void ucal_getTimeZoneTransitionDate();

/*i32*/void ucal_getWindowsTimeZoneID();

/*i32*/void ucal_getTimeZoneIDForWindowsID();

/*?*UCollator*/void ucol_open();

/*?*UCollator*/void ucol_openRules();

/*void*/void ucol_getContractionsAndExpansions();

/*void*/void ucol_close();

/*UCollationResult*/void ucol_strcoll();

/*UCollationResult*/void ucol_strcollUTF8();

/*i8*/void ucol_greater();

/*i8*/void ucol_greaterOrEqual();

/*i8*/void ucol_equal();

/*UCollationResult*/void ucol_strcollIter();

/*UColAttributeValue*/void ucol_getStrength();

/*void*/void ucol_setStrength();

/*i32*/void ucol_getReorderCodes();

/*void*/void ucol_setReorderCodes();

/*i32*/void ucol_getEquivalentReorderCodes();

/*i32*/void ucol_getDisplayName();

/*PSTR*/void ucol_getAvailable();

/*i32*/void ucol_countAvailable();

/*?*UEnumeration*/void ucol_openAvailableLocales();

/*?*UEnumeration*/void ucol_getKeywords();

/*?*UEnumeration*/void ucol_getKeywordValues();

/*?*UEnumeration*/void ucol_getKeywordValuesForLocale();

/*i32*/void ucol_getFunctionalEquivalent();

/*?*u16*/void ucol_getRules();

/*i32*/void ucol_getSortKey();

/*i32*/void ucol_nextSortKeyPart();

/*i32*/void ucol_getBound();

/*void*/void ucol_getVersion();

/*void*/void ucol_getUCAVersion();

/*i32*/void ucol_mergeSortkeys();

/*void*/void ucol_setAttribute();

/*UColAttributeValue*/void ucol_getAttribute();

/*void*/void ucol_setMaxVariable();

/*UColReorderCode*/void ucol_getMaxVariable();

/*u32*/void ucol_getVariableTop();

/*?*UCollator*/void ucol_safeClone();

/*i32*/void ucol_getRulesEx();

/*PSTR*/void ucol_getLocaleByType();

/*?*USet*/void ucol_getTailoredSet();

/*i32*/void ucol_cloneBinary();

/*?*UCollator*/void ucol_openBinary();

/*?*UCollationElements*/void ucol_openElements();

/*i32*/void ucol_keyHashCode();

/*void*/void ucol_closeElements();

/*void*/void ucol_reset();

/*i32*/void ucol_next();

/*i32*/void ucol_previous();

/*i32*/void ucol_getMaxExpansion();

/*void*/void ucol_setText();

/*i32*/void ucol_getOffset();

/*void*/void ucol_setOffset();

/*i32*/void ucol_primaryOrder();

/*i32*/void ucol_secondaryOrder();

/*i32*/void ucol_tertiaryOrder();

/*?*UCharsetDetector*/void ucsdet_open();

/*void*/void ucsdet_close();

/*void*/void ucsdet_setText();

/*void*/void ucsdet_setDeclaredEncoding();

/*?*UCharsetMatch*/void ucsdet_detect();

/*?*?*UCharsetMatch*/void ucsdet_detectAll();

/*PSTR*/void ucsdet_getName();

/*i32*/void ucsdet_getConfidence();

/*PSTR*/void ucsdet_getLanguage();

/*i32*/void ucsdet_getUChars();

/*?*UEnumeration*/void ucsdet_getAllDetectableCharsets();

/*i8*/void ucsdet_isInputFilterEnabled();

/*i8*/void ucsdet_enableInputFilter();

/*?*?*c_void*/void udatpg_open();

/*?*?*c_void*/void udatpg_openEmpty();

/*void*/void udatpg_close();

/*?*?*c_void*/void udatpg_clone();

/*i32*/void udatpg_getBestPattern();

/*i32*/void udatpg_getBestPatternWithOptions();

/*i32*/void udatpg_getSkeleton();

/*i32*/void udatpg_getBaseSkeleton();

/*UDateTimePatternConflict*/void udatpg_addPattern();

/*void*/void udatpg_setAppendItemFormat();

/*?*u16*/void udatpg_getAppendItemFormat();

/*void*/void udatpg_setAppendItemName();

/*?*u16*/void udatpg_getAppendItemName();

/*i32*/void udatpg_getFieldDisplayName();

/*void*/void udatpg_setDateTimeFormat();

/*?*u16*/void udatpg_getDateTimeFormat();

/*void*/void udatpg_setDecimal();

/*?*u16*/void udatpg_getDecimal();

/*i32*/void udatpg_replaceFieldTypes();

/*i32*/void udatpg_replaceFieldTypesWithOptions();

/*?*UEnumeration*/void udatpg_openSkeletons();

/*?*UEnumeration*/void udatpg_openBaseSkeletons();

/*?*u16*/void udatpg_getPatternForSkeleton();

/*?*UFieldPositionIterator*/void ufieldpositer_open();

/*void*/void ufieldpositer_close();

/*i32*/void ufieldpositer_next();

/*?*?*c_void*/void ufmt_open();

/*void*/void ufmt_close();

/*UFormattableType*/void ufmt_getType();

/*i8*/void ufmt_isNumeric();

/*f64*/void ufmt_getDate();

/*f64*/void ufmt_getDouble();

/*i32*/void ufmt_getLong();

/*i64*/void ufmt_getInt64();

/*?*c_void*/void ufmt_getObject();

/*?*u16*/void ufmt_getUChars();

/*i32*/void ufmt_getArrayLength();

/*?*?*c_void*/void ufmt_getArrayItemByIndex();

/*PSTR*/void ufmt_getDecNumChars();

/*?*UDateIntervalFormat*/void udtitvfmt_open();

/*void*/void udtitvfmt_close();

/*i32*/void udtitvfmt_format();

/*?*UGenderInfo*/void ugender_getInstance();

/*UGender*/void ugender_getListGender();

/*?*UListFormatter*/void ulistfmt_open();

/*void*/void ulistfmt_close();

/*i32*/void ulistfmt_format();

/*?*ULocaleData*/void ulocdata_open();

/*void*/void ulocdata_close();

/*void*/void ulocdata_setNoSubstitute();

/*i8*/void ulocdata_getNoSubstitute();

/*?*USet*/void ulocdata_getExemplarSet();

/*i32*/void ulocdata_getDelimiter();

/*UMeasurementSystem*/void ulocdata_getMeasurementSystem();

/*void*/void ulocdata_getPaperSize();

/*void*/void ulocdata_getCLDRVersion();

/*i32*/void ulocdata_getLocaleDisplayPattern();

/*i32*/void ulocdata_getLocaleSeparator();

/*i32*/void u_formatMessage();

/*i32*/void u_vformatMessage();

/*void*/void u_parseMessage();

/*void*/void u_vparseMessage();

/*i32*/void u_formatMessageWithError();

/*i32*/void u_vformatMessageWithError();

/*void*/void u_parseMessageWithError();

/*void*/void u_vparseMessageWithError();

/*?*?*c_void*/void umsg_open();

/*void*/void umsg_close();

/*?*c_void*/void umsg_clone();

/*void*/void umsg_setLocale();

/*PSTR*/void umsg_getLocale();

/*void*/void umsg_applyPattern();

/*i32*/void umsg_toPattern();

/*i32*/void umsg_format();

/*i32*/void umsg_vformat();

/*void*/void umsg_parse();

/*void*/void umsg_vparse();

/*i32*/void umsg_autoQuoteApostrophe();

/*?*?*c_void*/void unum_open();

/*void*/void unum_close();

/*?*?*c_void*/void unum_clone();

/*i32*/void unum_format();

/*i32*/void unum_formatInt64();

/*i32*/void unum_formatDouble();

/*i32*/void unum_formatDoubleForFields();

/*i32*/void unum_formatDecimal();

/*i32*/void unum_formatDoubleCurrency();

/*i32*/void unum_formatUFormattable();

/*i32*/void unum_parse();

/*i64*/void unum_parseInt64();

/*f64*/void unum_parseDouble();

/*i32*/void unum_parseDecimal();

/*f64*/void unum_parseDoubleCurrency();

/*?*?*c_void*/void unum_parseToUFormattable();

/*void*/void unum_applyPattern();

/*PSTR*/void unum_getAvailable();

/*i32*/void unum_countAvailable();

/*i32*/void unum_getAttribute();

/*void*/void unum_setAttribute();

/*f64*/void unum_getDoubleAttribute();

/*void*/void unum_setDoubleAttribute();

/*i32*/void unum_getTextAttribute();

/*void*/void unum_setTextAttribute();

/*i32*/void unum_toPattern();

/*i32*/void unum_getSymbol();

/*void*/void unum_setSymbol();

/*PSTR*/void unum_getLocaleByType();

/*void*/void unum_setContext();

/*UDisplayContext*/void unum_getContext();

/*UCalendarDateFields*/void udat_toCalendarDateField();

/*?*?*c_void*/void udat_open();

/*void*/void udat_close();

/*i8*/void udat_getBooleanAttribute();

/*void*/void udat_setBooleanAttribute();

/*?*?*c_void*/void udat_clone();

/*i32*/void udat_format();

/*i32*/void udat_formatCalendar();

/*i32*/void udat_formatForFields();

/*i32*/void udat_formatCalendarForFields();

/*f64*/void udat_parse();

/*void*/void udat_parseCalendar();

/*i8*/void udat_isLenient();

/*void*/void udat_setLenient();

/*?*?*c_void*/void udat_getCalendar();

/*void*/void udat_setCalendar();

/*?*?*c_void*/void udat_getNumberFormat();

/*?*?*c_void*/void udat_getNumberFormatForField();

/*void*/void udat_adoptNumberFormatForFields();

/*void*/void udat_setNumberFormat();

/*void*/void udat_adoptNumberFormat();

/*PSTR*/void udat_getAvailable();

/*i32*/void udat_countAvailable();

/*f64*/void udat_get2DigitYearStart();

/*void*/void udat_set2DigitYearStart();

/*i32*/void udat_toPattern();

/*void*/void udat_applyPattern();

/*i32*/void udat_getSymbols();

/*i32*/void udat_countSymbols();

/*void*/void udat_setSymbols();

/*PSTR*/void udat_getLocaleByType();

/*void*/void udat_setContext();

/*UDisplayContext*/void udat_getContext();

/*?*UNumberFormatter*/void unumf_openForSkeletonAndLocale();

/*?*UFormattedNumber*/void unumf_openResult();

/*void*/void unumf_formatInt();

/*void*/void unumf_formatDouble();

/*void*/void unumf_formatDecimal();

/*i32*/void unumf_resultToString();

/*i8*/void unumf_resultNextFieldPosition();

/*void*/void unumf_resultGetAllFieldPositions();

/*void*/void unumf_close();

/*void*/void unumf_closeResult();

/*?*UNumberingSystem*/void unumsys_open();

/*?*UNumberingSystem*/void unumsys_openByName();

/*void*/void unumsys_close();

/*?*UEnumeration*/void unumsys_openAvailableNames();

/*PSTR*/void unumsys_getName();

/*i8*/void unumsys_isAlgorithmic();

/*i32*/void unumsys_getRadix();

/*i32*/void unumsys_getDescription();

/*?*UPluralRules*/void uplrules_open();

/*?*UPluralRules*/void uplrules_openForType();

/*void*/void uplrules_close();

/*i32*/void uplrules_select();

/*?*UEnumeration*/void uplrules_getKeywords();

/*?*URegularExpression*/void uregex_open();

/*?*URegularExpression*/void uregex_openUText();

/*?*URegularExpression*/void uregex_openC();

/*void*/void uregex_close();

/*?*URegularExpression*/void uregex_clone();

/*?*u16*/void uregex_pattern();

/*?*UText*/void uregex_patternUText();

/*i32*/void uregex_flags();

/*void*/void uregex_setText();

/*void*/void uregex_setUText();

/*?*u16*/void uregex_getText();

/*?*UText*/void uregex_getUText();

/*void*/void uregex_refreshUText();

/*i8*/void uregex_matches();

/*i8*/void uregex_matches64();

/*i8*/void uregex_lookingAt();

/*i8*/void uregex_lookingAt64();

/*i8*/void uregex_find();

/*i8*/void uregex_find64();

/*i8*/void uregex_findNext();

/*i32*/void uregex_groupCount();

/*i32*/void uregex_groupNumberFromName();

/*i32*/void uregex_groupNumberFromCName();

/*i32*/void uregex_group();

/*?*UText*/void uregex_groupUText();

/*i32*/void uregex_start();

/*i64*/void uregex_start64();

/*i32*/void uregex_end();

/*i64*/void uregex_end64();

/*void*/void uregex_reset();

/*void*/void uregex_reset64();

/*void*/void uregex_setRegion();

/*void*/void uregex_setRegion64();

/*void*/void uregex_setRegionAndStart();

/*i32*/void uregex_regionStart();

/*i64*/void uregex_regionStart64();

/*i32*/void uregex_regionEnd();

/*i64*/void uregex_regionEnd64();

/*i8*/void uregex_hasTransparentBounds();

/*void*/void uregex_useTransparentBounds();

/*i8*/void uregex_hasAnchoringBounds();

/*void*/void uregex_useAnchoringBounds();

/*i8*/void uregex_hitEnd();

/*i8*/void uregex_requireEnd();

/*i32*/void uregex_replaceAll();

/*?*UText*/void uregex_replaceAllUText();

/*i32*/void uregex_replaceFirst();

/*?*UText*/void uregex_replaceFirstUText();

/*i32*/void uregex_appendReplacement();

/*void*/void uregex_appendReplacementUText();

/*i32*/void uregex_appendTail();

/*?*UText*/void uregex_appendTailUText();

/*i32*/void uregex_split();

/*i32*/void uregex_splitUText();

/*void*/void uregex_setTimeLimit();

/*i32*/void uregex_getTimeLimit();

/*void*/void uregex_setStackLimit();

/*i32*/void uregex_getStackLimit();

/*void*/void uregex_setMatchCallback();

/*void*/void uregex_getMatchCallback();

/*void*/void uregex_setFindProgressCallback();

/*void*/void uregex_getFindProgressCallback();

/*?*URegion*/void uregion_getRegionFromCode();

/*?*URegion*/void uregion_getRegionFromNumericCode();

/*?*UEnumeration*/void uregion_getAvailable();

/*i8*/void uregion_areEqual();

/*?*URegion*/void uregion_getContainingRegion();

/*?*URegion*/void uregion_getContainingRegionOfType();

/*?*UEnumeration*/void uregion_getContainedRegions();

/*?*UEnumeration*/void uregion_getContainedRegionsOfType();

/*i8*/void uregion_contains();

/*?*UEnumeration*/void uregion_getPreferredValues();

/*PSTR*/void uregion_getRegionCode();

/*i32*/void uregion_getNumericCode();

/*URegionType*/void uregion_getType();

/*?*URelativeDateTimeFormatter*/void ureldatefmt_open();

/*void*/void ureldatefmt_close();

/*i32*/void ureldatefmt_formatNumeric();

/*i32*/void ureldatefmt_format();

/*i32*/void ureldatefmt_combineDateAndTime();

/*?*UStringSearch*/void usearch_open();

/*?*UStringSearch*/void usearch_openFromCollator();

/*void*/void usearch_close();

/*void*/void usearch_setOffset();

/*i32*/void usearch_getOffset();

/*void*/void usearch_setAttribute();

/*USearchAttributeValue*/void usearch_getAttribute();

/*i32*/void usearch_getMatchedStart();

/*i32*/void usearch_getMatchedLength();

/*i32*/void usearch_getMatchedText();

/*void*/void usearch_setBreakIterator();

/*?*UBreakIterator*/void usearch_getBreakIterator();

/*void*/void usearch_setText();

/*?*u16*/void usearch_getText();

/*?*UCollator*/void usearch_getCollator();

/*void*/void usearch_setCollator();

/*void*/void usearch_setPattern();

/*?*u16*/void usearch_getPattern();

/*i32*/void usearch_first();

/*i32*/void usearch_following();

/*i32*/void usearch_last();

/*i32*/void usearch_preceding();

/*i32*/void usearch_next();

/*i32*/void usearch_previous();

/*void*/void usearch_reset();

/*?*USpoofChecker*/void uspoof_open();

/*?*USpoofChecker*/void uspoof_openFromSerialized();

/*?*USpoofChecker*/void uspoof_openFromSource();

/*void*/void uspoof_close();

/*?*USpoofChecker*/void uspoof_clone();

/*void*/void uspoof_setChecks();

/*i32*/void uspoof_getChecks();

/*void*/void uspoof_setRestrictionLevel();

/*URestrictionLevel*/void uspoof_getRestrictionLevel();

/*void*/void uspoof_setAllowedLocales();

/*PSTR*/void uspoof_getAllowedLocales();

/*void*/void uspoof_setAllowedChars();

/*?*USet*/void uspoof_getAllowedChars();

/*i32*/void uspoof_check();

/*i32*/void uspoof_checkUTF8();

/*i32*/void uspoof_check2();

/*i32*/void uspoof_check2UTF8();

/*?*USpoofCheckResult*/void uspoof_openCheckResult();

/*void*/void uspoof_closeCheckResult();

/*i32*/void uspoof_getCheckResultChecks();

/*URestrictionLevel*/void uspoof_getCheckResultRestrictionLevel();

/*?*USet*/void uspoof_getCheckResultNumerics();

/*i32*/void uspoof_areConfusable();

/*i32*/void uspoof_areConfusableUTF8();

/*i32*/void uspoof_getSkeleton();

/*i32*/void uspoof_getSkeletonUTF8();

/*?*USet*/void uspoof_getInclusionSet();

/*?*USet*/void uspoof_getRecommendedSet();

/*i32*/void uspoof_serialize();

/*i64*/void utmscale_getTimeScaleValue();

/*i64*/void utmscale_fromInt64();

/*i64*/void utmscale_toInt64();

/*?*?*c_void*/void utrans_openU();

/*?*?*c_void*/void utrans_openInverse();

/*?*?*c_void*/void utrans_clone();

/*void*/void utrans_close();

/*?*u16*/void utrans_getUnicodeID();

/*void*/void utrans_register();

/*void*/void utrans_unregisterID();

/*void*/void utrans_setFilter();

/*i32*/void utrans_countAvailableIDs();

/*?*UEnumeration*/void utrans_openIDs();

/*void*/void utrans_trans();

/*void*/void utrans_transIncremental();

/*void*/void utrans_transUChars();

/*void*/void utrans_transIncrementalUChars();

/*i32*/void utrans_toRules();

/*?*USet*/void utrans_getSourceSet();

// TODO: this type is limited to platform 'windows6.1'
/*i32*/void FindStringOrdinal();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void lstrcmpA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void lstrcmpW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void lstrcmpiA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void lstrcmpiW();

// TODO: this type is limited to platform 'windows5.0'
/*PSTR*/void lstrcpynA();

// TODO: this type is limited to platform 'windows5.0'
/*PWSTR*/void lstrcpynW();

// TODO: this type is limited to platform 'windows5.0'
/*PSTR*/void lstrcpyA();

// TODO: this type is limited to platform 'windows5.0'
/*PWSTR*/void lstrcpyW();

// TODO: this type is limited to platform 'windows5.0'
/*PSTR*/void lstrcatA();

// TODO: this type is limited to platform 'windows5.0'
/*PWSTR*/void lstrcatW();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void lstrlenA();

// TODO: this type is limited to platform 'windows5.0'
/*i32*/void lstrlenW();

// TODO: this type is limited to platform 'windows5.0'
/*BOOL*/void IsTextUnicode();

