// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (87)
//--------------------------------------------------------------------------------
#define MDM_COMPRESSION (UINT)1
#define MDM_ERROR_CONTROL (UINT)2
#define MDM_FORCED_EC (UINT)4
#define MDM_CELLULAR (UINT)8
#define MDM_FLOWCONTROL_HARD (UINT)16
#define MDM_FLOWCONTROL_SOFT (UINT)32
#define MDM_CCITT_OVERRIDE (UINT)64
#define MDM_SPEED_ADJUST (UINT)128
#define MDM_TONE_DIAL (UINT)256
#define MDM_BLIND_DIAL (UINT)512
#define MDM_V23_OVERRIDE (UINT)1024
#define MDM_DIAGNOSTICS (UINT)2048
#define MDM_MASK_BEARERMODE (UINT)61440
#define MDM_SHIFT_BEARERMODE (UINT)12
#define MDM_MASK_PROTOCOLID (UINT)983040
#define MDM_SHIFT_PROTOCOLID (UINT)16
#define MDM_MASK_PROTOCOLDATA (UINT)267386880
#define MDM_SHIFT_PROTOCOLDATA (UINT)20
#define MDM_BEARERMODE_ANALOG (UINT)0
#define MDM_BEARERMODE_ISDN (UINT)1
#define MDM_BEARERMODE_GSM (UINT)2
#define MDM_PROTOCOLID_DEFAULT (UINT)0
#define MDM_PROTOCOLID_HDLCPPP (UINT)1
#define MDM_PROTOCOLID_V128 (UINT)2
#define MDM_PROTOCOLID_X75 (UINT)3
#define MDM_PROTOCOLID_V110 (UINT)4
#define MDM_PROTOCOLID_V120 (UINT)5
#define MDM_PROTOCOLID_AUTO (UINT)6
#define MDM_PROTOCOLID_ANALOG (UINT)7
#define MDM_PROTOCOLID_GPRS (UINT)8
#define MDM_PROTOCOLID_PIAFS (UINT)9
#define MDM_SHIFT_HDLCPPP_SPEED (UINT)0
#define MDM_MASK_HDLCPPP_SPEED (UINT)7
#define MDM_HDLCPPP_SPEED_DEFAULT (UINT)0
#define MDM_HDLCPPP_SPEED_64K (UINT)1
#define MDM_HDLCPPP_SPEED_56K (UINT)2
#define MDM_SHIFT_HDLCPPP_AUTH (UINT)3
#define MDM_HDLCPPP_AUTH_DEFAULT (UINT)0
#define MDM_HDLCPPP_AUTH_NONE (UINT)1
#define MDM_HDLCPPP_AUTH_PAP (UINT)2
#define MDM_HDLCPPP_AUTH_CHAP (UINT)3
#define MDM_HDLCPPP_AUTH_MSCHAP (UINT)4
#define MDM_SHIFT_HDLCPPP_ML (UINT)6
#define MDM_HDLCPPP_ML_DEFAULT (UINT)0
#define MDM_HDLCPPP_ML_NONE (UINT)1
#define MDM_HDLCPPP_ML_2 (UINT)2
#define MDM_SHIFT_V120_SPEED (UINT)0
#define MDM_MASK_V120_SPEED (UINT)7
#define MDM_V120_SPEED_DEFAULT (UINT)0
#define MDM_V120_SPEED_64K (UINT)1
#define MDM_V120_SPEED_56K (UINT)2
#define MDM_SHIFT_V120_ML (UINT)6
#define MDM_V120_ML_DEFAULT (UINT)0
#define MDM_V120_ML_NONE (UINT)1
#define MDM_V120_ML_2 (UINT)2
#define MDM_SHIFT_X75_DATA (UINT)0
#define MDM_MASK_X75_DATA (UINT)7
#define MDM_X75_DATA_DEFAULT (UINT)0
#define MDM_X75_DATA_64K (UINT)1
#define MDM_X75_DATA_128K (UINT)2
#define MDM_X75_DATA_T_70 (UINT)3
#define MDM_X75_DATA_BTX (UINT)4
#define MDM_SHIFT_V110_SPEED (UINT)0
#define MDM_MASK_V110_SPEED (UINT)15
#define MDM_V110_SPEED_DEFAULT (UINT)0
#define MDM_V110_SPEED_1DOT2K (UINT)1
#define MDM_V110_SPEED_2DOT4K (UINT)2
#define MDM_V110_SPEED_4DOT8K (UINT)3
#define MDM_V110_SPEED_9DOT6K (UINT)4
#define MDM_V110_SPEED_12DOT0K (UINT)5
#define MDM_V110_SPEED_14DOT4K (UINT)6
#define MDM_V110_SPEED_19DOT2K (UINT)7
#define MDM_V110_SPEED_28DOT8K (UINT)8
#define MDM_V110_SPEED_38DOT4K (UINT)9
#define MDM_V110_SPEED_57DOT6K (UINT)10
#define MDM_SHIFT_AUTO_SPEED (UINT)0
#define MDM_MASK_AUTO_SPEED (UINT)7
#define MDM_AUTO_SPEED_DEFAULT (UINT)0
#define MDM_SHIFT_AUTO_ML (UINT)6
#define MDM_AUTO_ML_DEFAULT (UINT)0
#define MDM_AUTO_ML_NONE (UINT)1
#define MDM_AUTO_ML_2 (UINT)2
#define MDM_ANALOG_RLP_ON (UINT)0
#define MDM_ANALOG_RLP_OFF (UINT)1
#define MDM_ANALOG_V34 (UINT)2
#define MDM_PIAFS_INCOMING (UINT)0
#define MDM_PIAFS_OUTGOING (UINT)1

//--------------------------------------------------------------------------------
// Section: Types (18)
//--------------------------------------------------------------------------------
typedef enum {
    MS_CTS_ON = 16,
    MS_DSR_ON = 32,
    MS_RING_ON = 64,
    MS_RLSD_ON = 128,
} MODEM_STATUS_FLAGS;

typedef enum {
    CE_BREAK = 16,
    CE_FRAME = 8,
    CE_OVERRUN = 2,
    CE_RXOVER = 1,
    CE_RXPARITY = 4,
} CLEAR_COMM_ERROR_FLAGS;

typedef enum {
    PURGE_RXABORT = 2,
    PURGE_RXCLEAR = 8,
    PURGE_TXABORT = 1,
    PURGE_TXCLEAR = 4,
} PURGE_COMM_FLAGS;

typedef enum {
    EV_BREAK = 64,
    EV_CTS = 8,
    EV_DSR = 16,
    EV_ERR = 128,
    EV_EVENT1 = 2048,
    EV_EVENT2 = 4096,
    EV_PERR = 512,
    EV_RING = 256,
    EV_RLSD = 32,
    EV_RX80FULL = 1024,
    EV_RXCHAR = 1,
    EV_RXFLAG = 2,
    EV_TXEMPTY = 4,
} COMM_EVENT_MASK;

typedef enum {
    CLRBREAK = 9,
    CLRDTR = 6,
    CLRRTS = 4,
    SETBREAK = 8,
    SETDTR = 5,
    SETRTS = 3,
    SETXOFF = 1,
    SETXON = 2,
} ESCAPE_COMM_FUNCTION;

typedef enum {
    DIALOPTION_BILLING = 64,
    DIALOPTION_DIALTONE = 256,
    DIALOPTION_QUIET = 128,
} MODEMDEVCAPS_DIAL_OPTIONS;

typedef enum {
    MDMSPKR_CALLSETUP = 8,
    MDMSPKR_DIAL = 2,
    MDMSPKR_OFF = 1,
    MDMSPKR_ON = 4,
} MODEMSETTINGS_SPEAKER_MODE;

typedef enum {
    STOPBITS_10 = 1,
    STOPBITS_15 = 2,
    STOPBITS_20 = 4,
    PARITY_NONE = 256,
    PARITY_ODD = 512,
    PARITY_EVEN = 1024,
    PARITY_MARK = 2048,
    PARITY_SPACE = 4096,
} COMMPROP_STOP_PARITY;

typedef enum {
    MDMVOL_HIGH = 2,
    MDMVOL_LOW = 0,
    MDMVOL_MEDIUM = 1,
} MODEM_SPEAKER_VOLUME;

typedef enum {
    MDMVOLFLAG_HIGH = 4,
    MDMVOLFLAG_LOW = 1,
    MDMVOLFLAG_MEDIUM = 2,
} MODEMDEVCAPS_SPEAKER_VOLUME;

typedef enum {
    MDMSPKRFLAG_CALLSETUP = 8,
    MDMSPKRFLAG_DIAL = 2,
    MDMSPKRFLAG_OFF = 1,
    MDMSPKRFLAG_ON = 4,
} MODEMDEVCAPS_SPEAKER_MODE;

typedef int MODEMDEVCAPS;

typedef int MODEMSETTINGS;

typedef int COMMPROP;

typedef int COMSTAT;

typedef int DCB;

typedef int COMMTIMEOUTS;

typedef int COMMCONFIG;


//--------------------------------------------------------------------------------
// Section: Functions (30)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ClearCommBreak();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ClearCommError();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetupComm();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void EscapeCommFunction();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetCommConfig();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetCommMask();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetCommProperties();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetCommModemStatus();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetCommState();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetCommTimeouts();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void PurgeComm();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetCommBreak();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetCommConfig();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetCommMask();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetCommState();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetCommTimeouts();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void TransmitCommChar();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void WaitCommEvent();

// TODO: this type is limited to platform 'windows10.0.16299'
/*HANDLE*/void OpenCommPort();

// TODO: this type is limited to platform 'windows10.0.17134'
/*u32*/void GetCommPorts();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void BuildCommDCBA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void BuildCommDCBW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void BuildCommDCBAndTimeoutsA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void BuildCommDCBAndTimeoutsW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CommConfigDialogA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CommConfigDialogW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetDefaultCommConfigA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetDefaultCommConfigW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetDefaultCommConfigA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetDefaultCommConfigW();

