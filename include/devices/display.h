// NOTE: this file is autogenerated, DO NOT MODIFY
#include "../bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (191)
//--------------------------------------------------------------------------------
#define GUID_DEVINTERFACE_DISPLAY_ADAPTER GUID { "5b45201d-f2f2-4f3b-85bb-30ff1f953599" }
#define GUID_DEVINTERFACE_MONITOR GUID { "e6f07b5f-ee97-4a90-b076-33f57bf4eaa7" }
#define GUID_DISPLAY_DEVICE_ARRIVAL GUID { "1ca05180-a699-450a-9a0c-de4fbe3ddd89" }
#define GUID_DEVINTERFACE_VIDEO_OUTPUT_ARRIVAL GUID { "1ad9e4f0-f88d-4360-bab9-4c2d55e564cd" }
#define DEVPKEY_IndirectDisplay PROPERTYKEY { GUID { c50a3f10-aa5c-4247-b830-d6a6f8eaa310 },  1 };
#define DEVPKEY_Device_TerminalLuid PROPERTYKEY { GUID { c50a3f10-aa5c-4247-b830-d6a6f8eaa310 },  2 };
#define DEVPKEY_Device_AdapterLuid PROPERTYKEY { GUID { c50a3f10-aa5c-4247-b830-d6a6f8eaa310 },  3 };
#define DEVPKEY_Device_ActivityId PROPERTYKEY { GUID { c50a3f10-aa5c-4247-b830-d6a6f8eaa310 },  4 };
#define INDIRECT_DISPLAY_INFO_FLAGS_CREATED_IDDCX_ADAPTER (UINT)1
#define IOCTL_VIDEO_DISABLE_VDM (UINT)2293764
#define IOCTL_VIDEO_REGISTER_VDM (UINT)2293768
#define IOCTL_VIDEO_SET_OUTPUT_DEVICE_POWER_STATE (UINT)2293772
#define IOCTL_VIDEO_GET_OUTPUT_DEVICE_POWER_STATE (UINT)2293776
#define IOCTL_VIDEO_MONITOR_DEVICE (UINT)2293780
#define IOCTL_VIDEO_ENUM_MONITOR_PDO (UINT)2293784
#define IOCTL_VIDEO_INIT_WIN32K_CALLBACKS (UINT)2293788
#define IOCTL_VIDEO_IS_VGA_DEVICE (UINT)2293796
#define IOCTL_VIDEO_USE_DEVICE_IN_SESSION (UINT)2293800
#define IOCTL_VIDEO_PREPARE_FOR_EARECOVERY (UINT)2293804
#define IOCTL_VIDEO_ENABLE_VDM (UINT)2293760
#define IOCTL_VIDEO_SAVE_HARDWARE_STATE (UINT)2294272
#define IOCTL_VIDEO_RESTORE_HARDWARE_STATE (UINT)2294276
#define IOCTL_VIDEO_HANDLE_VIDEOPARAMETERS (UINT)2293792
#define IOCTL_VIDEO_QUERY_AVAIL_MODES (UINT)2294784
#define IOCTL_VIDEO_QUERY_NUM_AVAIL_MODES (UINT)2294788
#define IOCTL_VIDEO_QUERY_CURRENT_MODE (UINT)2294792
#define IOCTL_VIDEO_SET_CURRENT_MODE (UINT)2294796
#define IOCTL_VIDEO_RESET_DEVICE (UINT)2294800
#define IOCTL_VIDEO_LOAD_AND_SET_FONT (UINT)2294804
#define IOCTL_VIDEO_SET_PALETTE_REGISTERS (UINT)2294808
#define IOCTL_VIDEO_SET_COLOR_REGISTERS (UINT)2294812
#define IOCTL_VIDEO_ENABLE_CURSOR (UINT)2294816
#define IOCTL_VIDEO_DISABLE_CURSOR (UINT)2294820
#define IOCTL_VIDEO_SET_CURSOR_ATTR (UINT)2294824
#define IOCTL_VIDEO_QUERY_CURSOR_ATTR (UINT)2294828
#define IOCTL_VIDEO_SET_CURSOR_POSITION (UINT)2294832
#define IOCTL_VIDEO_QUERY_CURSOR_POSITION (UINT)2294836
#define IOCTL_VIDEO_ENABLE_POINTER (UINT)2294840
#define IOCTL_VIDEO_DISABLE_POINTER (UINT)2294844
#define IOCTL_VIDEO_SET_POINTER_ATTR (UINT)2294848
#define IOCTL_VIDEO_QUERY_POINTER_ATTR (UINT)2294852
#define IOCTL_VIDEO_SET_POINTER_POSITION (UINT)2294856
#define IOCTL_VIDEO_QUERY_POINTER_POSITION (UINT)2294860
#define IOCTL_VIDEO_QUERY_POINTER_CAPABILITIES (UINT)2294864
#define IOCTL_VIDEO_GET_BANK_SELECT_CODE (UINT)2294868
#define IOCTL_VIDEO_MAP_VIDEO_MEMORY (UINT)2294872
#define IOCTL_VIDEO_UNMAP_VIDEO_MEMORY (UINT)2294876
#define IOCTL_VIDEO_QUERY_PUBLIC_ACCESS_RANGES (UINT)2294880
#define IOCTL_VIDEO_FREE_PUBLIC_ACCESS_RANGES (UINT)2294884
#define IOCTL_VIDEO_QUERY_COLOR_CAPABILITIES (UINT)2294888
#define IOCTL_VIDEO_SET_POWER_MANAGEMENT (UINT)2294892
#define IOCTL_VIDEO_GET_POWER_MANAGEMENT (UINT)2294896
#define IOCTL_VIDEO_SHARE_VIDEO_MEMORY (UINT)2294900
#define IOCTL_VIDEO_UNSHARE_VIDEO_MEMORY (UINT)2294904
#define IOCTL_VIDEO_SET_COLOR_LUT_DATA (UINT)2294908
#define IOCTL_VIDEO_GET_CHILD_STATE (UINT)2294912
#define IOCTL_VIDEO_VALIDATE_CHILD_STATE_CONFIGURATION (UINT)2294916
#define IOCTL_VIDEO_SET_CHILD_STATE_CONFIGURATION (UINT)2294920
#define IOCTL_VIDEO_SWITCH_DUALVIEW (UINT)2294924
#define IOCTL_VIDEO_SET_BANK_POSITION (UINT)2294928
#define IOCTL_VIDEO_QUERY_SUPPORTED_BRIGHTNESS (UINT)2294932
#define IOCTL_VIDEO_QUERY_DISPLAY_BRIGHTNESS (UINT)2294936
#define IOCTL_VIDEO_SET_DISPLAY_BRIGHTNESS (UINT)2294940
#define IOCTL_FSVIDEO_COPY_FRAME_BUFFER (UINT)3409920
#define IOCTL_FSVIDEO_WRITE_TO_FRAME_BUFFER (UINT)3409924
#define IOCTL_FSVIDEO_REVERSE_MOUSE_POINTER (UINT)3409928
#define IOCTL_FSVIDEO_SET_CURRENT_MODE (UINT)3409932
#define IOCTL_FSVIDEO_SET_SCREEN_INFORMATION (UINT)3409936
#define IOCTL_FSVIDEO_SET_CURSOR_POSITION (UINT)3409940
#define IOCTL_PANEL_QUERY_BRIGHTNESS_CAPS (UINT)2296832
#define IOCTL_PANEL_QUERY_BRIGHTNESS_RANGES (UINT)2296836
#define IOCTL_PANEL_GET_BRIGHTNESS (UINT)2296840
#define IOCTL_PANEL_SET_BRIGHTNESS (UINT)2296844
#define IOCTL_PANEL_SET_BRIGHTNESS_STATE (UINT)2296848
#define IOCTL_PANEL_SET_BACKLIGHT_OPTIMIZATION (UINT)2296852
#define IOCTL_PANEL_GET_BACKLIGHT_REDUCTION (UINT)2296856
#define IOCTL_COLORSPACE_TRANSFORM_QUERY_TARGET_CAPS (UINT)2297856
#define IOCTL_COLORSPACE_TRANSFORM_SET (UINT)2297860
#define IOCTL_SET_ACTIVE_COLOR_PROFILE_NAME (UINT)2297864
#define IOCTL_MIPI_DSI_QUERY_CAPS (UINT)2298880
#define IOCTL_MIPI_DSI_TRANSMISSION (UINT)2298884
#define IOCTL_MIPI_DSI_RESET (UINT)2298888
#define DXGK_WIN32K_PARAM_FLAG_UPDATEREGISTRY (UINT)1
#define DXGK_WIN32K_PARAM_FLAG_MODESWITCH (UINT)2
#define DXGK_WIN32K_PARAM_FLAG_DISABLEVIEW (UINT)4
#define VIDEO_DUALVIEW_REMOVABLE (UINT)1
#define VIDEO_DUALVIEW_PRIMARY (UINT)2147483648
#define VIDEO_DUALVIEW_SECONDARY (UINT)1073741824
#define VIDEO_DUALVIEW_WDDM_VGA (UINT)536870912
#define VIDEO_STATE_NON_STANDARD_VGA (UINT)1
#define VIDEO_STATE_UNEMULATED_VGA_STATE (UINT)2
#define VIDEO_STATE_PACKED_CHAIN4_MODE (UINT)4
#define VIDEO_MODE_NO_ZERO_MEMORY (UINT)2147483648
#define VIDEO_MODE_MAP_MEM_LINEAR (UINT)1073741824
#define VIDEO_MODE_COLOR (UINT)1
#define VIDEO_MODE_GRAPHICS (UINT)2
#define VIDEO_MODE_PALETTE_DRIVEN (UINT)4
#define VIDEO_MODE_MANAGED_PALETTE (UINT)8
#define VIDEO_MODE_INTERLACED (UINT)16
#define VIDEO_MODE_NO_OFF_SCREEN (UINT)32
#define VIDEO_MODE_NO_64_BIT_ACCESS (UINT)64
#define VIDEO_MODE_BANKED (UINT)128
#define VIDEO_MODE_LINEAR (UINT)256
#define VIDEO_MODE_ASYNC_POINTER (UINT)1
#define VIDEO_MODE_MONO_POINTER (UINT)2
#define VIDEO_MODE_COLOR_POINTER (UINT)4
#define VIDEO_MODE_ANIMATE_START (UINT)8
#define VIDEO_MODE_ANIMATE_UPDATE (UINT)16
#define PLANAR_HC (UINT)1
#define VIDEO_DEVICE_COLOR (UINT)1
#define VIDEO_OPTIONAL_GAMMET_TABLE (UINT)2
#define VIDEO_COLOR_LUT_DATA_FORMAT_RGB256WORDS (UINT)1
#define VIDEO_COLOR_LUT_DATA_FORMAT_PRIVATEFORMAT (UINT)2147483648
#define DISPLAYPOLICY_AC (UINT)1
#define DISPLAYPOLICY_DC (UINT)2
#define CHAR_TYPE_SBCS (UINT)0
#define CHAR_TYPE_LEADING (UINT)2
#define CHAR_TYPE_TRAILING (UINT)3
#define BITMAP_BITS_BYTE_ALIGN (UINT)8
#define BITMAP_BITS_WORD_ALIGN (UINT)16
#define BITMAP_ARRAY_BYTE (UINT)3
#define BITMAP_PLANES (UINT)1
#define BITMAP_BITS_PIXEL (UINT)1
#define VIDEO_REASON_NONE (UINT)0
#define VIDEO_REASON_POLICY1 (UINT)1
#define VIDEO_REASON_POLICY2 (UINT)2
#define VIDEO_REASON_POLICY3 (UINT)3
#define VIDEO_REASON_POLICY4 (UINT)4
#define VIDEO_REASON_LOCK (UINT)5
#define VIDEO_REASON_FAILED_ROTATION (UINT)5
#define VIDEO_REASON_ALLOCATION (UINT)6
#define VIDEO_REASON_SCRATCH (UINT)8
#define VIDEO_REASON_CONFIGURATION (UINT)9
#define BRIGHTNESS_MAX_LEVEL_COUNT (UINT)103
#define BRIGHTNESS_MAX_NIT_RANGE_COUNT (UINT)16
#define DSI_PACKET_EMBEDDED_PAYLOAD_SIZE (UINT)8
#define MAX_PACKET_COUNT (UINT)128
#define DSI_INVALID_PACKET_INDEX (UINT)255
#define DSI_SOT_ERROR (UINT)1
#define DSI_SOT_SYNC_ERROR (UINT)2
#define DSI_EOT_SYNC_ERROR (UINT)4
#define DSI_ESCAPE_MODE_ENTRY_COMMAND_ERROR (UINT)8
#define DSI_LOW_POWER_TRANSMIT_SYNC_ERROR (UINT)16
#define DSI_PERIPHERAL_TIMEOUT_ERROR (UINT)32
#define DSI_FALSE_CONTROL_ERROR (UINT)64
#define DSI_CONTENTION_DETECTED (UINT)128
#define DSI_CHECKSUM_ERROR_CORRECTED (UINT)256
#define DSI_CHECKSUM_ERROR_NOT_CORRECTED (UINT)512
#define DSI_LONG_PACKET_PAYLOAD_CHECKSUM_ERROR (UINT)1024
#define DSI_DSI_DATA_TYPE_NOT_RECOGNIZED (UINT)2048
#define DSI_DSI_VC_ID_INVALID (UINT)4096
#define DSI_INVALID_TRANSMISSION_LENGTH (UINT)8192
#define DSI_DSI_PROTOCOL_VIOLATION (UINT)32768
#define HOST_DSI_DEVICE_NOT_READY (UINT)1
#define HOST_DSI_INTERFACE_RESET (UINT)2
#define HOST_DSI_DEVICE_RESET (UINT)4
#define HOST_DSI_TRANSMISSION_CANCELLED (UINT)16
#define HOST_DSI_TRANSMISSION_DROPPED (UINT)32
#define HOST_DSI_TRANSMISSION_TIMEOUT (UINT)64
#define HOST_DSI_INVALID_TRANSMISSION (UINT)256
#define HOST_DSI_OS_REJECTED_PACKET (UINT)512
#define HOST_DSI_DRIVER_REJECTED_PACKET (UINT)1024
#define HOST_DSI_BAD_TRANSMISSION_MODE (UINT)4096
#define GUID_MONITOR_OVERRIDE_PSEUDO_SPECIALIZED GUID { "f196c02f-f86f-4f9a-aa15-e9cebdfe3b96" }
#define SURFACEALIGN_DISCARDABLE (INT)1
#define VMEMHEAP_LINEAR (INT)1
#define VMEMHEAP_RECTANGULAR (INT)2
#define VMEMHEAP_ALIGNMENT (INT)4
#define MC_CAPS_NONE (UINT)0
#define MC_CAPS_MONITOR_TECHNOLOGY_TYPE (UINT)1
#define MC_CAPS_BRIGHTNESS (UINT)2
#define MC_CAPS_CONTRAST (UINT)4
#define MC_CAPS_COLOR_TEMPERATURE (UINT)8
#define MC_CAPS_RED_GREEN_BLUE_GAIN (UINT)16
#define MC_CAPS_RED_GREEN_BLUE_DRIVE (UINT)32
#define MC_CAPS_DEGAUSS (UINT)64
#define MC_CAPS_DISPLAY_AREA_POSITION (UINT)128
#define MC_CAPS_DISPLAY_AREA_SIZE (UINT)256
#define MC_CAPS_RESTORE_FACTORY_DEFAULTS (UINT)1024
#define MC_CAPS_RESTORE_FACTORY_COLOR_DEFAULTS (UINT)2048
#define MC_RESTORE_FACTORY_DEFAULTS_ENABLES_MONITOR_SETTINGS (UINT)4096
#define MC_SUPPORTED_COLOR_TEMPERATURE_NONE (UINT)0
#define MC_SUPPORTED_COLOR_TEMPERATURE_4000K (UINT)1
#define MC_SUPPORTED_COLOR_TEMPERATURE_5000K (UINT)2
#define MC_SUPPORTED_COLOR_TEMPERATURE_6500K (UINT)4
#define MC_SUPPORTED_COLOR_TEMPERATURE_7500K (UINT)8
#define MC_SUPPORTED_COLOR_TEMPERATURE_8200K (UINT)16
#define MC_SUPPORTED_COLOR_TEMPERATURE_9300K (UINT)32
#define MC_SUPPORTED_COLOR_TEMPERATURE_10000K (UINT)64
#define MC_SUPPORTED_COLOR_TEMPERATURE_11500K (UINT)128
#define PHYSICAL_MONITOR_DESCRIPTION_SIZE (UINT)128

//--------------------------------------------------------------------------------
// Section: Types (109)
//--------------------------------------------------------------------------------
typedef int INDIRECT_DISPLAY_INFO;

typedef int VIDEO_VDM;

typedef int VIDEO_REGISTER_VDM;

typedef int VIDEO_MONITOR_DESCRIPTOR;

typedef enum {
    VideoPowerNotifyCallout = 1,
    VideoEnumChildPdoNotifyCallout = 3,
    VideoFindAdapterCallout = 4,
    VideoPnpNotifyCallout = 7,
    VideoDxgkDisplaySwitchCallout = 8,
    VideoDxgkFindAdapterTdrCallout = 10,
    VideoDxgkHardwareProtectionTeardown = 11,
    VideoRepaintDesktop = 12,
    VideoUpdateCursor = 13,
    VideoDisableMultiPlaneOverlay = 14,
    VideoDesktopDuplicationChange = 15,
    VideoBlackScreenDiagnostics = 16,
} VIDEO_WIN32K_CALLBACKS_PARAMS_TYPE;

typedef enum {
    BlackScreenDiagnosticsData = 1,
    BlackScreenDisplayRecovery = 2,
} BlackScreenDiagnosticsCalloutParam;

typedef int DXGK_WIN32K_PARAM_DATA;

typedef int VIDEO_WIN32K_CALLBACKS_PARAMS;

typedef int PVIDEO_WIN32K_CALLOUT;

typedef int VIDEO_WIN32K_CALLBACKS;

typedef int VIDEO_DEVICE_SESSION_STATUS;

typedef int VIDEO_HARDWARE_STATE_HEADER;

typedef int VIDEO_HARDWARE_STATE;

typedef int VIDEO_NUM_MODES;

typedef int VIDEO_MODE;

typedef int VIDEO_MODE_INFORMATION;

typedef int VIDEO_LOAD_FONT_INFORMATION;

typedef int VIDEO_PALETTE_DATA;

typedef int VIDEO_CLUTDATA;

typedef int VIDEO_CLUT;

typedef int VIDEO_CURSOR_POSITION;

typedef int VIDEO_CURSOR_ATTRIBUTES;

typedef int VIDEO_POINTER_POSITION;

typedef int VIDEO_POINTER_ATTRIBUTES;

typedef int VIDEO_POINTER_CAPABILITIES;

typedef int VIDEO_BANK_SELECT;

typedef enum {
    VideoNotBanked = 0,
    VideoBanked1RW = 1,
    VideoBanked1R1W = 2,
    VideoBanked2RW = 3,
    NumVideoBankTypes = 4,
} VIDEO_BANK_TYPE;

typedef int VIDEO_MEMORY;

typedef int VIDEO_SHARE_MEMORY;

typedef int VIDEO_SHARE_MEMORY_INFORMATION;

typedef int VIDEO_MEMORY_INFORMATION;

typedef int VIDEO_PUBLIC_ACCESS_RANGES;

typedef int VIDEO_COLOR_CAPABILITIES;

typedef enum {
    VideoPowerUnspecified = 0,
    VideoPowerOn = 1,
    VideoPowerStandBy = 2,
    VideoPowerSuspend = 3,
    VideoPowerOff = 4,
    VideoPowerHibernate = 5,
    VideoPowerShutdown = 6,
    VideoPowerMaximum = 7,
} VIDEO_POWER_STATE;

typedef int VIDEO_POWER_MANAGEMENT;

typedef int VIDEO_COLOR_LUT_DATA;

typedef int VIDEO_LUT_RGB256WORDS;

typedef int BANK_POSITION;

typedef int DISPLAY_BRIGHTNESS;

typedef int VIDEO_BRIGHTNESS_POLICY;

typedef int FSCNTL_SCREEN_INFO;

typedef int FONT_IMAGE_INFO;

typedef int CHAR_IMAGE_INFO;

typedef int VGA_CHAR;

typedef int FSVIDEO_COPY_FRAME_BUFFER;

typedef int FSVIDEO_WRITE_TO_FRAME_BUFFER;

typedef int FSVIDEO_REVERSE_MOUSE_POINTER;

typedef int FSVIDEO_MODE_INFORMATION;

typedef int FSVIDEO_SCREEN_INFORMATION;

typedef int FSVIDEO_CURSOR_POSITION;

typedef int ENG_EVENT;

typedef int VIDEO_PERFORMANCE_COUNTER;

typedef int VIDEO_QUERY_PERFORMANCE_COUNTER;

typedef enum {
    BRIGHTNESS_INTERFACE_VERSION_1 = 1,
    BRIGHTNESS_INTERFACE_VERSION_2 = 2,
    BRIGHTNESS_INTERFACE_VERSION_3 = 3,
} BRIGHTNESS_INTERFACE_VERSION;

typedef int PANEL_QUERY_BRIGHTNESS_CAPS;

typedef int BRIGHTNESS_LEVEL;

typedef int BRIGHTNESS_NIT_RANGE;

typedef int BRIGHTNESS_NIT_RANGES;

typedef int PANEL_QUERY_BRIGHTNESS_RANGES;

typedef int PANEL_GET_BRIGHTNESS;

typedef int CHROMATICITY_COORDINATE;

typedef int PANEL_BRIGHTNESS_SENSOR_DATA;

typedef int PANEL_SET_BRIGHTNESS;

typedef int PANEL_SET_BRIGHTNESS_STATE;

typedef enum {
    BacklightOptimizationDisable = 0,
    BacklightOptimizationDesktop = 1,
    BacklightOptimizationDynamic = 2,
    BacklightOptimizationDimmed = 3,
    BacklightOptimizationEDR = 4,
} BACKLIGHT_OPTIMIZATION_LEVEL;

typedef int PANEL_SET_BACKLIGHT_OPTIMIZATION;

typedef int BACKLIGHT_REDUCTION_GAMMA_RAMP;

typedef int PANEL_GET_BACKLIGHT_REDUCTION;

typedef enum {
    COLORSPACE_TRANSFORM_DATA_TYPE_FIXED_POINT = 0,
    COLORSPACE_TRANSFORM_DATA_TYPE_FLOAT = 1,
} COLORSPACE_TRANSFORM_DATA_TYPE;

typedef int COLORSPACE_TRANSFORM_DATA_CAP;

typedef int COLORSPACE_TRANSFORM_1DLUT_CAP;

typedef int COLORSPACE_TRANSFORM_MATRIX_CAP;

typedef enum {
    COLORSPACE_TRANSFORM_VERSION_DEFAULT = 0,
    COLORSPACE_TRANSFORM_VERSION_1 = 1,
    COLORSPACE_TRANSFORM_VERSION_NOT_SUPPORTED = 0,
} COLORSPACE_TRANSFORM_TARGET_CAPS_VERSION;

typedef int COLORSPACE_TRANSFORM_TARGET_CAPS;

typedef enum {
    COLORSPACE_TRANSFORM_TYPE_UNINITIALIZED = 0,
    COLORSPACE_TRANSFORM_TYPE_DEFAULT = 1,
    COLORSPACE_TRANSFORM_TYPE_RGB256x3x16 = 2,
    COLORSPACE_TRANSFORM_TYPE_DXGI_1 = 3,
    COLORSPACE_TRANSFORM_TYPE_MATRIX_3x4 = 4,
    COLORSPACE_TRANSFORM_TYPE_MATRIX_V2 = 5,
} COLORSPACE_TRANSFORM_TYPE;

typedef int GAMMA_RAMP_RGB256x3x16;

typedef int GAMMA_RAMP_RGB;

typedef int GAMMA_RAMP_DXGI_1;

typedef int COLORSPACE_TRANSFORM_3x4;

typedef enum {
    OUTPUT_WIRE_COLOR_SPACE_G22_P709 = 0,
    OUTPUT_WIRE_COLOR_SPACE_RESERVED = 4,
    OUTPUT_WIRE_COLOR_SPACE_G2084_P2020 = 12,
    OUTPUT_WIRE_COLOR_SPACE_G22_P709_WCG = 30,
    OUTPUT_WIRE_COLOR_SPACE_G22_P2020 = 31,
    OUTPUT_WIRE_COLOR_SPACE_G2084_P2020_HDR10PLUS = 32,
    OUTPUT_WIRE_COLOR_SPACE_G2084_P2020_DVLL = 33,
} OUTPUT_WIRE_COLOR_SPACE_TYPE;

typedef enum {
    OUTPUT_COLOR_ENCODING_RGB = 0,
    OUTPUT_COLOR_ENCODING_YCBCR444 = 1,
    OUTPUT_COLOR_ENCODING_YCBCR422 = 2,
    OUTPUT_COLOR_ENCODING_YCBCR420 = 3,
    OUTPUT_COLOR_ENCODING_INTENSITY = 4,
    OUTPUT_COLOR_ENCODING_FORCE_UINT32 = -1,
} OUTPUT_COLOR_ENCODING;

typedef int OUTPUT_WIRE_FORMAT;

typedef enum {
    ColorSpaceTransformStageControl_No_Change = 0,
    ColorSpaceTransformStageControl_Enable = 1,
    ColorSpaceTransformStageControl_Bypass = 2,
} COLORSPACE_TRANSFORM_STAGE_CONTROL;

typedef int COLORSPACE_TRANSFORM_MATRIX_V2;

typedef int COLORSPACE_TRANSFORM;

typedef int COLORSPACE_TRANSFORM_SET_INPUT;

typedef int SET_ACTIVE_COLOR_PROFILE_NAME;

typedef int MIPI_DSI_CAPS;

typedef enum {
    DCT_DEFAULT = 0,
    DCT_FORCE_LOW_POWER = 1,
    DCT_FORCE_HIGH_PERFORMANCE = 2,
} DSI_CONTROL_TRANSMISSION_MODE;

typedef int MIPI_DSI_PACKET;

typedef int MIPI_DSI_TRANSMISSION;

typedef int MIPI_DSI_RESET;

typedef int SURFACEALIGNMENT;

typedef int HEAPALIGNMENT;

typedef int DD_GETHEAPALIGNMENTDATA;

typedef int VMEML;

typedef int VMEMR;

typedef int VMEMHEAP;

typedef enum {
    AR_ENABLED = 0,
    AR_DISABLED = 1,
    AR_SUPPRESSED = 2,
    AR_REMOTESESSION = 4,
    AR_MULTIMON = 8,
    AR_NOSENSOR = 16,
    AR_NOT_SUPPORTED = 32,
    AR_DOCKED = 64,
    AR_LAPTOP = 128,
} AR_STATE;

typedef enum {
    ORIENTATION_PREFERENCE_NONE = 0,
    ORIENTATION_PREFERENCE_LANDSCAPE = 1,
    ORIENTATION_PREFERENCE_PORTRAIT = 2,
    ORIENTATION_PREFERENCE_LANDSCAPE_FLIPPED = 4,
    ORIENTATION_PREFERENCE_PORTRAIT_FLIPPED = 8,
} ORIENTATION_PREFERENCE;

typedef int PHYSICAL_MONITOR;

typedef int MC_TIMING_REPORT;

typedef enum {
    MC_MOMENTARY = 0,
    MC_SET_PARAMETER = 1,
} MC_VCP_CODE_TYPE;

typedef enum {
    MC_SHADOW_MASK_CATHODE_RAY_TUBE = 0,
    MC_APERTURE_GRILL_CATHODE_RAY_TUBE = 1,
    MC_THIN_FILM_TRANSISTOR = 2,
    MC_LIQUID_CRYSTAL_ON_SILICON = 3,
    MC_PLASMA = 4,
    MC_ORGANIC_LIGHT_EMITTING_DIODE = 5,
    MC_ELECTROLUMINESCENT = 6,
    MC_MICROELECTROMECHANICAL = 7,
    MC_FIELD_EMISSION_DEVICE = 8,
} MC_DISPLAY_TECHNOLOGY_TYPE;

typedef enum {
    MC_RED_DRIVE = 0,
    MC_GREEN_DRIVE = 1,
    MC_BLUE_DRIVE = 2,
} MC_DRIVE_TYPE;

typedef enum {
    MC_RED_GAIN = 0,
    MC_GREEN_GAIN = 1,
    MC_BLUE_GAIN = 2,
} MC_GAIN_TYPE;

typedef enum {
    MC_HORIZONTAL_POSITION = 0,
    MC_VERTICAL_POSITION = 1,
} MC_POSITION_TYPE;

typedef enum {
    MC_WIDTH = 0,
    MC_HEIGHT = 1,
} MC_SIZE_TYPE;

typedef enum {
    MC_COLOR_TEMPERATURE_UNKNOWN = 0,
    MC_COLOR_TEMPERATURE_4000K = 1,
    MC_COLOR_TEMPERATURE_5000K = 2,
    MC_COLOR_TEMPERATURE_6500K = 3,
    MC_COLOR_TEMPERATURE_7500K = 4,
    MC_COLOR_TEMPERATURE_8200K = 5,
    MC_COLOR_TEMPERATURE_9300K = 6,
    MC_COLOR_TEMPERATURE_10000K = 7,
    MC_COLOR_TEMPERATURE_11500K = 8,
} MC_COLOR_TEMPERATURE;


//--------------------------------------------------------------------------------
// Section: Functions (35)
//--------------------------------------------------------------------------------
/*BOOL*/void GetAutoRotationState();

/*BOOL*/void GetDisplayAutoRotationPreferences();

/*BOOL*/void SetDisplayAutoRotationPreferences();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetNumberOfPhysicalMonitorsFromHMONITOR();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void GetNumberOfPhysicalMonitorsFromIDirect3DDevice9();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetPhysicalMonitorsFromHMONITOR();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void GetPhysicalMonitorsFromIDirect3DDevice9();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void DestroyPhysicalMonitor();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void DestroyPhysicalMonitors();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetVCPFeatureAndVCPFeatureReply();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void SetVCPFeature();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void SaveCurrentSettings();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetCapabilitiesStringLength();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void CapabilitiesRequestAndCapabilitiesReply();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetTimingReport();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetMonitorCapabilities();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void SaveCurrentMonitorSettings();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetMonitorTechnologyType();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetMonitorBrightness();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetMonitorContrast();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetMonitorColorTemperature();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetMonitorRedGreenOrBlueDrive();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetMonitorRedGreenOrBlueGain();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void SetMonitorBrightness();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void SetMonitorContrast();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void SetMonitorColorTemperature();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void SetMonitorRedGreenOrBlueDrive();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void SetMonitorRedGreenOrBlueGain();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void DegaussMonitor();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetMonitorDisplayAreaSize();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void GetMonitorDisplayAreaPosition();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void SetMonitorDisplayAreaSize();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void SetMonitorDisplayAreaPosition();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void RestoreMonitorFactoryColorDefaults();

// TODO: this type is limited to platform 'windows6.0.6000'
/*i32*/void RestoreMonitorFactoryDefaults();

