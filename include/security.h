// NOTE: this file is autogenerated, DO NOT MODIFY
#include "bootstrap.h"
//--------------------------------------------------------------------------------
// Section: Constants (232)
//--------------------------------------------------------------------------------
#define CVT_SECONDS (UINT)1
#define CRYPTPROTECT_PROMPT_ON_UNPROTECT (UINT)1
#define CRYPTPROTECT_PROMPT_ON_PROTECT (UINT)2
#define CRYPTPROTECT_PROMPT_RESERVED (UINT)4
#define CRYPTPROTECT_PROMPT_STRONG (UINT)8
#define CRYPTPROTECT_PROMPT_REQUIRE_STRONG (UINT)16
#define CRYPTPROTECT_UI_FORBIDDEN (UINT)1
#define CRYPTPROTECT_LOCAL_MACHINE (UINT)4
#define CRYPTPROTECT_CRED_SYNC (UINT)8
#define CRYPTPROTECT_AUDIT (UINT)16
#define CRYPTPROTECT_NO_RECOVERY (UINT)32
#define CRYPTPROTECT_VERIFY_PROTECTION (UINT)64
#define CRYPTPROTECT_CRED_REGENERATE (UINT)128
#define CRYPTPROTECT_FIRST_RESERVED_FLAGVAL (UINT)268435455
#define CRYPTPROTECT_LAST_RESERVED_FLAGVAL (UINT)4294967295
#define CRYPTPROTECTMEMORY_BLOCK_SIZE (UINT)16
#define CRYPTPROTECTMEMORY_SAME_PROCESS (UINT)0
#define CRYPTPROTECTMEMORY_CROSS_PROCESS (UINT)1
#define CRYPTPROTECTMEMORY_SAME_LOGON (UINT)2
#define DSSI_READ_ONLY (UINT)1
#define DSSI_NO_ACCESS_CHECK (UINT)2
#define DSSI_NO_EDIT_SACL (UINT)4
#define DSSI_NO_EDIT_OWNER (UINT)8
#define DSSI_IS_ROOT (UINT)16
#define DSSI_NO_FILTER (UINT)32
#define DSSI_NO_READONLY_MESSAGE (UINT)64
#define CRYPTCAT_MAX_MEMBERTAG (UINT)64
#define CRYPTCAT_MEMBER_SORTED (UINT)1073741824
#define CRYPTCAT_ATTR_AUTHENTICATED (UINT)268435456
#define CRYPTCAT_ATTR_UNAUTHENTICATED (UINT)536870912
#define CRYPTCAT_ATTR_NAMEASCII (UINT)1
#define CRYPTCAT_ATTR_NAMEOBJID (UINT)2
#define CRYPTCAT_ATTR_DATAASCII (UINT)65536
#define CRYPTCAT_ATTR_DATABASE64 (UINT)131072
#define CRYPTCAT_ATTR_DATAREPLACE (UINT)262144
#define CRYPTCAT_ATTR_NO_AUTO_COMPAT_ENTRY (UINT)16777216
#define CRYPTCAT_E_AREA_HEADER (UINT)0
#define CRYPTCAT_E_AREA_MEMBER (UINT)65536
#define CRYPTCAT_E_AREA_ATTRIBUTE (UINT)131072
#define CRYPTCAT_E_CDF_UNSUPPORTED (UINT)1
#define CRYPTCAT_E_CDF_DUPLICATE (UINT)2
#define CRYPTCAT_E_CDF_TAGNOTFOUND (UINT)4
#define CRYPTCAT_E_CDF_MEMBER_FILE_PATH (UINT)65537
#define CRYPTCAT_E_CDF_MEMBER_INDIRECTDATA (UINT)65538
#define CRYPTCAT_E_CDF_MEMBER_FILENOTFOUND (UINT)65540
#define CRYPTCAT_E_CDF_BAD_GUID_CONV (UINT)131073
#define CRYPTCAT_E_CDF_ATTR_TOOFEWVALUES (UINT)131074
#define CRYPTCAT_E_CDF_ATTR_TYPECOMBO (UINT)131076
#define CRYPTCAT_ADDCATALOG_NONE (UINT)0
#define CRYPTCAT_ADDCATALOG_HARDLINK (UINT)1
#define MSSIP_FLAGS_PROHIBIT_RESIZE_ON_CREATE (UINT)65536
#define MSSIP_FLAGS_USE_CATALOG (UINT)131072
#define MSSIP_FLAGS_MULTI_HASH (UINT)262144
#define SPC_INC_PE_RESOURCES_FLAG (UINT)128
#define SPC_INC_PE_DEBUG_INFO_FLAG (UINT)64
#define SPC_INC_PE_IMPORT_ADDR_TABLE_FLAG (UINT)32
#define SPC_EXC_PE_PAGE_HASHES_FLAG (UINT)16
#define SPC_INC_PE_PAGE_HASHES_FLAG (UINT)256
#define SPC_DIGEST_GENERATE_FLAG (UINT)512
#define SPC_DIGEST_SIGN_FLAG (UINT)1024
#define SPC_DIGEST_SIGN_EX_FLAG (UINT)16384
#define SPC_RELAXED_PE_MARKER_CHECK (UINT)2048
#define SPC_MARKER_CHECK_SKIP_SIP_INDIRECT_DATA_FLAG (UINT)1
#define SIP_CAP_SET_VERSION_2 (UINT)2
#define SIP_CAP_SET_VERSION_3 (UINT)3
#define SIP_CAP_SET_CUR_VER (UINT)3
#define SIP_CAP_FLAG_SEALING (UINT)1
#define SIP_MAX_MAGIC_NUMBER (UINT)4
#define cNodetypeSceTemplateServices GUID { "24a7f717-1f0c-11d1-affb-00c04fb984f9" }
#define cNodetypeSceAnalysisServices GUID { "678050c7-1ff8-11d1-affb-00c04fb984f9" }
#define cNodetypeSceEventLog GUID { "2ce06698-4bf3-11d1-8c30-00c04fb984f9" }
#define SCESTATUS_SUCCESS (INT)0
#define SCESTATUS_INVALID_PARAMETER (INT)1
#define SCESTATUS_RECORD_NOT_FOUND (INT)2
#define SCESTATUS_INVALID_DATA (INT)3
#define SCESTATUS_OBJECT_EXIST (INT)4
#define SCESTATUS_BUFFER_TOO_SMALL (INT)5
#define SCESTATUS_PROFILE_NOT_FOUND (INT)6
#define SCESTATUS_BAD_FORMAT (INT)7
#define SCESTATUS_NOT_ENOUGH_RESOURCE (INT)8
#define SCESTATUS_ACCESS_DENIED (INT)9
#define SCESTATUS_CANT_DELETE (INT)10
#define SCESTATUS_PREFIX_OVERFLOW (INT)11
#define SCESTATUS_OTHER_ERROR (INT)12
#define SCESTATUS_ALREADY_RUNNING (INT)13
#define SCESTATUS_SERVICE_NOT_SUPPORT (INT)14
#define SCESTATUS_MOD_NOT_FOUND (INT)15
#define SCESTATUS_EXCEPTION_IN_SERVER (INT)16
#define SCESTATUS_NO_TEMPLATE_GIVEN (INT)17
#define SCESTATUS_NO_MAPPING (INT)18
#define SCESTATUS_TRUST_FAIL (INT)19
#define SCESVC_ENUMERATION_MAX (INT)100
#define TPMVSC_DEFAULT_ADMIN_ALGORITHM_ID (UINT)130
#define SAFER_SCOPEID_MACHINE (UINT)1
#define SAFER_SCOPEID_USER (UINT)2
#define SAFER_LEVELID_FULLYTRUSTED (UINT)262144
#define SAFER_LEVELID_NORMALUSER (UINT)131072
#define SAFER_LEVELID_CONSTRAINED (UINT)65536
#define SAFER_LEVELID_UNTRUSTED (UINT)4096
#define SAFER_LEVELID_DISALLOWED (UINT)0
#define SAFER_LEVEL_OPEN (UINT)1
#define SAFER_MAX_FRIENDLYNAME_SIZE (UINT)256
#define SAFER_MAX_DESCRIPTION_SIZE (UINT)256
#define SAFER_MAX_HASH_SIZE (UINT)64
#define SAFER_CRITERIA_IMAGEPATH (UINT)1
#define SAFER_CRITERIA_NOSIGNEDHASH (UINT)2
#define SAFER_CRITERIA_IMAGEHASH (UINT)4
#define SAFER_CRITERIA_AUTHENTICODE (UINT)8
#define SAFER_CRITERIA_URLZONE (UINT)16
#define SAFER_CRITERIA_APPX_PACKAGE (UINT)32
#define SAFER_CRITERIA_IMAGEPATH_NT (UINT)4096
#define SAFER_POLICY_JOBID_MASK (UINT)4278190080
#define SAFER_POLICY_JOBID_CONSTRAINED (UINT)67108864
#define SAFER_POLICY_JOBID_UNTRUSTED (UINT)50331648
#define SAFER_POLICY_ONLY_EXES (UINT)65536
#define SAFER_POLICY_SANDBOX_INERT (UINT)131072
#define SAFER_POLICY_HASH_DUPLICATE (UINT)262144
#define SAFER_POLICY_ONLY_AUDIT (UINT)4096
#define SAFER_POLICY_BLOCK_CLIENT_UI (UINT)8192
#define SAFER_POLICY_UIFLAGS_MASK (UINT)255
#define SAFER_POLICY_UIFLAGS_INFORMATION_PROMPT (UINT)1
#define SAFER_POLICY_UIFLAGS_OPTION_PROMPT (UINT)2
#define SAFER_POLICY_UIFLAGS_HIDDEN (UINT)4
#define WINTRUST_MAX_HEADER_BYTES_TO_MAP_DEFAULT (UINT)10485760
#define WINTRUST_MAX_HASH_BYTES_TO_MAP_DEFAULT (UINT)1048576
#define WSS_VERIFY_SEALING (UINT)4
#define WSS_INPUT_FLAG_MASK (UINT)7
#define WSS_OUT_SEALING_STATUS_VERIFIED (UINT)2147483648
#define WSS_OUT_HAS_SEALING_INTENT (UINT)1073741824
#define WSS_OUT_FILE_SUPPORTS_SEAL (UINT)536870912
#define WSS_OUTPUT_FLAG_MASK (UINT)3758096384
#define TRUSTERROR_STEP_WVTPARAMS (UINT)0
#define TRUSTERROR_STEP_FILEIO (UINT)2
#define TRUSTERROR_STEP_SIP (UINT)3
#define TRUSTERROR_STEP_SIPSUBJINFO (UINT)5
#define TRUSTERROR_STEP_CATALOGFILE (UINT)6
#define TRUSTERROR_STEP_CERTSTORE (UINT)7
#define TRUSTERROR_STEP_MESSAGE (UINT)8
#define TRUSTERROR_STEP_MSG_SIGNERCOUNT (UINT)9
#define TRUSTERROR_STEP_MSG_INNERCNTTYPE (UINT)10
#define TRUSTERROR_STEP_MSG_INNERCNT (UINT)11
#define TRUSTERROR_STEP_MSG_STORE (UINT)12
#define TRUSTERROR_STEP_MSG_SIGNERINFO (UINT)13
#define TRUSTERROR_STEP_MSG_SIGNERCERT (UINT)14
#define TRUSTERROR_STEP_MSG_CERTCHAIN (UINT)15
#define TRUSTERROR_STEP_MSG_COUNTERSIGINFO (UINT)16
#define TRUSTERROR_STEP_MSG_COUNTERSIGCERT (UINT)17
#define TRUSTERROR_STEP_VERIFY_MSGHASH (UINT)18
#define TRUSTERROR_STEP_VERIFY_MSGINDIRECTDATA (UINT)19
#define TRUSTERROR_STEP_FINAL_WVTINIT (UINT)30
#define TRUSTERROR_STEP_FINAL_INITPROV (UINT)31
#define TRUSTERROR_STEP_FINAL_OBJPROV (UINT)32
#define TRUSTERROR_STEP_FINAL_SIGPROV (UINT)33
#define TRUSTERROR_STEP_FINAL_CERTPROV (UINT)34
#define TRUSTERROR_STEP_FINAL_CERTCHKPROV (UINT)35
#define TRUSTERROR_STEP_FINAL_POLICYPROV (UINT)36
#define TRUSTERROR_STEP_FINAL_UIPROV (UINT)37
#define TRUSTERROR_MAX_STEPS (UINT)38
#define WSS_OBJTRUST_SUPPORT (UINT)1
#define WSS_SIGTRUST_SUPPORT (UINT)2
#define WSS_CERTTRUST_SUPPORT (UINT)4
#define WT_CURRENT_VERSION (UINT)512
#define WT_ADD_ACTION_ID_RET_RESULT_FLAG (UINT)1
#define SPC_UUID_LENGTH (UINT)16
#define WIN_CERT_REVISION_1_0 (UINT)256
#define WIN_CERT_REVISION_2_0 (UINT)512
#define WIN_CERT_TYPE_X509 (UINT)1
#define WIN_CERT_TYPE_PKCS_SIGNED_DATA (UINT)2
#define WIN_CERT_TYPE_RESERVED_1 (UINT)3
#define WIN_CERT_TYPE_TS_STACK_SIGNED (UINT)4
#define WT_TRUSTDBDIALOG_NO_UI_FLAG (UINT)1
#define WT_TRUSTDBDIALOG_ONLY_PUB_TAB_FLAG (UINT)2
#define WT_TRUSTDBDIALOG_WRITE_LEGACY_REG_FLAG (UINT)256
#define WT_TRUSTDBDIALOG_WRITE_IEAK_STORE_FLAG (UINT)512
#define WLX_VERSION_1_0 (UINT)65536
#define WLX_VERSION_1_1 (UINT)65537
#define WLX_VERSION_1_2 (UINT)65538
#define WLX_VERSION_1_3 (UINT)65539
#define WLX_VERSION_1_4 (UINT)65540
#define WLX_SAS_TYPE_TIMEOUT (UINT)0
#define WLX_SAS_TYPE_CTRL_ALT_DEL (UINT)1
#define WLX_SAS_TYPE_SCRNSVR_TIMEOUT (UINT)2
#define WLX_SAS_TYPE_SCRNSVR_ACTIVITY (UINT)3
#define WLX_SAS_TYPE_USER_LOGOFF (UINT)4
#define WLX_SAS_TYPE_SC_INSERT (UINT)5
#define WLX_SAS_TYPE_SC_REMOVE (UINT)6
#define WLX_SAS_TYPE_AUTHENTICATED (UINT)7
#define WLX_SAS_TYPE_SC_FIRST_READER_ARRIVED (UINT)8
#define WLX_SAS_TYPE_SC_LAST_READER_REMOVED (UINT)9
#define WLX_SAS_TYPE_SWITCHUSER (UINT)10
#define WLX_SAS_TYPE_MAX_MSFT_VALUE (UINT)127
#define WLX_LOGON_OPT_NO_PROFILE (UINT)1
#define WLX_PROFILE_TYPE_V1_0 (UINT)1
#define WLX_PROFILE_TYPE_V2_0 (UINT)2
#define WLX_SAS_ACTION_LOGON (UINT)1
#define WLX_SAS_ACTION_NONE (UINT)2
#define WLX_SAS_ACTION_LOCK_WKSTA (UINT)3
#define WLX_SAS_ACTION_LOGOFF (UINT)4
#define WLX_SAS_ACTION_PWD_CHANGED (UINT)6
#define WLX_SAS_ACTION_TASKLIST (UINT)7
#define WLX_SAS_ACTION_UNLOCK_WKSTA (UINT)8
#define WLX_SAS_ACTION_FORCE_LOGOFF (UINT)9
#define WLX_SAS_ACTION_SHUTDOWN_SLEEP (UINT)12
#define WLX_SAS_ACTION_SHUTDOWN_SLEEP2 (UINT)13
#define WLX_SAS_ACTION_SHUTDOWN_HIBERNATE (UINT)14
#define WLX_SAS_ACTION_RECONNECTED (UINT)15
#define WLX_SAS_ACTION_DELAYED_FORCE_LOGOFF (UINT)16
#define WLX_SAS_ACTION_SWITCH_CONSOLE (UINT)17
#define WLX_WM_SAS (UINT)1625
#define WLX_DLG_SAS (UINT)101
#define WLX_DLG_INPUT_TIMEOUT (UINT)102
#define WLX_DLG_SCREEN_SAVER_TIMEOUT (UINT)103
#define WLX_DLG_USER_LOGOFF (UINT)104
#define WLX_DIRECTORY_LENGTH (UINT)256
#define WLX_CREDENTIAL_TYPE_V1_0 (UINT)1
#define WLX_CREDENTIAL_TYPE_V2_0 (UINT)2
#define WLX_CONSOLESWITCHCREDENTIAL_TYPE_V1_0 (UINT)1
#define STATUSMSG_OPTION_NOANIMATION (UINT)1
#define STATUSMSG_OPTION_SETFOREGROUND (UINT)2
#define WLX_DESKTOP_NAME (UINT)1
#define WLX_DESKTOP_HANDLE (UINT)2
#define WLX_CREATE_INSTANCE_ONLY (UINT)1
#define WLX_CREATE_USER (UINT)2
#define WLX_OPTION_USE_CTRL_ALT_DEL (UINT)1
#define WLX_OPTION_CONTEXT_POINTER (UINT)2
#define WLX_OPTION_USE_SMART_CARD (UINT)3
#define WLX_OPTION_FORCE_LOGOFF_TIME (UINT)4
#define WLX_OPTION_IGNORE_AUTO_LOGON (UINT)8
#define WLX_OPTION_NO_SWITCH_ON_SAS (UINT)9
#define WLX_OPTION_SMART_CARD_PRESENT (UINT)65537
#define WLX_OPTION_SMART_CARD_INFO (UINT)65538
#define WLX_OPTION_DISPATCH_TABLE_SIZE (UINT)65539

//--------------------------------------------------------------------------------
// Section: Types (303)
//--------------------------------------------------------------------------------
typedef enum {
    SE_PRIVILEGE_ENABLED = 2,
    SE_PRIVILEGE_ENABLED_BY_DEFAULT = 1,
    SE_PRIVILEGE_REMOVED = 4,
    SE_PRIVILEGE_USED_FOR_ACCESS = 2147483648,
} TOKEN_PRIVILEGES_ATTRIBUTES;

typedef enum {
    LOGON32_PROVIDER_DEFAULT = 0,
    LOGON32_PROVIDER_WINNT50 = 3,
    LOGON32_PROVIDER_WINNT40 = 2,
} LOGON32_PROVIDER;

typedef enum {
    SCE_LOG_LEVEL_ALWAYS = 0,
    SCE_LOG_LEVEL_ERROR = 1,
    SCE_LOG_LEVEL_DETAIL = 2,
    SCE_LOG_LEVEL_DEBUG = 3,
} SCE_LOG_ERR_LEVEL;

typedef enum {
    DISABLE_MAX_PRIVILEGE = 1,
    SANDBOX_INERT = 2,
    LUA_TOKEN = 4,
    WRITE_RESTRICTED = 8,
} CREATE_RESTRICTED_TOKEN_FLAGS;

typedef enum {
    LOGON32_LOGON_BATCH = 4,
    LOGON32_LOGON_INTERACTIVE = 2,
    LOGON32_LOGON_NETWORK = 3,
    LOGON32_LOGON_NETWORK_CLEARTEXT = 8,
    LOGON32_LOGON_NEW_CREDENTIALS = 9,
    LOGON32_LOGON_SERVICE = 5,
    LOGON32_LOGON_UNLOCK = 7,
} LOGON32_LOGON;

typedef enum {
    CONTAINER_INHERIT_ACE = 2,
    FAILED_ACCESS_ACE_FLAG = 128,
    INHERIT_ONLY_ACE = 8,
    INHERITED_ACE = 16,
    NO_PROPAGATE_INHERIT_ACE = 4,
    OBJECT_INHERIT_ACE = 1,
    SUCCESSFUL_ACCESS_ACE_FLAG = 64,
    SUB_CONTAINERS_AND_OBJECTS_INHERIT = 3,
    SUB_CONTAINERS_ONLY_INHERIT = 2,
    SUB_OBJECTS_ONLY_INHERIT = 1,
    INHERIT_NO_PROPAGATE = 4,
    INHERIT_ONLY = 8,
    NO_INHERITANCE = 0,
    INHERIT_ONLY_ACE_ = 8,
} ACE_FLAGS;

typedef enum {
    SEF_AVOID_OWNER_CHECK = 16,
    SEF_AVOID_OWNER_RESTRICTION = 4096,
    SEF_AVOID_PRIVILEGE_CHECK = 8,
    SEF_DACL_AUTO_INHERIT = 1,
    SEF_DEFAULT_DESCRIPTOR_FOR_OBJECT = 4,
    SEF_DEFAULT_GROUP_FROM_PARENT = 64,
    SEF_DEFAULT_OWNER_FROM_PARENT = 32,
    SEF_MACL_NO_EXECUTE_UP = 1024,
    SEF_MACL_NO_READ_UP = 512,
    SEF_MACL_NO_WRITE_UP = 256,
    SEF_SACL_AUTO_INHERIT = 2,
} SECURITY_AUTO_INHERIT_FLAGS;

typedef enum {
    SAFER_TOKEN_NULL_IF_EQUAL = 1,
    SAFER_TOKEN_COMPARE_ONLY = 2,
    SAFER_TOKEN_MAKE_INERT = 4,
    SAFER_TOKEN_WANT_FLAGS = 8,
} SAFER_COMPUTE_TOKEN_FROM_LEVEL_FLAGS;

typedef enum {
    DWACTION_ALLOCANDFILL = 1,
    DWACTION_FREE = 2,
} WINTRUST_GET_DEFAULT_FOR_USAGE_ACTION;

typedef enum {
    ACL_REVISION = 2,
    ACL_REVISION_DS = 4,
} ACE_REVISION;

typedef enum {
    WTPF_TRUSTTEST = 32,
    WTPF_TESTCANBEVALID = 128,
    WTPF_IGNOREEXPIRATION = 256,
    WTPF_IGNOREREVOKATION = 512,
    WTPF_OFFLINEOK_IND = 1024,
    WTPF_OFFLINEOK_COM = 2048,
    WTPF_OFFLINEOKNBU_IND = 4096,
    WTPF_OFFLINEOKNBU_COM = 8192,
    WTPF_VERIFY_V1_OFF = 65536,
    WTPF_IGNOREREVOCATIONONTS = 131072,
    WTPF_ALLOWONLYPERTRUST = 262144,
} WINTRUST_POLICY_FLAGS;

typedef enum {
    WLX_SAS_ACTION_SHUTDOWN = 5,
    WLX_SAS_ACTION_SHUTDOWN_REBOOT = 11,
    WLX_SAS_ACTION_SHUTDOWN_POWER_OFF = 10,
} WLX_SHUTDOWN_TYPE;

typedef enum {
    CRYPTCAT_VERSION_1 = 256,
    CRYPTCAT_VERSION_2 = 512,
} CRYPTCAT_VERSION;

typedef enum {
    CRYPTCAT_OPEN_ALWAYS = 2,
    CRYPTCAT_OPEN_CREATENEW = 1,
    CRYPTCAT_OPEN_EXISTING = 4,
    CRYPTCAT_OPEN_EXCLUDE_PAGE_HASHES = 65536,
    CRYPTCAT_OPEN_INCLUDE_PAGE_HASHES = 131072,
    CRYPTCAT_OPEN_VERIFYSIGHASH = 268435456,
    CRYPTCAT_OPEN_NO_CONTENT_HCRYPTMSG = 536870912,
    CRYPTCAT_OPEN_SORTED = 1073741824,
    CRYPTCAT_OPEN_FLAGS_MASK = 4294901760,
} CRYPTCAT_OPEN_FLAGS;

typedef enum {
    TOKEN_MANDATORY_POLICY_OFF = 0,
    TOKEN_MANDATORY_POLICY_NO_WRITE_UP = 1,
    TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN = 2,
    TOKEN_MANDATORY_POLICY_VALID_MASK = 3,
} TOKEN_MANDATORY_POLICY_ID;

typedef enum {
    ACE_OBJECT_TYPE_PRESENT = 1,
    ACE_INHERITED_OBJECT_TYPE_PRESENT = 2,
} SYSTEM_AUDIT_OBJECT_ACE_FLAGS;

typedef enum {
    CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE = 1,
    CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE = 2,
    CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY = 4,
    CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT = 8,
    CLAIM_SECURITY_ATTRIBUTE_DISABLED = 16,
    CLAIM_SECURITY_ATTRIBUTE_MANDATORY = 32,
} CLAIM_SECURITY_ATTRIBUTE_FLAGS;

typedef enum {
    WTD_UI_ALL = 1,
    WTD_UI_NONE = 2,
    WTD_UI_NOBAD = 3,
    WTD_UI_NOGOOD = 4,
} WINTRUST_DATA_UICHOICE;

typedef enum {
    WSS_VERIFY_SPECIFIC = 1,
    WSS_GET_SECONDARY_SIG_COUNT = 2,
} WINTRUST_SIGNATURE_SETTINGS_FLAGS;

typedef enum {
    WTD_STATEACTION_IGNORE = 0,
    WTD_STATEACTION_VERIFY = 1,
    WTD_STATEACTION_CLOSE = 2,
    WTD_STATEACTION_AUTO_CACHE = 3,
    WTD_STATEACTION_AUTO_CACHE_FLUSH = 4,
} WINTRUST_DATA_STATE_ACTION;

typedef enum {
    CLAIM_SECURITY_ATTRIBUTE_TYPE_INT64 = 1,
    CLAIM_SECURITY_ATTRIBUTE_TYPE_UINT64 = 2,
    CLAIM_SECURITY_ATTRIBUTE_TYPE_STRING = 3,
    CLAIM_SECURITY_ATTRIBUTE_TYPE_OCTET_STRING = 16,
    CLAIM_SECURITY_ATTRIBUTE_TYPE_FQBN = 4,
    CLAIM_SECURITY_ATTRIBUTE_TYPE_SID = 5,
    CLAIM_SECURITY_ATTRIBUTE_TYPE_BOOLEAN = 6,
} CLAIM_SECURITY_ATTRIBUTE_VALUE_TYPE;

typedef enum {
    WTD_CHOICE_FILE = 1,
    WTD_CHOICE_CATALOG = 2,
    WTD_CHOICE_BLOB = 3,
    WTD_CHOICE_SIGNER = 4,
    WTD_CHOICE_CERT = 5,
} WINTRUST_DATA_UNION_CHOICE;

typedef enum {
    WTD_REVOKE_NONE = 0,
    WTD_REVOKE_WHOLECHAIN = 1,
} WINTRUST_DATA_REVOCATION_CHECKS;

typedef enum {
    WTD_UICONTEXT_EXECUTE = 0,
    WTD_UICONTEXT_INSTALL = 1,
} WINTRUST_DATA_UICONTEXT;

typedef int PLSA_AP_CALL_PACKAGE_UNTRUSTED;

typedef int SEC_THREAD_START;

typedef enum {
    TOKEN_DELETE = 65536,
    TOKEN_READ_CONTROL = 131072,
    TOKEN_WRITE_DAC = 262144,
    TOKEN_WRITE_OWNER = 524288,
    TOKEN_ACCESS_SYSTEM_SECURITY = 16777216,
    TOKEN_ASSIGN_PRIMARY = 1,
    TOKEN_DUPLICATE = 2,
    TOKEN_IMPERSONATE = 4,
    TOKEN_QUERY = 8,
    TOKEN_QUERY_SOURCE = 16,
    TOKEN_ADJUST_PRIVILEGES = 32,
    TOKEN_ADJUST_GROUPS = 64,
    TOKEN_ADJUST_DEFAULT = 128,
    TOKEN_ADJUST_SESSIONID = 256,
    TOKEN_ALL_ACCESS = 983295,
} TOKEN_ACCESS_MASK;

typedef int HDIAGNOSTIC_DATA_QUERY_SESSION;

typedef int HDIAGNOSTIC_REPORT;

typedef int HDIAGNOSTIC_EVENT_TAG_DESCRIPTION;

typedef int HDIAGNOSTIC_EVENT_PRODUCER_DESCRIPTION;

typedef int HDIAGNOSTIC_EVENT_CATEGORY_DESCRIPTION;

typedef int HDIAGNOSTIC_RECORD;

typedef int NCRYPT_DESCRIPTOR_HANDLE;

typedef int NCRYPT_STREAM_HANDLE;

typedef int SAFER_LEVEL_HANDLE;

typedef int SC_HANDLE;

typedef int GENERIC_MAPPING;

typedef int LUID_AND_ATTRIBUTES;

typedef int SID_IDENTIFIER_AUTHORITY;

typedef int SID;

typedef enum {
    SidTypeUser = 1,
    SidTypeGroup = 2,
    SidTypeDomain = 3,
    SidTypeAlias = 4,
    SidTypeWellKnownGroup = 5,
    SidTypeDeletedAccount = 6,
    SidTypeInvalid = 7,
    SidTypeUnknown = 8,
    SidTypeComputer = 9,
    SidTypeLabel = 10,
    SidTypeLogonSession = 11,
} SID_NAME_USE;

typedef int SID_AND_ATTRIBUTES;

typedef int SID_AND_ATTRIBUTES_HASH;

typedef enum {
    WinNullSid = 0,
    WinWorldSid = 1,
    WinLocalSid = 2,
    WinCreatorOwnerSid = 3,
    WinCreatorGroupSid = 4,
    WinCreatorOwnerServerSid = 5,
    WinCreatorGroupServerSid = 6,
    WinNtAuthoritySid = 7,
    WinDialupSid = 8,
    WinNetworkSid = 9,
    WinBatchSid = 10,
    WinInteractiveSid = 11,
    WinServiceSid = 12,
    WinAnonymousSid = 13,
    WinProxySid = 14,
    WinEnterpriseControllersSid = 15,
    WinSelfSid = 16,
    WinAuthenticatedUserSid = 17,
    WinRestrictedCodeSid = 18,
    WinTerminalServerSid = 19,
    WinRemoteLogonIdSid = 20,
    WinLogonIdsSid = 21,
    WinLocalSystemSid = 22,
    WinLocalServiceSid = 23,
    WinNetworkServiceSid = 24,
    WinBuiltinDomainSid = 25,
    WinBuiltinAdministratorsSid = 26,
    WinBuiltinUsersSid = 27,
    WinBuiltinGuestsSid = 28,
    WinBuiltinPowerUsersSid = 29,
    WinBuiltinAccountOperatorsSid = 30,
    WinBuiltinSystemOperatorsSid = 31,
    WinBuiltinPrintOperatorsSid = 32,
    WinBuiltinBackupOperatorsSid = 33,
    WinBuiltinReplicatorSid = 34,
    WinBuiltinPreWindows2000CompatibleAccessSid = 35,
    WinBuiltinRemoteDesktopUsersSid = 36,
    WinBuiltinNetworkConfigurationOperatorsSid = 37,
    WinAccountAdministratorSid = 38,
    WinAccountGuestSid = 39,
    WinAccountKrbtgtSid = 40,
    WinAccountDomainAdminsSid = 41,
    WinAccountDomainUsersSid = 42,
    WinAccountDomainGuestsSid = 43,
    WinAccountComputersSid = 44,
    WinAccountControllersSid = 45,
    WinAccountCertAdminsSid = 46,
    WinAccountSchemaAdminsSid = 47,
    WinAccountEnterpriseAdminsSid = 48,
    WinAccountPolicyAdminsSid = 49,
    WinAccountRasAndIasServersSid = 50,
    WinNTLMAuthenticationSid = 51,
    WinDigestAuthenticationSid = 52,
    WinSChannelAuthenticationSid = 53,
    WinThisOrganizationSid = 54,
    WinOtherOrganizationSid = 55,
    WinBuiltinIncomingForestTrustBuildersSid = 56,
    WinBuiltinPerfMonitoringUsersSid = 57,
    WinBuiltinPerfLoggingUsersSid = 58,
    WinBuiltinAuthorizationAccessSid = 59,
    WinBuiltinTerminalServerLicenseServersSid = 60,
    WinBuiltinDCOMUsersSid = 61,
    WinBuiltinIUsersSid = 62,
    WinIUserSid = 63,
    WinBuiltinCryptoOperatorsSid = 64,
    WinUntrustedLabelSid = 65,
    WinLowLabelSid = 66,
    WinMediumLabelSid = 67,
    WinHighLabelSid = 68,
    WinSystemLabelSid = 69,
    WinWriteRestrictedCodeSid = 70,
    WinCreatorOwnerRightsSid = 71,
    WinCacheablePrincipalsGroupSid = 72,
    WinNonCacheablePrincipalsGroupSid = 73,
    WinEnterpriseReadonlyControllersSid = 74,
    WinAccountReadonlyControllersSid = 75,
    WinBuiltinEventLogReadersGroup = 76,
    WinNewEnterpriseReadonlyControllersSid = 77,
    WinBuiltinCertSvcDComAccessGroup = 78,
    WinMediumPlusLabelSid = 79,
    WinLocalLogonSid = 80,
    WinConsoleLogonSid = 81,
    WinThisOrganizationCertificateSid = 82,
    WinApplicationPackageAuthoritySid = 83,
    WinBuiltinAnyPackageSid = 84,
    WinCapabilityInternetClientSid = 85,
    WinCapabilityInternetClientServerSid = 86,
    WinCapabilityPrivateNetworkClientServerSid = 87,
    WinCapabilityPicturesLibrarySid = 88,
    WinCapabilityVideosLibrarySid = 89,
    WinCapabilityMusicLibrarySid = 90,
    WinCapabilityDocumentsLibrarySid = 91,
    WinCapabilitySharedUserCertificatesSid = 92,
    WinCapabilityEnterpriseAuthenticationSid = 93,
    WinCapabilityRemovableStorageSid = 94,
    WinBuiltinRDSRemoteAccessServersSid = 95,
    WinBuiltinRDSEndpointServersSid = 96,
    WinBuiltinRDSManagementServersSid = 97,
    WinUserModeDriversSid = 98,
    WinBuiltinHyperVAdminsSid = 99,
    WinAccountCloneableControllersSid = 100,
    WinBuiltinAccessControlAssistanceOperatorsSid = 101,
    WinBuiltinRemoteManagementUsersSid = 102,
    WinAuthenticationAuthorityAssertedSid = 103,
    WinAuthenticationServiceAssertedSid = 104,
    WinLocalAccountSid = 105,
    WinLocalAccountAndAdministratorSid = 106,
    WinAccountProtectedUsersSid = 107,
    WinCapabilityAppointmentsSid = 108,
    WinCapabilityContactsSid = 109,
    WinAccountDefaultSystemManagedSid = 110,
    WinBuiltinDefaultSystemManagedGroupSid = 111,
    WinBuiltinStorageReplicaAdminsSid = 112,
    WinAccountKeyAdminsSid = 113,
    WinAccountEnterpriseKeyAdminsSid = 114,
    WinAuthenticationKeyTrustSid = 115,
    WinAuthenticationKeyPropertyMFASid = 116,
    WinAuthenticationKeyPropertyAttestationSid = 117,
    WinAuthenticationFreshKeyAuthSid = 118,
    WinBuiltinDeviceOwnersSid = 119,
} WELL_KNOWN_SID_TYPE;

typedef int ACL;

typedef int ACE_HEADER;

typedef int ACCESS_ALLOWED_ACE;

typedef int ACCESS_DENIED_ACE;

typedef int SYSTEM_AUDIT_ACE;

typedef int SYSTEM_ALARM_ACE;

typedef int SYSTEM_RESOURCE_ATTRIBUTE_ACE;

typedef int SYSTEM_SCOPED_POLICY_ID_ACE;

typedef int SYSTEM_MANDATORY_LABEL_ACE;

typedef int ACCESS_ALLOWED_OBJECT_ACE;

typedef int ACCESS_DENIED_OBJECT_ACE;

typedef int SYSTEM_AUDIT_OBJECT_ACE;

typedef int SYSTEM_ALARM_OBJECT_ACE;

typedef int ACCESS_ALLOWED_CALLBACK_ACE;

typedef int ACCESS_DENIED_CALLBACK_ACE;

typedef int SYSTEM_AUDIT_CALLBACK_ACE;

typedef int SYSTEM_ALARM_CALLBACK_ACE;

typedef int ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;

typedef int ACCESS_DENIED_CALLBACK_OBJECT_ACE;

typedef int SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;

typedef int SYSTEM_ALARM_CALLBACK_OBJECT_ACE;

typedef enum {
    AclRevisionInformation = 1,
    AclSizeInformation = 2,
} ACL_INFORMATION_CLASS;

typedef int ACL_REVISION_INFORMATION;

typedef int ACL_SIZE_INFORMATION;

typedef int SECURITY_DESCRIPTOR;

typedef int OBJECT_TYPE_LIST;

typedef enum {
    AuditEventObjectAccess = 0,
    AuditEventDirectoryServiceAccess = 1,
} AUDIT_EVENT_TYPE;

typedef int PRIVILEGE_SET;

typedef enum {
    SecurityAnonymous = 0,
    SecurityIdentification = 1,
    SecurityImpersonation = 2,
    SecurityDelegation = 3,
} SECURITY_IMPERSONATION_LEVEL;

typedef enum {
    TokenPrimary = 1,
    TokenImpersonation = 2,
} TOKEN_TYPE;

typedef enum {
    TokenElevationTypeDefault = 1,
    TokenElevationTypeFull = 2,
    TokenElevationTypeLimited = 3,
} TOKEN_ELEVATION_TYPE;

typedef enum {
    TokenUser = 1,
    TokenGroups = 2,
    TokenPrivileges = 3,
    TokenOwner = 4,
    TokenPrimaryGroup = 5,
    TokenDefaultDacl = 6,
    TokenSource = 7,
    TokenType = 8,
    TokenImpersonationLevel = 9,
    TokenStatistics = 10,
    TokenRestrictedSids = 11,
    TokenSessionId = 12,
    TokenGroupsAndPrivileges = 13,
    TokenSessionReference = 14,
    TokenSandBoxInert = 15,
    TokenAuditPolicy = 16,
    TokenOrigin = 17,
    TokenElevationType = 18,
    TokenLinkedToken = 19,
    TokenElevation = 20,
    TokenHasRestrictions = 21,
    TokenAccessInformation = 22,
    TokenVirtualizationAllowed = 23,
    TokenVirtualizationEnabled = 24,
    TokenIntegrityLevel = 25,
    TokenUIAccess = 26,
    TokenMandatoryPolicy = 27,
    TokenLogonSid = 28,
    TokenIsAppContainer = 29,
    TokenCapabilities = 30,
    TokenAppContainerSid = 31,
    TokenAppContainerNumber = 32,
    TokenUserClaimAttributes = 33,
    TokenDeviceClaimAttributes = 34,
    TokenRestrictedUserClaimAttributes = 35,
    TokenRestrictedDeviceClaimAttributes = 36,
    TokenDeviceGroups = 37,
    TokenRestrictedDeviceGroups = 38,
    TokenSecurityAttributes = 39,
    TokenIsRestricted = 40,
    TokenProcessTrustLevel = 41,
    TokenPrivateNameSpace = 42,
    TokenSingletonAttributes = 43,
    TokenBnoIsolation = 44,
    TokenChildProcessFlags = 45,
    TokenIsLessPrivilegedAppContainer = 46,
    TokenIsSandboxed = 47,
    TokenOriginatingProcessTrustLevel = 48,
    MaxTokenInfoClass = 49,
} TOKEN_INFORMATION_CLASS;

typedef int TOKEN_USER;

typedef int TOKEN_GROUPS;

typedef int TOKEN_PRIVILEGES;

typedef int TOKEN_OWNER;

typedef int TOKEN_PRIMARY_GROUP;

typedef int TOKEN_DEFAULT_DACL;

typedef int TOKEN_USER_CLAIMS;

typedef int TOKEN_DEVICE_CLAIMS;

typedef int TOKEN_GROUPS_AND_PRIVILEGES;

typedef int TOKEN_LINKED_TOKEN;

typedef int TOKEN_ELEVATION;

typedef int TOKEN_MANDATORY_LABEL;

typedef int TOKEN_MANDATORY_POLICY;

typedef int TOKEN_ACCESS_INFORMATION;

typedef int TOKEN_AUDIT_POLICY;

typedef int TOKEN_SOURCE;

typedef int TOKEN_STATISTICS;

typedef int TOKEN_CONTROL;

typedef int TOKEN_ORIGIN;

typedef enum {
    MandatoryLevelUntrusted = 0,
    MandatoryLevelLow = 1,
    MandatoryLevelMedium = 2,
    MandatoryLevelHigh = 3,
    MandatoryLevelSystem = 4,
    MandatoryLevelSecureProcess = 5,
    MandatoryLevelCount = 6,
} MANDATORY_LEVEL;

typedef int TOKEN_APPCONTAINER_INFORMATION;

typedef int CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE;

typedef int CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE;

typedef int CLAIM_SECURITY_ATTRIBUTE_V1;

typedef int CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1;

typedef int CLAIM_SECURITY_ATTRIBUTES_INFORMATION;

typedef int SECURITY_QUALITY_OF_SERVICE;

typedef int SECURITY_CAPABILITIES;

typedef int QUOTA_LIMITS;

typedef int SECURITY_ATTRIBUTES;

typedef int CRYPTPROTECT_PROMPTSTRUCT;

typedef int WLX_SC_NOTIFICATION_INFO;

typedef int WLX_PROFILE_V1_0;

typedef int WLX_PROFILE_V2_0;

typedef int WLX_MPR_NOTIFY_INFO;

typedef int WLX_TERMINAL_SERVICES_DATA;

typedef int WLX_CLIENT_CREDENTIALS_INFO_V1_0;

typedef int WLX_CLIENT_CREDENTIALS_INFO_V2_0;

typedef int WLX_CONSOLESWITCH_CREDENTIALS_INFO_V1_0;

typedef int WLX_DESKTOP;

typedef int PWLX_USE_CTRL_ALT_DEL;

typedef int PWLX_SET_CONTEXT_POINTER;

typedef int PWLX_SAS_NOTIFY;

typedef int PWLX_SET_TIMEOUT;

typedef int PWLX_ASSIGN_SHELL_PROTECTION;

typedef int PWLX_MESSAGE_BOX;

typedef int PWLX_DIALOG_BOX;

typedef int PWLX_DIALOG_BOX_INDIRECT;

typedef int PWLX_DIALOG_BOX_PARAM;

typedef int PWLX_DIALOG_BOX_INDIRECT_PARAM;

typedef int PWLX_SWITCH_DESKTOP_TO_USER;

typedef int PWLX_SWITCH_DESKTOP_TO_WINLOGON;

typedef int PWLX_CHANGE_PASSWORD_NOTIFY;

typedef int PWLX_GET_SOURCE_DESKTOP;

typedef int PWLX_SET_RETURN_DESKTOP;

typedef int PWLX_CREATE_USER_DESKTOP;

typedef int PWLX_CHANGE_PASSWORD_NOTIFY_EX;

typedef int PWLX_CLOSE_USER_DESKTOP;

typedef int PWLX_SET_OPTION;

typedef int PWLX_GET_OPTION;

typedef int PWLX_WIN31_MIGRATE;

typedef int PWLX_QUERY_CLIENT_CREDENTIALS;

typedef int PWLX_QUERY_IC_CREDENTIALS;

typedef int PWLX_QUERY_TS_LOGON_CREDENTIALS;

typedef int PWLX_DISCONNECT;

typedef int PWLX_QUERY_TERMINAL_SERVICES_DATA;

typedef int PWLX_QUERY_CONSOLESWITCH_CREDENTIALS;

typedef int WLX_DISPATCH_VERSION_1_0;

typedef int WLX_DISPATCH_VERSION_1_1;

typedef int WLX_DISPATCH_VERSION_1_2;

typedef int WLX_DISPATCH_VERSION_1_3;

typedef int WLX_DISPATCH_VERSION_1_4;

typedef int PFNMSGECALLBACK;

typedef int WLX_NOTIFICATION_INFO;

typedef int TpmVirtualSmartCardManager;

typedef int RemoteTpmVirtualSmartCardManager;

typedef enum {
    TPMVSC_ATTESTATION_NONE = 0,
    TPMVSC_ATTESTATION_AIK_ONLY = 1,
    TPMVSC_ATTESTATION_AIK_AND_CERTIFICATE = 2,
} TPMVSC_ATTESTATION_TYPE;

typedef enum {
    TPMVSCMGR_STATUS_VTPMSMARTCARD_INITIALIZING = 0,
    TPMVSCMGR_STATUS_VTPMSMARTCARD_CREATING = 1,
    TPMVSCMGR_STATUS_VTPMSMARTCARD_DESTROYING = 2,
    TPMVSCMGR_STATUS_VGIDSSIMULATOR_INITIALIZING = 3,
    TPMVSCMGR_STATUS_VGIDSSIMULATOR_CREATING = 4,
    TPMVSCMGR_STATUS_VGIDSSIMULATOR_DESTROYING = 5,
    TPMVSCMGR_STATUS_VREADER_INITIALIZING = 6,
    TPMVSCMGR_STATUS_VREADER_CREATING = 7,
    TPMVSCMGR_STATUS_VREADER_DESTROYING = 8,
    TPMVSCMGR_STATUS_GENERATE_WAITING = 9,
    TPMVSCMGR_STATUS_GENERATE_AUTHENTICATING = 10,
    TPMVSCMGR_STATUS_GENERATE_RUNNING = 11,
    TPMVSCMGR_STATUS_CARD_CREATED = 12,
    TPMVSCMGR_STATUS_CARD_DESTROYED = 13,
} TPMVSCMGR_STATUS;

typedef enum {
    TPMVSCMGR_ERROR_IMPERSONATION = 0,
    TPMVSCMGR_ERROR_PIN_COMPLEXITY = 1,
    TPMVSCMGR_ERROR_READER_COUNT_LIMIT = 2,
    TPMVSCMGR_ERROR_TERMINAL_SERVICES_SESSION = 3,
    TPMVSCMGR_ERROR_VTPMSMARTCARD_INITIALIZE = 4,
    TPMVSCMGR_ERROR_VTPMSMARTCARD_CREATE = 5,
    TPMVSCMGR_ERROR_VTPMSMARTCARD_DESTROY = 6,
    TPMVSCMGR_ERROR_VGIDSSIMULATOR_INITIALIZE = 7,
    TPMVSCMGR_ERROR_VGIDSSIMULATOR_CREATE = 8,
    TPMVSCMGR_ERROR_VGIDSSIMULATOR_DESTROY = 9,
    TPMVSCMGR_ERROR_VGIDSSIMULATOR_WRITE_PROPERTY = 10,
    TPMVSCMGR_ERROR_VGIDSSIMULATOR_READ_PROPERTY = 11,
    TPMVSCMGR_ERROR_VREADER_INITIALIZE = 12,
    TPMVSCMGR_ERROR_VREADER_CREATE = 13,
    TPMVSCMGR_ERROR_VREADER_DESTROY = 14,
    TPMVSCMGR_ERROR_GENERATE_LOCATE_READER = 15,
    TPMVSCMGR_ERROR_GENERATE_FILESYSTEM = 16,
    TPMVSCMGR_ERROR_CARD_CREATE = 17,
    TPMVSCMGR_ERROR_CARD_DESTROY = 18,
} TPMVSCMGR_ERROR;

// TODO: this type is limited to platform 'windows8.0'
typedef int ITpmVirtualSmartCardManagerStatusCallback;

// TODO: this type is limited to platform 'windows8.0'
typedef int ITpmVirtualSmartCardManager;

typedef int ITpmVirtualSmartCardManager2;

typedef int ITpmVirtualSmartCardManager3;

typedef int PFNREADOBJECTSECURITY;

typedef int PFNWRITEOBJECTSECURITY;

typedef int PFNDSCREATEISECINFO;

typedef int PFNDSCREATEISECINFOEX;

typedef int PFNDSCREATESECPAGE;

typedef int PFNDSEDITSECURITY;

typedef int CCertSrvSetupKeyInformation;

typedef int CCertSrvSetup;

typedef int CMSCEPSetup;

typedef int CCertificateEnrollmentServerSetup;

typedef int CCertificateEnrollmentPolicyServerSetup;

// TODO: this type is limited to platform 'windowsServer2008'
typedef int ICertSrvSetupKeyInformation;

// TODO: this type is limited to platform 'windowsServer2008'
typedef int ICertSrvSetupKeyInformationCollection;

typedef enum {
    ENUM_SETUPPROP_INVALID = -1,
    ENUM_SETUPPROP_CATYPE = 0,
    ENUM_SETUPPROP_CAKEYINFORMATION = 1,
    ENUM_SETUPPROP_INTERACTIVE = 2,
    ENUM_SETUPPROP_CANAME = 3,
    ENUM_SETUPPROP_CADSSUFFIX = 4,
    ENUM_SETUPPROP_VALIDITYPERIOD = 5,
    ENUM_SETUPPROP_VALIDITYPERIODUNIT = 6,
    ENUM_SETUPPROP_EXPIRATIONDATE = 7,
    ENUM_SETUPPROP_PRESERVEDATABASE = 8,
    ENUM_SETUPPROP_DATABASEDIRECTORY = 9,
    ENUM_SETUPPROP_LOGDIRECTORY = 10,
    ENUM_SETUPPROP_SHAREDFOLDER = 11,
    ENUM_SETUPPROP_PARENTCAMACHINE = 12,
    ENUM_SETUPPROP_PARENTCANAME = 13,
    ENUM_SETUPPROP_REQUESTFILE = 14,
    ENUM_SETUPPROP_WEBCAMACHINE = 15,
    ENUM_SETUPPROP_WEBCANAME = 16,
} CASetupProperty;

// TODO: this type is limited to platform 'windowsServer2008'
typedef int ICertSrvSetup;

typedef enum {
    ENUM_CEPSETUPPROP_USELOCALSYSTEM = 0,
    ENUM_CEPSETUPPROP_USECHALLENGE = 1,
    ENUM_CEPSETUPPROP_RANAME_CN = 2,
    ENUM_CEPSETUPPROP_RANAME_EMAIL = 3,
    ENUM_CEPSETUPPROP_RANAME_COMPANY = 4,
    ENUM_CEPSETUPPROP_RANAME_DEPT = 5,
    ENUM_CEPSETUPPROP_RANAME_CITY = 6,
    ENUM_CEPSETUPPROP_RANAME_STATE = 7,
    ENUM_CEPSETUPPROP_RANAME_COUNTRY = 8,
    ENUM_CEPSETUPPROP_SIGNINGKEYINFORMATION = 9,
    ENUM_CEPSETUPPROP_EXCHANGEKEYINFORMATION = 10,
    ENUM_CEPSETUPPROP_CAINFORMATION = 11,
    ENUM_CEPSETUPPROP_MSCEPURL = 12,
    ENUM_CEPSETUPPROP_CHALLENGEURL = 13,
} MSCEPSetupProperty;

// TODO: this type is limited to platform 'windowsServer2008'
typedef int IMSCEPSetup;

typedef enum {
    ENUM_CESSETUPPROP_USE_IISAPPPOOLIDENTITY = 0,
    ENUM_CESSETUPPROP_CACONFIG = 1,
    ENUM_CESSETUPPROP_AUTHENTICATION = 2,
    ENUM_CESSETUPPROP_SSLCERTHASH = 3,
    ENUM_CESSETUPPROP_URL = 4,
    ENUM_CESSETUPPROP_RENEWALONLY = 5,
    ENUM_CESSETUPPROP_ALLOW_KEYBASED_RENEWAL = 6,
} CESSetupProperty;

// TODO: this type is limited to platform 'windows6.1'
typedef int ICertificateEnrollmentServerSetup;

typedef enum {
    ENUM_CEPSETUPPROP_AUTHENTICATION = 0,
    ENUM_CEPSETUPPROP_SSLCERTHASH = 1,
    ENUM_CEPSETUPPROP_URL = 2,
    ENUM_CEPSETUPPROP_KEYBASED_RENEWAL = 3,
} CEPSetupProperty;

// TODO: this type is limited to platform 'windows6.1'
typedef int ICertificateEnrollmentPolicyServerSetup;

typedef enum {
    ENUM_PERIOD_INVALID = -1,
    ENUM_PERIOD_SECONDS = 0,
    ENUM_PERIOD_MINUTES = 1,
    ENUM_PERIOD_HOURS = 2,
    ENUM_PERIOD_DAYS = 3,
    ENUM_PERIOD_WEEKS = 4,
    ENUM_PERIOD_MONTHS = 5,
    ENUM_PERIOD_YEARS = 6,
} ENUM_PERIOD;

typedef int LLFILETIME;

typedef int SIP_SUBJECTINFO;

typedef int MS_ADDINFO_FLAT;

typedef int MS_ADDINFO_CATALOGMEMBER;

typedef int MS_ADDINFO_BLOB;

typedef int SIP_CAP_SET_V2;

typedef int SIP_CAP_SET_V3;

typedef int SIP_INDIRECT_DATA;

typedef int pCryptSIPGetSignedDataMsg;

typedef int pCryptSIPPutSignedDataMsg;

typedef int pCryptSIPCreateIndirectData;

typedef int pCryptSIPVerifyIndirectData;

typedef int pCryptSIPRemoveSignedDataMsg;

typedef int SIP_DISPATCH_INFO;

typedef int pfnIsFileSupported;

typedef int pfnIsFileSupportedName;

typedef int SIP_ADD_NEWPROVIDER;

typedef int pCryptSIPGetCaps;

typedef int pCryptSIPGetSealedDigest;

typedef int CRYPTCATSTORE;

typedef int CRYPTCATMEMBER;

typedef int CRYPTCATATTRIBUTE;

typedef int CRYPTCATCDF;

typedef int CATALOG_INFO;

typedef int PFN_CDF_PARSE_ERROR_CALLBACK;

typedef int WINTRUST_DATA;

typedef int WINTRUST_SIGNATURE_SETTINGS;

typedef int WINTRUST_FILE_INFO;

typedef int WINTRUST_CATALOG_INFO;

typedef int WINTRUST_BLOB_INFO;

typedef int WINTRUST_SGNR_INFO;

typedef int WINTRUST_CERT_INFO;

typedef int PFN_CPD_MEM_ALLOC;

typedef int PFN_CPD_MEM_FREE;

typedef int PFN_CPD_ADD_STORE;

typedef int PFN_CPD_ADD_SGNR;

typedef int PFN_CPD_ADD_CERT;

typedef int PFN_CPD_ADD_PRIVDATA;

typedef int PFN_PROVIDER_INIT_CALL;

typedef int PFN_PROVIDER_OBJTRUST_CALL;

typedef int PFN_PROVIDER_SIGTRUST_CALL;

typedef int PFN_PROVIDER_CERTTRUST_CALL;

typedef int PFN_PROVIDER_FINALPOLICY_CALL;

typedef int PFN_PROVIDER_TESTFINALPOLICY_CALL;

typedef int PFN_PROVIDER_CLEANUP_CALL;

typedef int PFN_PROVIDER_CERTCHKPOLICY_CALL;

typedef int CRYPT_PROVIDER_DATA;

typedef int CRYPT_PROVIDER_SIGSTATE;

typedef int CRYPT_PROVIDER_FUNCTIONS;

typedef int PFN_PROVUI_CALL;

typedef int CRYPT_PROVUI_FUNCS;

typedef int CRYPT_PROVUI_DATA;

typedef int CRYPT_PROVIDER_SGNR;

typedef int CRYPT_PROVIDER_CERT;

typedef int CRYPT_PROVIDER_PRIVDATA;

typedef int PROVDATA_SIP;

typedef int CRYPT_TRUST_REG_ENTRY;

typedef int CRYPT_REGISTER_ACTIONID;

typedef int PFN_ALLOCANDFILLDEFUSAGE;

typedef int PFN_FREEDEFUSAGE;

typedef int CRYPT_PROVIDER_REGDEFUSAGE;

typedef int CRYPT_PROVIDER_DEFUSAGE;

typedef int SPC_SERIALIZED_OBJECT;

typedef int SPC_SIGINFO;

typedef int SPC_LINK;

typedef int SPC_PE_IMAGE_DATA;

typedef int SPC_INDIRECT_DATA_CONTENT;

typedef int SPC_FINANCIAL_CRITERIA;

typedef int SPC_IMAGE;

typedef int SPC_SP_AGENCY_INFO;

typedef int SPC_STATEMENT_TYPE;

typedef int SPC_SP_OPUS_INFO;

typedef int CAT_NAMEVALUE;

typedef int CAT_MEMBERINFO;

typedef int CAT_MEMBERINFO2;

typedef int INTENT_TO_SEAL_ATTRIBUTE;

typedef int SEALING_SIGNATURE_ATTRIBUTE;

typedef int SEALING_TIMESTAMP_ATTRIBUTE;

typedef int WIN_CERTIFICATE;

typedef int WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT;

typedef int WIN_TRUST_ACTDATA_SUBJECT_ONLY;

typedef int WIN_TRUST_SUBJECT_FILE;

typedef int WIN_TRUST_SUBJECT_FILE_AND_DISPLAY;

typedef int WIN_SPUB_TRUSTED_PUBLISHER_DATA;

typedef int SCESVC_CONFIGURATION_LINE;

typedef int SCESVC_CONFIGURATION_INFO;

typedef enum {
    SceSvcConfigurationInfo = 0,
    SceSvcMergedPolicyInfo = 1,
    SceSvcAnalysisInfo = 2,
    SceSvcInternalUse = 3,
} SCESVC_INFO_TYPE;

typedef int SCESVC_ANALYSIS_LINE;

typedef int SCESVC_ANALYSIS_INFO;

typedef int PFSCE_QUERY_INFO;

typedef int PFSCE_SET_INFO;

typedef int PFSCE_FREE_INFO;

typedef int PFSCE_LOG_INFO;

typedef int SCESVC_CALLBACK_INFO;

typedef int PF_ConfigAnalyzeService;

typedef int PF_UpdateService;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ISceSvcAttachmentPersistInfo;

// TODO: this type is limited to platform 'windows5.1.2600'
typedef int ISceSvcAttachmentData;

typedef int SAFER_CODE_PROPERTIES_V1;

typedef int SAFER_CODE_PROPERTIES_V2;

typedef enum {
    SaferPolicyLevelList = 1,
    SaferPolicyEnableTransparentEnforcement = 2,
    SaferPolicyDefaultLevel = 3,
    SaferPolicyEvaluateUserScope = 4,
    SaferPolicyScopeFlags = 5,
    SaferPolicyDefaultLevelFlags = 6,
    SaferPolicyAuthenticodeEnabled = 7,
} SAFER_POLICY_INFO_CLASS;

typedef enum {
    SaferObjectLevelId = 1,
    SaferObjectScopeId = 2,
    SaferObjectFriendlyName = 3,
    SaferObjectDescription = 4,
    SaferObjectBuiltin = 5,
    SaferObjectDisallowed = 6,
    SaferObjectDisableMaxPrivilege = 7,
    SaferObjectInvertDeletedPrivileges = 8,
    SaferObjectDeletedPrivileges = 9,
    SaferObjectDefaultOwner = 10,
    SaferObjectSidsToDisable = 11,
    SaferObjectRestrictedSidsInverted = 12,
    SaferObjectRestrictedSidsAdded = 13,
    SaferObjectAllIdentificationGuids = 14,
    SaferObjectSingleIdentification = 15,
    SaferObjectExtendedError = 16,
} SAFER_OBJECT_INFO_CLASS;

typedef enum {
    SaferIdentityDefault = 0,
    SaferIdentityTypeImageName = 1,
    SaferIdentityTypeImageHash = 2,
    SaferIdentityTypeUrlZone = 3,
    SaferIdentityTypeCertificate = 4,
} SAFER_IDENTIFICATION_TYPES;

typedef int SAFER_IDENTIFICATION_HEADER;

typedef int SAFER_PATHNAME_IDENTIFICATION;

typedef int SAFER_HASH_IDENTIFICATION;

typedef int SAFER_HASH_IDENTIFICATION2;

typedef int SAFER_URLZONE_IDENTIFICATION;

typedef enum {
    NoData = 0,
    CurrentUserData = 1,
    AllUserData = 2,
} DdqAccessLevel;

typedef int DIAGNOSTIC_DATA_RECORD;

typedef int DIAGNOSTIC_DATA_SEARCH_CRITERIA;

typedef int DIAGNOSTIC_DATA_EVENT_TAG_DESCRIPTION;

typedef int DIAGNOSTIC_DATA_EVENT_PRODUCER_DESCRIPTION;

typedef int DIAGNOSTIC_DATA_EVENT_CATEGORY_DESCRIPTION;

typedef int DIAGNOSTIC_DATA_EVENT_TAG_STATS;

typedef int DIAGNOSTIC_DATA_EVENT_BINARY_STATS;

typedef int DIAGNOSTIC_DATA_GENERAL_STATS;

typedef int DIAGNOSTIC_DATA_EVENT_TRANSCRIPT_CONFIGURATION;

typedef int DIAGNOSTIC_REPORT_PARAMETER;

typedef int DIAGNOSTIC_REPORT_SIGNATURE;

typedef int DIAGNOSTIC_REPORT_DATA;


//--------------------------------------------------------------------------------
// Section: Functions (250)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetUserObjectSecurity();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetUserObjectSecurity();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AccessCheck();

/*BOOL*/void AccessCheckAndAuditAlarmW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AccessCheckByType();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AccessCheckByTypeResultList();

/*BOOL*/void AccessCheckByTypeAndAuditAlarmW();

/*BOOL*/void AccessCheckByTypeResultListAndAuditAlarmW();

/*BOOL*/void AccessCheckByTypeResultListAndAuditAlarmByHandleW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AddAccessAllowedAce();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AddAccessAllowedAceEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AddAccessAllowedObjectAce();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AddAccessDeniedAce();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AddAccessDeniedAceEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AddAccessDeniedObjectAce();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AddAce();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AddAuditAccessAce();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AddAuditAccessAceEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AddAuditAccessObjectAce();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void AddMandatoryAce();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void AddResourceAttributeAce();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void AddScopedPolicyIDAce();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AdjustTokenGroups();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AdjustTokenPrivileges();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AllocateAndInitializeSid();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AllocateLocallyUniqueId();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AreAllAccessesGranted();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AreAnyAccessesGranted();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CheckTokenMembership();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void CheckTokenCapability();

/*BOOL*/void GetAppContainerAce();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void CheckTokenMembershipEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ConvertToAutoInheritPrivateObjectSecurity();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CopySid();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CreatePrivateObjectSecurity();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CreatePrivateObjectSecurityEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CreatePrivateObjectSecurityWithMultipleInheritance();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CreateRestrictedToken();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CreateWellKnownSid();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void EqualDomainSid();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void DeleteAce();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void DestroyPrivateObjectSecurity();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void DuplicateToken();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void DuplicateTokenEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void EqualPrefixSid();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void EqualSid();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void FindFirstFreeAce();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*c_void*/void FreeSid();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetAce();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetAclInformation();

/*BOOL*/void GetFileSecurityW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetKernelObjectSecurity();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void GetLengthSid();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetPrivateObjectSecurity();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetSecurityDescriptorControl();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetSecurityDescriptorDacl();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetSecurityDescriptorGroup();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void GetSecurityDescriptorLength();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetSecurityDescriptorOwner();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void GetSecurityDescriptorRMControl();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetSecurityDescriptorSacl();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*SID_IDENTIFIER_AUTHORITY*/void GetSidIdentifierAuthority();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void GetSidLengthRequired();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*u32*/void GetSidSubAuthority();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*u8*/void GetSidSubAuthorityCount();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetTokenInformation();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetWindowsAccountDomainSid();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImpersonateAnonymousToken();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImpersonateLoggedOnUser();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ImpersonateSelf();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void InitializeAcl();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void InitializeSecurityDescriptor();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void InitializeSid();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void IsTokenRestricted();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void IsValidAcl();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void IsValidSecurityDescriptor();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void IsValidSid();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void IsWellKnownSid();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void MakeAbsoluteSD();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void MakeSelfRelativeSD();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void MapGenericMask();

/*BOOL*/void ObjectCloseAuditAlarmW();

/*BOOL*/void ObjectDeleteAuditAlarmW();

/*BOOL*/void ObjectOpenAuditAlarmW();

/*BOOL*/void ObjectPrivilegeAuditAlarmW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void PrivilegeCheck();

/*BOOL*/void PrivilegedServiceAuditAlarmW();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void QuerySecurityAccessMask();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void RevertToSelf();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetAclInformation();

/*BOOL*/void SetFileSecurityW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetKernelObjectSecurity();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetPrivateObjectSecurity();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetPrivateObjectSecurityEx();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void SetSecurityAccessMask();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetSecurityDescriptorControl();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetSecurityDescriptorDacl();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetSecurityDescriptorGroup();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetSecurityDescriptorOwner();

// TODO: this type is limited to platform 'windows5.1.2600'
/*u32*/void SetSecurityDescriptorRMControl();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetSecurityDescriptorSacl();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetTokenInformation();

/*BOOL*/void SetCachedSigningLevel();

/*BOOL*/void GetCachedSigningLevel();

/*BOOL*/void DeriveCapabilitySidsFromName();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptProtectData();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptUnprotectData();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void CryptUpdateProtectedState();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void CryptProtectMemory();

// TODO: this type is limited to platform 'windows6.0.6000'
/*BOOL*/void CryptUnprotectMemory();

// TODO: this type is limited to platform 'windowsServer2008'
/*HRESULT*/void DSCreateISecurityInfoObject();

// TODO: this type is limited to platform 'windowsServer2008'
/*HRESULT*/void DSCreateISecurityInfoObjectEx();

// TODO: this type is limited to platform 'windowsServer2003'
/*HRESULT*/void DSCreateSecurityPage();

// TODO: this type is limited to platform 'windowsServer2008'
/*HRESULT*/void DSEditSecurity();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSIPGetSignedDataMsg();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSIPPutSignedDataMsg();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSIPCreateIndirectData();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSIPVerifyIndirectData();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSIPRemoveSignedDataMsg();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSIPLoad();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSIPRetrieveSubjectGuid();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSIPRetrieveSubjectGuidForCatalogFile();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSIPAddProvider();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptSIPRemoveProvider();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void CryptSIPGetCaps();

/*BOOL*/void CryptSIPGetSealedDigest();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void CryptCATOpen();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptCATClose();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRYPTCATSTORE*/void CryptCATStoreFromHandle();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HANDLE*/void CryptCATHandleFromStore();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptCATPersistStore();

/*?*CRYPTCATATTRIBUTE*/void CryptCATGetCatAttrInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRYPTCATATTRIBUTE*/void CryptCATPutCatAttrInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRYPTCATATTRIBUTE*/void CryptCATEnumerateCatAttr();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRYPTCATMEMBER*/void CryptCATGetMemberInfo();

/*?*CRYPTCATMEMBER*/void CryptCATAllocSortedMemberInfo();

/*void*/void CryptCATFreeSortedMemberInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRYPTCATATTRIBUTE*/void CryptCATGetAttrInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRYPTCATMEMBER*/void CryptCATPutMemberInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRYPTCATATTRIBUTE*/void CryptCATPutAttrInfo();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRYPTCATMEMBER*/void CryptCATEnumerateMember();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRYPTCATATTRIBUTE*/void CryptCATEnumerateAttr();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRYPTCATCDF*/void CryptCATCDFOpen();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptCATCDFClose();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRYPTCATATTRIBUTE*/void CryptCATCDFEnumCatAttributes();

/*?*CRYPTCATMEMBER*/void CryptCATCDFEnumMembers();

/*?*CRYPTCATATTRIBUTE*/void CryptCATCDFEnumAttributes();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void IsCatalogFile();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptCATAdminAcquireContext();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void CryptCATAdminAcquireContext2();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptCATAdminReleaseContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptCATAdminReleaseCatalogContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*isize*/void CryptCATAdminEnumCatalogFromHash();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptCATAdminCalcHashFromFileHandle();

// TODO: this type is limited to platform 'windows8.0'
/*BOOL*/void CryptCATAdminCalcHashFromFileHandle2();

// TODO: this type is limited to platform 'windows5.1.2600'
/*isize*/void CryptCATAdminAddCatalog();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptCATAdminRemoveCatalog();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptCATCatalogInfoFromContext();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void CryptCATAdminResolveCatalogPath();

/*BOOL*/void CryptCATAdminPauseServiceForBackup();

// TODO: this type is limited to platform 'windows5.1.2600'
/*i32*/void WinVerifyTrust();

// TODO: this type is limited to platform 'windows5.1.2600'
/*HRESULT*/void WinVerifyTrustEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*void*/void WintrustGetRegPolicyFlags();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void WintrustSetRegPolicyFlags();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void WintrustAddActionID();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void WintrustRemoveActionID();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void WintrustLoadFunctionPointers();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void WintrustAddDefaultForUsage();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void WintrustGetDefaultForUsage();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRYPT_PROVIDER_SGNR*/void WTHelperGetProvSignerFromChain();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRYPT_PROVIDER_CERT*/void WTHelperGetProvCertFromChain();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRYPT_PROVIDER_DATA*/void WTHelperProvDataFromStateData();

// TODO: this type is limited to platform 'windows5.1.2600'
/*?*CRYPT_PROVIDER_PRIVDATA*/void WTHelperGetProvPrivateDataFromChain();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void WTHelperCertIsSelfSigned();

// TODO: this type is limited to platform 'windows6.0.6000'
/*HRESULT*/void WTHelperCertCheckValidSignature();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void OpenPersonalTrustDBDialogEx();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void OpenPersonalTrustDBDialog();

// TODO: this type is limited to platform 'windows6.0.6000'
/*void*/void WintrustSetDefaultIncludePEPageHashes();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SaferGetPolicyInformation();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SaferSetPolicyInformation();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SaferCreateLevel();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SaferCloseLevel();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SaferIdentifyLevel();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SaferComputeTokenFromLevel();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SaferGetLevelInformation();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SaferSetLevelInformation();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SaferRecordEventLogEntry();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SaferiIsExecutableFileType();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqCreateSession();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqCloseSession();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetSessionAccessLevel();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticDataAccessLevelAllowed();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticRecordStats();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticRecordPayload();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticRecordLocaleTags();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqFreeDiagnosticRecordLocaleTags();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticRecordLocaleTagAtIndex();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticRecordLocaleTagCount();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticRecordProducers();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqFreeDiagnosticRecordProducers();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticRecordProducerAtIndex();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticRecordProducerCount();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticRecordProducerCategories();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqFreeDiagnosticRecordProducerCategories();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticRecordCategoryAtIndex();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticRecordCategoryCount();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqIsDiagnosticRecordSampledIn();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticRecordPage();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqFreeDiagnosticRecordPage();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticRecordAtIndex();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticRecordCount();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticReportStoreReportCount();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqCancelDiagnosticRecordOperation();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticReport();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqFreeDiagnosticReport();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticReportAtIndex();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticReportCount();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqExtractDiagnosticReport();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticRecordTagDistribution();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticRecordBinaryDistribution();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetDiagnosticRecordSummary();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqSetTranscriptConfiguration();

// TODO: this type is limited to platform 'windows10.0.19041'
/*HRESULT*/void DdqGetTranscriptConfiguration();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AccessCheckAndAuditAlarmA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AccessCheckByTypeAndAuditAlarmA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AccessCheckByTypeResultListAndAuditAlarmA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void AccessCheckByTypeResultListAndAuditAlarmByHandleA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ObjectOpenAuditAlarmA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ObjectPrivilegeAuditAlarmA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ObjectCloseAuditAlarmA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void ObjectDeleteAuditAlarmA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void PrivilegedServiceAuditAlarmA();

// TODO: this type is limited to platform 'windows6.1'
/*BOOL*/void AddConditionalAce();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void SetFileSecurityA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void GetFileSecurityA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void LookupAccountSidA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void LookupAccountSidW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void LookupAccountNameA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void LookupAccountNameW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void LookupPrivilegeValueA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void LookupPrivilegeValueW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void LookupPrivilegeNameA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void LookupPrivilegeNameW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void LookupPrivilegeDisplayNameA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void LookupPrivilegeDisplayNameW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void LogonUserA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void LogonUserW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void LogonUserExA();

// TODO: this type is limited to platform 'windows5.1.2600'
/*BOOL*/void LogonUserExW();

// TODO: this type is limited to platform 'windows5.1.2600'
/*NTSTATUS*/void RtlConvertSidToUnicodeString();

